<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<!-- Page automatically generated from latex_to_html converter. -->
<!-- by cc_extract_html, $Revision: 3.19 $ -->
<!-- LaTeX source file: './Kernel_23_ref/Point_3.tex' -->
<html> <head>  
<title>Point_3&lt;Kernel&gt;</title>
</head>  
<link href="../latex_to_html.css" rel="STYLESHEET">
<body bgcolor="white">
<!-- ------------------------------------------------------------------- -->


<!-- Top Navigation ---------------------------------------------------- -->
<div class="NavTop">
<hr>
  <strong>Navigation:</strong>
<a href="Chapter_main.html">Up</a>, 
  <a href="../contents.html">Table of Contents</A>,
  <a href="../biblio.html">Bibliography</a>,
  <a href="../manual_index.html">Index</a>,
  <a href="../title.html">Title Page</a>
<hr><!-- End of Top Navigation ----------------------------------------- -->
</div>


<A NAME="Cross_link_anchor_73"></A>

<A NAME="Cross_link_anchor_74"></A>

      
     
     
     
<A NAME="Index_anchor_58"></A> 

   
<TABLE ALIGN=RIGHT><TR><TD><IMG ALIGN=TOP SRC="cc_Class.gif"></TD></TR></TABLE>


    <A NAME="ccRef_CGAL::Point_3<Kernel>"></A>
<h2><I>CGAL::Point_3&lt;Kernel&gt;</I></h2>
<P>

<H3>Definition</H3>An object of the class <I><A HREF="Class_Point_3.html#Cross_link_anchor_74">Point_3</A>&lt;<A HREF="Concept_Kernel.html#Cross_link_anchor_0">Kernel</A>&gt;</I> is a point in the three-dimensional
Euclidean space <MATH><I> <IMG BORDER=0 WIDTH=12 HEIGHT=12 ALIGN=BOTTOM SRC="cc_mathbb_E.gif"> <SUP>3</SUP></I></MATH>.
<P>

Remember that <I><A HREF="Concept_Kernel.html#Cross_link_anchor_0">Kernel</A>::RT</I> and <I><A HREF="Concept_Kernel.html#Cross_link_anchor_0">Kernel</A>::FT</I> denote a
<A HREF="Concept_RingNumberType.html#Cross_link_anchor_3">RingNumberType</A> and a <A HREF="Concept_FieldNumberType.html#Cross_link_anchor_2">FieldNumberType</A>, respectively. For the kernel
model <I><A HREF="Class_Cartesian.html#Cross_link_anchor_6">Cartesian</A>&lt;T&gt;</I>, the two types are the same. For the
kernel model <I><A HREF="Class_Homogeneous.html#Cross_link_anchor_18">Homogeneous</A>&lt;T&gt;</I>, <I><A HREF="Concept_Kernel.html#Cross_link_anchor_0">Kernel</A>::RT</I> is equal
to <I>T</I>, and <I><A HREF="Concept_Kernel.html#Cross_link_anchor_0">Kernel</A>::FT</I> is equal to
<I><A HREF="../NumberTypeSupport_ref/Class_Quotient.html#Cross_link_anchor_1404">Quotient</A>&lt;T&gt;</I>.
<P>

<H3>Types</H3>
<P>

<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>
        <I><NOBR>
    <A HREF="Class_Point_3.html#Cross_link_anchor_74">Point_3</A>&lt;<A HREF="Concept_Kernel.html#Cross_link_anchor_0">Kernel</A>&gt;::Cartesian_const_iterator
        </I></NOBR>
        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>
    An iterator for enumerating the
      
<!-- REMOVE_LINKS_BEGIN -->
Cartesian
<!-- REMOVE_LINKS_END -->
 coordinates of a point.
<P>

</TD></TR>
        </TABLE>
<P>

<H3>Creation</H3>
<P>

<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>
        <I><NOBR>
    <A HREF="Class_Point_3.html#Cross_link_anchor_74">Point_3</A>&lt;<A HREF="Concept_Kernel.html#Cross_link_anchor_0">Kernel</A>&gt; p (  <A HREF="Class_Origin.html#Cross_link_anchor_139">Origin</A> <A HREF="Constant_ORIGIN.html#Cross_link_anchor_141">ORIGIN</A>);
        </I></NOBR>
        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>
    introduces a point with <A HREF="Class_Cartesian.html#Cross_link_anchor_6">Cartesian</A> coordinates<MATH><I>(0,0,0)</I></MATH>.
<P>

</TD></TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>
        <I><NOBR>
    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>
    <A HREF="Class_Point_3.html#Cross_link_anchor_74">Point_3</A>&lt;<A HREF="Concept_Kernel.html#Cross_link_anchor_0">Kernel</A>&gt; p ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>
     <A HREF="Concept_Kernel.html#Cross_link_anchor_0">Kernel</A>::RT hx,<BR>

<A HREF="Concept_Kernel.html#Cross_link_anchor_0">Kernel</A>::RT hy,<BR>

<A HREF="Concept_Kernel.html#Cross_link_anchor_0">Kernel</A>::RT hz,<BR>

<A HREF="Concept_Kernel.html#Cross_link_anchor_0">Kernel</A>::RT hw = RT(1));</I></TD></TR></TABLE>
    
        </I></NOBR>
        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>
    introduces a point <I>p</I> initialized to <MATH><I>(hx/hw,hy/hw, hz/hw)</I></MATH>.<BR>

<EM>Precondition: </EM><I>hw</I> <MATH><I> <IMG BORDER=0 WIDTH=11 HEIGHT=27 ALIGN=MIDDLE SRC="cc_neq.gif"> </I></MATH> 0.
<P>

</TD></TR>
        </TABLE>
<P>

<H3>Operations</H3>
<P>

<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    bool<A NAME="Function_bool_operator==6const_Point_36Kernel9__q9_const;"></A>

        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    p.operator== (  q)
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    Test for equality: Two points are equal, iff their <MATH><I>x</I></MATH>, <MATH><I>y</I></MATH> and <MATH><I>z</I></MATH>
        coordinates are equal.
        </TD></TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    bool<A NAME="Function_bool_operator!=6const_Point_36Kernel9__q9_const;"></A>

        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    p.operator!= (  q)
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    Test for inequality.
        </TD></TR>
        </TABLE>
<P>

There are two sets of coordinate access functions, namely to the
homogeneous and to the 
<!-- REMOVE_LINKS_BEGIN -->
Cartesian
<!-- REMOVE_LINKS_END -->
 coordinates. They can be used
independently from the chosen kernel model.
<P>

<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_Kernel::RT_hx69_const;"></A>
<A HREF="Concept_Kernel.html#Cross_link_anchor_0">Kernel</A>::RT
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    p.hx ()
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    returns the homogeneous <MATH><I>x</I></MATH> coordinate.
        </TD></TR>
        
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_Kernel::RT_hy69_const;"></A>
<A HREF="Concept_Kernel.html#Cross_link_anchor_0">Kernel</A>::RT
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    p.hy ()
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    returns the homogeneous <MATH><I>y</I></MATH> coordinate.
        </TD></TR>
        
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_Kernel::RT_hz69_const;"></A>
<A HREF="Concept_Kernel.html#Cross_link_anchor_0">Kernel</A>::RT
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    p.hz ()
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    returns the homogeneous <MATH><I>z</I></MATH> coordinate.
        </TD></TR>
        
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_Kernel::RT_hw69_const;"></A>
<A HREF="Concept_Kernel.html#Cross_link_anchor_0">Kernel</A>::RT
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    p.hw ()
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    returns the homogenizing coordinate.
        </TD></TR>
        </TABLE>
<P>

Note that you do not loose information with the homogeneous
representation, because the <A HREF="Concept_FieldNumberType.html#Cross_link_anchor_2">FieldNumberType</A> is a quotient.
<P>

<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_Kernel::FT_x69_const;"></A>
<A HREF="Concept_Kernel.html#Cross_link_anchor_0">Kernel</A>::FT
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    p.x ()
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    returns the <A HREF="Class_Cartesian.html#Cross_link_anchor_6">Cartesian</A> <MATH><I>x</I></MATH> coordinate, that is <MATH><I>hx/hw</I></MATH>.
        </TD></TR>
        
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_Kernel::FT_y69_const;"></A>
<A HREF="Concept_Kernel.html#Cross_link_anchor_0">Kernel</A>::FT
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    p.y ()
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    returns the <A HREF="Class_Cartesian.html#Cross_link_anchor_6">Cartesian</A> <MATH><I>y</I></MATH> coordinate, that is <MATH><I>hy/hw</I></MATH>.
        </TD></TR>
        
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_Kernel::FT_z69_const;"></A>
<A HREF="Concept_Kernel.html#Cross_link_anchor_0">Kernel</A>::FT
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    p.z ()
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    returns the <A HREF="Class_Cartesian.html#Cross_link_anchor_6">Cartesian</A> <MATH><I>z</I></MATH> coordinate, that is <MATH><I>hz/hw</I></MATH>.
        </TD></TR>
        </TABLE>
<P>

The following operations are for convenience and for compatibility
with code for higher dimensional points. Again they come in a

<!-- REMOVE_LINKS_BEGIN -->
Cartesian
<!-- REMOVE_LINKS_END -->
 and in a homogeneous flavor.
<P>

<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_Kernel::RT_homogeneous6int_i9_const;"></A>
<A HREF="Concept_Kernel.html#Cross_link_anchor_0">Kernel</A>::RT
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    p.homogeneous ( int i)
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    returns the i'th homogeneous coordinate of <I>p</I>, starting with 0.<BR>

<EM>Precondition: </EM><MATH><I>0 <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC="cc_leq.gif"> i  <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC="cc_leq.gif"> 3</I></MATH>.
        </TD></TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_Kernel::FT_cartesian6int_i9_const;"></A>
<A HREF="Concept_Kernel.html#Cross_link_anchor_0">Kernel</A>::FT
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    p.cartesian ( int i)
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    returns the i'th <A HREF="Class_Cartesian.html#Cross_link_anchor_6">Cartesian</A> coordinate of <I>p</I>, starting with 0.<BR>

<EM>Precondition: </EM><MATH><I>0 <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC="cc_leq.gif"> i  <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC="cc_leq.gif"> 2</I></MATH>.
        </TD></TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A HREF="Concept_Kernel.html#Cross_link_anchor_0">Kernel</A>::FT<A NAME="Function_Kernel::FT_operator696int_i9_const;"></A>

        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    p.operator[] ( int i)
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    returns <I>cartesian(i)</I>.<BR>

<EM>Precondition: </EM><MATH><I>0 <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC="cc_leq.gif"> i  <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC="cc_leq.gif"> 2</I></MATH>.
        </TD></TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>
        <I><NOBR>
    <A NAME="Function_Cartesian_const_iterator_cartesian_begin69_const;"></A>
Cartesian_const_iterator
        </I></NOBR>
        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    p.cartesian_begin ()
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    returns an iterator to the 
<!-- REMOVE_LINKS_BEGIN -->
Cartesian
<!-- REMOVE_LINKS_END -->
 coordinates 
        of <I>p</I>, starting with the 0th coordinate.
        </TD></TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>
        <I><NOBR>
    <A NAME="Function_Cartesian_const_iterator_cartesian_end69_const;"></A>
Cartesian_const_iterator
        </I></NOBR>
        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    p.cartesian_end ()
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    returns an off the end iterator to the 
<!-- REMOVE_LINKS_BEGIN -->
Cartesian
<!-- REMOVE_LINKS_END -->
 
        coordinates of <I>p</I>.
        </TD></TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_int_dimension69_const;"></A>
int
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    p.dimension ()
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    returns the dimension (the constant 3).
        </TD></TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_Bbox_3_bbox69_const;"></A>
<A HREF="Class_Bbox_3.html#Cross_link_anchor_62">Bbox_3</A>
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    p.bbox ()
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    returns a bounding box containing <I>p</I>.
        </TD></TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_Point_36Kernel9_transform6const_Aff_transformation_36Kernel9__t9_const;"></A>
<A HREF="Class_Point_3.html#Cross_link_anchor_74">Point_3</A>&lt;<A HREF="Concept_Kernel.html#Cross_link_anchor_0">Kernel</A>&gt;
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    p.transform (  <A HREF="Class_Aff_transformation_3.html#Cross_link_anchor_64">Aff_transformation_3</A>&lt;<A HREF="Concept_Kernel.html#Cross_link_anchor_0">Kernel</A>&gt; t)
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    returns the point obtained by applying <MATH><I>t</I></MATH> on <I>p</I>.
        </TD></TR>
        </TABLE>
<P>

<H3>Operators</H3>
<P>

The following operations can be applied on points:
<P>

<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    bool<A NAME="Function_bool_operator66const_Point_36Kernel9__p+_const_Point_36Kernel9__q9;"></A>

        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    operator&lt; (  p,  q)
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    returns true iff <I>p</I> is lexicographically smaller than <I>q</I>
       (the lexicographical order being defined on the <A HREF="Class_Cartesian.html#Cross_link_anchor_6">Cartesian</A>
       coordinates).
        </TD></TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    bool<A NAME="Function_bool_operator96const_Point_36Kernel9__p+_const_Point_36Kernel9__q9;"></A>

        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    operator&gt; (  p,  q)
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    returns true iff <I>p</I> is lexicographically greater than <I>q</I>.
        </TD></TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    bool<A NAME="Function_bool_operator6=6const_Point_36Kernel9__p+_const_Point_36Kernel9__q9;"></A>

        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    operator&lt;= (  p,  q)
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    returns true iff <I>p</I> is lexicographically smaller or equal to
<I>q</I>.
        </TD></TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    bool<A NAME="Function_bool_operator9=6const_Point_36Kernel9__p+_const_Point_36Kernel9__q9;"></A>

        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    operator&gt;= (  p,  q)
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    returns true iff <I>p</I> is lexicographically greater or equal to
<I>q</I>.
        </TD></TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A HREF="Class_Vector_3.html#Cross_link_anchor_86">Vector_3</A>&lt;<A HREF="Concept_Kernel.html#Cross_link_anchor_0">Kernel</A>&gt;<A NAME="Function_Vector_36Kernel9_operator-6const_Point_36Kernel9__p+_const_Point_36Kernel9__q9;"></A>

        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    operator- (  p,  q)
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    returns the difference vector between <I>q</I> and <I>p</I>. 
        You can substitute <I><A HREF="Constant_ORIGIN.html#Cross_link_anchor_141">ORIGIN</A></I> for either <I>p</I> or <I>q</I>, 
        but not for both.
        </TD></TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A HREF="Class_Point_3.html#Cross_link_anchor_74">Point_3</A>&lt;<A HREF="Concept_Kernel.html#Cross_link_anchor_0">Kernel</A>&gt;<A NAME="Function_Point_36Kernel9_operator+6const_Point_36Kernel9__p+_const_Vector_36Kernel9__v9;"></A>

        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    operator+ (  p,  <A HREF="Class_Vector_3.html#Cross_link_anchor_86">Vector_3</A>&lt;<A HREF="Concept_Kernel.html#Cross_link_anchor_0">Kernel</A>&gt; v)
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    returns the point obtained by translating <I>p</I> by the 
        vector <I>v</I>.
        </TD></TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A HREF="Class_Point_3.html#Cross_link_anchor_74">Point_3</A>&lt;<A HREF="Concept_Kernel.html#Cross_link_anchor_0">Kernel</A>&gt;<A NAME="Function_Point_36Kernel9_operator-6const_Point_36Kernel9__p+_const_Vector_36Kernel9__v9;"></A>

        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    operator- (  p,  <A HREF="Class_Vector_3.html#Cross_link_anchor_86">Vector_3</A>&lt;<A HREF="Concept_Kernel.html#Cross_link_anchor_0">Kernel</A>&gt; v)
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    returns the point obtained by translating <I>p</I> by the 
        vector -<I>v</I>.
        </TD></TR>
        </TABLE>
<P>

<H3>See Also</H3>
<P>

<I><A HREF="Concept_Kernel--Point_3.html#Cross_link_anchor_460">Kernel::Point_3</A></I>
<P>

<div class="NavNext"><hr> <b>Next:</b> <a href="Class_Ray_3.html"><I>Ray_3&lt;Kernel&gt;</I></a> 


    
<div class="NavBottom">
<hr><!-- Bottom Navigation --------------------------------------------- -->
  <strong>Navigation:</strong>
<!Up_chapter_link_7!>
  <a href="../contents.html">Table of Contents</A>,
  <a href="../biblio.html">Bibliography</a>,
  <a href="../manual_index.html">Index</a>,
  <a href="../title.html">Title Page</a>
<!-- End of Bottom Navigation ------------------------------------------ -->


<hr><!-- --------------------------------------------------------------- -->
<div class="NavAddress">

The <A HREF=http://www.cgal.org>CGAL Project</A> .

Tue, December 21, 2004 .
<hr></div>
</body>  </html>  
