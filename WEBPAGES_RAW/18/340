% BibTeX database kpath.bib
% exported by BibGene 1.2.2, Mon, Mar 19, 2001.

% Bibliography on k shortest paths and other "k best solutions" problems
% David Eppstein, Univ. of Calif., Irvine, Dept. Information & Computer Sci.,
% http://www.ics.uci.edu/~eppstein/


@phdthesis{Abd-PhD-88,
  title = {{A Dual-Based Approach to a Multiobjective Location Problem}},
  author = {Bahgat Abdel-Hameed Abdel-Lateef},
  school = {Univ. of Liverpool, Dept. of Mathematics},
  year = {1988},
  abstract = {The work presented in this thesis is concerned with the use
    of dual-based approaches for solving Multi-objective Location Problems
    which may be used to represent many real life location Problems. In particular,
    attention is directed towards the use of Lagrangean relaxation. The Multi-objective
    problem to which most effort is devoted here is the Maximum Covering
    Shortest Path (MCSP) problem. MCSP seeks a path in a network, from starting
    (source) node to terminus (sink) node, which is simultaneously as short
    as possible and covers the maximum population (by passing within a 'covering
    distance'). Our approach differs from the existing one, based on use
    of a general integer programming package, using a Lagrangean relaxation
    approach instead. The subproblems generated are simple shortest route
    problems relative to reduced arc lengths. This avoids the difficulty
    of 'isolated circuits' (subtours) encountered previously. On the other
    hand, care has to be taken to prevent the occurrence of negative length
    circuits (relative to reduced arc lengths). Some experimental results
    are presented. Subgradient optimisation is used for the Lagrangean dual
    problem. A branch-and bound algorithm is also implemented for closing
    any duality gap (which may result from the integrality constraints).
    Our approach to MCSP also uses K-shortest path, and a suitable algorithm
    for this is devised. The new method called Anticipatory Nemhauser, is
    presented together with the data structures used and shown to be very
    promising in terms of computation time required. The other problems,
    considered briefly, are the Hierarchical Network Design Problem (HNDP)
    and the Median Shortest Path Problem (MSPP). For the first of these a
    dual-based scheme is developed and applied to an example with considerable
    success but further experimentation is required to establish the merits
    of our approach more generally. The relationship between MSPP and HNDP
    is considered. Finally, the last chapter presents our conclusions and
    suggestion for further work.}}

@inproceedings{AggSchTok-SCG-93,
  title = {{Finding a minimum weight $K$-link path in graphs with Monge property
    and applications}},
  author = {Alok Aggarwal and Baruch Schieber and T. Tokuyama},
  booktitle = {Proc. 9th Symp. Computational Geometry},
  publisher = {ACM},
  pages = {189--197},
  year = {1993}}

@article{AhuMehOrl-JACM-90,
  title = {{Faster algorithms for the shortest path problem}},
  author = {Ravindra K. Ahuja and Kurt Mehlhorn and James B. Orlin and Robert
    E. Tarjan},
  journal = {J. Assoc. Comput. Mach.},
  publisher = {ACM},
  volume = {37},
  pages = {213--223},
  year = {1990}}

@techreport{AhuMehOrl-TR-88,
  title = {{Faster algorithms for the shortest path problem}},
  author = {Ravindra K. Ahuja and Kurt Mehlhorn and James B. Orlin and Robert
    E. Tarjan},
  institution = {MIT Operations Research Ctr.},
  number = {193},
  year = {1988}}

@article{Aih-ECJ-75,
  title = {{An approach to enumerating elementary paths and cutsets by Gaussian
    elimination method}},
  author = {K. Aihara},
  journal = {Electronics and Communications in Japan},
  volume = {58},
  number = {1},
  pages = {1--10},
  year = {1975},
  abstract = {Discusses a new method of enumerating elementary paths and
    cutsets for all node pairs in a graph by means of Gaussian elimination.
    Elimination of elementary paths and cutsets is very important from the
    viewpoint of graph theory as well as network theory. In the past, the
    combinatorial method and the algebraic approach have been discussed independently
    although both are impractical.}}

@article{Alt-ICCA-97,
  title = {{On the K-best mode in computer chess: measuring the similarity
    of move proposals}},
  author = {Ingo Alth{\"o}fer},
  journal = {ICCA J.},
  volume = {20},
  number = {3},
  pages = {152--165},
  month = {September},
  year = {1997}}

@techreport{Alt-TR-99,
  title = {{Decision Support Systems With Multiple Choice Structure}},
  author = {Ingo Alth{\"o}fer},
  type = {Jenaer Schriften zur Mathematik und Informatik},
  address = {D-07740 Jena, GERMANY},
  institution = {Friedrich-Schiller-Univ. Jena, Fakult{\"a}t f{\"u}r Mathematik und
    Informatik},
  number = {99-31},
  month = {June},
  year = {1999},
  url = {http://www.minet.uni-jena.de/Math-Net/reports/shadows//99-31report.html}}

@article{AltWen-AAM-99,
  title = {{Two-best solutions under distance constraints: the model and
    exemplary results for matroids}},
  author = {Ingo Alth{\"o}fer and Walter Wenzel},
  journal = {Advances in Applied Math.},
  volume = {22},
  number = {2},
  pages = {155--185},
  month = {February},
  year = {1999},
  abstract = {In discrete maximization problems one typically wants to find
    an optimal solution. However, in topics like ``alignment of DNA-strings,''
    ``automatic speech recognition,'' and ``computer chess'' people have been
    asking for finding not only the best, but the $k$ best solutions. Sometimes
    it becomes a problem when these $k$ best solutions are too similar. This
    similarity problem may be overcome by demanding that the $k$ solutions
    obey certain distance conditions. We investigate the simplest case $k=2$
    and we look at valuated matroids. We present several exemplary results,
    concerning also time complexity. These results are interesting in themselves.
    But they are also good references for similar studies in other fields
    with less smooth structures.}}

@techreport{AltWen-TR-97,
  title = {{Two-best solutions under distance constraints: the model and
    exemplary results for matroids}},
  author = {Ingo Alth{\"o}fer and Walter Wenzel},
  institution = {Friedrich-Schiller-Universit{\"a}t Jena, Fakult{\"a}t f{\"u}r Mathematik
    und Informatik},
  number = {Math/Inf/97/17},
  month = {20 June},
  year = {1997},
  abstract = {In discrete maximization problems one typically wants to find
    an optimal solution. However, in topics like ``alignment of DNA-strings'',
    ``automatic speech recognition'', and ``computer chess'' people have been
    asking for finding not only the best, but the $k$ best solutions.
    
    Sometimes it becomes a problem when these $k$ best solutions are too
    similar. This similarity problem may be overcome by demanding that the
    $k$ solutions obey certain distance conditions.
    
    We investigate the simplest case $k=2$ and look at valuated matroids.
    We present several exemplary results, concerning also time complexity.
    These results are interesting in themselves. But they are also good references
    for similar studies in other fields with less smooth structures.}}

@techreport{AltWen-TR-98,
  title = {{$k$-best solutions under distance constraints in valuated $\Delta$-matroids}},
  author = {Ingo Alth{\"o}fer and Walter Wenzel},
  institution = {Friedrich-Schiller-Universit{\"a}t Jena, Fakult{\"a}t f{\"u}r Mathematik
    und Informatik},
  number = {Math/Inf/98/14},
  month = {27 May},
  year = {1998},
  abstract = {In discrete maximization problems one usually wants to find
    an optimal solution. However, in several topics like ``alignments'', ``automatic
    speech recognition'', and ``computer chess'' people are interested to find
    the $k$ best solutions for some $k\ge 2$. We demand that the $k$ solutions
    obey certain distance constraints to avoid that the $k$ alternatives
    are too similar. Several results for valuated $\Delta$-matroids are presented,
    and we concern in particular time complexity.}}

@inproceedings{AmiGha-IPEC-93,
  title = {{An expert system for transmission line route selection}},
  author = {El-Amin and Al-Ghamdi},
  booktitle = {Int. Power Engineering Conf},
  publisher = {Nanyang Technol. Univ, Singapore},
  volume = {2},
  pages = {697--702},
  year = {1993},
  abstract = {An expert system (ES) is developed to help power system planners
    to choose the 'most suitable' transmission line route. The 'most suitable'
    route is the one that minimizes disruption to the surrounding environment
    as well as meeting any social constraints. The electric utility will
    tentatively identify up to five possible routes based on cost only. These
    routes are identified by the K-shortest path method. The chosen routes
    are then subjected to environmental and social factor using the developed
    ES. Factors such as crossing existing lines, running parallel to existing
    line, crossing crude oil pipelines etc. are considered. The ES assigns
    a cost value and weight for each factor and then normalizes the overall
    weight. The route with the lowest disruption is chosen. The ES was tested
    on a 69 kV distribution system for connecting two substations. The results
    obtained are in full agreement with the results obtained when complex
    integer goal programming (IGP) are used. They also conform with what
    the electric utility engineers expected.}}

@techreport{AmTsuShi-TR-76,
  title = {{An algorithm for generating all the paths between two vertices
    in a digraph and its application}},
  author = {T. D. Am and S. Tsukiyama and I. Shirakawa and H. Ozaki},
  institution = {Osaka Univ.},
  year = {1976},
  abstract = {An algorithm to generate all the directed paths from a specified
    vertex to another one in a given directed graph is proposed. The algorithm
    requires the processing time bounded by the order $O((n+m)(p+1))$ and
    the memory space bounded by $O(n+m)$, where $n$, $m$, and $p$ denote
    the number of vertices, edges, and directed paths in a given directed
    graph, respectively. As an application of the algorithm, the shortest
    or the longest path problem in a directed graph containing cycles of
    negative weight is also considered.}}

@inproceedings{AnaSchShu-ASSP-95,
  title = {{Duration modeling in large vocabulary speech recognition}},
  author = {A. Anastasakos and Richard Schwartz and Han Shu},
  booktitle = {Proc. Int. Conf. Acoustics, Speech, and Signal Processing},
  publisher = {IEEE},
  volume = {1},
  pages = {628--631},
  month = {May},
  year = {1995},
  abstract = {This paper presents a study of different methods for phoneme
    duration modeling in large vocabulary speech recognition. We investigate
    the employment of phoneme duration and the effect of context, speaking
    rate and lexical stress in the duration of phoneme segments in a large
    vocabulary speech recognition system. The duration models are used in
    a postprocessing phase of BYBLOS, our baseline HMM-based recognition
    system, to rescore the $N$-Best hypotheses. We describe experiments with
    the 5 K word ARPA Wall Street Journal (WSJ) corpus. The results show
    that integration of duration models that take into account context and
    speaking rate can improve the word accuracy of the baseline recognition
    system.}}

@article{AniHas-SJC-89,
  title = {{Ranking the best binary trees}},
  author = {S. Anily and Refael Hassin},
  journal = {SIAM J. Computing},
  publisher = {SIAM},
  volume = {18},
  pages = {882--892},
  year = {1989},
  review = {MR-91d-68098}}

@article{MR-91d-68098,
  reviews = {AniHas-SJC-89},
  journal = {Mathematical Reviews},
  publisher = {Amer. Math. Soc.},
  title = {{Ranking the best binary trees}},
  volume = {91d},
  number = {68098},
  year = {1991},
  text = {The problem of ranking the $K$-best binary trees with respect to
    their weighted average leaves' levels is considered. Both the alphabetic
    case, where the order of the weights in the sequence $w\sb 1,\cdots,w\sb
    n$ must be preserved in the leaves of the tree, and the nonalphabetic
    case, where no such restriction is imposed, are studied. For the alphabetic
    case a simple algorithm is provided for ranking the $K$-best trees, based
    on a recursive formula of complexity $O(Kn\sp 3)$. For nonalphabetic
    trees two different ranking problems are considered, and for each of
    them it is shown that the next best tree can be solved by a dynamic programming
    formula of low complexity order.}}

@inproceedings{ArdMal-ACCS-71,
  title = {{A recursive algorithm for generating circuits and related subgraphs}},
  author = {M. T. Ardon and N. R. Malik},
  booktitle = {Proc. 5th Asilomar Conf. Circuits {\&} Systems},
  publisher = {Western Periodicals Co.},
  editor = {S. R. Parker},
  pages = {279--284},
  year = {1972},
  abstract = {A technique is proposed for efficiently finding the set of
    all or some specified sets of circuits, paths, directed circuits and
    directed paths of a directed graph. The method employs the matrix defined
    by $M=C+I$, where $C$ is the variable adjacency matrix of the graph,
    and $I$ is an identity matrix. The method is an extension of Lempel and
    Cederbaum's (1966) procedure. By their technique the directed circuits
    are found by applying the Boolean reduction to an expression which is
    resulted from the permanent expansion of $M$. Here, a new expansion,
    the pseudo-permanent, is defined by which the set of directed circuits
    is found directly. The procedure is then modified to obtain particular
    sets of directed circuits and an arbitrarily specified set of directed
    paths. An extension to nonoriented graphs results in an efficient algorithm
    for generating undirected circuits.}}

@article{AriTsuShi-IEICE-79,
  title = {{Algorithms for enumerating all the $s$-$t$ cutsets in $O(|V|+|E|)$
    per cutset}},
  author = {H. Ariyoshi and S. Tsukiyama and I. Shirakawa and H. Ozaki},
  journal = {IEICE Trans. Information {\&} Systems},
  volume = {E62},
  number = {1},
  pages = {22--23},
  month = {January},
  year = {1979},
  abstract = {Presents two algorithms with time complexity of $O((n+m)(\nu+1))$;
    one has space complexity of $O(n^2)$ and the other of $O(n+m)$, where
    $n$, $m$, and $\nu$ are the numbers of vertices, edges, and $s$-$t$ cutsets
    in a graph, respectively.}}

@inproceedings{AsaSat-GTA-84,
  title = {{Long path enumeration algorithms for timing verification on large
    digital systems}},
  author = {Tetsuo Asano and Shinichi Sato},
  booktitle = {Graph Theory with Applications to Algorithms and Computer
    Science},
  publisher = {Wiley-Interscience},
  pages = {25--35},
  year = {1984},
  review = {MR-87b-94065}}

@article{MR-87b-94065,
  reviews = {AsaSat-GTA-84},
  journal = {Mathematical Reviews},
  publisher = {Amer. Math. Soc.},
  title = {{Long path enumeration algorithms for timing verification on large
    digital systems}},
  volume = {87b},
  number = {94065},
  year = {1987},
  text = {To insure that a digital system will operate at a desired speed,
    the designer must verify that every path delay is not too long or too
    short. Thus, an efficient path enumeration technique is needed. In this
    paper we present two algorithms for enumerating all possible paths in
    a directed acyclic graph that exceed given delay time. They run in $O(m\log
    m+N(K))$ and $O(Km)$ time, respectively, and require $O(m+n)$ space,
    where $K,m$, and $n$ are the number of such long paths, arcs, and nodes
    of a graph, and $N(K)$ is the total number of nodes on $K$ such long
    paths.}}

@article{Awa-IJPR-87,
  title = {{A counter-example to Naidu-Singh's myopic algorithm for generation
    of Wagner-Whitin optimal ordering plan (lot sizing)}},
  author = {P. G. Awate},
  journal = {Int. J. Production Res.},
  volume = {25},
  number = {8},
  pages = {1235--1237},
  month = {August},
  year = {1987},
  abstract = {The paper gives a simple counter-example to the conjecture
    by Naidu and Singh (see ibid., vol.24, no.1, p.223 (1986)) that their
    algorithm 'gives the optimal solution like the W-W algorithm'. Secondly,
    it points out that the Naidu-Singh procedure attempts to find the cheapest
    path in a certain acyclic network whose nodes are sets of periods and
    where the kth cheapest path does not necessarily have any node in common
    with 2nd or 3rd or. . .or (k-1)st-cheapest path.}}

@article{AweBerCow-SJC-98,
  title = {{Near-linear time construction of sparse neighborhood covers}},
  author = {Baruch Awerbuch and Bonnie Berger and Lenore Cowen and David
    Peleg},
  journal = {SIAM J. Computing},
  publisher = {SIAM},
  volume = {28},
  number = {1},
  pages = {263--277},
  year = {1998},
  comment = {Despite the reference in the abstract to k-shortest-paths, what
    they actually approximate is the set of shortest paths for k source-destination
    pairs.  Obviously this can be solved by k applications of Dijkstra in
    O(k(m+n log n)) time but they achieve a linear time approximation.},
  abstract = {This paper introduces a near-linear time sequential algorithm
    for constructing a sparse neighborhood cover. This implies analogous
    improvements (from quadratic to near-linear time) for any problem whose
    solution relies on network decompositions, including small edge cuts
    in planar graphs, approximate shortest paths, and weight- and distance-preserving
    graph spanners. In particular, an O(log n) approximation to the k-shortest
    paths problem on an n-vertex, E-edge graph is obtained that runs in O(n+E+k)
    time.}}

@article{AyaCab-DACS-92,
  title = {{Path enumeration and hot-potato routing analysis in multihop
    networks}},
  author = {E. Ayanoglu and R. J. Caballero},
  journal = {Int. J. Digital and Analog Communication Systems},
  volume = {5},
  pages = {217--223},
  year = {1992},
  abstract = {Using labelling of the edges of the network graph for a multihop
    network (using deflection routeing) and a Taylor series expansion of
    the transfer function of the resulting signal flow graph, the authors
    calculate the number of paths of a given length in the multihop network.
    The derivative of the transfer function and a fixed point algorithm yield
    the average delay as a function of the packet arrival rate.}}

@article{AzeSanSil-EJOR-93,
  title = {{An algorithm for the ranking of shortest paths}},
  author = {J. A. Azevedo and Santos Costa, M. E. O. and Silvestre Madeira,
    J. J. E. R. and Ernesto de Queir{\'o}s Vieira Martins},
  journal = {Eur. J. Operational Research},
  volume = {69},
  pages = {97--106},
  year = {1993},
  abstract = {An efficient computational implementation of a path deletion
    $K$ shortest paths algorithm and a new algorithm for the same problem
    are presented. In a path deletion $K$ shortest paths algorithm a sequence
    $(G_1, G_2, \ldots, G_k)$ of networks is defined, such that $G_1$ is
    the given network and its $k$-th shortest path is trivially determined
    from the shortest path in $G_k$. In essence, as soon as the shortest
    path in $G_k$ is determined it is excluded from $G_k$ in such a way that
    no new paths are formed and no more paths are deleted. So, for each $G_k$,
    two procedures are executed: a shortest path algorithm and a path deletion
    algorithm. In the presented computational implementation, all the information
    resulting from the determination of the $k$-th shortest path is carried
    throughout $G_k+1, G_k+2, \ldots, G_k$. The new algorithm not only keeps
    this characteristic but also avoids the last $K-1$ executions of a shortest
    path algorithm, which results in a surprising and very substantial reduction
    in the execution time. In fact, for randomly generated networks with
    $10^4$ nodes and $10^5$ arcs, once the shortest path is determined, the
    new algorithm computes the next $100$ shortest paths in times of the
    order of $10^{-1}$ seconds. To illustrate the efficiency of this algorithm,
    comparative computational experiments are reported.}}

@inproceedings{AzeSilMar-AIRO-90,
  title = {{A shortest paths ranking algorithm}},
  author = {J. A. Azevedo and Silvestre Madeira, J. J. E. R. and Ernesto
    de Queir{\'o}s Vieira Martins and F. M. A. Pires},
  booktitle = {Proc. AIRO 1990},
  publisher = {Associazione Italiana Ricerca Operativa},
  pages = {1001--1011},
  year = {1990},
  url = {http://www.mat.uc.pt/~eqvm/cientificos/investigacao/r_papers.html},
  abstract = {The ranking of K shortest paths is a classical network optimization
    problem with a large range of real world applications. Take as an example
    the constrained shortest path problem, where some complex set of constraints
    is associated with each path. If these constraints are ignored and paths
    are listed by increasing order of objective values, the shortest path
    verifying the given set of constraints is thus determined.
    
    The shortest path ranking problem may also occur in the multiobjective
    shortest path problem. In fact, a procedure for determining the multiobjective
    shortest path involves the knowledge of a well defined set of paths,
    namely the set of nondominated paths, which can be computed by a shortest
    paths ranking algorithm.
    
    For the ranking of shortest paths (loopless or not) problem, there are
    three classes of algorithms. One of them is based on the {\it Principle
    of Optimality}, being Dreyfus' algorithm its most representative one.
    Another classe comprises the generalizations, due to Shier, of labeling
    shortest paths algorithms. Finally, the last class encompasses the algorithms
    based on the path deletion concept, due to one of the authors.
    
    A new algorithm belonging to this class is presented. We prove that,
    in a worst case analysis, its executation time is as good as that of
    Dreyfus' algorithm that, as far as we know, has been considered the best
    algorithm for the problem.
    
    Computational experiments showing its clearly better performance are
    also presented. As an example, we report tests on random networks with
    1500 nodes and 15000 arcs where the new algorithm to determine 250 paths
    was about 60 times faster than Dreyfus' algorithm.}}

@article{AzeSilMar-EJOR-94,
  title = {{A computational improvement for a shortest paths ranking algorithm}},
  author = {J. A. Azevedo and Silvestre Madeira, J. J. E. R. and Ernesto
    de Queir{\'o}s Vieira Martins and F. M. A. Pires},
  journal = {Eur. J. Operational Research},
  volume = {73},
  pages = {188--191},
  year = {1994},
  abstract = {Presents a computational improvement for the shortest paths
    ranking algorithm due to some of the authors. According to its computational
    complexity, this new version of the algorithm entails a very significant
    reduction in its execution time and an even larger reduction in the required
    computer memory space. Computational experiments are reported.}}

@article{AziSobSam-MR-94,
  title = {{Fast enumeration of every path in a reliability graph using subgraphs}},
  author = {M. A. Aziz and M. A. Sobhan and M. A. Samad},
  journal = {Microelectronics and Reliability},
  volume = {34},
  pages = {1395--1396},
  year = {1994},
  abstract = {A fast method has been proposed for enumeration of all possible
    pathsets from every node to all other nodes using subgraphs. The method
    efficiently identifies the elements as well as source, sink and other
    nodes constituting a path. It performs no multiplications other than
    a few additions of binary digits.}}

@article{BaaAshAnw-Tr-96,
  title = {{Transportation analysis for sludge landfill site selection --
    a case study demonstration}},
  author = {M. H. Baaj and S. Ashur and A. Anwar},
  journal = {Transportation},
  volume = {23},
  number = {2},
  pages = {191--209},
  month = {May},
  year = {1996},
  note = {A solution framework for the Sludge Landfill Site Selection Problem
    (SLSSP) which arises in the context of environmental planning is presented.
     The problem may be defined as follows: given a set of environmentally
    acceptable candidate landfill sites, identify the site which minimizes
    a weighted combination of two objectives (system descriptors): the present
    
    worth value of the transportation operation costs and the resulting population
    disturbance of the chosen set of transportation routes.  The solution
    framework relies on an analysis algorithm which identifies K shortest
    travel time routes between one candidate landfill site and each of the
    water treatment plants.  Based on a prespecified tradeoff between present
    worth and population disturbance, the transportation routes associated
    with each landfill site are selected and the site's two resulting system
    descriptors are computed.  The solution methodology is demonstrated on
    data developed for the City of Phoenix, Arizona.  In addition, computational
    experiments are performed to rest the quality of solution and its sensitivity
    to different tradeoffs between the two system descriptors.  As a result
    of this study, city officials were dissuaded away from a prefavored landfill
    site.  Final selection from the set of pareto-optimal solutions was postponed
    pending results of ongoing efforts 
    to enlarge the collection operation by including sludge disposed in other
    neighboring cities.}}

@article{BabFunNis-IEICE-98,
  title = {{A proposal of a greedy neural network for route assignments in
    multihop radio networks}},
  author = {T. Baba and N. Funabiki and S. Nishikawa},
  journal = {Trans. IEICE},
  volume = {J81D-I},
  number = {6},
  pages = {700--707},
  month = {June},
  year = {1998},
  abstract = {In a multihop radio network, packets are transmitted from source
    nodes to destination nodes by activating several links between nodes.
    Each node can either send a packet to, or receive a packet from, almost
    one of its adjacent nodes simultaneously. In order to minimize the transmission
    time for given requests, the route assignment problem must be solved
    to assign a transmission route for each request, and the link activation
    problem must be solved to find a link activation schedule. The route
    assignment problem is decomposed into two sub-problems: the candidate
    extraction problem and the route selection problem. We propose a cost
    function for the route assignment problem and secondly, we propose the
    k-shortest route extraction method for the candidate extraction problem.
    This method is based on the k-shortest path algorithm, and extracts only
    routes whose number of hops is limited by the largest length among the
    shortest routes for all the SD pairs without loops and redundant nodes.
    The number of different extracted candidates is also limited by the minimum
    number of hops for each request. Thirdly, we propose the greedy neural
    network algorithm for the route selection problem. The greedy neural
    network consists of the greedy initialization method with the number
    of hops of the corresponding candidate, the motion equation with the
    w function and the new term of minimizing the cost function, and the
    one dimensional maximum neutron model. Through simulations in up to 500-node
    networks, we verify that our algorithm finds better solutions in shorter
    time with smaller space than the existing algorithms.}}

@article{BabFunNis-SCJ-99,
  title = {{A proposal of a greedy neural network for route assignments in
    multihop radio networks}},
  author = {T. Baba and N. Funabiki and S. Nishikawa},
  journal = {Systems and Computers in Japan},
  volume = {30},
  number = {13},
  pages = {52--60},
  month = {November},
  year = {1999}}

@article{Bak-MOS-76,
  title = {{All paths in an activity network}},
  author = {A. Bako},
  journal = {Mathematische Operationsforschung und Statistik},
  volume = {7},
  pages = {851--858},
  year = {1976},
  abstract = {The known CPM/PERT methods are available for the determination
    of the critical edges and a critical path. This paper gives two algorithms:
    one of them is used for the determination of all critical paths, the
    second for the determination of the second longest paths. The validity
    of the algorithms and the labelling technique are also given.}}

@article{BakKas-Sz-77,
  title = {{Determining the $k$-th shortest path by matrix method}},
  author = {A. Bako and P. Kas},
  journal = {Szigma},
  volume = {10},
  pages = {61--66},
  year = {1977},
  abstract = {An algorithm is given for the multiterminal version of the
    $k$-th shortest path problem. The algorithm calculates in n steps the
    length of the first $k$ paths between all the point pairs of a digraph.
    The labelling technique required for the determination of the paths and
    the procedure supplying the intermediate points belonging to the path
    are described. Altogether the calculation consists of $kn^3$ additions
    and $k^3/2 n^3$ [Note - this formula was garbled, I have attempted to
    reconstruct it but may have erred - DE] comparisons. This number is considerably
    lower than what is necessary for the repeated application of the $k$-th
    shortest path algorithm of two end points known in literature.},
  note = {In Hungarian}}

@phdthesis{Bal-PhD-87,
  title = {{A Network Model for Rotating Workforce Scheduling and Related
    Problems}},
  author = {Nagraj Balakrishnan},
  school = {Purdue Univ., Dept. of Business Administration},
  year = {1987},
  abstract = {The rotating workforce scheduling problem, which is an important
    factor in improving worker productivity, involves the construction of
    an efficient sequence of work and recreation periods spanning over a
    number of weeks. This schedule must satisfy the workforce requirements
    during the various time periods and conform to all the other conditions
    imposed on the work/recreation periods and their sequence. We consider
    the modelling of the rotating workforce scheduling problem as a network
    flow problem. All the conditions enforced on the problem are incorporated
    in the network itself, except for the staff-covering constraints which
    are treated as side constraints. The optimal solution to the problem
    is a path in the network and is identified using a dual-based approach.
    The model deals with the three issues of recreation period identification,
    work/recreation period sequencing and shift scheduling simultaneously,
    and is designed to handle multiple shifts with time varying demands.
    A software package which includes the network model along with the solution
    technique is developed. To illustrate its use, the procedure, which is
    capable of solving large-scale problems, is applied to three well-known
    problems in rotating workforce scheduling. The computational results
    presented indicate that this procedure provides us with a useful method
    of solving large-scale complex problems in workforce scheduling. The
    general model developed can also be applied to other problems in sequencing
    and scheduling. To illustrate this feature, we consider a particular
    aspect of the examination timetabling problem where the objective is
    to assign blocks of examinations to time periods such that the number
    of students having back-to-back conflicts is minimized. The time periods
    are defined in such a way that the last period of any day and the first
    period of the following day are not considered to be back-to-back. The
    problem is modelled as a network flow problem where the solution to the
    problem is the shortest path in the network subject to side-constraints.
    A dual based approach followed by a K-shortest path enumeration technique
    is employed to identify this optimal path. The procedure is tested on
    a variety of test problems including a real problem faced by a large
    university.}}

@article{BalDerHil-Nw-90,
  title = {{Matching problems with generalized upper bound side constraints}},
  author = {Michael O. Ball and Ulrich Derigs and C. Hilbrand and Achim Metz},
  journal = {Networks},
  volume = {20},
  number = {6},
  pages = {703--721},
  year = {1990},
  review = {MR-91h-90068}}

@article{MR-91h-90068,
  reviews = {BalDerHil-Nw-90},
  journal = {Mathematical Reviews},
  publisher = {Amer. Math. Soc.},
  title = {{Matching problems with generalized upper bound side constraints}},
  author = {Frank Werner},
  volume = {91h},
  number = {90068},
  year = {1991},
  text = {The paper considers procedures for the approximate solution of
    matching problems with generalized upper bound side constraints which
    are based on Lagrangian relaxation and dual ascent. In the first phase
    the standard Langrangian relaxation ideas are used to determine lower
    bounds for matching problems with side constraints. In the second phase
    an improvement technique is applied to the subsequences of feasible and
    infeasible matchings obtained in phase one. Namely, a knapsack heuristic
    is applied to any pair of feasible/infeasible matchings to construct
    better feasible matchings. If the optimal solution is desired, then an
    enumeration phase, in which a sequence of $k$-best matchings with respect
    to a penalized objective function is constructed, can be added. Finally,
    computational results are presented for a set of test problems with one
    and five constraints.}}

@inproceedings{BalSte-AFCT-91,
  title = {{Topologies for linear lightwave networks}},
  author = {K. Bala and T. E. Stern},
  booktitle = {Advanced Fiber Communications Technologies},
  number = {1579},
  series = {Proc. SPIE},
  publisher = {Int. Soc. Optical Engineering},
  pages = {62--73},
  year = {1991},
  abstract = {Tree based networks which preclude the possibility of certain
    violations are compared with networks that allow violations but achieve
    better load distribution. The performance of each topology, from the
    point of view of blocking probability is compared by a simulator using
    call routing based on the $K$-shortest path algorithm. It is found that
    general topologies that allow for better load distribution perform better
    than tree based topologies.}}

@inproceedings{BalSteBal-INFOCOM-91,
  title = {{Algorithms for routing in a linear lightwave network}},
  author = {K. Bala and T. E. Stern and K. Bala},
  booktitle = {Proc. 10th Joint. Conf. IEEE Computer {\&} Communications Socs.},
  volume = {1},
  pages = {1--9},
  year = {1991},
  abstract = {Routing algorithms are proposed for setting up calls on a circuit-switched
    basis in linear lightwave networks (LLN), i.e., networks composed only
    of linear components, including controllable power combiners and dividers,
    and possibly linear (non-regenerative) optical amplifiers. The overall
    problem is decomposed into three subproblems: (1) physical path allocation,
    (2) checking for violations of the special optical constraints on the
    allocated physical path, and (3) channel assignment. Only point to point
    connections are considered. The physical path allocation technique uses
    the K-shortest path algorithm and tries to minimize the number of sources
    potentially interfering with each other, as a result of the incoming
    call. A channel assignment heuristic that tends to spread out calls evenly
    among the available channels works better than one that tries to maximize
    channel reuse.}}

@article{BalSteSim-TN-95,
  title = {{Routing in a linear lightwave network}},
  author = {K. Bala and T. E. Stern and D. Simchi-Levi and K. Bala},
  journal = {Trans. on Networking},
  publisher = {IEEE and ACM},
  volume = {3},
  number = {4},
  pages = {459--469},
  month = {August},
  year = {1995},
  abstract = {Dynamic routing of point-to-point connections in a waveband
    selective linear lightwave network is addressed. Linear lightwave networks
    are all optical networks in which only linear operations are performed
    on signals in a waveband selective manner. Special constraints arise
    because of the linearity in the linear lightwave network. The overall
    problem of finding a path satisfying all the routing constraints for
    point-to-point connections is shown to be very complex. Owing to the
    complexity, the overall routing problem is decomposed into several subproblems.
    In particular, given a request for a point-to-point connection a waveband
    is first chosen for the call. Two heuristics, MAXBAND which allocates
    the most used band to a call and another MINBAND (least used band) are
    studied. Then, the problem of routing in a given waveband is further
    divided into smaller subproblems of finding a path in the waveband, checking
    for feasibility of the path in the chosen waveband and channel allocation
    (within the waveband). For finding paths in a waveband, K-SP, BLOW-UP
    and MIN-INT algorithms are proposed. A recursive algorithm checks for
    feasibility of the path on the waveband. Two channel allocation schemes
    (within a single waveband) MIN and MAX are presented. Simulations show
    that using MAXBAND (waveband), MIN-INT (path on waveband) and MIN (channel
    within waveband) policies resulted in the best performance (least blocking).}}

@phdthesis{Bar-PhD-95,
  title = {{A Quasi-Static Routing Optimization Model for Telecommunication
    Networks}},
  author = {Michael Raymond Bartolacci},
  school = {LeHigh Univ., Dept. of Industrial Engineering},
  year = {1995},
  abstract = {The main focus of this research is the development of a routing
    optimization model for telecommunication networks that utilizes nodal
    clustering as a 'preprocessor' to routing. The routing model developed
    contains three submodels: the clustering submodel (CLUS), the inter-cluster
    routing submodel (INTER), and the intra-cluster routing submodel (INTRA).
    The clustering problem is solved through a modified version of 'problem
    space' search, while inter-cluster and intra-cluster routing is conducted
    in a dynamic manner. This clustered routing method out-performed a standard
    dynamic routing algorithm and a static approach with respect to minimizing
    average source-to-destination routing delay. A secondary focus of this
    research is the generation of test problem sets for telecommunication
    network routing. A procedure is developed which generates topologies
    with random geometric structures. A set of test problems based on PREPNET,
    a mid-level network on the NSFnet backbone, are also developed. A third
    focus of this research is a static, k shortest path-based, approach for
    bifurcated and single path routing in telecommunication networks. This
    proposed routing method is tested against a single path routing algorithm
    for a variety of network topologies and traffic requirements.}}

@techreport{BarKhuSch-TR-95,
  title = {{The complexity of finding most vital arcs and nodes}},
  author = {Amotz Bar-Noy and Samir Khuller and Baruch Schieber},
  organization = {Univ. of Maryland, Dept. of Computer Science},
  number = {CS-TR-3539},
  month = {November},
  year = {1995},
  url = {ftp://ftp.cs.umd.edu/pub/papers/papers/3539/3539.ps.Z},
  abstract = {Let $G(V,E)$ be a graph (either directed or undirected) with
    a non-negative length $\ell(e)$ associated with each arc e in E. For
    two specified nodes s and t in V, the k most vital arcs (or nodes) are
    those k arcs (nodes) whose removal maximizes the increase in the length
    of the shortest path from s to t. We prove that finding the k most vital
    arcs (or nodes) is NP-hard, even when all arcs have unit length. We also
    correct some errors in an earlier paper by Malik, Mittal and Gupta \cite{MalMitGup-ORL-89}.}}

@article{BarZie-SMC-91,
  title = {{Topological analysis of satellite-based distributed sensor networks}},
  author = {Craig M. Barnhart and R. E. Ziemer},
  journal = {Trans. Systems, Man, and Cybernetics},
  publisher = {IEEE},
  volume = {21},
  number = {5},
  pages = {1060--1070},
  year = {1991},
  abstract = {A method for evaluating the topological quality of networks
    for distributed sensor applications is presented.  The criteria for evaluation
    are network survivability and delay.  Nodal connectivity is used to characterize
    survivability, and mean path length is used to characterize delay.  To
    calculate these two quantities, an algorithm is developed to find k shortest
    node-disjoint paths between a pair of nodes when each link has unit distance.
     As an example of the use of this type of analysis, the  effects of nodal
    losses in a multiple-node satellite network consisting of a Walker low-orbit
    sphere and a geosynchronous constellation are examined.  The example
    demonstrates how topological analysis on the basis of connectivity and
    mean path length may be used to detect, and subsequently address, potential
    flaws in a network design.  The results show that the geosynchronous/low-orbit
    link assignment protocol should be a primary concern in the design of
    this network.  They also show that the nodal degree of the failed node,
    and the distribution of links between the Walker sphere and the geosynchronous
    constellation, are the fundamental determinants of mean path length.}}

@article{Bax-IPL-94,
  title = {{Algorithms to count paths and cycles}},
  author = {Eric Theodore Bax},
  journal = {Information Processing Letters},
  volume = {52},
  number = {5},
  pages = {249--252},
  month = {December},
  year = {1994},
  abstract = {We use results for Hamiltonian cycles and paths to deduce $O(2^n{\rm
    poly}(n))$ time and $O({\rm poly}(n))$ space algorithms to count: (1)
    cycles on a single vertex, (2) all cycles, (3) paths between a given
    pair of vertices, and (4) all paths in a graph with $n$ vertices.},
  review = {MR-95h-68072}}

@article{MR-95h-68072,
  reviews = {Bax-IPL-94},
  journal = {Mathematical Reviews},
  publisher = {Amer. Math. Soc.},
  title = {{Algorithms to count paths and cycles}},
  volume = {95h},
  number = {68072},
  year = {1995}}

@phdthesis{Bax-PhD-98,
  title = {{Finite-Difference Algorithms for Counting Problems}},
  author = {Eric Theodore Bax},
  school = {California Inst. of Technology, Dept. of Computer Science},
  year = {1998},
  abstract = {We present a novel method to construct counting algorithms:
    (1) Construct a generating function in which one type of terms corresponds
    to the objects to be counted. (2) Apply the proper finite-difference
    operators to produce a formula that counts the terms. (3) Choose finite-difference
    parameters to reduce the computation required to evaluate the formula.
    We compare this finite-difference method to two other methods, the dynamic
    programming method and the inclusion and exclusion method. Using the
    problem of counting Hamiltonian paths as an example, we show that finite-difference
    algorithms require only polynomial space for problems for which dynamic
    programming algorithms require exponential space. Also, we show that
    finite-difference algorithms are a generalization of inclusion and exclusion
    algorithms. Finite-difference algorithms have some free parameters, and
    inclusion and exclusion algorithms correspond to a particular setting
    of those parameters. Using the 0-1 matrix permanent problem as an example,
    we show that the finite-difference parameters can be chosen to produce
    finite-difference algorithms that are faster than their inclusion and
    exclusion counterparts. We use the problems of counting paths by length
    and counting independent path sets to illustrate how the flexibility
    of generating functions and extensions to finite-difference operators
    allow the development of finite-difference algorithms for problems beyond
    the realm of inclusion and exclusion. Furthermore, we use the problems
    of sequencing, bin packing, and deadlock avoidance to demonstrate the
    development of finite-difference algorithms for NP-complete and  {\#}P-complete
    problems.}}

@article{Bei-Comp-72,
  title = {{An algorithm for finding all $k$-shortest distances in a network}},
  author = {H. Beilner},
  journal = {Computing},
  volume = {10},
  pages = {205--220},
  year = {1972},
  abstract = {This paper describes a new matrix-algorithm for determining
    all shortest up to $k$-shortest distances between the $n$ vertices of
    a network. The outstanding property of this algorithm consists in the
    necessary amount of additions/subtractions which can be estimated, for
    $n\gg k$, not to exceed $1/3 n^5/2 k^5/2 + 5 n^5/2 k^3/2 + O(n^3/2 k^5/2)$
    whereas the number of comparisons lies, as in other algorithms, in the
    range of $n^3 k^3$. This paper also includes a formal proof of the validity
    of the algorithm and a short comparison with different, known methods.},
  note = {In German}}

@article{Bel-QAM-58,
  title = {{On a routing problem}},
  author = {Richard E. Bellman},
  journal = {Quarterly of Applied Mathematics},
  volume = {16},
  number = {1},
  pages = {87--90},
  year = {1958}}

@article{BelKal-SIAM-60,
  title = {{On $k$th best policies}},
  author = {Richard E. Bellman and R. Kalaba},
  journal = {J. SIAM},
  publisher = {SIAM},
  volume = {8},
  pages = {582--588},
  year = {1960},
  review = {MR-22-13305}}

@article{MR-22-13305,
  reviews = {BelKal-SIAM-60},
  journal = {Mathematical Reviews},
  publisher = {Amer. Math. Soc.},
  title = {{On $k$th best policies}},
  author = {T. E. Hull},
  volume = {22},
  number = {{\#}13305},
  year = {1961}}

@article{BerGenPot-JH-00,
  title = {{Tabu search for a network loading problem with multiple facilities}},
  author = {D. Berger and B. Gendron and J.-Y. Potvin and S. Raghavan and
    P. Soriano},
  journal = {J. Heuristics},
  volume = {6},
  number = {2},
  pages = {253--267},
  month = {June},
  year = {2000},
  abstract = {Examines a network design problem that arises in the telecommunications
    industry. In this problem, communication between a gateway vertex and
    a number of demand vertices is achieved through a network of fiber-optic
    cables. Since each cable has an associated capacity (bandwidth), enough
    capacity must be installed on the links of the network to satisfy the
    demand, possibly using different types of cables. Starting with a network
    with no capacity or some capacity already installed, a tabu search heuristic
    is designed to find a solution that minimizes the cost of installing
    any additional capacity on the network. This tabu search applies a k-shortest
    path algorithm to find alternative paths from the gateway to the demand
    vertices. Numerical results are presented on different types of networks
    with up to 200 vertices and 100 demand vertices.}}

@inproceedings{BesKel-AWOCA-99,
  title = {{Algorithms for shortest paths and $d$-cycle problems}},
  author = {Sergei Bespamyatnikh and Andrei Kelarev},
  booktitle = {Proc. 10th Aust. Worksh. Combinatorial Algorithms},
  pages = {152--156},
  year = {1999},
  url = {http://www.cs.ubc.ca/~besp/cycle.ps.gz},
  abstract = {Let $G$ be a weighted graph with $n$ vertices and $m$ edges.
    We address the $d$-cycle problem, i.e., the problem of finding a subgraph
    of minimum weight with given cyclomatic number $d$. Hartvigsen [5] presented
    an algorithm with running time $O(n^2 m)$ and $O(n^{2d-1} m^2)$ for the
    cyclomatic numbers $d=1$ and $d\ge 2$, respectively. Using a $(d+1)$-shortest-paths
    algorithm, we develop a new more efficient algorithm for the $d$-cycle
    problem with running time $O(n^{2d-1} + n^2 m+ n^3\log n)$.}}

@inproceedings{BetHil-ASSP-95,
  title = {{Language models for a spelled letter recognizer}},
  author = {M. Betz and H. Hild},
  booktitle = {Proc. Int. Conf. Acoustics, Speech, and Signal Processing},
  publisher = {IEEE},
  volume = {1},
  pages = {856--859},
  month = {May},
  year = {1995},
  abstract = {In some speech recognition applications, it is reasonable to
    constrain the search space of a speech recognizer to a large but finite
    set of sentences. We demonstrate the problem on a spelling task, where
    the recognition of continuously spelled last names is constrained to
    110000 entries (=43000 unique names) of a telephone book. Several techniques
    to address this problem are compared: recognition without any language
    model, bigrams, functions to map a hypothesis onto a legal string, $n$-best
    lists, and finally a newly developed method which integrates all constraints
    directly into the search process within reasonable memory and time bounds.
    The baseline result of 56{\%} string accuracy is improved to 62, 85, 88,
    and 92{\%}, respectively.}}

@article{BilEll-JPDC-95,
  title = {{An algorithm for finding the $K$-best allocations of a tree structured
    program}},
  author = {A. Billionnet and S. Elloumi},
  journal = {J. Parallel and Distributed Computing},
  volume = {26},
  pages = {225--232},
  year = {1995},
  abstract = {We consider the problem of allocating $n$ tasks of a distributed
    program to $m$ processors of a distributed system in order to minimize
    total communication and processing costs. If the intertask communication
    can be represented by a tree and if the communication costs are uniform,
    it is known that an optimal allocation can be determined in $O(nm)$ time.
    A $K$-optimal solution set $\Omega=(A_1,\ldots,A_K)$ of a given task
    allocation problem is a set of allocations such that no allocation $A$
    which is not contained in $\Omega$ is better than any $A_i$, $i=1,\ldots,K$.
    In this paper, an algorithm is presented which computes a $K$-optimal
    set for the considered task allocation problem in $O(Knm)$.}}

@article{Bof-RAIRO-93,
  title = {{The all-to-all alternative route problem}},
  author = {Brian Boffey},
  journal = {Revue Francaise d'Automatique Informatique Recherche Operationelle
    (RAIRO)},
  volume = {27},
  pages = {375--387},
  year = {1993},
  review = {MR-94h-90061}}

@article{MR-94h-90061,
  reviews = {Bof-RAIRO-93},
  journal = {Mathematical Reviews},
  publisher = {Amer. Math. Soc.},
  title = {{The all-to-all alternative route problem}},
  volume = {94h},
  number = {90061},
  year = {1994},
  text = {There are various $K$-best route problems associated with a network.
    The one studied here is that of finding, for all node pairs $(s,t)$,
    a best route from $s$ to $t$ together with an alternative route which
    is optimal subject to not containing the first edge of the best route.
    The relevance of this problem to dynamic vehicle guidance and to routing
    in communication networks is briefly discussed. An algorithm is developed
    whose complexity, under conditions likely to be met in practice, is established.
    An illustrative
    example is given.}}

@article{BooWes-Algo-94,
  title = {{A linear algorithm for analysis of minimum spanning and shortest-path
    trees of planar graphs}},
  author = {Heather Booth and Jeffery Westbrook},
  journal = {Algorithmica},
  volume = {11},
  number = {4},
  pages = {341--352},
  month = {April},
  year = {1994},
  abstract = {We give a linear time and space algorithm for analyzing trees
    in planar graphs. The algorithm can be used to analyze the sensitivity
    of a minimum spanning tree to changes in edge costs, to find its replacement
    edges, and to verify its minimality. It can also be used to analyze the
    sensitivity of a single-source shortest-path tree to changes in edge
    costs, and to analyze the sensitivity of a minimum-cost network flow.
    The algorithm is simple and practical. It uses the properties of a planar
    embedding, combined with a heap-ordered queue data structure.}}

@inproceedings{BraSin-PEW-95,
  title = {{A comparative study of $k$-shortest path algorithms}},
  author = {A. W. Brander and Mark C. Sinclair},
  booktitle = {Proc. 11th UK Performance Engineering Worksh. for Computer
    and Telecommunications Systems},
  month = {September},
  year = {1995},
  url = {http://esewww.essex.ac.uk/~mcs/ps/ukpew11_bra.ps.gz},
  abstract = {Efficient management of networks requires that the shortest
    route from one point (node) to another is known; this is termed the shortest
    path. It is often necessary to be able to determine alternative routes
    through the network, in case any part of the shortest path is damaged
    or busy. The k-shortest paths represent an ordered list of the alternative
    routes available. Four algorithms were selected for more detailed study
    from over seventy papers written on this subject since the 1950s. These
    four were implemented in the `C' programming language and, on the basis
    of the results, an assessment was made of their relative performance.}}

@techreport{Bro-RR-126,
  title = {{The 1993 SRC Algorithm Animation Festival}},
  author = {Marc H. Brown},
  type = {SRC Research Report},
  institution = {Digital Equipment Corp.},
  number = {126},
  month = {29 July},
  year = {1994},
  url = {http://gatekeeper.dec.com/pub/DEC/SRC/research-reports/abstracts/src-rr-126.html}}

@article{BruGhiImp-EJOR-98,
  title = {{A multi-modal approach to the location of a rapid transit line}},
  author = {G. Bruno and G. Ghiani and G. Improta},
  journal = {Eur. J. Operational Research},
  volume = {104},
  number = {2},
  pages = {321--332},
  month = {January},
  year = {1998},
  abstract = {The location of a rapid transit line (RTL) represents a very
    complex decision problem because of the large number of decision makers,
    unquantifiable criteria and uncertain data. In this context operational
    research can help in the design process by providing tools to generate
    and assess alternative solutions. For this purpose two bicriterion mathematical
    programming models-the maximum coverage shortest path model and the median
    shortest path model-have been developed in the past. In this paper a
    new bicriterion model, which can evaluate in a more realistic way the
    attractivity of an RTL is introduced. To calculate an estimation of the
    non-inferior solution set of the problem, a procedure based on a k-shortest
    path algorithm was developed. This approach was applied to a well-known
    sample problem and the results are discussed and compared with those
    obtained using a median shortest path model.}}

@inproceedings{BruGhiImp-ESI-95,
  title = {{A multi-modal approach to the location of a rapid transit line}},
  author = {G. Bruno and G. Ghiani and G. Improta},
  journal = {Proc. 12th EURO Summer Inst. Locational Analysis},
  month = {June},
  year = {1995}}

@inproceedings{BruGhiImp-IFORS-97,
  title = {{Models and algorithms for the design of rapid transit networks}},
  author = {G. Bruno and G. Ghiani and G. Improta},
  booktitle = {Proc. 7th Int. Special Conf. IFORS, Information Systems in
    Logistics and Transportation},
  month = {June},
  year = {1997},
  abstract = {Traditional underground metro systems, rapid rail transit systems
    are becoming more and more common to improve mobility in large urban
    areas. The design of such systems is a very critical task which has long
    term effects on modal aplit. Decisions are to be made about topological
    configuration, the number and location of lines and stations, line frequencies
    etc.. In this context decision making is a complex job as several players
    are involved, some objectives are unquantifiable and estimation of the
    non-inferior solutions set considering the two main quantifiable objectives
    (e.g. the construction cost and a measure of the social benefit); second,
    the choice, among the previously selected solutions, of the most suitable
    configuration by means of the remaining objectives. In the present paper
    we tackle the first step generalising a k-shortest path technique in
    such a way to consider complex topological patterns (grids, stars, cartwheels,
    triangles etc.). The proposed method was used to simulate the Rome metro
    system.}}

@article{BruHam-EJOR-89,
  title = {{$K$-optimal solution sets for some polynomially solvable scheduling
    problems}},
  author = {Peter Brucker and Horst W. Hamacher},
  journal = {Eur. J. Operational Research},
  volume = {41},
  number = {2},
  pages = {194--202},
  year = {1989},
  review = {MR-90e-90069}}

@article{MR-90e-90069,
  reviews = {BruHam-EJOR-89},
  journal = {Mathematical Reviews},
  publisher = {Amer. Math. Soc.},
  title = {{$K$-optimal solution sets for some polynomially solvable scheduling
    problems}},
  volume = {90e},
  number = {90069},
  year = {1990},
  text = {A $k$-optimal solution set $\Omega=\{S\sb 1,\cdots,S\sb k\}$ of
    a given scheduling problem is a set of schedules such that no schedule
    $S$ which is not contained in $\Omega$ is better than any $S\sb i$, $i=1,
    \cdots,k$. $k$-optimal sets are useful in offering alternatives to a
    single optimal schedule. In this paper algorithms are presented which
    compute $k$-optimal sets for various scheduling problems for which the
    optimal schedule can be computed in polynomial time.}}

@inproceedings{BurHaf-SEC-74,
  title = {{A ranking problem on graphs}},
  author = {R. N. Burns and Charles Edward Haff},
  booktitle = {Proc. 5th Southeast Conf. Combinatorics, Graph Theory {\&} Computing},
  number = {11},
  series = {Graph Theory and Computing},
  publisher = {Utilitas Mathematica Publishing},
  address = {Winnepeg, Canada},
  pages = {461--470},
  year = {1974}}

@inproceedings{BusLocOls-GC-94,
  title = {{Dynamic $K$-shortest path (DKSP) facility restoration algorithm}},
  author = {M. T. Busche and C. M. Lockhart and C. Olszewski},
  booktitle = {GLOBECOM, Communications: The Global Bridge},
  publisher = {IEEE},
  volume = {1},
  pages = {536--542},
  year = {1994},
  abstract = {This paper describes the dynamic $K$-shortest path (DKSP) algorithm
    for distributed facility restoration and its performance in a simulation
    of AT{\&}T's high-capacity digital facilities network. The guiding paradigm
    of this algorithm is that of a switched network. At each facility node
    in the network, a local controller (LC) directs the activities of a digital
    cross-connect system (DCS) to route high-capacity digital connections
    around failures. The LCs communicate with each other via a connectionless
    network using routers and signaling links embedded in the transmission
    systems between nodes. After a failure, the LCs disseminate information
    about failed transmission links to the whole network. High-capacity digital
    connections are then restored by a call-control protocol. The simulation
    shows that the algorithm's efficiency is close to that of a centralized
    algorithm, and that its rate of finding alternate routes in this large
    network is approximately 50 ms per restoration path.}}

@phdthesis{Bye-PhD-82,
  title = {{Optimal and Near-Optimal Policies for Discrete Deterministic
    Dynamic Programming Models}},
  author = {Thomas Hancock Byers},
  school = {Univ. of California, Berkeley, Dept. of Economics},
  year = {1982},
  abstract = {A new algorithm for finding policies with objective function
    values in a neighborhood of the optimum for certain dynamic programming
    models is presented and compared to the best available algorithms. The
    algorithm combines the 'depth-first' search with 'stacking' techniques
    of theoretical computer science and principles from dynamic programming
    to modify the usual backtracking routine and list all near-optimal policies.
    This is the first practical algorithm for a variety of large problems
    that are of interest. Two such problems are critical path analysis in
    project management and sequence alignment in molecular biology.}}

@article{ByeWat-OR-84,
  title = {{Determining all optimal and near-optimal solutions when solving
    shortest path problems by dynamic programming}},
  author = {Thomas Hancock Byers and Michael S. Waterman},
  journal = {Operations Research},
  volume = {32},
  pages = {1381--1384},
  year = {1984},
  abstract = {Presents a new algorithm for finding all solutions with objective
    function values in the neighborhood of the optimum for certain dynamic
    programming models, including shortest path problems. The new algorithm
    combines the depth-first search with stacking techniques of theoretical
    computer science and principles from dynamic programming to modify the
    usual backtracking routine and lists all near-optimal policies. The resulting
    procedure is the first practical algorithm for a variety of large problems
    that are of interest.}}

@techreport{CamFraMaf-LCE-73,
  title = {{The $k$ shortest spanning trees of a graph}},
  author = {P. M. Camerini and L. Fratta and F. Maffioli},
  institution = {IEEE-LCE Politechnico di Milano, Italy},
  number = {73-10},
  year = {1973}}

@article{CamFraMaf-Nw-80,
  title = {{The $k$ best spanning arborescences of a network}},
  author = {P. M. Camerini and L. Fratta and F. Maffioli},
  journal = {Networks},
  volume = {10},
  number = {2},
  pages = {91--110},
  year = {1980},
  review = {MR-81h-68023}}

@article{MR-81h-68023,
  reviews = {CamFraMaf-Nw-80},
  journal = {Mathematical Reviews},
  publisher = {Amer. Math. Soc.},
  title = {{The $k$ best spanning arborescences of a network}},
  author = {Lawrence V. Saxton},
  volume = {81h},
  number = {68023},
  year = {1981},
  text = {The authors exhibit an efficient algorithm (in terms of both time
    and space) for finding the $K$ best spanning arborescences (i.e. a branching
    with a unique root) of a network. The algorithm given for the best arborescence
    is an adaptation of Tarjan's algorithm for finding the optimum branching
    of a network. To this is added a procedure for finding the next best
    spanning arborescence. The result is an algorithm for finding the $K$
    best spanning arborescences of a network of $n$ vertices and $m$ edges
    in time $O(Km\log n)$ and space $O(K+m)$. They also note that, for dense
    networks, the algorithm can be modified to operate in time $O(n^2)$.}}

@article{CarLiLut-DAM-97,
  title = {{Reliability evaluation of large telecommunication networks}},
  author = {Jacques Carlier and Yu Li and Jean-Luc Lutton},
  journal = {Discrete Applied Mathematics},
  volume = {76},
  pages = {61--80},
  month = {June},
  year = {1997},
  abstract = {In this paper, we describe an approximation method to evaluate
    the reliability of large telecommunication networks based on optic fibre
    and digital cross-connect systems (DCS).  The reliability measures are
    defined as the availability and the expected lost traffic.  Their evaluation
    is decomposed into the rerouting calculation and the probabilistic calculation.
     The rerouting calculation (restoration from failures) is accomplished
    by a heuristic method using the $K$-shortest paths.  It is made very
    rapidly, thanks to a sophisticated data structure.  The probabilistic
    calculation is based on the stratified sampling which results in computational
    savings of several orders of magnitude and is well suited to very large
    networks with high reliability components.},
  review = {MR-98c-90035}}

@article{MR-98c-90035,
  reviews = {CarLiLut-DAM-97},
  journal = {Mathematical Reviews},
  publisher = {Amer. Math. Soc.},
  title = {{Reliability evaluation of large telecommunication networks}},
  volume = {98c},
  number = {90035},
  year = {1998}}

@inproceedings{CarSod-SOR-83,
  title = {{A binary enumeration tree to find $K$ shortest paths}},
  author = {Paulo Carraresi and Claudio Sodini},
  booktitle = {Proc. 7th Symp. Operations Research},
  number = {45},
  series = {Methods of Operations Research},
  publisher = {Athen{\"a}um/Hain/Hanstein},
  pages = {177--188},
  year = {1983},
  review = {MR-85i-90053}}

@article{MR-85i-90053,
  reviews = {CarSod-SOR-83},
  journal = {Mathematical Reviews},
  publisher = {Amer. Math. Soc.},
  title = {{A binary enumeration tree to find $K$ shortest paths}},
  volume = {85i},
  number = {90053},
  year = {1985},
  text = {The $K$ shortest simple paths problem in a directed graph is considered.
    A procedure based on a binary enumeration tree yields the solution by
    computing $K-1$ `second shortest paths' in appropriate graphs. The latter
    problems are shown to be related to the determination of the best basis
    adjacent to the optimal one in a minimum cost network flow problem, for
    which a dual approach is proposed.}}

@inproceedings{CasRusVit-STS-97,
  title = {{Stochastic user equilibrium assignment with explicit path enumeration:
    comparison of models and algorithms}},
  author = {E. Cascetta and Francesco Russo and Antonino Vitetta},
  booktitle = {Proc. 8th Int. Symp. Transportation Systems},
  year = {1997},
  abstract = {In this paper a preliminary analysis of alternative models
    for ``feasible'' path generation and choice is presented. In particular
    a k-shortest path multi-criteria model for path enumeration is explored
    and different choice models (Logit, recently proposed C-Logit and Probit)
    are tested by comparing SUE assignment link flows with counts on an urban
    road network. Flows are also compared for more traditional DUE and SUE
    Probit implicit path enumeration models. The results obtained show that
    a limited number (4-7) of paths generated with rather ``simple'' criteria
    give satisfactory results, SUE with explicit path enumeration is largely
    comparible with, and in some cases superior to, traditional implicit
    SUE and DUE models. Explicit path enumeration allow also the specification
    of more sophisticated non additive attributes in the utility function
    of route choice models. From the computational point of view the explicit
    path C-Logit and Probit SUE algorithms are from three to twenty times
    superior to the implicit Probit SUE assignment.}}

@inproceedings{Cha-CPM-94,
  title = {{Computing all suboptimal alignments in linear space}},
  author = {Kun-Mao Chao},
  booktitle = {Proc. 5th Symp. Combinatorial Pattern Matching},
  number = {807},
  series = {Lecture Notes in Computer Science},
  publisher = {Springer Verlag},
  pages = {31--42},
  year = {1994}}

@article{Cha-CT-68,
  title = {{Generation of trees, two-trees, and storage of master forests}},
  author = {J. P. Char},
  journal = {Trans. Circuit Theory},
  publisher = {IEEE},
  volume = {CT-15},
  pages = {228--238},
  year = {1968},
  review = {MR-39-6779}}

@article{MR-39-6779,
  reviews = {Cha-CT-68},
  journal = {Mathematical Reviews},
  publisher = {Amer. Math. Soc.},
  title = {{Generation of trees, two-trees, and storage of master forests}},
  volume = {39},
  number = {6779},
  year = {1970}}

@article{Cha-IS-98,
  title = {{On computing all suboptimal alignments}},
  author = {Kun-Mao Chao},
  journal = {Information Sciences},
  volume = {105},
  number = {1--4},
  pages = {189--207},
  month = {March},
  year = {1998},
  abstract = {Naor and Brutlag [D. Naor, D. Brutlag, Proceedings of the Fourth
    Symposium on Combinational Pattern Matching, Lecture Notes in Computer
    Science, 684 (1993) 179-196] proposed a new compact representation for
    suboptimal alignments. The kernel of that representation is a minimal
    directed acyclic graph (DAG) containing all suboptimal alignments. In
    this paper, a flexible space-saving scheme for computing such a DAG is
    proposed. In spite of the need for storing the DAG, these methods require
    very little additional working space. For two sequences of lengths M
    and N (M less than or equal to N), the general scheme runs in O(MN log(1/Upsilon))
    time and O(M-Upsilon(M + N)) space for arbitrarily small 0 {$<$} Upsilon
    {$<$} 1. As a consequence, the worst-case running time is O(MN log log M)
    using only O(N) space. A variant of the method restricts the log log
    M factor to affect only grid points lying between suboptimal alignments.
    It is also shown that a running time of O(MN) can be achieved by using
    only O(M1+epsilon + N) space for arbitrarily small constant epsilon {$>$}
    0. To exploit the computed DAG, a variant of Aho-Corasick pattern matching
    machine [A.V. Aho, M.J. Corasick,
    Comm. ACM 18 (1975) 333-340] is employed to locate all occurrences of
    specified patterns, and then a path is found in the DAG that maximizes
    the sum of the scores of the non-overlapping patterns occurring in it.
    An example illustrates the utility.}}

@phdthesis{Cha-PhD-84,
  title = {{Design and Analysis of Graph Algorithms: Spanning Tree Enumeration,
    Planar Embedding and Maximal Planarization}},
  author = {Rajagopalan Jayakumar},
  school = {Concordia Univ., Dept. Electronics and Electrical Engineering},
  year = {1984},
  abstract = {In Part I of this thesis, a detailed computational complexity
    analysis of a spanning tree enumeration algorithm due to Char is given.
    An expression for the number of sequences generated by the algorithm
    when applied on a general graph is derived. The complexity of this algorithm
    is shown to be $O(n^3 t)$ where $n$ is the number of vertices of the
    graph and $t$ is the number of spanning trees. Two heuristics aimed at
    reducing the number of sequences generated are proposed for selecting
    the initial spanning tree and an implementation using path compression
    is described. A class of special graphs for which the algorithm is of
    complexity $O(nt)$ is identified. Certain interesting results relating
    to the complete graph, the ladder, and the wheel, which belong to this
    class, are obtained. An efficient implementation of Char's algorithm,
    called algorithm MOD-CHAR, is developed. Classes of graphs for which
    algorithm MOD-CHAR is of complexity $O(nt)$ are identified. It is shown
    that for large complete graphs ($n\ge 8$), algorithm MOD-CHAR requires,
    on the average, at most 10 computational steps to generate a spanning
    tree. A computational evaluation of Char's algorithm in comparison with
    Gabow and Myers' algorithm is presented. In Part II, efficient algorithms
    to obtain a planar embedding of a planar graph and to determine a maximal
    planar subgraph of a nonplanar graph are developed. An embedding procedure
    which involves placing the vertices at different horizontal and vertical
    levels in the plane is developed. The vertical levels of the vertices
    are decided by their st-numbers and an $O(n)$ algorithm is presented
    to determine the horizontal levels of the vertices. Another $O(n)$ algorithm
    to determine the order in which edges entering a vertex from lower numbered
    vertices should be drawn is developed. A procedure to draw by hand the
    edges without crossovers is described. It is shown that a planarization
    algorithm due to Ozawa and Takahashi does not, in general, determine
    a maximal planar subgraph. A new maximal planarization algorithm of complexity
    $O(n^2)$ is developed.}}

@article{ChaMil-Algo-95,
  title = {{Linear-space algorithms that build local alignments from fragments}},
  author = {Kun-Mao Chao and Webb Miller},
  journal = {Algorithmica},
  volume = {13},
  pages = {106--134},
  year = {1995},
  review = {MR-95j-92011}}

@article{MR-95j-92011,
  reviews = {ChaMil-Algo-95},
  journal = {Mathematical Reviews},
  publisher = {Amer. Math. Soc.},
  title = {{Linear-space algorithms that build local alignments from fragments}},
  author = {Dietmar Dorninger},
  volume = {95j},
  number = {92011},
  year = {1995},
  text = {Given two sequences $A=a\sb 1,a\sb 2,\cdots,a\sb M$ and $B=b\sb
    1,b\sb 2,\cdots,b\sb N$, a fragment $f=(i,j,k)$ is defined by $a\sb i=b\sb
    j$, $a\sb {i+1}=b\sb {j+1},\cdots,a\sb {i+k-1}=b\sb {j+k-1}$ and the
    property that $f$ is not properly contained in another fragment. The
    set $F$ of all fragments in respect to $A$ and $B$ can be partially ordered
    by the relation $(i,j,k)<(i',j',k')$ iff $i'+k'\leq i$ and $j'+k'\leq
    j$. An alignment is a sequence $f\sb 1,f\sb 2,\cdots,f\sb r$ in $F$ with
    $f\sb i>f\sb {i+1}$ for $i=1,2,\cdots,r-1$. By assigning scores to fragments
    and gaps, the question arises as to how to find an alignment for which
    the sum of fragment scores minus penalties for gaps is highest. By assuming
    affine gap functions and combining a time efficient dynamic programming
    method with a space saving approach, the authors develop an alignment
    algorithm that uses $O((M+N+\vert F\vert \log N)\log M)$ time and $O(M+N)$
    storage. 
    
    By removing all fragments of a highest scoring alignment from $F$ and
    determining a highest scoring alignment from the fragments remaining
    in $F$, and by further repeating this procedure, one obtains the $n$
    best nonintersecting alignments. A time efficient algorithm using linear
    space to compute the $n$ best nonintersecting alignments for preassigned
    $n$ is constructed and the utility of it is demonstrated by an example
    from DNA-comparison.}}

@article{Che-COR-93,
  title = {{An algorithm for finding the $k$ quickest paths in a network}},
  author = {Yen-Liang Chen},
  journal = {Computers and Operations Research},
  volume = {20},
  pages = {59--65},
  year = {1993},
  abstract = {Let $N$ be a network with n nodes and m arcs, and let $\sigma$
    be the amount of data to be transmitted. The quickest path problem is
    to find a routing path in $N$ such that the time required to ship $\sigma$
    units of data from the source to the sink is minimum. The problem considered
    is to find the first $k$ quickest looping paths from the source to the
    sink, and an algorithm with time complexity of $O(m^2+(m+k)n\log{n}+k^{3/2}\log{k})$
    is developed.}}

@article{Che-IPL-94,
  title = {{Finding the $k$ quickest simple paths in a network}},
  author = {Yen-Liang Chen},
  journal = {Information Processing Letters},
  volume = {50},
  pages = {89--92},
  year = {1994}}

@article{CheHam-DAM-87,
  title = {{Algorithms for finding $K$-best perfect matchings}},
  author = {Chandra R. Chegireddy and Horst W. Hamacher},
  journal = {Discrete Applied Mathematics},
  volume = {18},
  pages = {155--165},
  year = {1987},
  review = {MR-89j-90209}}

@article{MR-89j-90209,
  reviews = {CheHam-DAM-87},
  journal = {Mathematical Reviews},
  publisher = {Amer. Math. Soc.},
  title = {{Algorithms for finding $K$-best perfect matchings}},
  volume = {89j},
  number = {90209},
  year = {1989},
  text = {In the $K$-best perfect matching problem $(K{\rm M})$ one wants
    to find $K$ pairwise different, perfect matchings $M\sb 1,\cdots,M\sb
    K$ such that $w(M\sb 1)\ge w(M\sb 2)\ge\cdots\ge w(M\sb K)\ge w(M)$,
    for all $M\not= M\sb 1,M\sb 2,\cdots,M\sb K$. The procedure discussed
    in this paper is based on a binary partitioning of the matching solution
    space. We survey different algorithms to perform this partitioning. The
    best complexity bound of the resulting algorithms discussed is $O(Kn\sp
    3)$, where $n$ is the number of nodes in the graph.}}

@article{CheHun-COR-94,
  title = {{Algorithms for the constrained quickest path problem and the
    enumeration of quickest paths}},
  author = {G.-H. Chen and Y.-C. Hung},
  journal = {Computers and Operations Research},
  volume = {21},
  pages = {113--118},
  year = {1994},
  abstract = {The quickest path problem, originally proposed by Chen and
    Chin (1989), is a variant of the shortest path problem. Its objective
    is to find quickest paths in a network to transmit a given amount of
    data such that the transmission time is minimized. If the quickest paths
    are required to go through a specified path, then the restricted problem
    is called the constrained quickest path problem. In this paper, for all
    pairs of nodes in a network $N$, an $O(mn^2)$ time algorithm is first
    presented to find constrained quickest paths, and then an $O(k^2mn^2)$
    time algorithm is presented to enumerate the first $k$ quickest paths.
    The results improve previous results by Rosen, Sun and Xue (1991).}}

@techreport{CheRinTan-WP-97,
  title = {{The first $K$ minimum time paths in a time-schedule network}},
  author = {Yen-Liang Chen and Dan Rinks and Kwei Tang},
  type = {Working Paper},
  institution = {Louisiana State Univ., Dept. of Information Systems and
    Decision Sciences},
  number = {9708},
  year = {1997},
  url = {http://www.bus.lsu.edu/isds/chun/wpapers/9708.htm},
  abstract = {The time-constrained shortest path problem is an important
    generalization of the shortest path problem and has attracted much research
    interest in recent years. In this paper, we consider a time constraint
    commonly encountered in practice; namely, time-schedule constraint, which
    assumes that every node in the network has a list of pre-specified departure
    times and requires that departure from a node take place only at one
    of the departure times. Two problems associated with the first K minimum
    time paths in a time-schedule network are considered. The first is to
    find the first K loopless minimum time paths, in which all the nodes
    in a path are distinct, and the second is to find the first K minimum
    time looping paths, in which a path may pass through some nodes more
    than one time. For both problems, efficient polynomial time algorithms
    are developed.}}

@inproceedings{CheSoo-ASSP-94,
  title = {{An $N$-best candidates-based discriminative training for speech
    recognition applications}},
  author = {Jung-Kuei Chen and F. K. Soong},
  booktitle = {Proc. Int. Conf. Acoustics, Speech, and Signal Processing},
  publisher = {IEEE},
  volume = {1},
  pages = {I/625--628},
  month = {April},
  year = {1994}}

@article{CheSoo-TSAP-94,
  title = {{An $N$-best candidates-based discriminative training for speech
    recognition applications}},
  author = {Jung-Kuei Chen and F. K. Soong},
  journal = {Trans. Speech {\&} Audio Processing},
  publisher = {IEEE},
  volume = {2},
  number = {1, part 2},
  pages = {206--216},
  month = {January},
  year = {1994},
  abstract = {The authors propose an $N$-best candidates-based discriminative
    training procedure for constructing high-performance HMM speech recognizers.
    The algorithm has two distinct features: $N$-best hypotheses are used
    for training discriminative models; and a new frame-level loss function
    is minimized to improve the separation between the correct and incorrect
    hypotheses. The $N$-best candidates are decoded based on their recently
    proposed tree-trellis fast search algorithm. The new frame-level loss
    function, which is defined as a halfwave rectified log-likelihood difference
    between the correct and competing hypotheses, is minimized over all training
    tokens. The minimization is carried out by adjusting the HMM parameters
    along a gradient descent direction. Two speech recognition applications
    have been tested, including a speaker independent, small vocabulary (ten
    Mandarin Chinese digits), continuous speech recognition, and a speaker-trained,
    large vocabulary (5000 commonly used Chinese words), isolated word recognition.
    Significant performance improvement over the traditional maximum likelihood
    trained HMMs has been obtained. In the connected Chinese digit recognition
    experiment, the string error rate is reduced from 17.0 to 10.8{\%} for unknown
    length decoding and from 8.2 to 5.2{\%} for known length decoding. In the
    large vocabulary, isolated word recognition experiment, the recognition
    error rate is reduced from 7.2 to 3.8{\%}. Additionally, they have found
    that using more relaxed decoding constraints in preparing $N$-best hypotheses
    yields better recognition results.}}

@inproceedings{CheSooLee-ASSP-94,
  title = {{Large vocabulary word recognition based on tree-trellis search}},
  author = {Jung-Kuei Chen and F. K. Soong and Lin-Shan Lee},
  booktitle = {Proc. Int. Conf. Acoustics, Speech, and Signal Processing},
  publisher = {IEEE},
  volume = {2},
  pages = {II/137--140},
  month = {April},
  year = {1994},
  abstract = {In this paper we propose a large vocabulary (90000 words),
    Chinese (Mandarin) word recognizer based on the tree-trellis fast search
     algorithm. The recognizer is divided into 3 modules: local likelihood
    computation, a forward trellis search and a backward tree search. In
    the forward trellis search, a free syllable decoding is performed without
    a language model and a partial path map is created. The best-first tree
    search is then applied backward along a lexicon, which is arranged as
    a syllabic tree, to find the $N$-best word candidates. In the experiment,
    context-dependent subsyllabic HMMs were trained with a new discriminative
    training method. When it is evaluated on a speaker-trained database,
    the recognizer achieved a word error rate of 5{\%} for the full size (90000
    words) vocabulary and 1.7{\%} for a smaller subset (5000 words) vocabulary.
    A real-time demo system has also been implemented on an SGI R-4000 workstation.}}

@article{ChiChe-CSSE-97,
  title = {{Block-switch networks: a cost-effective class of interconnection
    networks}},
  author = {Wei-Kuo Chiang and Rong-Jaye Chen},
  journal = {Computer Systems Science and Engineering},
  volume = {12},
  number = {3},
  pages = {175--185},
  month = {May},
  year = {1997},
  abstract = {A new interconnection scheme is proposed for hierarchically
    constructing massively parallel systems, called the block-switch network
    (BSN). The authors present a method of connecting together a number of
    identical basic atoms level by level, a basic atom being an arbitrary
    connected graph. A BSN is characterized by (G,m), where G represents
    the basic atom and m denotes the number of levels in hierarchical expansion.
    A particular choice for G yields a family of hierarchical networks. The
    topological properties of the BSN for the general case are investigated,
    and then the results gained from applying BSN to different basic atoms
    are also discussed. The BSN enables us to construct new families of graphs
    more feasible and cost-effective. A shortest-path routing algorithm for
    the BSN is derived by reducing the routing problem to the K-best perfect
    matching problem. In particular the authors implement fundamental parallel
    algorithms (descend/ascend) on the BSN(Q/sub n/,m) where Q/sub n/ denotes
    an n-cube, and demonstrate that the performance on the BSN(Q/sub n/,m)
    is very close to that of the comparable hypercube.}}

@article{ChoBur-TPAS-84,
  title = {{Transmission line route selection: An application of $K$-shortest
    paths and goal programming}},
  author = {F. Choobineh and T. Burgman},
  journal = {Trans. Power Apparatus and Systems},
  publisher = {IEEE},
  volume = {PAS-103},
  pages = {3253--3259},
  year = {1984},
  abstract = {A two-stage solution procedure is developed as a managerial
    decision-making tool in the transmission line route selection process.
    In stage one, the K least costly alternatives are found, based strictly
    on monetary considerations. In stage two, the alternative which causes
    the least amount of social and environmental disruption is selected from
    the alternatives generated in stage one.}}

@article{ChoLeeJua-PRAI-94,
  title = {{A minimum error rate pattern recognition approach to speech recognition}},
  author = {W. Chou and C.-H. Lee and B.-H. Juang and F. K. Soong},
  journal = {Int. J. Pattern Recognition {\&} Artificial Intelligence},
  volume = {8},
  number = {1},
  pages = {5--31},
  month = {February},
  year = {1994},
  abstract = {In this paper, a minimum error rate pattern recognition approach
    to speech recognition is studied with particular emphasis on the speech
    recognizer designs based on hidden Markov models (HMMs) and Viterbi decoding.
    This approach differs from the traditional maximum likelihood based approach
    in that the objective of the recognition error rate minimization is established
    through a specially designed loss function, and is not based on the assumptions
    made about the speech generation process. Various theoretical and practical
    issues concerning this minimum error rate pattern recognition approach
    in speech recognition are investigated. The formulation and the algorithmic
    structures of several minimum error rate training algorithms for an HMM-based
    speech recognizer are discussed. The tree-trellis based $N$-best decoding
    method and a robust speech recognition scheme based on the combined string
    models are described. This approach can be applied to large vocabulary,
    continuous speech recognition tasks and to speech recognizers using word
    or subword based speech recognition units. Various experimental results
    have shown that significant error rate reduction can be achieved through
    the proposed approach.}}

@inproceedings{ChoMadMor-ICCI-95,
  title = {{On finding single-source single-destination $k$ shortest paths}},
  author = {Eugene Inseok Chong and Sanjeev Rao Maddila and Steven Todd Morley},
  booktitle = {Proc. 7th Int. Conf. Computing and Information},
  month = {July},
  year = {1995},
  url = {http://phoenix.trentu.ca/jci/papers/icci95/A206/P001.html},
  abstract = {The shortest path algorithms have a wide range of applications
    and much research has been devoted to the subject. While finding a shortest
    path in a digraph is relatively easy, finding $k$ shortest paths is not
    an easy task, especially for a single-source and single-destination pair.
    In this paper, we present an algorithm for finding $k$ shortest paths
    for a source-destination pair. Our algorithm is applicable to any digraphs
    without negative weights. The paths are not necessarily simple, but if
    the digraphs are acyclic, the paths found will be simple. Given a digraph
    of $n$ vertices and $m$ edges, our algorithm runs in time $O(km\log(kn)+k^2m)$
    and space $O(kn)$. Our algorithm is an extension of Dijkstra's algorithm,
    easy to implement, and generates the $k$ shortest paths in the order
    of the path length.}}

@inproceedings{ChoMatJua-ASSP-94,
  title = {{An algorithm of high resolution and efficient multiple string
    hypothesization for continuous speech recognition using inter-word models}},
  author = {W. Chou and T. Matsuoka and B.-H. Juang and C.-H. Lee},
  booktitle = {Proc. Int. Conf. Acoustics, Speech, and Signal Processing},
  publisher = {IEEE},
  volume = {2},
  pages = {II/153--156},
  month = {April},
  year = {1994},
  abstract = {We propose a new accurate string hypothesization algorithm
    to find the $N$-best multiple string hypotheses in continuous speech
    recognition. The algorithm differs from the conventional $N$-best search
    algorithms in that it allows the use of the same set of long term language
    model scores and the detailed context-dependent subword models such as
    inter-word context dependent triphone models in both forward and backward
    search for high performance speech recognition. It is an extension of
    the tree-trellis $N$-best search algorithm(1). The inter-word context
    dependency is exactly preserved in both forward partial path map preparation
    and the proposed backward $N$-best multiple string hypothesis tree search.
    The search efficiency is maximized by applying the same high resolution
    acoustic and language models in both search directions. When search heuristics
    are used, the proposed approach provides a more accurate string model
    matching than that of the conventional frame-synchronous Viterbi beam
    search decoder.}}

@inproceedings{ChoSch-SNLW-89,
  title = {{The $N$-best algorithm: an efficient search procedure for finding
    top $N$ sentence hypotheses}},
  author = {Yen-Lu Chow and Richard Schwartz},
  booktitle = {Proc. DARPA Speech {\&} Natural Language Worksh.},
  pages = {199--202},
  year = {1989}}

@inproceedings{Chu-RECOMB-97,
  title = {{Monte Carlo sequence alignment}},
  author = {Gary A. Churchill},
  booktitle = {Proc. 1st Int. Conf. Computational Molecular Biology},
  publisher = {ACM},
  pages = {93--97},
  month = {January},
  year = {1997},
  summary = {Extracted from various points in this paper (which lacks an
    abstract): ``The alignment of molecular sequences is a problem central
    to many important questions in molecular biology. ... The problem studied
    here lies at the intersection of two lines of research. The first is
    concerned with the sensitivity of alignments to choice of scores. ...
    A second line of research is the study of suboptimal alignments. This
    work has been driven by the observation that an optimal alignment is
    not necessarily a biologically correct alignment. However, biologically
    correct alignments are often nearly optimal when the scoring system is
    well chosen. A recent review of suboptimal alignment methods is provided
    by Vingron [Vin-COSB-96]. ... Our goal in this work is to develop algorithms
    to sample from the marginal posterior distribution of an alignment. ...
    
    Pairwise alignments can be represented as a directed graph on a two dimensional
    grid ... An alignment is shown as a path, a connected sequence of arcs,
    traversing the matrix from the upper left vertex to the lower right vertex
    by a series of east, southeast, and south moves. ... The algorithm employed
    to sample from the distribution is similar in style to standard dynamic
    programming. A forward pass through the matrix is used to compute conditional
    probabilities for partial alignments that end with each node in the path
    graph. However, instead of choosing the optimal score at each step, our
    algorithm sums over the three arcs entering the node.''}}

@article{ClaKriRau-SIAM-63,
  title = {{Computing the $N$ best loopless paths in a network}},
  author = {S. Clarke and A. Krikorian and J. Rausen},
  journal = {J. SIAM},
  publisher = {SIAM},
  volume = {11},
  pages = {1096--1102},
  year = {1963}}

@article{ColDayNel-Algs-89,
  title = {{Unranking and ranking spanning trees of a graph}},
  author = {Charles Joseph Colbourn and R. P. J. Day and L. D. Nel},
  journal = {J. Algorithms},
  volume = {10},
  number = {2},
  pages = {271--286},
  month = {June},
  year = {1989},
  abstract = {The set $S$ of spanning trees of an $n$-vertex graph $G$ can
    be placed in one-to-one correspondence with the interval $(1,s)$ where
    $s=|S|$. The authors develop $O(n^3)$ unranking and ranking functions
    for the spanning trees of an arbitrary graph. The unranking function
    maps any interval $(1,s)$ to the corresponding tree, while the ranking
    function maps a spanning tree to the appropriate index in the interval.
    The unranking function provides an $O(n^3)$ method for generating a random
    spanning tree of a graph with uniform distribution.},
  review = {MR-90g-68060}}

@article{MR-90g-68060,
  reviews = {ColDayNel-Algs-89},
  journal = {Mathematical Reviews},
  publisher = {Amer. Math. Soc.},
  title = {{Unranking and ranking spanning trees of a graph}},
  volume = {90g},
  number = {68060},
  year = {1990}}

@article{ColMyrNeu-Algs-96,
  title = {{Two algorithms for unranking arborescences}},
  author = {Charles Joseph Colbourn and Wendy J. Myrvold and Eugene Neufeld},
  journal = {J. Algorithms},
  volume = {20},
  number = {2},
  pages = {268--281},
  year = {1996},
  abstract = {Colbourn, Day, and Nel developed the first algorithm requiring
    at most $O(n^3)$ arithmetic operations for ranking and unranking spanning
    trees of a graph ($n$ is the number of vertices of the graph). We present
    two algorithms for the more general problem of ranking and unranking
    rooted spanning arborescences of a directed graph. The first is conceptually
    very simple and requires $O(n^3)$ arithmetic operations. The second approach
    shows that the number of arithmetic operations can be reduced to the
    same as that of the best known algorithms for matrix multiplication.},
  review = {MR-97d-68154}}

@article{MR-97d-68154,
  reviews = {ColMyrNeu-Algs-96},
  journal = {Mathematical Reviews},
  publisher = {Amer. Math. Soc.},
  title = {{Two algorithms for unranking arborescences}},
  volume = {97d},
  number = {68154},
  year = {1997}}

@inproceedings{ConPec-AIRO-95,
  title = {{Using simulated annealing to solve the $K$-shortest path problem}},
  author = {Andrea Consiglio and Antonio Pecorella},
  booktitle = {Proc. AIRO 1995},
  publisher = {Associazione Italiana Ricerca Operativa},
  month = {September},
  year = {1995}}

@article{CouCliCur-COR-99,
  title = {{An interactive bi-objective shortest path approach: searching
    for unsupported nondominated solutions}},
  author = {J. M. Coutinho-Rodrigues and J. C. N. Cl{\'\i}maco and John Richard
    Current},
  journal = {Computers and Operations Research},
  volume = {26},
  number = {8},
  pages = {789--798},
  month = {July},
  year = {1999},
  abstract = {In many network routing problems, several conflicting objectives
    must be considered. Even for the bi-objective shortest path problem,
    generating and presenting the whole set of nondominated solutions (paths)
    to a decision maker, in general, is not effective because the number
    of these paths can be very large. Interactive procedures are adequate
    to overcome these drawbacks. J.R. Current et al. (1990) proposed an interactive
    approach based on a NISE-like procedure (J. Cohon, 1978) to search for
    nondominated supported solutions and using auxiliar constrained shortest
    path problems to carry out the search inside the duality gaps. We propose
    a new interactive approach to search for unsupported nondominated solutions
    (lying inside duality gaps) based on a k-shortest path procedure. Both
    approaches are compared.}}

@inproceedings{CoxHin-ICPR-94,
  title = {{An efficient implementation of Reid's multiple hypothesis tracking
    algorithm and its evaluation for the purpose of visual tracking}},
  author = {Ingemar J. Cox and S. L. Hingorani},
  booktitle = {Proc. 12th Int. Conf. Pattern Recognition},
  publisher = {IEEE},
  volume = {1},
  pages = {437--442},
  year = {1994},
  abstract = {An efficient implementation of Reid's multiple hypothesis tracking
    (MHT) algorithm is presented in which the the k-best hypotheses are determined
    in polynomial time using an algorithm due to Murty (1968). The MHT algorithm
    is then applied to several motion sequences. The MHT capabilities of
    track initiation, termination and continuation are demonstrated. Continuation
    allows the MHT to function despite temporary occlusion of tracks. Between
    50 and 150 corner features are simultaneously tracked in the image plane
    over a sequence of up to 60 frames. Each corner is tracked using a simple
    linear Kalman filter and any data association uncertainty is resolved
    by the MHT. Kalman filter parameter estimation is discussed and experimental
    results show that the algorithm is robust to errors in the motion model.}}

@article{CoxHin-PAMI-96,
  title = {{An efficient implementation of Reid's multiple hypothesis tracking
    algorithm and its evaluation for the purpose of visual tracking}},
  author = {Ingemar J. Cox and S. L. Hingorani},
  journal = {Trans. Pattern Analysis and Machine Intelligence},
  publisher = {IEEE},
  volume = {18},
  pages = {138--150},
  year = {1996},
  abstract = {An efficient implementation of Reid's multiple hypothesis tracking
    (MHT) algorithm is presented in which the k-best hypotheses are determined
    in polynomial time using an algorithm due to Murly (1968). The MHT algorithm
    is then applied to several motion sequences. The MHT capabilities of
    track initiation, termination, and continuation are demonstrated together
    with the latter's capability to provide low level support of temporary
    occlusion of tracks. Between 50 and 150 corner features are simultaneously
    tracked in the image plane over a sequence of up to 51 frames. Each corner
    is tracked using a simple linear Kalman filter and any data association
    uncertainty is resolved by the MHT. Kalman filter parameter estimation
    is discussed, and experimental results show that the algorithm is robust
    to errors in the motion model. An investigation of the performance of
    the algorithm as a function of look-ahead (tree depth) indicates that
    high accuracy can be obtained for tree depths as shallow as three. Experimental
    results suggest that a real-time MHT solution to the motion correspondence
    problem is possible for certain classes of scenes.}}

@article{CoxMil-TAES-95,
  title = {{On finding ranked assignments with application to multitarget
    tracking and motion correspondence}},
  author = {Ingemar J. Cox and Matt L. Miller},
  journal = {Trans. Aerospace and Electronic Systems},
  publisher = {IEEE},
  volume = {31},
  pages = {486--489},
  year = {1995},
  abstract = {Within the target tracking community there is strong interest
    in computing a ranked set of assignments of measurements to targets.
    These k-best assignments are then used to determine good approximations
    to the data association problem. Much earlier work described algorithms
    which either had exponential worst case time or were not guaranteed to
    return the k-best assignments. Danchick and Newnam (1993) described a
    fast algorithm for finding the exact k-best hypotheses. However, in the
    worst case, k! linear assignment problems must be solved. This correspondence
    describes an algorithm originally due to Murty (1968) for optimally determining
    a ranked set of assignments in polynomial time and which is linear in
    k.}}

@article{CoxMilDan-TAES-97,
  title = {{A comparison of two algorithms for determining ranked assignments
    with application to multitarget tracking and motion correspondence}},
  author = {Ingemar J. Cox and Matt L. Miller and R. Danchick and G. E. Newnam},
  journal = {Trans. Aerospace and Electronic Systems},
  publisher = {IEEE},
  volume = {33},
  number = {1},
  pages = {295--301},
  month = {January},
  year = {1997},
  abstract = {Recently, it has become clear that determining a ranked set
    of assignments allows computation of very good approximations to the
    data association problem. Several algorithms have been proposed but only
    two return the k-best assignments in reasonable time. One is Danchick
    and Newnams' [1993] algorithm, which is based on the recognition that
    determining the best assignment is a classical assignment problem and
    that determining a ranked set of assignments may be accomplished by solving
    a series of modified copies of the initial assignment problem. The other
    algorithm is originally due to Murty [1968] and was most recently described
    within the context of multitarget tracking. We evaluate the two algorithm
    using randomly generated data and data obtained from an electrooptical
    sensor simulation in which 90 missiles are launched. These evaluations
    show that Murty's algorithm perform significantly better in all scenarios.
    We show the relationship between the two algorithms and how Danchick
    and Newnam's algorithm can be very easily modified to Murty's algorithm.
    Experimental results using Murty's algorithm suggest that a solution
    to the real-time data association problem is now feasible.}}

@article{CurReVCoh-TS-87,
  title = {{The median shortest path problem: a multiobjective approach to
    analyze cost vs. accessibility in the design of transportation networks}},
  author = {John Richard Current and Charles S. ReVelle and Jared Leigh Cohon},
  journal = {Transportation Science},
  volume = {21},
  number = {3},
  pages = {188--197},
  year = {1987},
  review = {MR-88h-90067}}

@article{MR-88h-90067,
  reviews = {CurReVCoh-TS-87},
  journal = {Mathematical Reviews},
  publisher = {Amer. Math. Soc.},
  title = {{The median shortest path problem: a multiobjective approach to
    analyze cost vs. accessibility in the design of transportation networks}},
  volume = {88h},
  number = {90067},
  year = {1988},
  text = {We introduce the median shortest path problem (MSPP). The MSPP
    is a bicriterion path problem with the objectives being the minimization
    of the total path length and the minimization of the total travel time
    required for demand to reach a node on the path. Potential applications
    of the MSPP include, among others, the location of new highways, railroad
    lines and subway lines and the design of airline routes. It is particularly
    applicable in transportation network design problems where the trade-off
    between operator costs and user costs is important. An algorithm is presented
    to identify noninferior solutions to the MSPP. This algorithm incorporates
    a $K$ shortest path algorithm. The algorithm is demonstrated with a sample
    problem and the results are compared to those obtained using integer
    programming.}}

@inproceedings{DaiImaIwa-ISAAC-93,
  title = {{How to treat delete requests in semi-online problems}},
  author = {Yang Dai and Hiroshi Imai and Kazuo Iwano and Naoki Katoh},
  booktitle = {Proc. 4th Int. Symp. Algorithms and Computation},
  number = {762},
  series = {Lecture Notes in Computer Science},
  publisher = {Springer Verlag},
  pages = {48--57},
  year = {1993},
  abstract = {We propose a new approach to obtain a semi-online fully dynamic
    algorithm, given a partially dynamic algorithm, by introducing a new
    way of handling delete requests. Briefly speaking, we are interested
    in how online algorithms become more efficient with some partial knowledge
    of future delete requests. A dynamic algorithm solves the problem for
    the current instance every time when an add/delete request is made to
    change the instance. If a dynamic algorithm allows only add requests,
    we call it partially dynamic, otherwise we call it fully dynamic. An
    offline algorithm gives a set of solutions of a dynamic algorithm when
    the entire request sequence is known beforehand. A semi-online problem
    is a special case of online problems.}}

@inproceedings{DaiLee-ICCC-94,
  title = {{Parsing with tag information in a probabilistic generalized LR
    parser}},
  author = {Jian-Cheng Dai and Hsi-Jian Lee},
  booktitle = {Proc. Int. Conf. Chinese Computing},
  publisher = {Nat. Univ. Singapore},
  pages = {33--39},
  month = {June},
  year = {1994},
  abstract = {A new corpus-based probabilistic generalized LR parser is presented
    for parsing Chinese sentences. Because there are generally different
    tags in each word of a Chinese sentence, it is helpful to use tag information
    to avoid parsing tag sequences that are unreliable with respect to a
    particular input sentence. In order to use tag information conveniently,
    a multi-stage input graph is constructed to represent the $N$-best tag
    sequences. In the proposed parser, parse paths are formulated as a sentence
    transition graph. The parser, which applies a sentence merging technique
    and a hill climbing strategy, truncates unpromising partial parses quickly.
    Experimental results reveal that the hill climbing strategy is more efficient
    than the depth-first strategy and the proposed sentence merging technique
    is also effective.}}

@article{DanNew-TAES-93,
  title = {{A fast method for finding the exact $N$-best hypotheses for multitarget
    tracking}},
  author = {R. Danchick and G. E. Newnam},
  journal = {Trans. Aerospace and Electronic Systems},
  publisher = {IEEE},
  volume = {29},
  pages = {555--560},
  year = {1993},
  abstract = {The necessity for multiple hypothesis tracking (MHT) is recognized
    throughout the SDI tracking community. However, implementations of MHT
    techniques have required enormous amounts of computer time and memory.
    An efficient method of measurement-to-target association that makes MHT
    practical for the first time is presented. The method finds the exact
    N-best feasible hypotheses directly from a sequence of linear assignment
    problem solutions.}}

@inproceedings{Das-ICCS-85,
  title = {{On search strategies for $n$ best solutions}},
  author = {Das Gupta, S.},
  booktitle = {Int. Conf. Cybernetics {\&} Society},
  publisher = {IEEE},
  pages = {664--668},
  month = {November},
  year = {1985},
  abstract = {Search strategies of various types and forms are used to find
    optimal solutions to problems in different areas to determine the 'best'
    solution. In many situations it is desirable to have a collection of
    n best solutions sorted on cost rather than having the unique optimal
    solution. There are many heuristic search strategies in the artificial
    intelligence problems where combinatorial explosion makes the search
    for the optimal infeasible. In some cases it is possible to break the
    problem into subproblems, obtain n-best solutions and then synthesize
    the problem into an n-best solution for the whole problem. The author
    proposes some search strategies for n-best solution in closed form and
    using heuristics.}}

@inproceedings{DeaKelLih-GTCA-92,
  title = {{The spanning tree enumeration problem for digraphs}},
  author = {Nathaniel Dean and A. K. Kelmans and Keh-Wei Lih and William
    A. Massey and Peter Winkler},
  booktitle = {Graph Theory, Combinatorics, and Algorithms},
  pages = {277--287},
  year = {1992}}

@inproceedings{DenNuSam-ASSP-95,
  title = {{Improved speech modeling and recognition using multi-dimensional
    articulatory states as primitive speech units}},
  author = {L. Deng and J. Nu and H. Sameti},
  booktitle = {Proc. Int. Conf. Acoustics, Speech, and Signal Processing},
  publisher = {IEEE},
  volume = {1},
  pages = {385--388},
  month = {May},
  year = {1995},
  abstract = {We provide a formal description of a speech recognizer designed
    on the basis of elaborate articulatory timing that a asynchronous across
    the multiple articulatory-feature dimensions. Three improved critical
    components of the recognizer are described in detail. Evaluation results,
    obtained from a standard TIMIT phonetic recognition task confined within
    the $N$-best rescoring scenario, are reported on comparative performances
    between the new feature-based recognizer and a recognizer using the conventional
    context-dependent triphone units. The results demonstrate an overall
    superior quality of the rescored $N$-best list from the feature-based
    recognizer over that from the triphone-based recognizer. Greater performance
    improvements are observed as the top number of candidate sentences increases.}}

@article{Der-DAM-85,
  title = {{Some basic exchange properties in combinatorial optimization
    and their application to constructing the $k$-best solutions}},
  author = {Ulrich Derigs},
  journal = {Discrete Applied Mathematics},
  volume = {11},
  pages = {129--141},
  year = {1985},
  review = {MR-86m-90124}}

@article{MR-86m-90124,
  reviews = {Der-DAM-85},
  journal = {Mathematical Reviews},
  publisher = {Amer. Math. Soc.},
  title = {{Some basic exchange properties in combinatorial optimization
    and their application to constructing the $k$-best solutions}},
  author = {Th. M. Liebling},
  volume = {86m},
  number = {90124},
  year = {1986},
  text = {We characterize optimal, $k$-best and sets of $k$-best solutions
    for a combinatorial optimization problem via simple exchange properties.
    We show the relationship of this concept to the concept of adjacency
    and we extend the concept to discrete optimization problems and problems
    with objective functions fulfilling the cone-property. We show that those
    exchange properties play a fundamental role in partitioning strategies
    for finding sets of $k$-best solutions.}}

@inproceedings{Der-ICOR-84,
  title = {{Exchange properties and $K$-best strategies in combinatorial
    optimization}},
  author = {Ulrich Derigs},
  booktitle = {Proc. 10th Int. Conf. Operational Research},
  publisher = {North-Holland},
  pages = {393--406},
  year = {1984},
  abstract = {Exchange properties in set systems underlying combinatorial
    optimizations problems play an important role in characterising best
    and next best solutions and in partitioning strategies for ranking the
    set of feasible solutions. The author exploits these basic combinatorial
    principles and shows their application for some standard problems.}}

@inproceedings{DesPicKao-SSST-95,
  title = {{Efficient search strategies in hierarchical pattern recognition
    systems}},
  author = {N. Deshmukh and J. Picone and Yu-Hung Kao},
  booktitle = {Proc. 27th Southeastern Symp. System Theory},
  publisher = {IEEE},
  pages = {88--91},
  month = {March},
  year = {1995},
  abstract = {We describe the generalized $N$-best search algorithm as applied
    to hierarchical pattern recognition, and discuss its limitations for
    a broad class of problems. We then introduce a new algorithm, called
    the Frame-Synchronous Viterbi Search, that prunes hypotheses by actively
    organizing system memory after each step in the search. This algorithm
    is shown to save memory and computation for a specific class of problems
    involving large search spaces and small memory resources. We also discuss
    generalizations of this algorithm to provide true N-best scoring and
    intelligent pruning while preserving the hierarchical structure of the
    hypotheses. An example of a practical speech recognition system using
    this algorithm is given.}}

@article{DicDrySac-IJCGA-92,
  title = {{Simple algorithms for enumerating interpoint distances and finding
    $k$ nearest neighbors}},
  author = {Matthew T. Dickerson and R. L. Scot Drysdale and J{\"o}rg-Rudiger
    Sack},
  journal = {Int. J. Computational Geometry and Applications},
  volume = {2},
  number = {3},
  pages = {221--239},
  year = {1992},
  review = {MR-93j-68212}}

@article{MR-93j-68212,
  reviews = {DicDrySac-IJCGA-92},
  journal = {Mathematical Reviews},
  publisher = {Amer. Math. Soc.},
  title = {{Simple algorithms for enumerating interpoint distances and finding
    $k$ nearest neighbors}},
  volume = {93j},
  number = {68212},
  year = {1993},
  text = {We present an $O(n\log n+k\log k)$ time and $O(n+k)$ space algorithm
    which takes as input a set of $n$ points in the plane and enumerates
    the $k$ smallest distances between pairs of points in nondecreasing order.
    We also present an $O(n\log n+kn\log k)$ solution to the problem of finding
    the $k$
    nearest neighbors for each of $n$ points. Both algorithms are conceptually
    very simple, are easy to implement, and are based on a common data structure:
    the Delaunay triangulation. Variants of the algorithms work for any convex
    distance function metric.}}

@article{DicEpp-CGTA-96,
  title = {{Algorithms for proximity problems in higher dimensions}},
  author = {Matthew T. Dickerson and David Eppstein},
  journal = {Computational Geometry Theory and Applications},
  volume = {5},
  pages = {277--291},
  year = {1996},
  abstract = {We present algorithms for five interdistance enumeration problems
    that take as input a set $S$ of $n$ points in $R^d$ (for a fixed but
    arbitrary dimension $d$) and as output enumerate pairs of points in $S$
    satisfying various conditions. We present: an $O(n\log{n}+k)$ time and
    $O(n)$ space algorithm that takes as additional input a distance $\delta$
    and outputs all $k$ pairs of points in $S$ separated by a distance of
    $\delta$ or less; an $O(n\log{n}+k\log{k})$ time and $O(n+k)$ space algorithm
    that enumerates in non-decreasing order the $k$ closest pairs of points
    in $S$; an $O(n\log{n}+k)$ time algorithm for the same problem without
    any order restrictions; an $O(nk\log{n})$ time and $O(n)$ space algorithm
    that enumerates in nondecreasing order the $nk$ pairs representing the
    $k$ nearest neighbors of each point in $S$; and an $O(n\log{n}+kn)$ time
    algorithm for the same problem without any order restrictions. The algorithms
    combine a modification of the planar approach of Dickerson, Drysdale,
    and Sack with the method of Bern, Eppstein, and Gilbert for augmenting
    a point set to have a linear size bounded degree Delaunay triangulation.
    Thus, in addition to providing new solutions to these problems, the paper
    also shows how the Delaunay triangulation can be used as the underlying
    data structure in a unified approach to proximity problems even in higher
    dimensions.}}

@article{DioCliNor-IEE-89,
  title = {{Dynamic planning model for urban telephone networks and its applications}},
  author = {J. M. B. Diogo and J. C. N. Cl{\'\i}maco and P. M. N. Nordeste and
    J. M. F. Craveirinha},
  booktitle = {IEE Proceedings I (Communications, Speech and Vision)},
  volume = {136},
  pages = {283--290},
  year = {1989},
  abstract = {Describes a model (ARCOS) for dynamic planning of small- and
    medium-size urban telephone networks. The main innovative feature of
    the method is the fact that, by exploring the spatial decomposition of
    a simplified initial network, one is led to a network of tractable size
    in the sense that it is possible to schedule 'K-best' network expansions
    in time, represented on a decision graph obtained according to some heuristic
    simplifications. For the purpose of defining the network expansions from
    the decision graph adequate versions of the K-shortest-paths algorithm
    and of a dynamic programming algorithm were used. That is, in ARCOS one
    seeks to improve a type of algorithm for primary cable network planning
    as presented by Rapp by introducing a new heuristic method that seeks
    to optimise the dynamic evolution of the network topology together with
    the equipment capacity expansions. The actual version of the ARCOS model
    and its application to particular urban networks is described. The advantages
    and difficulties of the method are also discussed.}}

@article{Dod-OR-84,
  title = {{Determining the $K$ most critical paths in PERT networks}},
  author = {Bajis Mohammed Dodin},
  journal = {Operations Research},
  volume = {32},
  pages = {859--877},
  year = {1984},
  abstract = {A fundamental problem in PERT networks is to identify a project's
    critical paths and its critical activities. The author defines the criticality
    index of a path as the probability that the duration of the path is greater
    than or equal to the duration of every other path in the network and
    define the criticality index of an activity as the sum of the criticality
    indices of the paths containing that activity. The most critical path
    or K most critical paths in a PERT network could be found by enumerating
    all the paths and calculating the corresponding criticality indices,
    both of which are burdensome tasks. The paper uses stochastic dominance
    to develop a procedure to identify the K most critical paths without
    using this path enumeration. The procedure has been applied to various
    sized PERT networks generated at random, and the results are found to
    be very close to those obtained by extensive Monte Carlo sampling.}}

@phdthesis{Dod-PhD-82,
  title = {{On the Completion Time of Stochastic PERT Networks}},
  author = {Bajis Mohammed Dodin},
  school = {North Carolina State Univ., Dept. of Operations Research},
  year = {1982},
  abstract = {A stochastic PERT network is a directed acyclic network with
    $N$ nodes and $A$ arcs, where the arc lengths are independent random
    variables with known probability distribution functions. A fundamental
    problem in PERT networks is to determine the probability distribution
    function (pdf) of the realization time of the project completion time
    $T_N$. An equally important problem in PERT networks is to identify the
    activities and paths that are critical to the achievement of the project
    objectives. Determining the exact pdf of $T_N$ is difficult. In this
    thesis we develop two procedures to approximate such pdf's. The first
    procedure assumes the independence of the paths in PERT network. It starts
    at node 1 and proceeds sequentially to nodes $2, 3, \ldots$, until it
    finally reaches node $N$; at each node it approximates the pdf of its
    realization time. The second procedure uses the series-parallel decomposition
    to reduce the AN to only one activity starting at node 1 and ending in
    node $N$. The pdf of the duration of the equivalent activity $(1, N)$
    approximates the pdf of the project completion time. In the second problem
    if the duration of each activity is constant, then it is relatively easy
    to identify the critical path(s) and activities. In contrast such an
    identification is very difficult in PERT network. In this dissertation
    we first define the concepts of critical path(s) and activities, then
    develop procedures to identify the criticality of every activity and
    the top $K$ critical paths. To be able to test the accuracy of the approximating
    procedures developed in this thesis, a random AN generator was developed
    to generate a network $G(N,A)$ at random from the space of all feasible
    networks with $N$ nodes and $A$ arcs; also, a crude Monte Carlo sampling
    model was developed to approximate the pdf's of the realization times
    of every node and the criticality measures of the activities and the
    paths. The developed procedures have been programmed and tested using
    ANs of sizes $\le G(50, 150)$.}}

@inproceedings{Dre-JNM-68,
  title = {{An appraisal of some shortest path algorithms}},
  author = {S. E. Dreyfus},
  booktitle = {ORSA/TIMS Joint National Mtg.},
  journal = {Bull. Operations Research Soc. of America},
  volume = {16},
  pages = {166},
  year = {1968},
  abstract = {Abstract only given substantially as follows. Several traditional
    problems involving the determination of shortest paths through discrete
    networks will be examined. To avoid special cases, it will generally
    be assumed that all nodes are directly connected to all other nodes.
    Good algorithms will be identified and credited, to the best of the speaker's
    knowledge, to their earlier originators. Also some erroneous or inefficient
    procedures will be exposed. While little new material is developed, it
    is hoped that the talk will shorten some listeners' paths through the
    shortest path literature.}}

@article{Dre-OR-69,
  title = {{An appraisal of some shortest path algorithms}},
  author = {S. E. Dreyfus},
  journal = {Operations Research},
  volume = {17},
  pages = {395--412},
  year = {1969}}

@article{DubEpi-ARC-76,
  title = {{Search algorithm for optimal alternatives in automated-design
    problems}},
  author = {Yu. A. Dubov and N. V. Epikhova},
  journal = {Automation and Remote Control},
  volume = {37},
  pages = {1220--1225},
  year = {1976},
  note = {English translation of \cite{DubEpi-AT-76}}}

@article{DubEpi-AT-76,
  title = {{Search algorithm for optimal alternatives in automated-design
    problems}},
  author = {Yu. A. Dubov and N. V. Epikhova},
  journal = {Avtomatika i Telemekhanika},
  volume = {37},
  pages = {95--100},
  year = {1976},
  note = {In Russian}}

@article{DunGroMac-JSAC-94,
  title = {{Comparison of $k$-shortest paths and maximum flow routing for
    network facility restoration}},
  author = {D. A. Dunn and Wayne Davy Grover and M. H. MacGregor},
  journal = {J. Selected Areas in Communications},
  publisher = {IEEE},
  volume = {12},
  pages = {88--99},
  year = {1994},
  abstract = {In the development of technologies for span failure restoration,
    a question arises about the restoration rerouting characteristics to
    be specified. In theory, maximal rerouting capacity is obtained with
    a maximum flow (Max Flow) criterion. However, rerouting that realizes
    the k-successively shortest link disjoint paths (KSP) may be faster,
    easier, and, in distributed implementation, more robust than a distributed
    counterpart for Max Flow. The issue is, therefore, what the restoration
    capacity penalty is if KSP is used instead of Max Flow. To explore this
    tradeoff, the authors present a comparative study of the effectiveness
    of KSP versus Max Flow as an alternative rerouting criteria in the context
    of transport network span restoration. The comparison applies to both
    centrally controlled and distributed restoration systems. Study methods
    include exhaustive span failure experiments on a range of network models,
    and parametric and analytical investigations for insight into the factors
    resulting in KSP versus Max Flow differences. The main finding is that
    KSP restoration capacity is more than 99.9{\%} of that from Max Flow in
    typical network models. The hypothesis is made that a generalized 'trap'
    topology is responsible for all KSP-Max Flow capacity differences. The
    hypothesis is tested experimentally and used to develop analytical bounds
    which agree well with observed results. These findings and data are relevant
    to standards makers and equipment developers in specifying and engineering
    future restorable networks.}}

@article{Epp-BIT-92,
  title = {{Finding the $k$ smallest spanning trees}},
  author = {David Eppstein},
  journal = {BIT},
  volume = {32},
  number = {2},
  pages = {237--248},
  year = {1992},
  review = {MR-94e-05082}}

@article{MR-94e-05082,
  reviews = {Epp-BIT-92},
  journal = {Mathematical Reviews},
  publisher = {Amer. Math. Soc.},
  title = {{Finding the $k$ smallest spanning trees}},
  author = {M. M. Sys{\l}o},
  volume = {94e},
  number = {05082},
  year = {1994},
  text = {Improved solutions for the problem of generating the $k$ smallest
    spanning trees in a graph and in the plane are presented. The algorithm
    for general graphs takes time $O(m\log\beta(m,n)+k\sp 2)$; for planar
    graphs this bound can be improved to $O(n+k\sp 2)$.}}

@inproceedings{Epp-FOCS-94,
  title = {{Finding the $k$ shortest paths}},
  author = {David Eppstein},
  booktitle = {Proc. 35th Symp. Foundations of Computer Science},
  publisher = {IEEE},
  pages = {154--165},
  year = {1994}}

@article{Epp-IJCGA-93,
  title = {{Tree-weighted neighbors and geometric $k$ smallest spanning trees}},
  author = {David Eppstein},
  journal = {Int. J. Computational Geometry and Applications},
  volume = {4},
  number = {2},
  pages = {229--238},
  year = {1994},
  review = {MR-95f-05028}}

@article{MR-95f-05028,
  reviews = {Epp-IJCGA-93},
  journal = {Mathematical Reviews},
  publisher = {Amer. Math. Soc.},
  title = {{Tree-weighted neighbors and geometric $k$ smallest spanning trees}},
  author = {Ding-Zhu Du},
  volume = {95f},
  number = {05028},
  year = {1995},
  text = {Given a set of $n$ points in the plane, construct $k$ different
    spanning trees that have the minimum total edge lengths among all possible
    spanning trees of the point set. This geometric $k$ smallest spanning
    trees problem was proposed by the author previously. In this paper, the
    author improves the time bounds for computing the optimal solution. In
    particular, the time is $O(n\log n\log k+k(\min(k,n))^{1/2}\log(k/n))$
    in the Euclidean plane and $O(n\log n+n\log\log n\log k+k(\min(k,n))^{1/2}\log(k/n))$
    in the rectilinear plane.}}

@article{Epp-MER-95,
  title = {{Ten algorithms for Egyptian fractions}},
  author = {David Eppstein},
  journal = {Mathematica in Education and Research},
  volume = {4},
  number = {2},
  pages = {5--15},
  year = {1995},
  url = {http://www.ics.uci.edu/~eppstein/numth/egypt/},
  annote = {Includes an implementation in Mathematica of the algorithm of
    Waterman and Byers for listing all paths shorter than a given length
    bound \cite{ByeWat-OR-84}, and uses it as a heuristic for the NP-hard
    problem of, given a graph with colored edges, finding a shortest path
    using each color at most once. This heuristic is used in an algorithm
    for finding representations of a rational number as a sum of distinct
    unit fractions: the algorithm expands the rational number into a sequence
    of unit fractions using continued fractions, finds a graph the edges
    of which correspond to subsequences that sum to unit fractions, and forms
    the overall representation by finding a path in this graph.}}

@inproceedings{Epp-SWAT-90,
  title = {{Finding the $k$ smallest spanning trees}},
  author = {David Eppstein},
  booktitle = {Proc. 2nd Scandinavian Worksh. Algorithm Theory},
  number = {447},
  series = {Lecture Notes in Computer Science},
  publisher = {Springer Verlag},
  pages = {38--47},
  year = {1990}}

@techreport{Epp-TR-92-77,
  title = {{Tree-weighted neighbors and geometric $k$ smallest spanning trees}},
  author = {David Eppstein},
  institution = {Univ. of California, Irvine, Dept. Information and Computer
    Science},
  number = {92-77},
  year = {1992}}

@techreport{Epp-TR-94-26,
  title = {{Finding the $k$ shortest paths}},
  author = {David Eppstein},
  institution = {Univ. of California, Irvine, Dept. Information and Computer
    Science},
  number = {94-26},
  year = {1994}}

@techreport{Epp-TR-95-52,
  title = {{Finding common ancestors and disjoint paths in DAGs}},
  author = {David Eppstein},
  institution = {Univ. of California, Irvine, Dept. Information and Computer
    Science},
  number = {95-52},
  year = {1995},
  abstract = {We consider the problem of finding pairs of vertex-disjoint
    paths in a DAG, either connecting two given nodes to a common ancestor,
    or connecting two given pairs of terminals. It was known how to find
    a single pair of paths, for either type of input, in polynomial time.
    We show how to find the $k$ pairs with shortest combined length, in time
    $O(mn + k)$. We also show how to count all such pairs of paths in $O(mn)$
    arithmetic operations. These results can be extended to finding or counting
    tuples of $d$ disjoint paths, in time $O(mn^{d-1} + k)$ or $O(mn^{d-1})$.
    We give further results on finding the subset of the DAG involved in
    pairs of disjoint paths, and on finding disjoint paths in linear space.}}

@inproceedings{EppGalIta-FOCS-92,
  title = {{Sparsification -- A technique for speeding up dynamic graph algorithms}},
  author = {David Eppstein and Zvi Galil and Giuseppe F. Italiano and Amnon
    Nissenzweig},
  booktitle = {Proc. 33rd Symp. Foundations of Computer Science},
  publisher = {IEEE},
  pages = {60--69},
  year = {1992},
  annote = {The best swap data structure is used to find the $k$ smallest
    spanning trees in time $O(m\log\beta(m,n)+kn^{1/2}\log(m/n))$.},
  abstract = {The authors provide data structures that maintain a graph as
    edges are inserted and deleted, and keep track of the following properties:
    minimum spanning forests, best swap, graph connectivity, and graph 2-edge-connectivity,
    in time O(n/sup 1/2/log(m/n)) per change; 3-edge-connectivity, in time
    O(n/sup 2/3/) per change; 4-edge-connectivity, in time O(n alpha (n))
    per change; k-edge-connectivity, in time O(n log n) per change; bipartiteness,
    2-vertex-connectivity, and 3-vertex-connectivity, in time O(n log(m/n))
    per change; and 4-vertex-connectivity, in time O(n log(m/n)+n alpha (n))
    per change. Further results speed up the insertion times to match the
    bounds of known partially dynamic algorithms. The algorithms are based
    on a technique that transforms algorithms for sparse graphs into ones
    that work on any graph, which they call sparsification.}}

@techreport{EppGalIta-IBM-93,
  title = {{Sparsification -- A technique for speeding up dynamic graph algorithms}},
  author = {David Eppstein and Zvi Galil and Giuseppe F. Italiano and Amnon
    Nissenzweig},
  institution = {IBM, T. J. Watson Research Ctr.},
  number = {RC 19272 (83907)},
  year = {1993}}

@article{EppGalIta-JACM-97,
  title = {{Sparsification -- A technique for speeding up dynamic graph algorithms}},
  author = {David Eppstein and Zvi Galil and Giuseppe F. Italiano and Amnon
    Nissenzweig},
  journal = {J. Assoc. Comput. Mach.},
  publisher = {ACM},
  volume = {44},
  number = {5},
  pages = {669--696},
  month = {September},
  year = {1997},
  annote = {This paper combines the FOCS '92 conference version \cite{EppGalIta-FOCS-92}
    with the ``Improved Sparsification'' tech. report \cite{EppGalIta-TR-93}.
     It includes a ``best swap'' data structure which is used to find the $k$
    smallest spanning trees in time $O(M+kn^{1/2})$ (where $M$ denotes the
    time to find a single minimum spanning tree in an $m$-edge sparse graph).}}

@techreport{EppGalIta-TR-93,
  title = {{Improved sparsification}},
  author = {David Eppstein and Zvi Galil and Giuseppe F. Italiano},
  institution = {Univ. of California, Irvine, Dept. Information and Computer
    Science},
  number = {93-20},
  year = {1993},
  url = {http://www.ics.uci.edu:80/TR/UCI:ICS-TR-93-20},
  annote = {The best swap data structure is used to find the $k$ smallest
    spanning trees in time $O(m\log\log^*m+k\min(n,k)^{1/2})$.},
  abstract = {In previous work we introduced {\em sparsification}, a technique
    that transforms fully dynamic algorithms for sparse graphs into ones
    that work on any graph, with a logarithmic increase in complexity. In
    this work we describe an improvement on this technique that avoids the
    logarithmic overhead. Using our improved sparsification technique, we
    keep track of the following properties: minimum spanning forest, best
    swap, connectivity, 2-edge-connectivity, and bipartiteness, in time $O(n^1/2)$
    per edge insertion or deletion; 2-vertex-connectivity and 3-vertex-connectivity,
    in time $O(n)$ per update; and 4-vertex-connectivity, in time $O(n\alpha(n))$
    per update.}}

@article{FdCGonBas-CABIOS-95,
  title = {{A computer program to aid the sequencing of peptides in collision
    activated decomposition experiments}},
  author = {Jorge Fern{\'a}ndez-de-Coss{\'\i}o and Javier Gonzalez and Vladimir Besada},
  journal = {CABIOS: Computer Applications in the Biosciences},
  volume = {11},
  number = {4},
  pages = {427--434},
  year = {1995},
  abstract = {A computer program named MSEQ, based on the Graph Theory has
    been implemented to aid the sequencing of peptides from Collision-Activated
    Decomposition (CAD) spectra. Input data required by this program are:
    the molecular weight of the peptide, the list of the masses of the daughter
    ions and the masses of the N- and C-terminal groups. The output comprises
    a list of the most likely sequences with their respective scores and
    the assignments of the daughter ions. A set of probabilities for each
    fragment ion was computed from hundreds of CAD spectra obtained in our
    mass spectrometer. To date many peptides have been sequenced in our laboratory
    with the help of this program and, in most of them, the real sequence
    ranks among the top five sequences. The program is able to differentiate
    isobaric amino acids such as Leucine and Isoleucine when the side-chain
    fragmentation appears in the spectrum. A criterion is used to discard
    those sequences that match the spectrum poorly from the earliest steps.
    The program is fast and no memory consuming.}}

@article{FdCGonBet-RCMS-98,
  title = {{Automated interpretation of high-energy collision-induced dissociation
    spectra of singly protonated peptides by SeqMS, a software aid for de
    novo sequencing by tandem mass spectrometry}},
  author = {Jorge Fern{\'a}ndez-de-Coss{\'\i}o and Javier Gonzalez and Luis Betancourt
    and Vladimir Besada and Gabriel Padron and Yasutsugu Shimonishi and Toshifumi
    Takao},
  journal = {Rapid Communications in Mass Spectrometry},
  volume = {12},
  number = {23},
  pages = {1867--1878},
  year = {1998}}

@inproceedings{Fen-SIPPN-94,
  title = {{Applying $N$-best keyword search to continuous speech recognition
    for telecommunication-based applications}},
  author = {Ming-Whei Feng},
  booktitle = {Proc. Int. Symp. Speech, Image Processing, and Neural Networks},
  publisher = {IEEE},
  volume = {2},
  pages = {726--729},
  month = {April},
  year = {1994},
  abstract = {An $N$-best keyword search algorithm was developed in a continuous
    speech recognizer which models vocabulary words as well as extraneous
    sounds and noise, to achieve high sentence accuracy. The continuous speech
    recognizer was developed for telecommunication-based applications which
    typically demand high sentence accuracy. Possible approaches for achieving
    high sentence accuracy include applying complicated speech modeling techniques
    or employing more knowledge sources when conducting the recognition search.
    An alternative solution is to first apply an $N$-best decoding search
    to obtain $N$ sentence hypotheses using pre-selected knowledge source(s)
    and then re-score those hypotheses using other knowledge source(s) or
    models. The proposed $N$-best keyword search algorithm derives all keyword
    sentence hypotheses and the corresponding likelihood scores time-synchronously.
    We show that the algorithm guarantees to find all sentence hypotheses.
    To reduce the exponentially growing number of hypotheses, in practical
    implementation we applied empirically derived thresholds to prune the
    search. Recognition experiments were conducted on two speech corpora:
    TI Connected Digit Corpus and Road Rally Corpus, to show the effectiveness
    of the proposed method.}}

@misc{Fok-96,
  title = {{Library for finding the $K$ shortest paths in a graph}},
  author = {Kenny K. Y. Fok},
  howpublished = {Univ. Waterloo, CS648 Course Project},
  year = {1996},
  url = {http://mercator.uwaterloo.ca/~kykfok/ps/cs648paper.ps},
  month = {Spring}}

@book{ForFul-62,
  title = {{Flows in Networks}},
  author = {Ford, Jr., Lester R. and D. R. Fulkerson},
  address = {Princeton, NJ},
  publisher = {Princeton Univ. Press},
  year = {1962}}

@article{Fox-CACM-75,
  title = {{More on $k$th shortest paths}},
  author = {B. L. Fox},
  journal = {Commun. Assoc. Comput. Mach.},
  publisher = {ACM},
  volume = {18},
  number = {5},
  pages = {279},
  month = {May},
  year = {1975},
  text = {In a recent paper \cite{Min-CACM-74}, Minieka proposes an algorithm
    for finding $k$th shortest paths between all pairs of nodes in an $N$
    node network. His claimed time is $O(k^2N^3)$.
    
    Fox \cite{Fox-INFOR-73} applies HEAPSORT \cite{Wil-CACM-64} to the Hoffman-Pavley-Dreyfus
    algorithm \cite{Dre-OR-69} for finding $K$th shortest paths to a given
    node. Applying this algorithm $N$ times finds the $k$th shortest paths
    between all pairs of nodes in time $O(kN^2\log N + N^3\log N)$. For large
    $k$, this is an order of magnitude faster.
    
    Fox \cite{Fox-INFOR-73} also introduced a perturbation scheme that eliminates
    bookkeeping due to ties and eliminates the possibility of cycling on
    zero-length loops. The latter is important in integer programming applications.
    Fox showed how to (easily) recover the solution to the original problem.
    
    For the case $k=1$, the papers of Spira \cite{Spi-SJC-73} and Hoffman
    and Winograd \cite{HofWin-IBMJRD-72} should be mentioned.}}

@article{Fox-INFOR-73,
  title = {{Calculating $k$th shortest paths}},
  author = {B. L. Fox},
  journal = {INFOR--Canad. J. Op. Res. {\&} Inf. Proc.},
  volume = {11},
  pages = {66--70},
  year = {1973}}

@inproceedings{Fox-JNM-75,
  title = {{$k$-th shortest paths and applications to the probabilistic networks}},
  author = {B. L. Fox},
  booktitle = {ORSA/TIMS Joint National Mtg.},
  journal = {Bull. Operations Research Soc. of America},
  volume = {23},
  pages = {B263},
  year = {1975},
  abstract = {Shows how to calculate k-th shortest paths to a given node
    in a n-node network in time O(n(klogn+n)). In acyclic networks (e.g.
    PERT networks) such paths are automatically loopless. Some heuristic
    applications to networks with random arc lengths are mentioned.}}

@article{Fox-OR-78,
  title = {{Data structures and computer science techniques in operations
    research}},
  author = {B. L. Fox},
  journal = {Operations Research},
  volume = {26},
  pages = {686--717},
  year = {1978}}

@article{FraMon-Nw-75,
  title = {{A vertex elimination algorithm for enumerating all simple paths
    in a graph}},
  author = {L. Fratta and Ugo Montanari},
  journal = {Networks},
  volume = {5},
  number = {2},
  pages = {151--177},
  month = {April},
  year = {1975},
  abstract = {If a suitable definition of sum and multiplication between
    sets of paths is given, the sets of all simple paths between all pairs
    of vertices in a graph can be characterized as the solution of a system
    of linear equations. The well-known matrix technique for enumerating
    such paths corresponds to an iterative solution of this system. A new
    and more efficient algorithm is here described and analyzed which finds
    all simple paths by a vertex elimination technique similar to Jordan's
    method for matrix inversion. Experimental results about a FORTRAN implementation
    of the algorithm are finally reported.}}

@inproceedings{Fre-FOCS-91,
  title = {{Ambivalent data structures for dynamic 2-edge-connectivity and
    $k$ smallest spanning trees}},
  author = {Greg N. Frederickson},
  booktitle = {Proc. 32nd Symp. Foundations of Computer Science},
  publisher = {IEEE},
  pages = {632--641},
  year = {1991},
  review = {MR-93i-68043}}

@article{MR-93i-68043,
  reviews = {Fre-FOCS-91},
  journal = {Mathematical Reviews},
  publisher = {Amer. Math. Soc.},
  title = {{Ambivalent data structures for dynamic 2-edge-connectivity and
    $k$ smallest spanning trees}},
  volume = {93i},
  number = {68043},
  year = {1993},
  text = {Ambivalent data structures are presented for several problems on
    undirected graphs. They are used in finding the $k$ smallest spanning
    trees of a weighted undirected graph in $O(m\log\beta(m,n)+\min\{k\sp
    {3/2},km\sp {1/2}\})$ time, where $m$ is the number of edges and $n$
    the number of vertices in the graph. The techniques are extended to find
    the $k$ smallest spanning trees in an embedded planar graph in $O(n+k(\log
    n)\sp 3)$ time. Ambivalent data structures are also used to maintain
    dynamically 2-edge-connectivity information. Edges and vertices can be
    inserted or deleted in $O(m\sp {1/2})$ time, and a query as to whether
    two vertices are in the same 2-edge-connected component can be answered
    in $O(\log n)$ time, where $m$ and $n$ are understood to be the current
    number of edges and vertices, respectively. Again, the techniques are
    extended to maintain an embedded planar graph so that edges and vertices
    can be inserted or deleted in $O((\log n)\sp 3)$ time, and a query answered
    in $O(\log n)$ time.}}

@article{Fre-IC-93,
  title = {{An optimal algorithm for selection in a min-heap}},
  author = {Greg N. Frederickson},
  journal = {Information and Computation},
  volume = {104},
  pages = {197--214},
  year = {1993},
  review = {MR-94m-68030}}

@article{MR-94m-68030,
  reviews = {Fre-IC-93},
  journal = {Mathematical Reviews},
  publisher = {Amer. Math. Soc.},
  title = {{An optimal algorithm for selection in a min-heap}},
  author = {Vijay V. Raghavan},
  volume = {94m},
  number = {68030},
  year = {1994},
  text = {Selecting the $k$th smallest element in a set is an important problem
    in order statistics. An optimal algorithm for this problem exists [M.
    Blum et al., J. Comput. System Sci. 7 (1973), 448--461; MR 48 {\#}8256].
    The present paper considers the problem of finding the $k$th smallest
    element in a set of elements satisfying a partial order relation. A convenient
    way to organize the elements of a set for this purpose is to consider
    a binary min-heap, i.e. a partial order on the elements $x\sb i$, $i=1,2,\cdots,n$,
    where $x\sb i>x\sb {\lfloor i/2\rfloor}$. In order to achieve a simple
    upper bound of $O(k\log k)$, the $k$ smallest elements in the set are
    extracted via an auxiliary heap. The auxiliary heap is used to hold those
    elements that are candidates for being the next smallest elements. 
    
    In improving on the above bound, the elements in the set are grouped
    into clans of equal size. By identifying groups of elements and using
    the largest in the group, it is possible to reduce the complexity of
    operation on the auxiliary heap. The largest of the largest element in
    each clan serves as a bound on the $k$ smallest elements in the set and
    is used to extract the subset of elements from which the $k$th smallest
    is selected. An algorithm using the idea of clans is discussed for the
    general problem of finding the $k$th smallest element in a forest of
    heaps. 
    
    Under a different strategy, the clans are redefined to consist of all
    the elements of smaller clans, with the lowest-level clans having the
    single smallest element. This allows the heap structure to represent
    clans as they are organized bottom-up in an incremental fashion. By keeping
    the size of a clan as small as necessary at any given time, the author
    provides an algorithm with time complexity $O(k)$. 
    
    This result represents an optimal algorithm for the problem of selecting
    the $k$th smallest element in a set organized as a binary heap, since
    the information-theoretic lower bound is known to be $\Omega(k)$ [D.
    E. Knuth, The art of computer programming, Volume I, second edition,
    Addison-Wesley, Reading, MA, 1975; MR 51 {\#}14624]. This is an important
    result, particularly from a theoretical perspective. The general problem
    of selecting the $k$th smallest element in a set has many applications.
    The author cites two example applications where the set of elements is
    easily viewed as a binary heap: (i) enumeration of the $k$ smallest spanning
    trees of a weighted undirected graph [G. N. Frederickson, in 32nd Annual
    Symposium on Foundations of Computer Science (San Juan, PR, 1991), 632--641,
    IEEE Comput. Soc. Press,
    Los Alamitos, CA, 1991; MR 93i:68043] and (ii) the tree-structured resource
    allocation problem [T. Ibaraki and N. Katoh, Resource allocation problems,
    MIT Press, Cambridge, MA, 1988; MR 89e:90179]. He notes that in both
    cases it is possible to improve efficiency by using his algorithm.}}

@article{Fre-SJC-85,
  title = {{Data structures for on-line updating of minimum spanning trees,
    with applications}},
  author = {Greg N. Frederickson},
  journal = {SIAM J. Computing},
  publisher = {SIAM},
  volume = {14},
  number = {4},
  pages = {781--798},
  year = {1985},
  review = {MR-86m-68121}}

@article{MR-86m-68121,
  reviews = {Fre-SJC-85},
  journal = {Mathematical Reviews},
  publisher = {Amer. Math. Soc.},
  title = {{Data structures for on-line updating of minimum spanning trees,
    with applications}},
  volume = {86m},
  number = {68121},
  year = {1986},
  text = {Data structures are presented for the problem of maintaining an
    on-line minimum spanning tree under the operation of updating the cost
    of some edge in the graph. For the case of a general graph, maintaining
    the data structure and updating the tree are shown to take $O(\sqrt{m})$
    time, where $m$ is the number of edges in the graph. For the case of
    a planar graph, a data structure is presented which supports an update
    time of $O((\log m)\sp 2)$. These structures contribute to improved solutions
    for the on-line connection components problem and the problem of generating
    the $K$ smallest spanning trees.}}

@article{Fre-SJC-97,
  title = {{Ambivalent data structures for dynamic 2-edge-connectivity and
    $k$ smallest spanning trees}},
  author = {Greg N. Frederickson},
  journal = {SIAM J. Computing},
  publisher = {SIAM},
  volume = {26},
  number = {2},
  pages = {484--538},
  month = {April},
  year = {1997}}

@article{FreJoh-Algs-83,
  title = {{Finding $k$th paths and $p$-centers by generating and searching
    good data structures}},
  author = {Greg N. Frederickson and Donald B. Johnson},
  journal = {J. Algorithms},
  volume = {4},
  pages = {61--80},
  year = {1983},
  abstract = {A succinct and easily searchable representation of the set
    of intervertex distances of a tree is given. Algorithms are presented
    for generating this representation, for searching it to select a kth
    longest path, and for searching it to locate a p-center. The complete
    algorithm for path selection is asymptotically optimal in the worst case,
    and the algorithms for p-center location improve on previous methods.
    The p-center results are extended to networks with independent cycles.}}

@article{FreTar-JACM-87,
  title = {{Fibonacci heaps and their uses in improved network optimization
    algorithms}},
  author = {Michael L. Fredman and Robert E. Tarjan},
  journal = {J. Assoc. Comput. Mach.},
  publisher = {ACM},
  volume = {34},
  pages = {596--615},
  year = {1987},
  abstract = {The authors develop a new data structure for implementing heaps
    (priority queues). The structure, Fibonacci heaps (abbreviated F-heaps),
    extends the binomial queues. F-heaps support arbitrary detection from
    an $n$-item heap in $O(\log{n})$ amortized time and all other standard
    heap operations in $O(1)$ amortized time. Using F-heaps they are able
    to obtain improved running times for several network optimization algorithms.
    In particular, they obtain the following worst-case bounds, where $n$
    is the number of vertices and m the number of edges in the problem graph:
    (1) $O(n\log{n}+m)$ for the single-source shortest path problem with
    nonnegative edge lengths, improved from $O(m\log_{m/n+2}{n})$; (2) $O(n^2\log{n}+nm)
    for the all-pairs shortest path problem, improved from $O(nm\log_{m/n+2}{n})$;
    (3) $O(n{$^\wedge$}2\log{n}+nm)$ for the assignment problem (weighted bipartite
    matching), improved from $O(nm\log_{m/n+2}{n})$; (4) $O(m\beta(m,n))$
    for the minimum spanning tree problem, improved from $O(m\log\log_{m/n+2}{n})$,
    where $\beta(m,n)=min\{i\mid\log{$^\wedge$}{(i)}{n}\le m/n\}$. Note that $\beta(m,n)\le\log{$^\wedge$}*{n}$
    if $m\ge n$. Of these results, the improved bound for minimum spanning
    trees is the most striking, although all the results give asymptotic
    improvements for graphs of appropriate densities.}}

@inproceedings{FreWil-FOCS-90,
  title = {{Trans-dichotomous algorithms for minimum spanning trees and shortest
    paths}},
  author = {Michael L. Fredman and Dan E. Willard},
  booktitle = {Proc. 31st Symp. Foundations of Computer Science},
  publisher = {IEEE},
  pages = {719--725},
  year = {1990},
  abstract = {Two algorithms are presented: a linear time algorithm for the
    minimum spanning tree problem and an $O(m+n\log{n}/\log\log{n})$ implementation
    of Dijkstra's shortest-path algorithm for a graph with $n$ vertices and
    $m$ edges. The second algorithm surpasses information theoretic limitations
    applicable to comparison-based algorithms. Both algorithms utilize new
    data structures that extend the fusion tree method.}}

@inproceedings{Fuc-ORP-84,
  title = {{$1$-$n$ Verfahren zur Bestimmung von $k$-kurzesten Wegen}},
  author = {Alois Fuchs},
  booktitle = {Operations Research Proceedings},
  publisher = {Springer Verlag},
  pages = {421--428},
  year = {1984}}

@article{FukMat-Nw-92,
  title = {{Finding all minimum-cost perfect matchings in bipartite graphs}},
  author = {Komei Fukuda and Tomomi Matsui},
  journal = {Networks},
  volume = {22},
  number = {5},
  pages = {461--468},
  year = {1992},
  review = {MR-93c-05104}}

@article{MR-93c-05104,
  reviews = {FukMat-Nw-92},
  journal = {Mathematical Reviews},
  publisher = {Amer. Math. Soc.},
  title = {{Finding all minimum-cost perfect matchings in bipartite graphs}},
  volume = {93c},
  number = {05104},
  year = {1993},
  text = {The Hungarian method is an efficient algorithm for finding a minimal-cost
    perfect matching in a weighted bipartite graph. We describe an efficient
    algorithm for finding all minimal-cost perfect matchings. The computational
    time required to generate each additional perfect matching is $O(n(n+m))$,
    and it requires $O(n+m)$ memory storage. This problem can be solved by
    algorithms for finding the $K$th-best solution of assignment problems.
    However, the memory storage required by the known algorithms grows in
    proportion to $K$, and, hence, it may grow exponentially in $n$. Thus,
    our specialized algorithm has a considerable advantage in memory requirement
    over the previous more general algorithms for $K$th-best assignment problems.
    Here we show that the enumeration of all minimal-cost perfect matchings
    can be reduced to the enumeration of all perfect matchings in some bipartite
    graph. Therefore, our algorithm can be seen as an algorithm for enumerating
    all perfect matchings in a given bipartite graph.}}

@article{FuRil-TRB-98,
  title = {{Expected shortest paths in dynamic and stochastic traffic networks}},
  author = {Liping Fu and L. R. Rilett},
  journal = {Transportation Research, Part B. -- Methodological},
  volume = {32B},
  number = {7},
  pages = {499--416},
  month = {September},
  year = {1998},
  abstract = {The dynamic and stochastic shortest path problem (DSSPP) is
    defined as finding the expected shortest path in a traffic network where
    the link travel times are modeled as a continuous-time stochastic process.
    The objective of the paper is to examine the properties of the problem
    and to identify a technique that can be used to solve the DSSPP given
    information that will be available in networks with intelligent transportation
    system (ITS) capabilities. The paper first identifies a set of relationships
    between the mean and variance of the travel time of a given path and
    the mean and variance of the dynamic and stochastic link travel times
    on these networks. Based on these relationships it is shown that the
    DSSPP is computationally intractable and traditional shortest path algorithms
    cannot guarantee an optimal solution. A heuristic algorithm based on
    the k-shortest path algorithm is subsequently proposed to solve the problem.
    Lastly, the trade-off between solution quality and computational efficiency
    of the proposed algorithm is demonstrated on a realistic network from
    Edmonton, Alberta.}}

@inproceedings{FuRil-VNIS-95,
  title = {{Estimation of expected minimum paths in dynamic and stochastic
    traffic networks}},
  author = {Liping Fu and L. R. Rilett},
  booktitle = {Proc. 6th Int. Conf. Vehicle Navigation and Information Systems},
  publisher = {IEEE},
  pages = {200--205},
  year = {1995},
  abstract = {For most in-vehicle route guidance systems (RGS) currently
    under development, the optimal route between an origin and destination
    is defined as the one with the minimum expected travel time. This optimal
    route is calculated by applying standard shortest path algorithms to
    the network where the link travel times are modeled as deterministic
    rather than as stochastic. The drawback to this method is that while
    it is computationally tractable, it may, in fact, generate a sub-optimal
    solution. Conversely, when the stochastic nature of link travel times
    are explicitly modeled, an optimal algorithm can become computationally
    inefficient for use within an actual application. The objective of this
    paper is to develop a new shortest path algorithm which takes into account
    the stochastic nature of link travel times without significantly increasing
    the overall computation time. The dynamic and stochastic shortest path
    problem (DSSPP) is first defined and the properties associated with this
    problem are discussed. A heuristic algorithm based on the k-shortest
    path algorithm is subsequently proposed. The trade-off between solution
    quality and computational efficiency of the proposed algorithm will be
    demonstrated on a network from Edmonton, Alberta, Canada.}}

@article{Gab-SJC-77,
  title = {{Two algorithms for generating weighted spanning trees in order}},
  author = {Harold N. Gabow},
  journal = {SIAM J. Computing},
  publisher = {SIAM},
  volume = {6},
  pages = {139--150},
  year = {1977}}

@article{GarBer-Cyb-79,
  title = {{Determination of the paths in an oriented acyclical graph}},
  author = {S. I. Garkavenko and L. S. Berdnikova},
  journal = {Cybernetics},
  volume = {15},
  number = {4},
  pages = {489--493},
  month = {July},
  year = {1979},
  abstract = {Gives a fairly easily programmed method for finding all the
    paths in an acyclical graph. As a preliminary, the vertices are renumered,
    then, from the incidence matrix of the graph with renumbered vertices,
    the matrix of paths is constructed. The rows of the latter matrix represent
    all the paths between the inputs and outputs.}}

@book{GarJoh-79,
  title = {{Computers and Intractability: a Guide to the Theory of NP-Completeness}},
  author = {Michael R. Garey and David S. Johnson},
  publisher = {W. H. Freeman},
  year = {1979}}

@article{Gav-Algs-87,
  title = {{Generating the maximum spanning-trees of a weighted graph}},
  author = {Fanica Gavril},
  journal = {J. Algorithms},
  volume = {8},
  number = {4},
  pages = {592--597},
  month = {December},
  year = {1987}}

@article{Gol-SJC-95,
  title = {{Scaling algorithms for the shortest paths problem}},
  author = {Andrew V. Goldberg},
  journal = {SIAM J. Computing},
  publisher = {SIAM},
  volume = {24},
  number = {3},
  pages = {494--504},
  month = {June},
  year = {1995}}

@inproceedings{Gol-SODA-93,
  title = {{Scaling algorithms for the shortest paths problem}},
  author = {Andrew V. Goldberg},
  booktitle = {Proc. 4th Symp. Discrete Algorithms},
  publisher = {ACM and SIAM},
  pages = {222--231},
  month = {January},
  year = {1993}}

@inproceedings{GouPraAbu-ETWCS-99,
  title = {{Routing in LEO-based satellite networks.}},
  author = {V. V. Gounder and Ravi Prakash and H. Abu-Amara},
  booktitle = {Proc. Emerging Technologies Symp. Wireless Communications
    and Systems},
  publisher = {IEEE},
  month = {April},
  year = {1999},
  url = {http://www.utdallas.edu/~ravip/papers/ets99.satellite.ps}}

@inproceedings{GrnKleGer-CNS-79,
  title = {{A new algorithm for network reliability computation}},
  author = {A. Grnarov and L. Kleinrock and M. Gerla},
  booktitle = {Proc. Computer Networking Symp.},
  publisher = {IEEE},
  pages = {17--20},
  month = {December},
  year = {1979},
  abstract = {A new algorithm for terminal reliability computation of a general
    network is presented. The algorithm belongs to the path enumeration algorithms
    (which use Boolean algebra) and is based on performing the here defined
    \$-operation (modified no.operation) on the set of all simple paths.}}

@phdthesis{Gro-PhD-89,
  title = {{Selfhealing networks: a distributed algorithm for $k$-shortest
    link-disjoint paths in a multi-graph with applications in real-time network
    restoration}},
  author = {Wayne Davy Grover},
  school = {Univ. of Alberta, Dept. of Electrical Engineering},
  year = {1989},
  month = {Fall}}

@inproceedings{GroVen-ICC-91,
  title = {{Performance of the Selfhealing Network protocol with random individual
    link failure times}},
  author = {Wayne Davy Grover and B. D. Venables},
  booktitle = {Proc. Int. Conf. Communications (ICC '91)},
  publisher = {IEEE},
  volume = {2},
  pages = {660--666},
  year = {1991},
  abstract = {The Selfhealing Network (SHN) is a parallel asynchronous distributed
    protocol which organizes the pool of spare links in a network into the
    pattern of k-shortest link disjoint paths between any two nodes of the
    network. A report is presented on the behavior of the SHN protocol when
    presented with a random series of individual fiber failures, as opposed
    to a 'guillotine' (i.e. simultaneous) model of a cable cut. The most
    significant results are: (a) verification of the protocol under complex
    failure stimuli, and (b) a finding of predeployment effects which reduce
    the elapsed outage time of most individual paths when failures occur
    in a time-distributed manner.}}

@article{GuaChe-KT-85,
  title = {{A simple algorithm for finding the second order-constrained base
    of matroid}},
  author = {Mei Gu Guan and Qing Hua Chen},
  journal = {Kexue Tongbao (English Ed.)},
  volume = {30},
  number = {7},
  pages = {862--865},
  year = {1985},
  review = {MR-86m-05030}}

@article{MR-86m-05030,
  reviews = {GuaChe-KT-85},
  journal = {Mathematical Reviews},
  publisher = {Amer. Math. Soc.},
  title = {{A simple algorithm for finding the second order-constrained base
    of matroid}},
  author = {Ulrich Wolfgang Faigle},
  volume = {86m},
  number = {05030},
  year = {1986},
  text = {The authors propose an algorithm to solve the following problem:
    among all bases of a matroid which intersect a given subset in exactly
    $k$ elements, find one with the second best possible weight.}}

@inproceedings{GueLacMus-AIRO-96,
  title = {{Una classe di algoritmi a correzione di contrassegno per il problema
    dei $K$ cammini minimi senza cicli}},
  author = {Francesca Guerriero and Valerio Lacagnina and Roberto Musmanno
    and Antonio Pecorella},
  booktitle = {Proc. AIRO 1996},
  publisher = {Associazione Italiana Ricerca Operativa},
  pages = {163--166},
  year = {1996}}

@article{GueMus-JOTA-00,
  title = {{Parallel asynchronous algorithms for the $K$ shortest paths problem}},
  author = {Francesca Guerriero and Roberto Musmanno},
  journal = {J. Optimization Th. {\&} Appl.},
  volume = {104},
  number = {1},
  pages = {91--108},
  month = {January},
  year = {2000}}

@techreport{GueMus-TR-96,
  title = {{Label-setting methods for the $K$ shortest paths problem}},
  author = {Francesca Guerriero and Roberto Musmanno},
  institution = {Univ. of Calabria, Dept. of Electronics, Informatics and
    Systems},
  number = {PARCOLAB 9/96},
  month = {December},
  year = {1996}}

@inproceedings{GuoMat-ICDCS-99,
  title = {{Search space reduction in QoS routing}},
  author = {Liang Guo and I. Matta},
  booktitle = {Proc. 19th Int. Conf. Distributed Computing Systems},
  publisher = {IEEE},
  editor = {M. G. Gouda},
  pages = {142--149},
  month = {May},
  year = {1999},
  abstract = {To provide real time service, integrated networks require the
    underlying routing algorithm to be able to find low cost paths that satisfy
    given Quality of Service (QoS) constraints. The problem of constrained
    shortest (least cost) path routing is known to be NP hard, and some heuristics
    have been proposed to find a near optimal solution. However, these heuristics
    either impose relationships among the link metrics to reduce the complexity
    of the problem which may limit the general applicability of the heuristic,
    or are too costly in terms of execution time to be applicable to large
    networks. We focus on solving the delay constrained minimum cost path
    problem, and present a fast algorithm to find a near optimal solution.
    This algorithm, called DCCR (Delay-Cost-Constrained Routing), is a variant
    of the k-shortest path algorithm. DCCR uses a new adaptive path weight
    function, together with an additional constraint imposed on the path
    cost, to restrict the search space. Thus, DCCR can return a near optimal
    solution in a very short time. Furthermore, we use the method proposed
    by D. Blokh and G. Gutin (1995) to further reduce the search space by
    using a tighter bound on path cost. This makes our algorithm more accurate
    and even faster. We call this improved algorithm SSR+DCCR (Search Space
    Reduction+DCCR). Through extensive simulations, we confirm that SSR+DCCR
    performs very well compared to the optimal but very expensive solution.}}

@article{HadChr-Nw-99,
  title = {{An efficient implementation of an algorithm for finding $K$ shortest
    simple paths}},
  author = {E. Hadjiconstantinou and Nicos Christofides},
  journal = {Networks},
  volume = {34},
  number = {2},
  pages = {88--101},
  month = {September},
  year = {1999}}

@incollection{HadChrMin-AOR-95,
  title = {{A new exact algorithm from the vehicle routing problem based
    on $q$-paths and $k$-shortest paths relaxations}},
  author = {Eleni Hadjiconstantinou and Nicos Christofides and Aristide Mingozzi},
  booktitle = {Freight Transportation},
  number = {61},
  editor = {G. Laporte and Michel Gendreau},
  series = {Annals of Operations Research},
  publisher = {Baltzer Science Publishers},
  pages = {21--44},
  year = {1995},
  review = {MR-96j-90028}}

@article{MR-96j-90028,
  reviews = {HadChrMin-AOR-95},
  journal = {Mathematical Reviews},
  publisher = {Amer. Math. Soc.},
  title = {{A new exact algorithm from the vehicle routing problem based
    on $q$-paths and $k$-shortest paths relaxations}},
  volume = {96j},
  number = {90028},
  year = {1996},
  text = {We consider the basic vehicle routing problem (VRP) in which a
    fleet of $M$ identical vehicles stationed at a central depot is to be
    optimally routed to supply customers with known demands subject only
    to vehicle capacity constraints. In this paper, we present an exact algorithm
    for solving the VRP that uses lower bounds obtained from a combination
    of two relaxations of the original problem which are based on the computation
    of $q$-paths and $k$-shortest paths. A set of reduction tests derived
    from the computation of these bounds is applied to reduce the size of
    the problem and to improve the quality of the bounds. The resulting lower
    bounds are then embedded into a tree-search procedure to solve the problem
    optimally. Computational results are presented for a number of problems
    taken from the literature. The results demonstrate the effectiveness
    of the proposed method in solving problems involving up to about 50 customers
    and in proving tight lower bounds for problems up to about 150 customers.}}

@book{Hae-LAMM-79,
  title = {{Graphentheoretische Methoden des Operations Research}},
  author = {Kurt H{\"a}ssig},
  series = {Leitf{\"a}den der Angewandten Mathematik und Mechanik},
  publisher = {B. G. Teubner},
  number = {42},
  year = {1979},
  review = {MR-80f-90002}}

@article{MR-80f-90002,
  reviews = {Hae-LAMM-79},
  journal = {Mathematical Reviews},
  publisher = {Amer. Math. Soc.},
  title = {{Graphentheoretische Methoden des Operations Research}},
  author = {Rainer E. Burkard},
  volume = {80f},
  number = {90002},
  year = {1980},
  text = {The author considers the two main graph-theoretic tools in operations
    research: distance and flow problems. The definitions and concepts of
    graph theory which are used subsequently are introduced in the first
    chapter. In many cases the definitions are followed by algorithms which
    solve the corresponding graph-theoretic problems (e.g., determination
    of a rooted tree, determination of the strong components of a graph,
    etc.). In the theoretical part of the second chapter the following problems
    are discussed and algorithmically solved: shortest path problems, determination
    of paths with maximal length, determination of negative circuits, and
    k-shortest path problems. A detailed presentation of applications is
    given for the solution of scheduling problems by means of network-planning.
    These are considered in the third chapter. CPM, PERT and MPM, which are
    algorithms to solve such problems, are shown to be special cases of the
    methods described in Chapter 2. In Chapter 4, flow and tension problems
    are solved: algorithms for the determination of maximal flows and flows
    with minimal costs, minimal tensions and tensions with minimal costs
    are described. As an application, multicommodity flows are solved by
    a decomposition algorithm. If the incidence matrix of a graph is replaced
    by a generalized incidence matrix one can formulate generalized flow
    and tension problems. Algorithms for solving these problems have been
    developed by the author and are presented in the fifth chapter. In the
    last chapter, the author discusses the travelling- salesman problem,
    the matching-problem, and the Chinese-postman problem. The book contains
    several examples which clarify the presented theory and applications.}}

@incollection{Ham-AOR-95,
  title = {{A note on $K$ best network flows}},
  author = {Horst W. Hamacher},
  booktitle = {Mathematics of Industrial Systems},
  number = {57},
  editor = {Rainer E. Burkard and Toshihide Ibaraki and Maurice Queyranne},
  series = {Annals of Operations Research},
  publisher = {Baltzer Science Publishers},
  pages = {65--72},
  month = {June},
  year = {1995},
  review = {MR-96d-90027}}

@article{MR-96d-90027,
  reviews = {Ham-AOR-95},
  journal = {Mathematical Reviews},
  publisher = {Amer. Math. Soc.},
  title = {{A note on $K$ best network flows}},
  volume = {96d},
  number = {90027},
  year = {1996},
  text = {It is shown that the problem of finding the $K$ best solutions
    of a linear integer network flow problem can be solved by a polynomial
    time algorithm. This algorithm can be used in order to solve a multiple-criteria
    network flow problem which minimizes the maximum of $Q$ objectives.}}

@incollection{HamPicQue-ACMOR-84,
  title = {{Ranking the cuts and cut-sets of a network}},
  author = {Horst W. Hamacher and Jean-Claude Picard and Maurice Queyranne},
  booktitle = {Algebraic and Combinatorial Methods in Operations Research},
  number = {95},
  series = {Math. Stud.},
  publisher = {North-Holland},
  pages = {183--200},
  year = {1984},
  review = {MR-87b-90135}}

@article{MR-87b-90135,
  reviews = {HamPicQue-ACMOR-84},
  journal = {Mathematical Reviews},
  publisher = {Amer. Math. Soc.},
  title = {{Ranking the cuts and cut-sets of a network}},
  volume = {87b},
  number = {90135},
  year = {1987},
  text = {The authors present an $O(Kn\sp 4)$ algorithm for finding the $K$
    best cuts and an $O(m\sp {K-1}n\sp 3)$ algorithm for finding the $K$
    best cut-sets in a network with $n+2$ nodes and $m$ arcs.}}

@article{HamPicQue-ORL-84,
  title = {{On finding the $K$ best cuts in a network}},
  author = {Horst W. Hamacher and Jean-Claude Picard and Maurice Queyranne},
  journal = {Operations Research Lett.},
  volume = {2},
  number = {6},
  pages = {303--305},
  year = {1984},
  review = {MR-85b-90026}}

@article{MR-85b-90026,
  reviews = {HamPicQue-ORL-84},
  journal = {Mathematical Reviews},
  publisher = {Amer. Math. Soc.},
  title = {{On finding the $K$ best cuts in a network}},
  volume = {85b},
  number = {90026},
  year = {1985},
  text = {We show that the $O(K\cdot n\sp 4)$ algorithm of Hamacher (1982)
    for finding the $K$ best cut-sets fails because it may produce cuts rather
    than cut-sets. With the convention that two cuts $(X, \bar X)$ and $(Y,
    \bar Y)$ are different whenever $X\ne Y$ the $K$ best cut problem can
    be solved in $O(K\cdot n\sp 4)$.}}

@incollection{HamQue-AOR-85,
  title = {{$K$ best solutions to combinatorial optimization problems}},
  author = {Horst W. Hamacher and Maurice Queyranne},
  series = {Annals of Operations Research},
  publisher = {Baltzer Science Publishers},
  number = {4},
  pages = {123--143},
  year = {1985},
  review = {MR-89b-90174}}

@article{MR-89b-90174,
  reviews = {HamQue-AOR-85},
  journal = {Mathematical Reviews},
  publisher = {Amer. Math. Soc.},
  title = {{$K$ best solutions to combinatorial optimization problems}},
  volume = {89b},
  number = {90174},
  year = {1989},
  text = {We review the Lawler-Murty procedure for finding the $K$ best solutions
    to combinatorial optimization problems. Then we introduce an alternative
    algorithm which is based on a binary search tree procedure. We apply
    both algorithms to the problems of finding the $K$ best bases in a matroid,
    perfect matchings, and best cuts in a network.}}

@incollection{HamRuh-AOR-94,
  title = {{On spanning tree problems with multiple objectives}},
  author = {Horst W. Hamacher and G{\"u}nter Ruhe},
  booktitle = {Decision Theory and Systems},
  number = {52},
  editor = {K. Mosler and M. Schader},
  series = {Annals of Operations Research},
  publisher = {Baltzer Science Publishers},
  pages = {209--230},
  year = {1994},
  review = {MR-95g-90062}}

@article{MR-95g-90062,
  reviews = {HamRuh-AOR-94},
  journal = {Mathematical Reviews},
  publisher = {Amer. Math. Soc.},
  title = {{On spanning tree problems with multiple objectives}},
  author = {Roman Slowinski},
  volume = {95g},
  number = {90062},
  year = {1995},
  text = {Two versions of multiple objective minimum spanning tree problems
    defined on a network with vectorial weights are investigated. First,
    the maximum of $Q$ linear objective functions taken over the set of all
    spanning trees (max-linear spanning tree problem, ML-ST) is considered.
    Secondly, efficient spanning trees (multi-criteria spanning tree problem,
    MC-ST) are sought. Problem ML-ST is shown to be NP-complete. An exact
    algorithm which is based on ranking is presented. The procedure can also
    be used as an approximation scheme. For solving the bicriterion MC-ST,
    which in the worst case may have an exponential number of efficient trees,
    a two-phase procedure is presented. Based on the computation of extremal
    efficient spanning trees the neighbourhood search is used to determine
    a sequence of solutions with the property that the distance between two
    consecutive solutions is less than a given accuracy.}}

@article{HanJauDeA-EJOR-98,
  title = {{Mixed-integer column generation algorithms and the probabilistic
    maximum satisfiability problem}},
  author = {P. Hansen and B. Jaumard and De Aragao, M. P.},
  journal = {Eur. J. Operational Research},
  volume = {108},
  number = {3},
  pages = {671--683},
  month = {August},
  year = {1998},
  abstract = {The column generation approach to large-scale linear programming
    is extended to the mixed-integer case. Two general algorithms, a dual
    and a primal one, are presented. Both involve finding k-best solutions
    to combinatorial optimization subproblems. Algorithms for these subproblems
    must be tailored to each specific application. Their use is illustrated
    by applying them to a new combinatorial optimization problem with applications
    in artificial intelligence: probabilistic maximum satisfiability. This
    problem is defined as follows: consider a set of logical sentences together
    with probabilities that they are true, assume this set of sentences is
    not satisfiable in the probabilistic sense, i.e., there is no probability
    distribution on the set of possible worlds (truth assignments to the
    sentences corresponding to at least one truth assignment to the logical
    variables they contain) such that for each sentence the sum of probabilities
    of the possible worlds in which it is true is equal to its probability
    of being true; determine a minimum set of sentences to be deleted in
    order to make the remaining set of sentences satisfiable. Computational
    experience with both algorithms is reported on.}}

@article{HanZan-Nw-80,
  title = {{A dual algorithm for the constrained shortest path problem}},
  author = {Gabriel Y. Handler and Israel Zang},
  journal = {Networks},
  volume = {10},
  number = {4},
  pages = {293--309},
  year = {1980},
  abstract = {Develops a Lagrangian relaxation algorithm for the problem
    of finding a shortest path between two nodes in a network, subject to
    a knapsack-type constraint. For example, one may wish to find a minimum
    cost route subject to a total time constraint in a multimode transportation
    network. Furthermore, the problem, which is shown to be at least as hard
    as NP-complete problems, is generic to a class of problems that arise
    in the solution of integer linear programs and discrete state/stage deterministic
    dynamic programs. One approach to solving the problem is to utilize a
    kth shortest path algorithm, terminating with the first path that satisfies
    the constraint. This approach is impractical when the terminal value
    of k is large. Using Lagrangian relaxation the authors propose a method
    that is designed to reduce this value of k. Computational results indicate
    orders of magnitude savings when the approach is applied to large networks.}}

@inproceedings{HarKapKum-WADS-95,
  title = {{Faster enumeration of all spanning trees of a directed graph}},
  author = {R. Hariharan and Sanjiv Kapoor and V. Kumar},
  booktitle = {Proc. 4th Worksh. Algorithms {\&} Data Structures},
  number = {955},
  series = {Lecture Notes in Computer Science},
  publisher = {Springer Verlag},
  pages = {428--439},
  year = {1995},
  note = {We present an algorithm for enumerating all spanning trees of a
    directed graph with V vertices, E edges and N spanning trees. The algorithm
    takes O(log V) time per spanning tree; more precisely, it runs in O(N
    log V + V-2 alpha(V, V)+ V E) time(4). It first outputs a single spanning
    tree and then a list of edge swaps; each spanning tree can be generated
    from the first spanning tree by applying a prefix of this sequence of
    edge swaps. The total output size is O(N) as against the O(NV) size of
    all spanning trees put together. The previous best known algorithm for
    this problem [KR91] took O(NV + V-3) time, even for generating the edge
    swap sequence.}}

@inproceedings{HatKni-IJCAI-95,
  title = {{Unification-based glossing}},
  author = {Vasileios Hatzivassiloglou and Kevin Knight},
  booktitle = {Proc. 14th Int. Joint Conf. Artificial Intelligence},
  publisher = {Morgan-Kaufmann},
  address = {2929 Campus Dr., Suite 260, San Mateo, CA, 94403, USA},
  pages = {1382--1389},
  month = {August},
  year = {1995},
  url = {http://www.isi.edu/natural-language/mt/ijcai95-glosser.ps},
  comment = {Text from section 4.3 of the paper: ``Consequently, a method
    is needed to efficiently search the word lattice and select a small set
    of highly likely translations. We adopted the $N$-best algorithm for
    this purpose [Chow and Schwartz, 1989]. Unlike the widely used Viterbi
    algorithm [Viterbi, 1967], which only produces a single best scoring
    path, this algorithm offers the advantage of producing any number of
    the highest scoring paths in the lattice; these paths can then be rescored
    with a more extensive (and expensive) method. It also offers controlled
    accuracy (i.e., the extent of suboptimality can be arbitrarily decreased
    by the amount of memory made available to the search), and empirical
    studies [Nguyen et al., 1994] have shown that it performs equally well
    with other, more complicated methods. Finally, no forward estimates of
    the viability of a partial path are required (as is, for example, the
    case in the $A^\ast$ or stack decoder [Jelinek et al, 1975; Bahl et al.,
    1983] algorithm.''}}

@article{Hen-EJOR-86,
  title = {{The shortest path problem with two objective functions}},
  author = {Mordechai I. Henig},
  journal = {Eur. J. Operational Research},
  volume = {25},
  number = {2},
  pages = {281--291},
  year = {1986},
  review = {MR-87e-90036}}

@article{MR-87e-90036,
  reviews = {Hen-EJOR-86},
  journal = {Mathematical Reviews},
  publisher = {Amer. Math. Soc.},
  title = {{The shortest path problem with two objective functions}},
  volume = {87e},
  number = {90036},
  year = {1987},
  text = {We present methods to find the shortest path in a network where
    each path is associated with two objective. We describe how to obtain
    the nondominated paths and the extreme nondominated paths, and compare
    the expected complexity of the methods. An improvement in efficiency
    can be obtained when quasiconcave or quasiconvex utility functions are
    assumed. In the first case, we describe how to find the optimal exteme
    nondominated path and bounds for the optimal path value. Then the optimal
    path can be located by calculating the $k$th shortest path. In the second
    case we suggest a branch and bound method to solve the problem.}}

@inproceedings{HenCraCli-OPTI-98,
  title = {{A multiple objective approach to QoS routing in integrated communication
    networks}},
  author = {Hengeller Antunes, C. and J. M. F. Craveirinha and J. C. N. Cl{\'\i}maco
    and C. Barrico},
  booktitle = {Proc. Optimization 98},
  month = {July},
  year = {1998}}

@inproceedings{HerMic-SIT-97,
  title = {{Robust estimation of point process intensity features using $k$-minimal
    spanning trees}},
  author = {A. O. Hero and O. Michel},
  booktitle = {Proc. Int. Symp. Information Theory},
  publisher = {IEEE},
  pages = {74},
  month = {June},
  year = {1997},
  abstract = {Minimal spanning trees (MST) have been applied to multi-dimensional
    random processes for pattern recognition and randomness testing. We present
    a robust version of the MST to estimate complexity features of a point
    process intensity function under an epsilon contaminated model for the
    intensity. The principal feature considered is the Renyi entropy of the
    mixture and a strongly consistent entropy estimator is given which depends
    on the data only through the total length of the MST passing through
    the data points. Robustification of the MST estimator is achieved by
    applying the theory of k-minimum MST.}}

@article{HigHogWei-EJOR-97,
  title = {{Evaluating the demand for supergauge trucks-on-trains services
    in Western Europe}},
  author = {J. Higginson and T. Hogan and M. Weil},
  journal = {Eur. J. Operational Research},
  volume = {97},
  number = {2},
  pages = {293--307},
  month = {March},
  year = {1997},
  abstract = {We investigate the potential diversion of freight traffic from
    road to a new rail service in Western Europe. The research aims to predict
    broad estimates of the traffic diverting to the rail service using a
    network model and algorithms which optimise the use of time and hence
    cost for each journey. Traffic diversion is evaluated using a multinomial
    logit model which allocates volume across the set of shortest paths relevant
    to a given journey. Results from a case study are presented.}}

@article{HisNit-SCJ-95,
  title = {{A generalized algorithm for Japanese morphological analysis and
    a comparative evaluation of some heuristics}},
  author = {T. Hisamitsu and Y. Nitta},
  journal = {Systems {\&} Computers in Japan},
  volume = {26},
  number = {1},
  pages = {73--87},
  month = {January},
  year = {1995},
  abstract = {In ordinary written Japanese, words are not separated by spaces.
    Therefore morphological analysis involves segmenting and tagging sentences.
    Since each sentence has a huge number of possible tagged segmentation,
    various criteria have been proposed for making plausible decisions. However,
    there are still no unified frameworks that incorporate various heuristics,
    and there has been no comparative evaluation of commonly used heuristics.
    This paper presents a clear framework to describe various heuristics,
    and an $N$-best algorithm for extracting optimal solutions. The time
    complexity of this algorithm is $O(nN\log_2(1+N))$, where $n$ is the
    sentence length. The advantage of the $N$-best algorithm over the standard
    beam search algorithm is also discussed. This paper also presents a comparative
    evaluation of three major heuristics, and proposes a precise and portable
    rule-based heuristic. Estimation was done using the aforementioned algorithm
    and six criteria. The newly proposed heuristic is based upon the Extended
    Least Bunsetsu (Phrase) Number method.}}

@inproceedings{Hjo-INFORMS-98,
  title = {{A $k$-shortest path column generator for the pairing problem}},
  author = {Curt A. Hjorring},
  booktitle = {INFORMS/CORS Montr{\'e}al '98},
  year = {1998},
  abstract = {The rules that define pairings are complex and were previously
    hard coded into column generators. A more general solution is a rule
    system that returns a simple yes/no for a partial/complete pairing. We
    present results from a rule system-based column generator that uses a
    k-shortest path algorithm.}}

@article{HofPav-JACM-59,
  title = {{A method for the solution of the $N$th best path problem}},
  author = {Walter Hoffman and Richard Pavley},
  journal = {J. Assoc. Comput. Mach.},
  publisher = {ACM},
  volume = {6},
  pages = {506--514},
  year = {1959},
  annote = {This paper considers the problem of finding the $n$ shortest
    paths (allowing loops) between a pair of terminals in a directed network,
    with the intended application of analyzing a road network (having distance
    equal to vehicular travel time). It is the first published paper on this
    subject of which I [DE, 24 July 1998] am aware, but it refers to another
    algorithm in an earlier unpublished manuscript by ``Bock, Kantner, and
    Haynes of the Armour Research Foundation'' which I have omitted from this
    bibliography due to lack of any other detail than those surnames.
    
    The paper defines path $Q$ to be a deviation of a path $P$ if it consists
    of a segment of a shortest path tree, followed by a single edge, followed
    by a segment of $P$.  The authors then prove that the $n$th path is a
    deviation of one of the previous paths; their algorithm consists of finding
    each successive path by selecting the best among all deviations of all
    previously listed paths. The same idea of representing paths as deviations
    is central to my own paper ``Finding the $k$ shortest paths'', in which
    I unfortunately neglected to cite the present reference.
    
    There is also a brief footnote discussing the problem of finding loopless
    paths: ``If it is desired to avoid paths containing loops, $j$ must be
    suitably restricted'' where $j$ is the destination of a deviation edge.
     This footnote seems incorrect, since there are networks in which the
    second-shortest loopless path is not a deviation of the shortest path.
    
    No worst-case analysis is given, although the authors give some heuristic
    estimates based on the assumption that the network resembles a square
    grid, in which case they estimate the time to be roughly $O(k\sqrt{n})$
    (I guess not counting the time to find the initial shortest path tree,
    and with $k$ not too big). The authors' implementation is not completely
    naive: they construct the deviations of each path only once, and save
    memory by only storing the $n$ best deviations found so far.  It seems
    from their $O(k\sqrt{n})$ estimate that they understood how to compute
    each deviation in constant time, but (for pathological networks) each
    path can have $\Theta(km)$ deviations, so their worst case should have
    been asymptotically $O(k^2m)$. Some computational results of an implementation
    on an IBM 650 are also included: for a given 99-node planar network,
    their code took 5 minutes to find the shortest path tree and 18 minutes
    to find the ten best paths.
    
    No abstract was included in the original paper.},
  review = {MR-23-B2056}}

@article{MR-23-B2056,
  reviews = {HofPav-JACM-59},
  journal = {Mathematical Reviews},
  publisher = {Amer. Math. Soc.},
  title = {{A method for the solution of the $N$th best path problem}},
  author = {Edward F. Moore},
  volume = {23},
  number = {B2056},
  year = {1962}}

@inproceedings{HolSve-NORSIG-95,
  title = {{Training of lexica for subword-based speech recognisers}},
  author = {T. Holter and T. Svendsen},
  journal = {Proc. Norwegian Signal Processing Symp.},
  publisher = {Hogskolen i Stavanger},
  pages = {57--61},
  month = {September},
  year = {1995},
  abstract = {In this paper we present an automatic optimal baseform determination
    algorithm. Given a set of subword hidden Markov models (HMMs) and acoustic
    tokens of a specific word, we apply the tree-trellis $N$-best search
    algorithm to find the optimal baseforms (transcriptions) in the maximum
    likelihood sense. The proposed algorithm is used in an iterative manner,
    creating a series of lexica trained from the given acoustic tokens. The
    DARPA resource management (RM) database was used for evaluating the new
    baseform optimisation algorithm. When compared to the initial lexicon
    derived from the DARPA RM-distribution, improvements of recognition rates
    have been obtained for all lexica trained with the baseform optimisation
    algorithm. An analysis of the relative performances of the lexica is
    given.}}

@article{Hor-JORS-80,
  title = {{Finding the $K$ least cost paths in an acyclic activity network}},
  author = {G. J. Horne},
  journal = {J. Operational Research Soc.},
  volume = {31},
  pages = {443--448},
  year = {1980},
  abstract = {Presents an application of the Kth shortest path problem to
    an agricultural problem-dairy waste management. It goes on to compare
    several algorithms for this problem and concludes by using computational
    results to provide a basis for choosing the most appropriate algorithm
    for a variety of applications.}}

@mastersthesis{Hsu-MS-92,
  title = {{Load balanced $K$-shortest path routing for circuit-switched
    networks}},
  author = {Chi-Feng Hsu},
  school = {Rutgers Univ., Dept. Electrical {\&} Computer Engineering},
  month = {May},
  year = {1992}}

@inproceedings{HsuHui-RCC-94,
  title = {{Load-balanced $K$-shortest path routing for circuit-switched
    networks}},
  author = {Chi-Feng Hsu and Joseph Y. Hui},
  booktitle = {Proc. IEEE NY/NJ Regional Control Conf.},
  month = {August},
  year = {1994},
  url = {http://www-caip.rutgers.edu/~chifeng/mieee.ps},
  abstract = {Issue of the load-balanced $K$-shortest path routing are investigated
    in this paper, including multiple alternative routing strategies, network
    loss performance, and optimal interval for network status updates. A
    max-min cost function for alternative path evaluation is applied to Least
    Loaded Routing model in circuit-switched networks. Two kinds of routing
    strategy which may update the network status instantaneously or periodically
    are proposed. Simulation results are then compared and analyzed.}}

@article{HsuLuc-DM-94,
  title = {{On the $k$-diameter of $k$-regular $k$-connected graphs}},
  author = {D. Frank Hsu and Tomasz  {\L}uczak},
  journal = {Discrete Mathematics},
  volume = {133},
  pages = {291--296},
  year = {1994},
  review = {MR-95g-05041}}

@article{MR-95g-05041,
  reviews = {HsuLuc-DM-94},
  journal = {Mathematical Reviews},
  publisher = {Amer. Math. Soc.},
  title = {{On the $k$-diameter of $k$-regular $k$-connected graphs}},
  author = {Hans L. Bodlaender},
  volume = {95g},
  number = {05041},
  year = {1995},
  text = {The $k$-distance $d\sb k(v,w)$ between two vertices $v,w$ in a
    graph $G=(V,E)$ is the length of the $k$-shortest path between $v$ and
    $w$. The $k$-diameter of $G$ is the maximum $k$-distance over all pairs
    of vertices. Several results are obtained on the maximal value of the
    $k$-diameter that can be achieved for $k$-connected graphs with $n$ vertices.
    Among other results, the authors show that every $k$-regular $k$-connected
    graph on $n$ vertices has $k$-diameter at most $n/2$. This bound is sharp
    when $n=4k-6+i(2k-4)$, e.g., when $n$ is even and $k=3$.}}

@article{Hua-JORS-95,
  title = {{A combined algorithm for solving and calibrating the stochastic
    traffic assignment model}},
  author = {Hai-Jun Huang},
  journal = {J. Operational Research Soc.},
  volume = {46},
  pages = {977--987},
  year = {1995},
  abstract = {This paper studies Fisk's stochastic user equilibrium (SUE)
    assignment model in which travellers are assumed not to have perfect
    knowledge of the traffic system. It is shown that the stochastic properties
    of this model completely depend on the calibration parameter. After giving
    the searching method of an 'efficient paths' set, a modified combined
    algorithm for solving and calibrating Fisk's stochastic traffic assignment
    model is developed. In this algorithm, the path enumeration is achieved
    automatically in the preliminary phase and renewed in the iterative processes,
    and the number of alternative paths generated can be controlled by a
    predetermined function. Two numerical examples are presented to illustrate
    the model's properties and the algorithm's efficiencies.}}

@article{HuaMil-AAM-91,
  title = {{A time-efficient, linear-space local similarity algorithm}},
  author = {Xiaoqiu Huang and Webb Miller},
  journal = {Advances in Applied Math.},
  volume = {12},
  number = {3},
  pages = {337--357},
  year = {1991},
  review = {MR-92f-92025}}

@article{MR-92f-92025,
  reviews = {HuaMil-AAM-91},
  journal = {Mathematical Reviews},
  publisher = {Amer. Math. Soc.},
  title = {{A time-efficient, linear-space local similarity algorithm}},
  volume = {92f},
  number = {92025},
  year = {1992},
  text = {A dynamic programming algorithm to determine similar regions of
    two sequences is presented. The method produces $k$ best ``nonintersecting''
    local alignments, for any chosen $k$. The procedure is an improvement
    of an earlier algorithm of the authors, which while retaining the linear
    space characteristic, lowers the time requirement. If $M$ and $N$ are
    the lengths of the given sequences and $K$ is the total length of the
    computed alignments, the space requirement is $O(M+N+K)$ while ``under
    reasonable assumptions'', the running time is $O(MN+\sum_{n=1}^k L_n^2$,
    where $L_n$ is the length of the $n$th computed alignment. An example
    is given and the results of test runs, comparing the algorithm's performance
    with its predecessor on a pair of DNA sequences of $73\,360$ and $44\,954$
    nucleotides containing the $\beta$-like globin cluster from humans and
    rabbits, are reported.}}

@article{Hur-MR-82a,
  title = {{A Petri net approach to enumerate all system success paths for
    reliability evaluation of a complex system}},
  author = {G. S. Hura},
  journal = {Microelectronics and Reliability},
  volume = {22},
  number = {3},
  pages = {427--428},
  year = {1982},
  abstract = {A Petri net approach to enumerate all system success paths
    between a specified pair of nodes is presented. The proposed technique
    requires only vector additions on a single matrix. It is simple and can
    easily be computerized.}}

@article{Hur-MR-82b,
  title = {{Enumeration of success paths in a graph}},
  author = {G. S. Hura},
  journal = {Microelectronics and Reliability},
  volume = {22},
  number = {5},
  pages = {1033--1034},
  year = {1982},
  abstract = {A computer program for enumeration of all success paths between
    a specified pair of nodes in a probabilistic nonoriented graph is described.
    It can easily be adapted for use with oriented graphs.}}

@article{Hur-MR-83,
  title = {{Enumeration of all simple paths in a directed graph using Petri
    net: a systematic approach}},
  author = {G. S. Hura},
  journal = {Microelectronics and Reliability},
  volume = {23},
  number = {1},
  pages = {157--159},
  year = {1983},
  abstract = {The determination of all simple (or success) paths between
    two specified nodes in a directed graph finds various applications in
    graph theory, reliability evaluation of a system, etc. Many attempts
    at the problem of determining the $S$-$T$ paths (simple or success paths
    between specified nodes $S$ and $T$) have appeared in the literature.
    The author utilizes the concept of the Petri net as yet another attempt
    at the same problem. The proposed technique is simple and tackles the
    problem in a systematic way and is amenable to computer implementation.}}

@article{IkeMatTam-DAM-93,
  title = {{Adjacency of the best and second best valued solutions in combinatorial
    optimization problems}},
  author = {Y. Ikebe and Tomomi Matsui and A. Tamura},
  journal = {Discrete Applied Mathematics},
  volume = {47},
  number = {3},
  pages = {227--232},
  year = {1993},
  review = {MR-94i-90104}}

@article{MR-94i-90104,
  reviews = {IkeMatTam-DAM-93},
  journal = {Mathematical Reviews},
  publisher = {Amer. Math. Soc.},
  title = {{Adjacency of the best and second best valued solutions in combinatorial
    optimization problems}},
  volume = {94i},
  number = {90104},
  year = {1994},
  text = {We say that a polytope satisfies the strong adjacency property
    if every best valued extreme point of the polytope is adjacent to some
    second best valued extreme point for any weight vector. Perfect matching
    polytopes satisfy this property. In this paper, we give sufficient conditions
    for a polytope to satisfy the strong adjacency property. From this, binary
    $b$-matching polytopes, set partitioning polytopes, set packing polytopes,
    etc. satisfy the strong adjacency property.}}

@article{Ish-JORSJ-78,
  title = {{A new method finding the $K$th best path in a graph}},
  author = {Hiroaka Ishii},
  journal = {J. Oper. Res. Soc. Japan},
  volume = {21},
  number = {4},
  pages = {469--476},
  year = {1978},
  review = {MR-81a-05078}}

@article{MR-81a-05078,
  reviews = {Ish-JORSJ-78},
  journal = {Mathematical Reviews},
  publisher = {Amer. Math. Soc.},
  title = {{A new method finding the $K$th best path in a graph}},
  author = {Kenji Onaga},
  volume = {81a},
  number = {05078},
  year = {1981},
  text = {This paper presents a new algorithm determining the Kth best path
    without any circuit between two specified vertices in a connected, simple
    and nonoriented graph. The method presented here is based on the well-known
    fact that the minimum set of ring sum of several Euler graphs and a special
    path between two vertices consists of all paths between the vertices.
    Lastly, an illustrative example is given and the efficiency of the algorithm
    is estimated approximately.}}

@article{JanZemSki-TCS-92,
  title = {{Precise rank-ordering of all paths through an interconnection
    network}},
  author = {Y.-F. Jan and A. H. Zemanian and Steven S. Skiena},
  journal = {Trans. Circuits and Systems},
  publisher = {IEEE},
  volume = {39},
  number = {12},
  pages = {1011--1014},
  month = {December},
  year = {1992},
  abstract = {A method for precisely ranking all the input-to-output transmission
    paths in an interconnection network is given. It is based upon the superposition
    principle along with a novel technique for decomposing the network into
    simpler networks, each having exactly one input-to-output path. The output
    voltages of the latter networks sum to that of the original network and
    determine the ranks. The procedure can be used for both DC and AC steady-state
    regimes. It can also ascertain whether an intended transmission path
    in a circuit design truly dominates all other paths.}}

@phdthesis{Jay-PhD-92,
  title = {{In-Vehicle Information Systems for Network Traffic Control: A
    Simulation Framework to Study Alternative Guidance Strategies}},
  author = {R. Jayakrishnan},
  school = {Univ. of Texas, Austin, Dept. of Civil Engineering},
  year = {1992},
  abstract = {Efforts are underway around the world to use advanced telecommunication
    and information technologies for improving the traffic quality in congested
    urban areas through new approaches to effect better traffic patterns.
    However these efforts to-date have proceeded without much insights on
    several key elements with profound effect on the resulting system performance.
    This research develops a simulation framework to study certain aspects
    that influence the performance of traffic networks under information.
    A framework is developed that integrates the modelling of three key elements
    of traffic systems under information, namely, the traffic flow simulation,
    the path-processing aspects and the driver response to information. The
    simulation moves the vehicles using macroscopic traffic flow relations
    in discretized network segments, while tracking their positions. The
    boundedly rational behavioral model assumed for the driver response captures
    the driver decisions to stay on suboptimal but sufficing paths despite
    the provided route information. The framework is applied to candidate
    networks under information, to study the system performance under different
    levels of usage of technology and different driver behavior parameters.
    Two different programs were developed: one for networks with parallel
    highways towards a single destination, and one for networks of general
    shapes and multiple destinations. The former model with faster path processing
    is also used for studying an idealized corridor for its stochastic-dynamic
    equilibration behavior under information using iterative simulations
    with available utility functions. The latter model is used for a realistic
    city network similar to the core network of Austin, Texas. The path processing
    component is developed carefully, and is flexible enough to model the
    driver behavior of selecting from a few paths under non-mandatory guidance.
    Efficient data structures are used for the efficient enumeration and
    updating of k-shortest paths. If these paths are not updated every simulation
    time step, the trip times on the existing k-paths are updated by efficient
    routines using two possible algorithms: one intended for sequential processors
    and another for a processor with vectorization capabilities. The results
    provide important insights on the effectiveness of in-vehicle information.
    Only a relatively small fraction (less than 30{\%}) of the drivers may need
    to be equipped to obtain almost all of the advantages of guidance, and
    the system could get worse for higher percentages depending on the network
    context.}}

@inproceedings{JayThu-CGT-80,
  title = {{Analysis of a spanning tree enumeration algorithm}},
  author = {Rajagopalan Jayakumar and K. Thulasiraman},
  booktitle = {Combinatorics and Graph Theory},
  number = {885},
  series = {Lecture Notes in Mathematics},
  publisher = {Springer Verlag},
  pages = {284--289},
  year = {1980},
  review = {MR-83f-68072}}

@article{MR-83f-68072,
  reviews = {JayThu-CGT-80},
  journal = {Mathematical Reviews},
  publisher = {Amer. Math. Soc.},
  title = {{Analysis of a spanning tree enumeration algorithm}},
  volume = {83f},
  number = {68072},
  year = {1983},
  text = {Enumeration of all the spanning trees of a graph is one of the
    widely studied graph problems. Several methods have been proposed for
    listing all the spanning trees of a graph. Minty's method and Gabow and
    Meyer's method are known to be very efficient. In 1968 J. P. Char [IEEE
    Trans. Circuit Theory 15 (1968), 228 - 238; MR 39 {\#}6779] presented a
    conceptually simple and elegant algorithm. In this paper we present an
    analysis of Char's algorithm and report some interesting behaviour of
    this algorithm.}}

@article{JayThuSwa-TCS-84,
  title = {{Complexity of computation of a spanning tree enumeration algorithm}},
  author = {Rajagopalan Jayakumar and K. Thulasiraman and M. N. Swamy},
  journal = {Trans. Circuits and Systems},
  publisher = {IEEE},
  volume = {31},
  number = {10},
  pages = {853--860},
  year = {1984},
  review = {MR-86g-68074}}

@article{MR-86g-68074,
  reviews = {JayThuSwa-TCS-84},
  journal = {Mathematical Reviews},
  publisher = {Amer. Math. Soc.},
  title = {{Complexity of computation of a spanning tree enumeration algorithm}},
  volume = {86g},
  number = {68074},
  year = {1986},
  text = {In 1968, J. P. Char [IEEE Trans. Circuit Theory 15 (1968), 228--238;
    MR 39 {\#}6779] presented an algorithm to enumerate all the spanning trees
    of an undirected graph $G$. This algorithm starts with a known initial
    spanning tree of $G$, and generates all the other spanning trees along
    with certain spanning nontree subgraphs of $G$. In this paper a detailed
    complexity analysis of Char's algorithm and methods to speed up the algorithm
    are discussed. Two heuristics for the selection of the initial spanning
    tree are suggested. These heuristics result in a considerable reduction
    in the number of spanning nontree subgraphs generated. A technique called
    path compression, aimed at reducing the actual number of comparisons,
    is described. Computational results on several randomly generated graphs
    are presented to illustrate the improvement achieved.}}

@article{JayThuSwa-TCS-89,
  title = {{MOD-CHAR: an implementation of Char's spanning tree enumeration
    algorithm and its complexity analysis}},
  author = {Rajagopalan Jayakumar and K. Thulasiraman and M. N. Swamy},
  journal = {Trans. Circuits and Systems},
  publisher = {IEEE},
  volume = {36},
  number = {2},
  pages = {219--228},
  year = {1989},
  review = {MR-90h-68060}}

@article{MR-90h-68060,
  reviews = {JayThuSwa-TCS-89},
  journal = {Mathematical Reviews},
  publisher = {Amer. Math. Soc.},
  title = {{MOD-CHAR: an implementation of Char's spanning tree enumeration
    algorithm and its complexity analysis}},
  volume = {90h},
  number = {68060},
  year = {1990},
  text = {An implementation, called MOD-CHAR, of J. P. Char's spanning tree
    enumeration algorithm [same journal 15 (1968), 228--238; MR 39 {\#}6779]
    is discussed. Two complexity analyses of MOD-CHAR are presented. It is
    shown that MOD-CHAR leads to better complexity results for Char's algorithm
    than those obtained using the straightforward implementation implied
    in Char's original presentation. The class of graphs for which MOD-CHAR
    and, hence, Char's algorithm has linear time complexity per spanning
    tree generated is identified. Using a result due to Matula on random
    graphs, it is proved that for almost all graphs MOD-CHAR has linear worst-case
    time complexity per spanning tree generated. It is also shown that for
    any complete graph MOD-CHAR requires, on the average, at most seven computational
    steps to generate a spanning tree. This result and computational experiences
    provide evidence to believe that for dense graphs of any order the time
    complexity of MOD-CHAR is $O(t)$, where $t$ is the number of spanning
    trees generated. On the other hand, there is enough evidence to conclude
    that for sparse graphs, Char's original implementation is superior to
    MOD-CHAR.}}

@inproceedings{JimMar-APR-00,
  title = {{Computation of the $N$ best parse trees for weighted and stochastic
    context-free grammars}},
  author = {Jim{\'e}nez Pelayo, V{\'\i}ctor Manuel and Marzal Var{\'o}, Andr{\'e}s},
  booktitle = {Advances in Pattern Recognition: Proc. Joint IAPR 8th Int.
    Worksh. Structural and Syntactic Pattern Recognition and 3rd Int. Worksh.
    Statistical Pattern Recognition},
  number = {1876},
  editor = {F. J. Ferri and J. M. I{\~n}esta and A. Amin and P. Pudil},
  series = {Lecture Notes in Computer Science},
  publisher = {Springer Verlag},
  pages = {183--192},
  year = {2000},
  url = {http://terra.act.uji.es/~vjimenez/sspr2000.ps.gz},
  abstract = {Context-Free Grammars are the object of increasing interest
    in the pattern recognition research community in an attempt to overcome
    the limited modeling capabilities of the simpler regular grammars, and
    have application in a variety of fields such as language modeling, speech
    recognition, optical character recognition, computational biology, etc.
    This paper proposes an efficient algorithm to solve one of the problems
    associated to the use of weighted and stochastic Context-Free Grammars:
    the problem of computing the N best parse trees of a given string. After
    the best parse tree has been computed using the CYK algorithm, a large
    number of alternative parse trees are obtained, in order by weight (or
    probability), in a small fraction of the time required by the CYK algorithm
    to find the best parse tree. This is confirmed by experimental results
    using grammars from two different domains: a chromosome grammar, and
    a grammar modeling natural language sentences from the Wall Street Journal
    corpus.}}

@article{JimMar-APRA-94,
  title = {{A new algorithm for finding the $N$ best sentence hypotheses
    in continuous speech recognition}},
  author = {Jim{\'e}nez Pelayo, V{\'\i}ctor Manuel and Marzal Var{\'o}, Andr{\'e}s},
  journal = {Advances in Pattern Recognition and Applications},
  note = {To appear}}

@inproceedings{JimMar-WAE-99,
  title = {{Computing the $K$ shortest paths: a new algorithm and an experimental
    comparison}},
  author = {Jim{\'e}nez Pelayo, V{\'\i}ctor Manuel and Marzal Var{\'o}, Andr{\'e}s},
  booktitle = {Proc. 3rd Worksh. Algorithm Engineering},
  month = {July},
  year = {1999},
  url = {http://terra.act.uji.es/REA/papers/wae99.ps.gz},
  abstract = {A new algorithm to compute the K shortest paths (in order of
    increasing length) between a given pair of nodes in a digraph with n
    nodes and m arcs is presented. The algorithm recursively and efficiently
    solves a set of equations which generalize the Bellman equations for
    the (single) shortest path problem and allows a straightforward implementation.
    After the shortest path from the initial node to every other node has
    been computed, the algorithm finds the K shortest paths in O(m + K n
    log(m/n)) time. Experimental results presented in this paper show that
    the algorithm outperforms in practice the algorithms by Eppstein and
    by Martins and Santos for different kinds of random generated graphs.}}

@inproceedings{JimMarVid-ES-93,
  title = {{Efficient enumeration of sentence hypotheses in connected word
    recognition}},
  author = {Jim{\'e}nez Pelayo, V{\'\i}ctor Manuel and Marzal Var{\'o}, Andr{\'e}s and E.
    Vidal},
  booktitle = {Proc. Eurospeech},
  pages = {2183--2186},
  year = {1993}}

@inproceedings{JinCha-ISCS-89,
  title = {{An electrical method for finding suboptimal routes}},
  author = {L.-M. Jin and S.-P. Chan},
  booktitle = {Int. Symp. Circuits and Systems},
  publisher = {IEEE},
  volume = {2},
  pages = {935--938},
  year = {1989},
  abstract = {An algorithm is presented for finding the suboptimal routes,
    or the kth shortest paths, between two nodes in a network. The algorithm
    works by building up an electric computational analogy that consists
    of an ideal diode in series with a DC voltage source. The computational
    operations increase linearly with the order of k. The algorithm also
    works efficiently for finding all routes between two nodes for a given
    network.}}

@article{Joh-MST-82,
  title = {{A priority queue in which initialization and queue operations
    take $O(\log\log D)$ time}},
  author = {Donald B. Johnson},
  journal = {Mathematical Systems Theory},
  volume = {15},
  pages = {295--309},
  year = {1982}}

@article{JohKas-JACM-78,
  title = {{Lower bounds for selection in $X+Y$ and other multisets}},
  author = {Donald B. Johnson and Samuel D. Kashdan},
  journal = {J. Assoc. Comput. Mach.},
  publisher = {ACM},
  volume = {25},
  number = {4},
  pages = {556--570},
  year = {1978},
  review = {MR-80b-68054}}

@article{MR-80b-68054,
  reviews = {JohKas-JACM-78},
  journal = {Mathematical Reviews},
  publisher = {Amer. Math. Soc.},
  title = {{Lower bounds for selection in $X+Y$ and other multisets}},
  author = {Claus-Peter Schnorr},
  volume = {80b},
  number = {68054},
  year = {1980},
  text = {It is known that the structure in the multiset $X+Y$, for $X$ and
    $Y$ multisets of $n$ real numbers, enables selection to be performed
    more quickly than in other sets of size $O(n^2)$. In this paper, a lower
    bound of $\Omega(\max(n, K^{1/2}\log K))$ is given for selecting the
    $K$th element in $X+X$, and thus in $X+Y$, for $K$ selecting the first
    through the median element. Selection of gaps, that is, consecutive differences
    in a sorted order, is shown to be $\Omega(n\log n)$ for all $K$. These
    results hold also when inputs are restricted to integers. The problem
    of selection on $X+X$ can be generalized to selection on the set of multisets
    of size m chosen from $X$, where the multisets are ranked on the sums
    of their elements. When m and n grow, selection of the $K$th largest
    multiset of size $m$ is NP-hard when inputs are expressed in binary notation.
    If subsets of $X$ are characterized as paths, circuits or spanning trees
    of an edge-weighted graph, then selection of the $K$th largest such subset
    of $X$ remains NP-hard. It is not possible to show these problems to
    be NP-hard when inputs are expressed in unary, since algorithms exist
    which run in time polynomial in the sums of the values of the inputs.}}

@techreport{JohKas-TR-76,
  title = {{Lower bounds for selection in $X+Y$ and other multisets}},
  author = {Donald B. Johnson and Samuel D. Kashdan},
  institution = {Pennsylvania State Univ., Computer Science Dept.},
  number = {183},
  year = {1976}}

@article{JohMiz-SJC-78,
  title = {{Selecting the $K$th element in $X+Y$ and $X_1+X_2+\cdots+X_n$}},
  author = {Donald B. Johnson and Tetsuo Mizoguchi},
  journal = {SIAM J. Computing},
  publisher = {SIAM},
  volume = {7},
  number = {2},
  pages = {147--153},
  year = {1978}}

@inproceedings{JooKimKo-ICSS-94,
  title = {{Algorithms for efficient bandwidth utilization on survivable
    telecommunication networks}},
  author = {U. G. Joo and J. G. Kim and J. S. Ko},
  booktitle = {ICCS, Singapore},
  publisher = {IEEE},
  volume = {3},
  pages = {1154--1157},
  year = {1994},
  abstract = {This paper suggests a line restoration (rerouting) algorithm
    based on the minimum cost path (rather than the k-shortest path) for
    protection possible link failures and also develops a spare capacity
    determination algorithm based on the k-shortest path for the restoration
    algorithm. The restoration algorithm can supplement telecommunication
    networks with dedicated facility restoration mechanisms, where some intelligent
    transmission devices such as broadband digital cross-connect systems
    (BDCSs) are involved. These algorithms, described by illustrative examples,
    can be utilized in a general network for efficient bandwidth utilization.}}

@inproceedings{JosPilRat-INFORMS-96,
  title = {{Variance reduction strategies in route guidance}},
  author = {Shirish Joshi and Rekha S. Pillai and Ajay K. Rathi and Suvrajeet
    Sen and Jeffrey David Tew},
  booktitle = {Proc. Conf. Inst. for Operations Research and the Management
    Sciences, Washington},
  month = {May},
  year = {1996},
  abstract = {We illustrate the use of 2 correlation induction strategies
    in reducing the variance of travel time estimates in route guidance systems.
    Antithetic and control variates are used in a dynamic stochastic k-shortest
    path algorithm to reduce the estimate of the mean travel time. This is
    motivated by the fact that a route with lower travel time variance is
    preferred by some travelers.}}

@inproceedings{JunValFoh-ASSP-95,
  title = {{An $N$-best strategy, dynamic grammars and selectively trained
    neural networks for real-time recognition of continuously spelled names
    over the telephone}},
  author = {Jean-Claude Junqua and S. Valente and D. Fohr and J.-F. Mari},
  booktitle = {Proc. Int. Conf. Acoustics, Speech, and Signal Processing},
  publisher = {IEEE},
  volume = {1},
  pages = {852--855},
  month = {May},
  year = {1995},
  abstract = {We introduce SmarTspelL, a new speaker-independent algorithm
    to recognize continuously spelled names over the telephone. Our method
    is based on an $N$-best multi-pass recognition strategy applying costly
    constraints when the number of possible candidates is low. This strategy
    outperforms an HMM recognizer using a grammar containing all the possible
    names. It is also more suitable to real-time implementation. For a 3388
    name dictionary, a 95.3{\%} name recognition rate is obtained. A real-time
    prototype has been implemented on a workstation. We also present comparisons
    of different feature sets for speech representation, and two speech recognition
    approaches based on first- and second-order HMMs.}}

@article{Kan-Comb-87,
  title = {{Maximum and $k$th maximal spanning trees of a weighted graph}},
  author = {Mikio Kano},
  journal = {Combinatorica},
  volume = {7},
  number = {2},
  pages = {205--214},
  year = {1987},
  review = {MR-88k-05064}}

@article{MR-88k-05064,
  reviews = {Kan-Comb-87},
  journal = {Mathematical Reviews},
  publisher = {Amer. Math. Soc.},
  title = {{Maximum and $k$th maximal spanning trees of a weighted graph}},
  author = {R. E. Pippert},
  volume = {88k},
  number = {05064},
  year = {1988},
  text = {Let $G$ be a weighted graph. A spanning tree $A$ of $G$ having
    maximum weight is called a maximum spanning tree. Let $P$ be any other
    spanning tree of $G$. The author shows the existence of a bijection $\Psi\colon
    A\sbs P\to P\sbs A$ such that, for every edge $a\in A\sbs P$, $Q\equiv(P\sbs\Psi(a))\cup
    a$ is a spanning tree of $G$ with weight at least as large as that of
    $P$. This result is used to address interpolation-type problems for spanning
    trees of weighted graphs. Several earlier results are given with shorter
    proofs, and additional results are also established.}}

@article{KapRam-SJC-95,
  title = {{Algorithms for enumerating all spanning-trees of undirected and
    weighted graphs}},
  author = {Sanjiv Kapoor and H. Ramesh},
  journal = {SIAM J. Computing},
  publisher = {SIAM},
  volume = {24},
  number = {2},
  pages = {247--265},
  month = {April},
  year = {1995},
  note = {In this paper, we present algorithms for enumeration of spanning
    trees in undirected graphs, with and without weights. The algorithms
    use a search tree technique to construct a computation tree. The computation
    tree can be used to output all spanning trees by outputting only relative
    changes between spanning trees rather than the entire spanning trees
    themselves. Both the construction of the computation tree and the listing
    of the trees is shown to require O(N + V + E) operations for the case
    of undirected graphs without weights. The basic algorithm is based on
    swapping edges in a fundamental cycle. For the case of weighted graphs
    (undirected), we show that the nodes of the computation tree of spanning
    trees can be sorted in increasing order of weight, in O(N log V + VE)
    time. The spanning trees themselves can be listed in O(NV) time. Here
    N, V, and E refer, respectively, to the number of spanning trees, vertices,
    and edges of the graph.}}

@inproceedings{KapRam-WADS-91,
  title = {{Algorithms for enumerating all spanning-trees of undirected and
    weighted graphs}},
  author = {Sanjiv Kapoor and H. Ramesh},
  booktitle = {Proc. 2nd Worksh. Algorithms {\&} Data Structures},
  number = {519},
  series = {Lecture Notes in Computer Science},
  publisher = {Springer Verlag},
  pages = {461--472},
  year = {1991}}

@inproceedings{KarAya-BON-96,
  title = {{Effects of wavelength routing and selection algorithms on wavelength
    conversion gain in WDM}},
  author = {E. Karasan and E. Ayanoglu},
  booktitle = {Proc. Conf. Broadband Optical Networks},
  publisher = {IEEE},
  month = {August},
  year = {1996},
  abstract = {We propose two $k$ shortest path algorithms for selecting the
    route-wavelength pair in WDM networks with and without wavelength converters
    with orders of magnitude larger conversion gains as compared to conventional
    routing. We state a conclusion on the use of wavelength converters in
    long-distance networks.}}

@article{KatIbaMin-ECJ-78,
  title = {{An $O(Kn^2)$ algorithm for $K$ shortest simple paths in an undirected
    graph with nonnegative arc length}},
  author = {Naoki Katoh and Toshihide Ibaraki and Hisashi Mine},
  journal = {Electronics and Communications in Japan},
  volume = {61},
  number = {12},
  pages = {1--8},
  year = {1978},
  review = {MR-83g-68044}}

@article{MR-83g-68044,
  reviews = {KatIbaMin-ECJ-78},
  journal = {Mathematical Reviews},
  publisher = {Amer. Math. Soc.},
  title = {{An $O(Kn^2)$ algorithm for $K$ shortest simple paths in an undirected
    graph with nonnegative arc length}},
  volume = {83g},
  number = {68044},
  year = {1983},
  text = {We present an O(Kn{sup}2) algorithm to find K shortest simple paths
    in an undirected graph with nonnegative arc length. Here n is the number
    of vertices in the graph. First a shortest simple path is obtained by
    the Dijkstra method. The second through kth shortest simple paths are
    then successively obtained by systematically partitioning the set of
    paths to avoid duplication. The partitioning is accomplished by repeatedly
    calling a subroutine to find in O(n{sup}2) time the shortest simple paths
    not containing a given initial subpath of the first shortest simple path.
    The present algorithm seems to be better than any other existing algorithm
    for K shortest simple paths.}}

@article{KatIbaMin-IECE-78,
  title = {{An $O(Kn^2)$ algorithm for $K$ shortest simple paths in an undirected
    graph with nonnegative arc length}},
  author = {Naoki Katoh and Toshihide Ibaraki and Hisashi Mine},
  journal = {IEICE Trans. Information {\&} Systems},
  volume = {E61},
  pages = {971--972},
  year = {1978},
  abstract = {This paper presents an algorithm for finding the $k$-th shortest
    simple paths $P^k$ for $k=1, 2,\ldots,K$ from node $s$ in $V$ to node
    $t$ in $V$. The subroutine obtains in $O(n^2)$ time the shortest simple
    path under the additional constraint that it branches from a specified
    initial portion of the first shortest path.}}

@article{KatIbaMin-JACM-81,
  title = {{An algorithm for the $K$ best solutions of the resource allocation
    problem}},
  author = {Naoki Katoh and Toshihide Ibaraki and Hisashi Mine},
  journal = {J. Assoc. Comput. Mach.},
  publisher = {ACM},
  volume = {28},
  number = {4},
  pages = {752--764},
  year = {1981},
  review = {MR-83m-90048}}

@article{MR-83m-90048,
  reviews = {KatIbaMin-JACM-81},
  journal = {Mathematical Reviews},
  publisher = {Amer. Math. Soc.},
  title = {{An algorithm for the $K$ best solutions of the resource allocation
    problem}},
  author = {Jan Karel Lenstra},
  volume = {83m},
  number = {90048},
  year = {1983},
  text = {The resource allocation problem considered here is the problem
    of minimizing $\sum_{i=1}^n f_i(x_i)$ subject to $\sum_{i=1}^n x_i=N$
    and $x_i\in N$, where the $f_i$ are convex functions over $[0, N]$ and
    $n\in N$. This problem is solvable in low-order polynomial time; for
    the most efficient approach, see work of G. N. Frederickson and D. B.
    Johnson [``Optimal algorithms for generating quantile information in $X+Y$
    and matrices with sorted columns'', TR CS-79-45, Pennsylvania State Univ.,
    College Park, Pa., 1979; per bibl.]. The authors develop an algorithm
    for obtaining the $K$ best solutions to this problem, which requires
    $O(T^\ast+K\log{K}+K\sqrt{n\log{n}})$ time and $O(K\sqrt{n\log{n}}+n)$
    space, where $T^\ast$ is the time required to find the optimal solution.
    The algorithm is based on the framework given by E. L. Lawler [Management
    Sci. 18 (1972), 401 - 405; MR 45 {\#}1575].}}

@article{KatIbaMin-Nw-82,
  title = {{An efficient algorithm for $K$ shortest simple paths}},
  author = {Naoki Katoh and Toshihide Ibaraki and Hisashi Mine},
  journal = {Networks},
  volume = {12},
  number = {4},
  pages = {411--427},
  year = {1982},
  review = {MR-84i-90059}}

@article{MR-84i-90059,
  reviews = {KatIbaMin-Nw-82},
  journal = {Mathematical Reviews},
  publisher = {Amer. Math. Soc.},
  title = {{An efficient algorithm for $K$ shortest simple paths}},
  author = {M. M. Sys{\l}o},
  volume = {84i},
  number = {90059},
  year = {1984},
  text = {This paper presents an algorithm for obtaining $K$ shortest paths
    (i.e., paths contain no cycles) between two specified nodes in an undirected
    graph with nonnegative edge lengths. Its running time is $O(K\cdot c(n,
    m))$, where $n$ is the number of nodes, $m$ is the number of edges in
    a graph, and $c(n,m)$ is the time to compute shortest paths from one
    node to all the other nodes. The time bound of the proposed algorithm
    is better than those of other algorithms, the best of which (proposed
    by Yen) requires $O(Kn^3)$ time and $c(n,m)\le\min(O(n^2),O(m\log n))$.}}

@article{KatIbaMin-SJC-81,
  title = {{An algorithm for finding $k$ minimum spanning trees}},
  author = {Naoki Katoh and Toshihide Ibaraki and Hisashi Mine},
  journal = {SIAM J. Computing},
  publisher = {SIAM},
  volume = {10},
  number = {2},
  pages = {247--255},
  year = {1981},
  review = {MR-82k-68037}}

@article{MR-82k-68037,
  reviews = {KatIbaMin-SJC-81},
  journal = {Mathematical Reviews},
  publisher = {Amer. Math. Soc.},
  title = {{An algorithm for finding $k$ minimum spanning trees}},
  volume = {82k},
  number = {68037},
  year = {1982},
  text = {We present an algorithm for finding $K$ minimum spanning trees
    in an undirected graph. The required time is $O(Km+\min(n^2, m\log\log
    n))$ and the space is $O(K+m)$, where $n$ is the number of vertices and
    $m$ is the number of edges. The algorithm is based on three subroutines.
    The first two subroutines are used to obtain the second minimum spanning
    tree on $O(\min(n^2, m\alpha (m, n)))$ steps, where $\alpha (m, n)$ is
    Tarjan's inverse of Ackermann's function [M. Blum et al., J. Comput.
    System Sci. 7 (1973), 448 - 461; MR 48 {\#}8256] which is very slowly growing.
    The third one obtains the kth minimum spanning tree in $O(m)$ steps when
    the $j$th minimum spanning trees for $j=1,2,\ldots,k-1$ are given.}}

@inproceedings{KatTra-ACSC-95,
  title = {{Simple parallel algorithms for the replacement edge problem and
    related problems on spanning trees}},
  author = {Jyrki Katajainen and J. L. Traff},
  booktitle = {Proc. 18th Australasian Computer Science Conf.},
  number = {1},
  series = {Australian Computer Science Communications},
  volume = {17},
  pages = {254--261},
  month = {February},
  year = {1995},
  abstract = {Let $G$ ($G'$) be a connected, undirected (directed), weighted
    graph with $n$ vertices and $m$ edges. Further, let $S$ be a spanning
    tree of $G$, $T$ a minimum spanning tree of $G$, and $U$ a shortest path
    tree of $G'$. In this paper simple parallel algorithms are presented
    for the following problems: (a) Finding replacement edge for minimum
    spanning tree edges: Given $G$ and $T$, determine, for each edge $e$
    of $T$, a non-tree edge $f$ by which $e$ should be replaced to create
    a new minimum spanning tree if $e$ is removed from $G$. (b) Finding the
    most vital edge with respect to minimum spanning trees: Given $G$, determine
    a most vital edge of $G$ (with respect to minimum spanning trees), that
    is, an edge whose removal from $G$ has the largest impact on the weight
    of a minimum spanning tree of $G$. (c) Verification of minimum spanning
    trees: Given $G$ and $S$, determine whether $S$ is a minimum spanning
    tree of $G$. (d) Sensitivity analysis for minimum spanning trees: Given
    $G$ and $T$, compute, for each edge $e$ of $G$, by how much the weight
    of $e$ can change without affecting the minimality of $T$. (e) Sensitivity
    analysis for shortest path trees: Given $G'$ and $U$, compute, for each
    edge $e$ of $G'$, by how much the weight of $e$ can change without affecting
    the minimality of $U$. The algorithms run in $O(\log n)$ time and $O(m)$
    space with $m$ processors. The problems (a), (b), (d), and (e) are solved
    on a MINIMUM CRCW PRAM, whereas the problem (c) is solved on a CREW PRAM.
    The algorithms utilize a simple technique for computing functions defined
    on paths in trees that might be of independent interest.}}

@inproceedings{KazSri-PDC-93,
  title = {{Fast distributed algorithms for disjoint paths and connectivity}},
  author = {A. Kazmierczak and R. Sridhar},
  booktitle = {Proc. 6th Int. Conf. Parallel and Distributed Computing},
  publisher = {ISCA},
  pages = {236--241},
  year = {1993},
  abstract = {Efficient distributed algorithms for determining vertex disjoint
    s-t paths, edge disjoint s-t paths, and testing k-vertex connectivity
    in networks is presented in this paper. The vertex (respectively, edge)
    disjoint s-t paths problem is defined as follows. Given a graph G with
    n vertices and m edges, and two specified vertices s and t, find k vertex
    (respectively, edge) disjoint paths between s and t, if they exist.}}

@article{KhaSin-EL-80,
  title = {{Petri net approach to enumerate all simple paths in a graph}},
  author = {A. A. Khan and H. Singh},
  journal = {Electronics Letters},
  volume = {16},
  number = {8},
  pages = {291--292},
  month = {April},
  year = {1980},
  abstract = {A technique utilising the concept of reachability in a Petri
    net is proposed to enumerate all simple paths between two specified nodes
    of a graph. It is simple and requires little computation.}}

@inproceedings{Khe-HICSS-72,
  title = {{A new approach to finding all routes and loops in networks}},
  author = {N. A. Kheir},
  booktitle = {Proc. 5th Hawaii Int. Conf. System Science},
  publisher = {Western Periodicals Co.},
  editor = {A. Lew},
  pages = {522--524},
  month = {January},
  year = {1972},
  abstract = {THe problem of finding all the routes (paths) between any two
    points (nodes) and/or all the loops is of special interest in many of
    the areas where systems are represented by networks. In this paper, the
    applicability of Mason's Signal Flow Graph, originally developed for
    the analysis of complex feedback systems, is extended for non-electrical
    engineering problems. An algorithm has been developed based on what is
    defined as the `Lines` of the graph. A number of applications are discussed.}}

@article{KimKim-Omega-99,
  title = {{A decomposition approach to a multi-period vehicle scheduling
    problem}},
  author = {Jung-Ug Kim and Yeong-Dae Kim},
  journal = {Omega},
  volume = {27},
  number = {4},
  pages = {421--430},
  month = {August},
  year = {1999},
  abstract = {We consider a multi-period vehicle scheduling problem (MPVSP)
    in a transportation system where a fleet of homogeneous vehicles delivers
    products of a single type from a central depot to multiple (N) retailers.
    The objective of the MPVSP is to minimize transportation costs for product
    delivery and inventory holding costs at retailers over the planning horizon.
    A two-phase heuristic algorithm is suggested based on a k-shortest path
    algorithm. In the first phase of the algorithm, the MPVSP is decomposed
    into N single-retailer problems by ignoring the number of vehicles available.
    In the second phase, a set of vehicle schedules is selected from those
    generated in the first phase. The vehicle schedule selection problem
    is a generalized assignment problem and it is solved by a heuristic based
    on the k-shortest path algorithm. Computational experiments on randomly
    generated test problems show that the suggested algorithm gave near optimal
    solutions in a reasonable amount of computation time.}}

@inproceedings{KleRaoRau-STOC-94,
  title = {{Faster shortest-path algorithms for planar graphs}},
  author = {Philip N. Klein and Satish Rao and Monika H. Rauch and Sairam
    Subramanian},
  booktitle = {Proc. 26th Symp. Theory of Computing},
  publisher = {ACM},
  pages = {27--37},
  year = {1994},
  abstract = {We give a linear-time algorithm for single-source shortest
    paths in planar graphs with nonnegative edge-lengths. Our algorithm also
    yields a linear-time algorithm for maximum flow in a planar graph with
    the source and sink on the same face. The previous best algorithms for
    these problems required Omega (n square root (log n)) time where n is
    the number of nodes in the input graph. For the case where negative edge-lengths
    are allowed, we give an algorithm requiring O(n/sup 4/3/ log nL) time,
    where L is the absolute valve of the most negative length. Previous algorithms
    for shortest paths with negative edge-lengths required Omega (n/sup 3/2/)
    time. Our shortest-path algorithm yields an O(n/sup 4/3/ log n)-time
    algorithm for finding a perfect matching in a planar bipartite graph.
    A similar improvement is obtained for maximum flow in a directed planar
    graph.}}

@inproceedings{KniHat-ACL-95,
  title = {{Two-level, many-paths generation}},
  author = {Kevin Knight and Vasileios Hatzivassiloglou},
  booktitle = {Proc. Conf. Assoc. for Computational Linguistics},
  pages = {252--260},
  year = {1995},
  url = {http://www.isi.edu/natural-language/mt/acl95.ps},
  comment = {Text from section 7 of the paper: ``Instead of explicitly constructing
    all possible renditions of a semantic input $\ldots$ we use a more efficient
    data structure and control algorithm to express possible ambiguities.
    The data structure is a word lattice---an acyclic state transition network
    with one start state, one final state, and transitions labeled by words.
    $\ldots$ Once the semantic input to the generator has been transformed
    to a word lattice, a search component identifies the $N$ highest scoring
    paths from the start to the final state, according to our statistical
    language model. We use a version of the $N$-best algorithm (Chow and
    Schwartz, 1989), a Viterbi-style beam search algorithm that allows extraction
    of more than just the best scoring path. (Hatzivassiloglou and Knight,
    1995) has more details on our search algorithm and the method we applied
    to estimate the parameters of the statistical model.''}}

@article{KonGreMou-JTE-96,
  title = {{Strategy for solving static multiple-optimal path transit network
    problems}},
  author = {N. Koncz and J. Greenfeld and K. Mouskos},
  journal = {J. Transportation Engineering},
  publisher = {ASCE},
  volume = {122},
  number = {3},
  pages = {218--225},
  year = {1996},
  abstract = {The trip making process using transit versus private automobile
    differs in the use of time schedules, walking paths, transfer stops,
    plus issues such as fare and safety.  Due to these factors, many of the
    standard shortest path algorithms do not apply.  The purpose of this
    study is to develop an algorithm and strategy for transit providers to
    find best alternatives for the user, and to demonstrate how a geographic
    information system can be used in the development of transit advanced
    traveler information system (TATIS) to meet these needs.  This paper
    presents a short introduction to TATIS systems, some commonly used algorithms
    in determining the shortest and multiple paths, and anew strategy that
    was developed in this study which differs from standard network algorithms.
     The major features of this proposed algorithm are: (1) Capability of
    handling multiple modes of transit; (2) providing paths that include
    walking distances from and to the transit path as well as between transfer
    points; and (3) provision of multiple optimal paths to allow the user
    flexibility in choosing a path.}}

@article{KonMan-MR-88,
  title = {{An improved method of enumerating all trees and minimal paths
    in a graph using Petri nets}},
  author = {J. M. Kontoleon and D. Mandaltsis},
  journal = {Microelectronics and Reliability},
  volume = {28},
  number = {5},
  pages = {783--791},
  year = {1988},
  abstract = {Two algorithms are presented. The first enumerates all the
    trees in a graph while the second enumerates all the minimal paths between
    two vertices of a graph. Both algorithms are based on the concept of
    reachability in Petri nets and they are fast and simple. These algorithms
    always enumerate only real trees and minimal paths while similar earlier
    techniques sometimes fail at this point.}}

@article{KubXuXie-GA-97,
  title = {{A minimax method for finding the k best ''differentiated'' paths}},
  author = {M. Kuby and Z. Y. Xu and X. D. Xie},
  journal = {Geographical Analysis},
  volume = {29},
  number = {4},
  pages = {298--313},
  month = {October},
  year = {1997},
  note = {In real-world applications, the k-shortest-paths between a pair
    of nodes on a network will often be slight variations of one another.
    This could be a problem for many path-based models, particularly those
    on a capacitated networks where different routing alternatives are needed
    that are less likely to encounter the same capacity constraints. This
    paper develops a method to solve for k differentiated paths that are
    relatively short and yet relatively different from one another, but not
    necessarily disjoint. Our method utilizes the sum of a path's distance
    plus some fraction of its shared distance with each other path. A minimax
    algorithm is used to select the path whose largest sum of length, plus
    shared length vis-a-vis each previously selected path, is as simple as
    possible. We present computational results for the Chinese railway system,
    comparing the paths generated by a standard k-shortest-path algorithm
    with those from our new model.}}

@inproceedings{KuhNieSch-ASSP-94,
  title = {{Ergodic hidden Markov models and polygrams for language modeling}},
  author = {T. Kuhn and H. Niemann and E. G. Schukat-Talamazzini},
  booktitle = {Proc. Int. Conf. Acoustics, Speech, and Signal Processing},
  publisher = {IEEE},
  volume = {1},
  pages = {I/357--360},
  month = {April},
  year = {1994},
  abstract = {Presents two new techniques for language modeling in speech
    recognition. The first technique is based on ergodic discrete density
    hidden Markov models (HMM) which can be applied to bigrams based on word
    categories. This statistical approach of the so-called Markov bigrams
    enables an efficient unsupervised learning procedure for the bigram probabilities
    with the well-known Baum-Welch algorithm. Furthermore, maximizing the
    model-conditional probability is equivalent to minimizing the perplexity
    of the training corpus. The second technique is based on polygrams which
    are an extension of the bigram ($n=2$) or trigram ($n=3$) grammars to
    any possible value of $n$. According to the smoothing techniques for
    bigram or trigram models, the probabilities of the $n$-grams in the polygram
    model are interpolated using the relative frequencies of all $n'$-grams
    with $n'\le n$. Both techniques were evaluated on the ATIS corpus by
    computing the test set perplexity. Furthermore the authors integrated
    the Markov bigrams as well as the polygrams into their word recognizer
    for continuous speech. Experimental results on a German database are
    discussed using the $N$-best paradigm to reorder the generated word sequences
    according to the sentence probability of the language model.}}

@article{KumGho-CSI-94,
  title = {{Parallel algorithm for finding first $K$ shortest paths}},
  author = {N. Kumar and R. K. Ghosh},
  journal = {Computer Science and Informatics},
  volume = {24},
  number = {3},
  pages = {21--28},
  month = {September},
  year = {1994}}

@article{Kun-Int-94,
  title = {{An incremental algorithm for identification of longest (shortest)
    paths}},
  author = {S. Kundu},
  journal = {Integration, The VLSI Journal},
  volume = {17},
  pages = {25--31},
  year = {1994},
  abstract = {In this paper we describe an algorithm that finds the next
    k longest or shortest paths of a directed acyclic graph on demand, without
    computing all previous paths again. We also suggest a technique to find
    longest (shortest) paths through a specific input or a specific output
    or a specific input output pair. This algorithm has many applications
    including but not limited to timing analysis of digital integrated circuits,
    timing driven placement of digital circuits, and delay analysis/routing
    of messages in computer communication networks.}}

@article{KwoChaHal-TIE-96,
  title = {{Genetic algorithm for optimizing the nonlinear time alignment
    of automatic speech recognition systems}},
  author = {S. Kwong and C. W. Chau and W. A. Halang},
  journal = {Trans. Industrial Electronics},
  publisher = {IEEE},
  volume = {43},
  number = {5},
  pages = {559--566},
  month = {October},
  year = {1996},
  abstract = {Dynamic time warping (DTW) is a nonlinear time-alignment technique
    for automatic speech recognition (ASR) systems. It had been widely used
    in many commercial and industrial products, ranging from electronic dailies/dictionaries
    to wireless voice digit dialers. DTW has the advantages of fast training
    and searching times, which makes it more popular than other available
    ASR techniques. However, there exist some limitations to DTW, such as
    the stringent rule on slope weighting, the nontrivial computation of
    the K-best paths, and the significant increase in computational time
    when the endpoint constraint is relaxed or the variations of the length
    of pattern increased. In this paper, a stochastic method called the genetic
    algorithm (GA), which is used to solve the nonlinear time alignment problem,
    is presented. Experimental results show that the GA has a better performance
    than the DTW. In addition two derivatives of GA: the hybrid GA and the
    parallel GA are also presented.}}

@article{KwoHeMan-IJPRAI-98,
  title = {{Parallel genetic-based hybrid pattern matching algorithm for
    isolated word recognition}},
  author = {S. Kwong and Q. H. He and K. F. Man and K. S. Tang and C. W.
    Chau},
  journal = {Int. J. Pattern Recognition {\&} Artificial Intelligence},
  volume = {12},
  number = {5},
  pages = {573--594},
  month = {August},
  year = {1998},
  abstract = {Dynamic time warping (DTW) is a common technique widely used
    for nonlinear time normalization of different utterances in many speech
    recognition systems. Two major problems are usually encountered when
    the DTW is applied for recognizing speech utterances: (i) the normalization
    factors used in a warping path; and (ii) finding the K-best warping paths.
    Although DTW is modified to compute multiple warping paths by using the
    tree-trellis search (TTS) algorithm, the use of actual normalization
    factor still remains a major problem for the DTW. In this paper, a parallel
    genetic time warping (PGTW) is proposed to solve the above said problems.
    A database extracted from the TIMIT speech database of 95 isolated words
    is set up for evaluating the performance of the PGTW. In the database,
    each of the first 15 words had 70 different utterances, and the remaining
    80 words had only one utterance. For each of the 15 words, one utterance
    is arbitrarily selected as the test template for recognition. Distance
    measure for each test template to the utterances of the same word and
    to those of the 80 words is calculated with three different time warping
    algorithms: TTS, PGTW and sequential genetic time warping (SGTW). A normal
    distribution model is used to evaluate the performance of the three algorithms
    analytically. The analyzed results showed that the PGTW had performed
    better than the TTS. It also showed that the PGTW had very similar results
    as the SGTW, but about 30{\%} CPU time is saved in the single processor
    system.}}

@article{LagGlo-MS-93,
  title = {{Bandwidth packing: a tabu search approach}},
  author = {M. Laguna and F. Glover},
  journal = {Management Science},
  volume = {39},
  pages = {492--500},
  year = {1993},
  abstract = {The bandwidth packing (BWP) problem is a combinatorially difficult
    problem arising in the area of telecommunications. The problem consists
    of assigning calls to paths in a capacitated graph such that capacities
    are not violated and the total profit is maximized. The authors discuss
    the development of a tabu search (TS) method for the BWP problem. The
    method makes use of an efficient implementation of the k-shortest path
    algorithm, that allows the identification of a controlled set of feasible
    paths for each call. A tabu search is then performed to find the best
    path assignment for each call. The TS method developed incorporates a
    number of features that have proved useful for obtaining optimal and
    near optimal solutions to difficult combinatorial problems. The authors
    establish the effectiveness of their approach by comparing its performance
    in speed and solution quality to other specialized heuristics and to
    a standard optimization package applied to a 0-1 integer programming
    formulation of the problem.}}

@article{LalPap-IPL-97,
  title = {{Computing strictly-second shortest paths}},
  author = {Kumar N. Lalgudi and Marios C. Papaefthymiou},
  journal = {Information Processing Letters},
  volume = {64},
  number = {4},
  pages = {177--181},
  month = {August},
  year = {1997},
  note = {We investigate the problem of computing the strictly-second shortest
    path connecting a given pair of vertices in a directed graph.  We show
    that this problem is intractable when the path is restricted to be simple.
     When cycles are allowed, we give an algorithm that solves it in asymptotically
    the same number of steps as it takes to compute the shortest path between
    the given vertex pair.}}

@article{LalVas-GVUZPM-87,
  title = {{Transformation of an oriented graph for finding the $k$ shortest
    paths.}},
  author = {P. I. Lalov and T. G. Vasil{\'c}eva},
  journal = {Godishnik Vissh. Uchebn. Zaved. Prilozhna Mat.},
  volume = {23},
  number = {4},
  pages = {189--194},
  year = {1987},
  note = {In Bulgarian.},
  review = {MR-92m-05114}}

@article{MR-92m-05114,
  reviews = {LalVas-GVUZPM-87},
  journal = {Mathematical Reviews},
  publisher = {Amer. Math. Soc.},
  title = {{Transformation of an oriented graph for finding the $k$ shortest
    paths.}},
  volume = {92m},
  number = {05114},
  year = {1992},
  text = {We consider an algorithm for finding the shortest simple path between
    two given vertices $s$ and $t$. The algorithm is based on the Dijkstra
    procedure for finding the minimal spanning tree of a graph and a graph
    transformation that preserves certain paths. If this method is applied
    to a graph with $m$ edges and $n$ points, there are $O(km+kn^2)$ elementary
    operations.}}

@article{Law-CACM-77,
  title = {{Comment on computing the $k$ shortest paths in a graph}},
  author = {Eugene L. Lawler},
  journal = {Commun. Assoc. Comput. Mach.},
  publisher = {ACM},
  volume = {20},
  pages = {603--604},
  year = {1977},
  abstract = {In ibid., vol.17, pp.351-3 (June 1974) Minieka presents generalizations
    of the Floyd and Dantzig shortest path algorithms for the purpose of
    computing the k shortest paths between all pairs of vertices in a graph.
    He comments that to his knowledge no algorithm had been devised to solve
    this problem.},
  review = {MR-58-19354}}

@article{MR-58-19354,
  reviews = {Law-CACM-77},
  journal = {Mathematical Reviews},
  publisher = {Amer. Math. Soc.},
  title = {{Comment on computing the $k$ shortest paths in a graph}},
  author = {Colin J. H. McDiarmid},
  volume = {58},
  number = {19354},
  year = {1979}}

@article{Law-MS-72,
  title = {{A procedure for computing the $K$ best solutions to discrete
    optimization problems and its application to the shortest path problem}},
  author = {Eugene L. Lawler},
  journal = {Management Science},
  volume = {18},
  pages = {401--405},
  year = {1972},
  abstract = {A general procedure is presented for computing the best, 2nd
    best, $\ldots$, $K$th best solutions to a given discrete optimization
    problem. If the number of computational steps required to find an optimal
    solution to a problem with $n$ $(0,1)$ variables is $c(n)$, then the
    amount of computation required to obtain the $K$ best solutions is $O(Knc(n))$.
    The procedure specializes to published procedures of Murty (1968) and
    of Yen (1971) for the assignment problem and the shortest path problem,
    respectively. A method is presented for reducing the required amount
    of storage by a factor of $n$, compare with the algorithms of Murty and
    of Yen. It is shown how the $K$ shortest (loopless) paths in an $n$-node
    network with positive and negative arcs can be computed with an amount
    of computation which is $O(Kn^3)$. This represents an improvement by
    a factor of $n$, compared with Yen's algorithm.},
  review = {MR-45-1575}}

@article{MR-45-1575,
  reviews = {Law-MS-72},
  journal = {Mathematical Reviews},
  publisher = {Amer. Math. Soc.},
  title = {{A procedure for computing the $K$ best solutions to discrete
    optimization problems and its application to the shortest path problem}},
  author = {J. Moravek},
  volume = {45},
  number = {1575},
  year = {1973}}

@inproceedings{LawRez-CN-93,
  title = {{Computing the $K$-shortest paths, under nonnegative weighting}},
  author = {A. G. Law and A. Rezazadeh},
  booktitle = {Proc. 22nd Manitoba Conf. Numerical Mathematics and Computing},
  number = {92},
  series = {Congr. Numer.},
  pages = {277--280},
  year = {1993}}

@article{LecRen-ZOR-90,
  title = {{$k$-best constrained bases of a matroid}},
  author = {M. Leclerc and F. Rendl},
  journal = {Zeitschrift f{\"u}r Operations Research},
  volume = {34},
  pages = {79--89},
  year = {1990},
  review = {MR-91h-05039}}

@article{MR-91h-05039,
  reviews = {LecRen-ZOR-90},
  journal = {Mathematical Reviews},
  publisher = {Amer. Math. Soc.},
  title = {{$k$-best constrained bases of a matroid}},
  author = {Donald M. Topkis},
  volume = {91h},
  number = {05039},
  year = {1991},
  text = {This paper considers the problem of finding the $k$-best bases
    of a matroid, where the bases are required to satisfy certain partition-like
    constraints. A valid algorithm is presented, and its worst-case running
    time is given.}}

@inproceedings{LeeLeeCho-ICRA-95,
  title = {{A real time traffic control scheme for a multiple AGV system}},
  author = {J.-H. Lee and B. H. Lee and M. H. Choi and J. D. Kim and K.-T.
    Joo and H. Park},
  booktitle = {Int. Conf. Robotics and Automation},
  publisher = {IEEE},
  volume = {2},
  pages = {1625--1630},
  year = {1995},
  abstract = {The conflict-free minimum-time motion planning problem in a
    multiple AGV system using zone control requires a traffic control scheme
    based upon a non-search technique, since the number of nodes contained
    in the network model for its guidepath is considerably large. The traffic
    control scheme presented in this paper partitions the overall task into
    two constituent tasks of path generation and traffic control. The Path
    Generator employs a k-shortest path search algorithm to construct path
    sets between all possible station node pairs. The path generation process
    is performed in off-line. Occupation times for each link are calculated
    and stored in a link occupation table which is represented from a link-oriented
    viewpoint. The traffic controller examines the link occupation table
    and dispatches AGVs in a conflict-free minimum-time path. The on-line
    motion planning operation is performed in real time.}}

@article{LeeLeeCho-SMC-98,
  title = {{A real-time traffic control scheme of multiple AGV systems for
    collision free minimum time motion: A routing table approach}},
  author = {J.-H. Lee and B. H. Lee and M. H. Choi},
  journal = {Trans. Systems, Man, and Cybernetics},
  publisher = {IEEE},
  volume = {28},
  number = {3},
  pages = {347--358},
  month = {May},
  year = {1998},
  abstract = {A two-staged traffic control scheme, in which sets of candidate
    paths are prepared off-line prior to overall motion planning process,
    has been widely adopted for motion planning of mobile robots, but relatively
    little attention has been given to the application of the two staged
    scheme to multiple automated guided vehicle systems (MAGVS's). In this
    paper, a systematic two-staged traffic control scheme is presented to
    obtain collision-free minimum-time motions of AGV's along loopless paths.
    The overall structure of the controller is divided into two tandem modules
    of off-line routing table generator (RTG) and an on-line traffic controller
    (OTC). First, an induced network model is established considering the
    configurational restrictions off guide-paths. With this model and a modified
    k-shortest path algorithm, RTG finds sets of k candidate paths from each
    station nodes to all the other station nodes off-line and stores them
    in the form of routing tables. Each time a dispatch command for an AGV
    is issued, OTC utilizes these routing tables to generate a collision-free
    minimum-time motion along a loopless path. Realtime computation is guaranteed
    in that time-consuming graph searching process is executed off-line by
    RTG, and OTC looks for the minimum time motion among the k candidate
    paths. The traffic control scheme proposed is suitable for practical
    application in centralized MAGVS with zone blocking technique.}}

@article{LeeWu-IEICE-99,
  title = {{A $K$-best paths algorithm for highly reliable communication
    networks}},
  author = {Shi-Wei Lee and Cheng-Shong Wu},
  journal = {IEICE Trans. Communications},
  volume = {E82-B},
  number = {4},
  pages = {586--590},
  month = {April},
  year = {1999},
  url = {http://search.ieice.org/1999/pdf/e82-b_4_575.pdf},
  abstract = {In highly reliable communication network design, disjoint paths
    between pairs of nodes are often needed in the design phase. The problem
    of finding k paths which are as diverse as possible and have the lowest
    total cost is called a k-best paths problem. We propose an algorithm
    for finding the k-best paths connecting a pair of nodes in a graph G.
    Graph extension is used to transfer the k-best paths problem to a problem
    which deposits well-known maximum flow (MaxFlow) and minimum cost network
    flow (MCNF) algorithms. We prove the k-best paths solution of our algorithm
    to be an optimal one and the time complexity is the same as the MCNF
    algorithm. Our computational experiences show that the proposed algorithm
    can solve the k-best paths problem for a large network within reasonable
    computation time.}}

@article{LeiAliEze-CIE-86,
  title = {{A branch-and-bound algorithm for implementing set covering model
    expert systems}},
  author = {W. Leigh and D. Ali and C. Ezell and N. Paz},
  journal = {Computers and Industrial Engineering},
  volume = {11},
  pages = {464--467},
  year = {1986},
  abstract = {The conventional rule-based expert system can be formulated
    as a 0-1 integer program, specifically as a set covering problem. However,
    the implementation of an expert system in this way requires that the
    set covering model be solved for k-best alternate optima or near-optima.
    The authors have devised a branch-and-bound algorithm which accomplishes
    this. The details of the algorithm are explained in the paper. Computational
    results are provided.}}

@inproceedings{LeoOda-RTERC-93,
  title = {{A realtime algorithm for finding the $k$ shortest paths minimizing
    travel time and right turns}},
  author = {John Leo and Toshihiko Oda},
  booktitle = {Proc. 13th Road Traffic Engineering Research Conf.},
  publisher = {Japan Soc. for Road Traffic Engineering Research},
  pages = {133--136},
  month = {November},
  year = {1993},
  comment = {From http://www.halfaya.org/leo/interests/writing/technical.html:
    ``An extended abstract in English of part of this paper used to be available
    via anonymous ftp from theory.lcs.mit.edu, but it has been removed. Contact
    me via email [jleo@us.oracle.com] if you'd like a copy. Note however
    that the version of this algorithm that handles simple paths (which is
    unfortunately the most interesting version) is incorrect. This was pointed
    out to me by David Staepelaere at UC Santa Cruz. There doesn't seem to
    be a good fix. Send me email if you'd like more information.''},
  note = {In Japanese}}

@article{LiaShe-PC-97,
  title = {{Finding the $k$ most vital edges in the minimum spanning tree
    problem}},
  author = {Wei Fa Liang and X. J. Shen},
  journal = {Parallel Computing},
  volume = {23},
  number = {13},
  pages = {1889--1907},
  month = {December},
  year = {1997},
  note = {Let G(V, E) be a weighted, undirected, connected simple graph with
    n vertices and m edges.  The k most vital edge problem with respect to
    a minimum spanning tree is to find a set S(subset of or equal to E) of
    k edges in G whose removal results in the greatest increase in the weight
    of the minimum spanning tree in the remaining graph G(V, E - S).  Although
    for arbitrary k, Frederickson et al.  have shown that this problem is
    NP-hard, it is polynomial time solvable when k is fixed.  In this paper
    we introduce a sparse, weighted k-edge connected certificate of a graph
    which has been found very useful, By using this certificate, we first
    present a general algorithm for the problem above, Then, for a fixed
    k {$>$} 1, we present efficient sequential and parallel algorithms.  Our
    sequential algorithm runs in time O(n(k + 1)).  Our parallel algorithm
    runs in time O(log n loglog n) using O(n(k + 1)) processors on an EREW
    PRAM. If the minimum spanning tree of G and the sparse, weighted (k +
    1)-edge connected certificate of G are given, the algorithm runs in time
    O(log n) using O(n(k + 1)) processors on the same model. Particularly,
    when k = 1, we develop parallel algorithms which require O(log n loglog
    n) time using O(m + n(2)/(log n loglog n)) processors on an EREW PRAM,
    and O(log n loglog n) time using O(m) processors on a CREW PRAM respectively,
    and the algorithm on the EREW PRAM is the fastest, compared with previous
    known algorithms.}}

@article{Lib-AOR-99,
  title = {{On accuracy of solutions for discrete optimization problems with
    perturbed coefficients of the objective function}},
  author = {Marek Libura},
  series = {Annals of Operations Research},
  publisher = {Baltzer Science Publishers},
  volume = {86},
  pages = {53--62},
  year = {1999},
  abstract = {An approach to the sensitivity analysis for discrete optimization
    problems with perturbed objective function is presented. The problem
    is stated in the following general form: min( Sigma_{e in Y} c(e):Y in
    F), where c=(c(e), e in E) is a vector of weights for some finite set
    E, and F contained in 2{$^\wedge$}E is a given family of feasible subsets. It is
    assumed that the set of feasible solutions F is fixed, but the coefficients
    of the vector c may vary. The main problem considered in this paper concerns
    the following question: How does the maximum relative error of a given
    feasible solution depend on inaccuracies of the problem data? Two particular
    perturbations of the vector c are considered: (i) it is assumed that
    c is in a closed ball with radius delta \ge 0 and center c{$^\wedge$}0\ge 0 or
    (ii) the relative deviation of c(e) from the value c{$^\wedge$}0(e) is not greater
    than delta for any e in E, i.e., |c(e)-c{$^\wedge$}0(e)|\le delta c{$^\wedge$}0(e), e in
    E. For a given feasible solution X in F, two functions of the parameter
    delta are introduced: the sensitivity function s(X,delta) and the accuracy
    function a(X,delta). The values of s(X,delta) and a(X,delta) are equal
    to the maximum relative error of the solution X when the perturbations
    of problem data are of the type (i) or (ii), respectively. Some general,
    but computationally inefficient formulae for calculating these functions
    are derived and their properties are studied. It is shown that s(X,delta)
    and a(X,delta) are nondecreasing, convex functions with a limited number
    of breakpoints. A practically efficient method of calculating upper and
    lower envelopes for the accuracy function is presented. This method is
    based on the notion of k-best solutions of the problem. It gives an interval
    to which the maximum relative error of the solution X must belong when
    the coefficients of vector c are given with accuracy delta . The approach
    is illustrated with an example of the symmetric traveling salesman problem.}}

@inproceedings{LibPoo-ECCO-95,
  title = {{On $k$-best solutions and sensitivity analysis for the traveling
    salesman problem}},
  author = {Marek Libura and Edo S. van der Poort},
  booktitle = {ECCO VIII, Poznan, Poland, Conf. of the Eur. Chapter on Combinatorial
    Optimization},
  year = {1995}}

@article{LibPooSie-DAM-98,
  title = {{Stability aspects of the traveling salesman problem based on
    $k$-best solutions}},
  author = {Marek Libura and Edo S. van der Poort and Gerard Sierksma and
    Jack A. A. van der Veen},
  journal = {Discrete Applied Mathematics},
  volume = {87},
  number = {1--3},
  pages = {159--185},
  month = {October},
  year = {1998},
  abstract = {This paper discusses stability analysis for the Traveling Salesman
    Problem (TSP). For a traveling salesman tour which is known to be optimal
    with respect to a given instance (length vector) we are interested in
    determining the stability region, i.e. the set of all length vectors
    for which the tour is optimal. The following three subsets of the stability
    region are of special interest: (1) tolerances, i.e. the maximum perturbations
    of single edges; (2) tolerance regions which are subsets of the stability
    region that can be constructed from the tolerances; and (3) the largest
    ball contained in the stability region centered at the given length vector
    (the corresponding radius is known as the stability radius). It is well
    known that the problems of determining tolerances and the stability radius
    for the TSP are NP-hard so that in general it is not possible to obtain
    the above-mentioned three subsets without spending a lot of computation
    time. The question addressed in this paper is the following: assume that
    not only an optimal tour is known, but also a set of k shortest tours
    (k{$>$}or=2) is given. Then to which extent does this allow us to determine
    the three subsets in polynomial time? It will be shown in this paper
    that having k-best solutions can give the desired information only partially.
    More precisely, it will be shown that only some of the tolerances can
    be determined exactly and for the other ones as well as for the stability
    radius only lower and/or upper bounds can be derived. Since the amount
    of information that can be derived from the set of k-best solutions is
    dependent on both the value of k as well as on the specific length vector,
    we present numerical experiments on instances from the TSPLIB library
    to analyze the effectiveness of our approach.}}

@inproceedings{LibPooSie-ISMP-97,
  title = {{Sensitivity analysis for combinatorial optimization problems
    based on subsets of $k$-best solutions}},
  author = {Marek Libura and Edo S. van der Poort and Gerard Sierksma and
    Jack A. A. van der Veen},
  booktitle = {Int. Symp. Mathematical Programming},
  month = {August},
  year = {1997},
  abstract = {We consider the combinatorial optimization problem: $\min \{
    \sum_{e \in F} c(e) : F \in {\cal F} \}$, where for a given finite set
    $E$, $c(e)$ denotes the weight of element $e \in E$, and $\cal F$ is
    a family of feasible subsets ${\cal F} \subseteq 2^E$. Assuming that
    a set of k-best solutions of this problem is known, we investigate the
    possibility of solving various sensitivity analysis questions concerning
    the weights of elements. We concentrate on the following problems: --
    calculating so-called tolerances of weights with respect to an optimal
    solution, defined as maximum individual changes of weights preserving
    the optimality of this solution; -- describing the region of allowable
    simultaneous changes of weights provided by tolerances of single weights;
    -- computing so-called stability radius of an optimal solution, which
    gives the maximum simultaneous changes of weights preserving the optimality
    of this solution; -- determining the maximum relative error of a given
    feasible solution as a function of accuracy of estimating the weights
    of elements. We illustrate presented results with examples of the symmetric
    traveling salesman problem.}}

@inproceedings{LinDav-ISCS-87,
  title = {{Electrical network theory applications to optimal routing problems}},
  author = {L.-M. Jin and A. C. Davies},
  booktitle = {Proc. Int. Symp. Circuits {\&} Systems},
  publisher = {IEEE},
  volume = {1},
  pages = {23--26},
  month = {May},
  year = {1987},
  abstract = {A variety of problems of operations research can be solved
    by analogies with electrical networks. In some cases, this approach appears
    to offer improved solution algorithms to those conventionally used, and
    in others it provides an alternative and interesting insight into the
    problems and their solution. The authors illustrate these concepts by
    examples of networks with negative cost branches, negative cost loops,
    finding the $k^{\rm th}$ least cost routes, optimized networks in which
    all routes have equal cost, and sensitivity of least cost routes to cost
    variations.}}

@article{LinTse-EJOR-93,
  title = {{Generating the best $K$-sequences in relocation problems}},
  author = {B. M. T. Lin and S. S. Tseng},
  journal = {Eur. J. Operational Research},
  volume = {69},
  number = {1},
  pages = {131--137},
  month = {August},
  year = {1993},
  note = {There is a set J of h jobs to be processed. For every i, job J(i)
    demands n(i) units of resources and returns a(i) units after completion.
    The problem is to find the best K schedules whose resource requirements
    are minimum among all h! ones. In this paper, we present some important
    structural properties and then propose an O(h log h + hK log K) time
    algorithm, which runs in polynomial time if K is fixed.}}

@inproceedings{Liu-IEAAI-95,
  title = {{Intelligent air travel and tourist information systems}},
  author = {Bing Liu},
  booktitle = {Proc. 8th Int. Conf. Engineering Applications of Artificial
    Intelligence and Expert Systems},
  publisher = {Gordon {\&} Breach},
  editor = {G. F. Forsyth},
  pages = {603--610},
  month = {June},
  year = {1995},
  abstract = {Traveling and touring has become an important part of modern
    life. The planning of such activities is, however, often time-consuming
    and frustrating. In this paper, a prototype computer system is described
    that is aimed at helping in these situations. Specifically, the system
    helps in two types of planning. The first type is travel planning (i.e.
    before we leave, we need to make travel arrangements). The second is
    sightseeing planning (i.e. when we arrive at our destination, we need
    to get some advice and to plan our sightseeing so that we can make best
    use of our time there). To deal with the first problem, two modified
    k-shortest path algorithms and a double search technique are proposed.
    To deal with the second problem, a machine learning technique is employed
    to make the system learn to give sightseeing advice. A branch-and-bound
    technique is also used to sequence sightseeing activities.}}

@inproceedings{LloWriJon-ASSP-95,
  title = {{An integrated grammar/bigram language model using path scores}},
  author = {H. Lloyd-Thomas and J. H. Wright and G. J. F. Jones},
  booktitle = {Proc. Int. Conf. Acoustics, Speech, and Signal Processing},
  publisher = {IEEE},
  volume = {1},
  pages = {173--176},
  month = {May},
  year = {1995},
  abstract = {This paper describes a language model in which context-free
    grammar rules are integrated into an $n$-gram framework, complementing
    it instead of attempting to replace it. This releases the grammar from
    the aim of parsing sentences overall (which is often undesirable as well
    as unrealistic), enabling it to be employed selectively in modelling
    phrases that are identifiable within a flow of speech. Algorithms for
    model training and for sentence scoring and interpretation are described.
    All are based on the principle of summing over paths that span the sentence,
    but implementation is node-based for efficiency. Perplexity results for
    this system (using a hierarchy of grammars from empty to full-coverage)
    are compared with those for $n$-gram models, and the system is used for
    re-scoring $N$-best sentence lists for a speaker-independent recogniser.}}

@article{MacGro-SPE-94,
  title = {{Optimized $k$-shortest-paths algorithm for facility restoration}},
  author = {M. H. MacGregor and Wayne Davy Grover},
  journal = {Software Practice and Experience},
  volume = {24},
  number = {9},
  pages = {823--834},
  month = {September},
  year = {1994},
  abstract = {The problem of finding shortest paths arises in many contexts;
    testing restoration algorithms and developing design packages for large
    telecommunications networks are two cases where the simple task of finding
    sets of restoration paths can consume up to 95 per cent of the execution
    time of an application program. This paper presents experimental studies
    of several well-known shortest-paths algorithms adapted to the task of
    finding the $k$-successively-shortest link-disjoint replacement paths
    for restoration in a telecommunications network with $n$ nodes. The implementations
    range in complexity from $O(kn^2)$ when based on Dijkstra's original
    method (1959), through several improvements to an efficient implementation
    of $O(kn(v+\log{n}))$ complexity, and finally to an $O(kn)$ implementation
    for the special case of edge-sparse graphs with small integer edge weights.}}

@incollection{MacSouCan-AOR-91,
  title = {{An approach for the Steiner problem in directed graphs}},
  author = {Nelson Maculan and Paulo Souza and Candia Vejar, Alfredo},
  booktitle = {Topological Network Design},
  number = {33},
  editor = {J. MacGregor Smith and P. Winter},
  series = {Annals of Operations Research},
  publisher = {Baltzer Science Publishers},
  pages = {471--480},
  year = {1991},
  review = {MR-92h-90051}}

@article{MR-92h-90051,
  reviews = {MacSouCan-AOR-91},
  journal = {Mathematical Reviews},
  publisher = {Amer. Math. Soc.},
  title = {{An approach for the Steiner problem in directed graphs}},
  volume = {92h},
  number = {90051},
  year = {1992},
  text = {We present a scheme to solve the Steiner problem in directed graphs
    using a heuristic method to obtain upper bounds and the $k$ shortest
    arborescences algorithm to compute lower bounds. We propose to combine
    these ideas in an enumerative algorithm. Computational results are presented
    for both the $k$ shortest arborescenses algorithm and the heuristic method,
    including reduction tests for the problem.}}

@inproceedings{MahHuZil-CSOR-92,
  title = {{Implementation and testing of a $K$-shortest path algorithm in
    a vector and parallel processing environment}},
  author = {Ta-Yin Hu and Hani S. Mahmassani and Athanasios Kostantine Ziliaskopoulos},
  booktitle = {Proc. Conf. Computer Science {\&} Operations Research: New Developments
    {\&} their Interfaces},
  month = {January},
  year = {1992}}

@inproceedings{MaIwaGu-AIZU-97,
  title = {{A parallel algorithm for $k$-minimum spanning trees}},
  author = {Jun Ma and K. Iwama and Qian-Ping Gu},
  booktitle = {Proc. 2nd AIZU Int. Symp. Parallel Algorithms/Architecture
    Synthesis},
  publisher = {IEEE},
  pages = {384--388},
  month = {March},
  year = {1997},
  abstract = {A parallel algorithm to find $k$, $2\le k\le n^{n-2}$, spanning
    trees from a connected, weighted and undirected graph C(V, E, W) in the
    order of increasing weight is presented. It runs in $O(T(n)+k\log n)$
    time with $O(n^2\log n)$ processors on a CREW PRAM, where $n=|V|$, $m=|E|$
    and $T(n)$, $O(\log n)\le T(n)\le O(\log^2 n)$, is the time of the fastest
    parallel algorithms to find a minimum spanning tree of G on a CREW PRAM
    with no more than $O(n^2\log n)$ processors. Since $T(n)=O(\log^2 n)$
    for the time being, this result shows that to find $k$ minimum spanning
    trees can be done in the same time bound as to find just one when $k\le
    O(\log n)$ on a CREW PRAM.}}

@article{MalMitGup-ORL-89,
  title = {{The $k$ most vital arcs in the shortest path problem}},
  author = {K. Malik and A. K. Mittal and S. K. Gupta},
  journal = {Operations Research Lett.},
  volume = {8},
  pages = {223--227},
  year = {1989},
  abstract = {The k most vital arcs in a network are those whose removal
    from the network results in the greatest increase in the shortest distance
    between two specified nodes. An exact algorithm is proposed to determine
    the k most vital arcs. Furthermore, an algorithm of time complexity equal
    to that of Dijkstra's algorithm for the shortest path problem is developed
    to solve the single most vital arc problem.}}

@inproceedings{MamBer-PES-78,
  title = {{Alternative long-range expansion plans for transmission systems}},
  author = {K. R. C. Mamandur and G. J. Berg},
  booktitle = {Power Engineering Soc., Winter Mtg.},
  publisher = {IEEE},
  pages = {042-4/1-6},
  year = {1978},
  abstract = {Presents a long range transmission expansion planning technique
    which gives k-best policies for the transmission system expansion, k
    being specified by the planner. The objective is to minimize the net
    present value of the capital investment cost associated with the construction
    of new transmission facilities. The approach is based on an efficient
    algorithm for finding k-shortest loopless paths (k{$>$}or=1) from one node
    in a network to another. A minimum number of feasible expansion alternatives
    are determined at every stage, and the first, second, third, etc., optimal
    expansion plans are subsequently identified. Application of the method
    to a simple network is illustrated.}}

@article{Mar-EJOR-84,
  title = {{An algorithm for ranking paths that may contain cycles}},
  author = {Ernesto de Queir{\'o}s Vieira Martins},
  journal = {Eur. J. Operational Research},
  volume = {18},
  number = {1},
  pages = {123--130},
  year = {1984},
  review = {MR-85j-05030}}

@article{MR-85j-05030,
  reviews = {Mar-EJOR-84},
  journal = {Mathematical Reviews},
  publisher = {Amer. Math. Soc.},
  title = {{An algorithm for ranking paths that may contain cycles}},
  author = {Takao Ozawa},
  volume = {85j},
  number = {05030},
  year = {1985},
  text = {In order to find the $K$ best paths in a directed network, a sequence
    of networks $G\sb 1,\cdots,G\sb i,G\sb {i+1},\cdots,G\sb K$ is constructed,
    where $G\sb 1$ is the given network and $G\sb {i+1}$ is derived from
    $G\sb i$ in such a way that only the best path in $G\sb i$ is eliminated.
    The elimination procedure of the best path $p\sb i=\{s\sb 1,(s\sb 1,s\sb
    2),s\sb 2,\cdots,s\sb {m-1}, (s\sb {m-1},s\sb m),s\sb m\}$ in $G\sb i$
    in the case of $m>2$ is as follows.
    
    Step 1: Delete arc $(s\sb {m-1},s\sb m)$ from $G\sb i$.
    Step 2: For node $s\sb j$ $(j=2,\cdots,m-1)$ in $G\sb i$ adjoin node
    $s'\sb j$.
    Step 3: For every arc $(x,s\sb j)$ $(j=2,\cdots,m-1)$ in $G\sb i$ adjoin
    arc $(x,s'\sb j)$.
    Step 4: For $j=2,\cdots,m-2$ adjoin arc $(s'\sb j,s'\sb {j+1})$.
    Step 5: Adjoin arc $(s'\sb {m-1},s\sb m)$.
    
    The best path in $G\sb i$ for $i=1,2,\cdots,K$ may be obtained by any
    existing shortest path algorithm. Computational results are presented
    and comparisons with Dreyfus' algorithms and the double-sweep method
    of Shier are made. As for the computational time the proposed approach
    is never the worst, and never the best. The memory space required is
    smaller. The approach can be used for ranking paths under a nonlinear
    objective function.}}

@article{Mar-IEICE-93,
  title = {{A new $k$th-shortest path algorithm}},
  author = {H. Maruyama},
  journal = {IEICE Trans. Information {\&} Systems},
  volume = {E76-D},
  number = {3},
  pages = {388--389},
  month = {March},
  year = {1993},
  abstract = {An algorithm is presented for finding the kth-shortest paths
    between a specified pair of vertices in a directed graph with arcs having
    nonnegative costs. The kth-shortest path problem is to find the shortest,
    the second shortest, the third shortest, . . and the kth-shortest paths
    from the origin vertex s to the target vertex t. Paths may contain repeated
    vertices. Two paths are considered distinct if they do not visit precisely
    the same vertices in the same order. Under certain conditions, the algorithm
    is faster than Dreyfus' algorithm (S.C. Dreyfus, 1969).}}

@article{Mar-ORS-83,
  title = {{An algorithm for ranking paths in acyclic networks}},
  author = {Ernesto de Queir{\'o}s Vieira Martins},
  journal = {Operations Research Spektrum},
  volume = {5},
  pages = {87--90},
  year = {1983},
  abstract = {The algorithm is initialised with the determination of the
    shortest tree which is placed in a candidate List. At each step the tree
    for which the distance of the path between two specified nodes is minimal
    is removed from List. Some adjacent trees of the removed one are generated
    and placed in List in such a way that repetitions are avoided. This method
    is repeated until the desired paths have been determined. The computational
    complexity of the algorithm is studied too.}}

@inproceedings{MarFohAug-ICSLP-94,
  title = {{Hidden Markov models and selectively trained neural networks
    for connected confusable word recognition}},
  author = {J.-F. Mari and D. Fohr and Y. Auglade and Jean-Claude Junqua},
  booktitle = {Proc. Int. Conf. Spoken Language Processing},
  publisher = {Acoustical Soc. Japan},
  volume = {3},
  pages = {1519--1522},
  month = {September},
  year = {1994},
  abstract = {This paper presents a new method for connected-word recognition
    with confusable vocabularies, such as connected letters. The recognition
    process is performed in two steps. First, a second-order HMM provides
    $N$-best word strings. Then, the strings of confusable letters are discriminated
    by a procedure based on acoustic knowledge and artificial neural networks
    (ANN). This method has been tested on an American-English database containing
    spelled names collected through the telephone network. The results obtained
    with the first HMM pass and the improvements made with the ANN are presented
    and discussed. When a 3,300 name dictionary and a retrieval procedure
    based on a DTW alignment algorithm were used, 96{\%} recognition accuracy
    was obtained.}}

@techreport{MarJim-TR-92,
  title = {{A comparative study of classical algorithms and new approaches
    for the search of the $K$ best paths in a graph}},
  author = {Marzal Var{\'o}, Andr{\'e}s and Jim{\'e}nez Pelayo, V{\'\i}ctor Manuel},
  institution = {Univ. Polit{\'e}cnica de Valencia, Spain, Dep. Sist. Inform{\'a}ticos
    y Computaci{\'o}n},
  number = {DISC-II/28/92},
  year = {1992}}

@article{MarNie-CGTA-01,
  title = {{Enumerating the $k$ best plane spanning trees}},
  author = {Ambros Marzetta and Jurg Nievergelt},
  journal = {Computational Geometry Theory and Applications},
  volume = {18},
  number = {1},
  pages = {55--64},
  month = {February},
  year = {2001},
  abstract = {A spanning tree constructed of straight line segments over
    a set of points in the Euclidean plane is called ``non-crossing'' or ``plane
    tree'', if no two segments intersect. Imposing the additional constraint
    of non-crossing segments makes many combinatorial geometric problems
    harder. In the case of plane spanning trees, however, we show that they
    can be enumerated efficiently in the order of their total length. This
    makes it possible to efficiently find the $k$ best plane trees, or all
    those shorter than a given bound.}}

@article{MarPasSan-IJFCS-99,
  title = {{Deviation algorithms for ranking shortest paths}},
  author = {Ernesto de Queir{\'o}s Vieira Martins and Marta Margarida Braz Pascoal
    and Jos{\'e} Lu{\'\i}s Esteves dos Santos},
  journal = {Int. J. Found. Comp. Sci.},
  volume = {10},
  number = {3},
  pages = {247--263},
  year = {1999},
  url = {http://www.mat.uc.pt/~eqvm/cientificos/investigacao/Artigos/deviation.ps.gz}}

@inproceedings{MarVid-ICPR-92,
  title = {{A $N$ best sentence hypotheses enumeration algorithm with duration
    constraints based on the two level algorithm}},
  author = {Marzal Var{\'o}, Andr{\'e}s and E. Vidal},
  booktitle = {Proc. 11th Int. Conf. Pattern Recognition},
  publisher = {IEEE},
  year = {1992}}

@article{Mat-Algo-97,
  title = {{A flexible algorithm for generating all the spanning trees in
    undirected graphs}},
  author = {Tomomi Matsui},
  journal = {Algorithmica},
  volume = {18},
  number = {4},
  pages = {530--543},
  month = {August},
  year = {1997},
  abstract = {In this paper we propose an algorithm for generating all the
    spanning trees in undirected graphs. The algorithm requires $O(n+m+\tau
    n)$ time where the given graph has $n$ vertices, $m$ edges, and $\tau$
    spanning trees. For outputting all the spanning trees explicitly, this
    time complexity is optimal.
    
    Our algorithm follows a special rooted tree structure on the skeleton
    graph of the spanning tree polytope. The rule by which the rooted tree
    structure is traversed is irrelevant to the time complexity. In this
    sense, our algorithm is flexible.
    
    If we employ the depth-first search rule. we can save the memory requirement
    to $O(m+\tau n)$. A breadth-first implementation requires as much as
    $O(nr+\tau n)$ space, but when a parallel computer is available, this
    might have an advantage. When a given graph is weighted, the best-first
    search rule provides a ranking algorithm for the minimum spanning tree
    problem. The ranking algorithm requires $O(n + m + \tau n)$ time and
    $O(m + \tau n)$ space when we have a minimum spanning tree.}}

@techreport{Mat-TR-93,
  title = {{An algorithm for finding all the spanning trees in undirected
    graphs}},
  author = {Tomomi Matsui},
  institution = {Univ. of Tokyo, Dept. of Mathematical Engineering and Information
    Physics},
  number = {METR93-08},
  year = {1993},
  abstract = {In this paper we propose an algorithm for generating all the
    spanning trees in undirected graphs. The algorithm requires $O(n+m+\tau
    n)$ time and $O(n+m)$ space where the given graph has $n$ vertices, $m$
    edges, and $\tau$ spanning trees. For outputting all the spanning trees
    explicitly, this algorithm is optimal.}}

@inproceedings{MatMatUno-ISORA-95,
  title = {{Finding all the $s$-$t$ paths in acyclic graphs}},
  author = {Yasuko Matsui and Tomomi Matsui and Takeaki Uno},
  booktitle = {Proc. 1st Int. Symp. Operations Research and Its Applications},
  publisher = {Beijing World Publishing},
  editor = {Ding-Zhu Du and X.-S. Zhang},
  pages = {259--266},
  month = {August},
  year = {1995},
  abstract = {We discuss the problem of finding all the $s$-$t$ paths in
    acyclic graphs under three restrictions and present three enumeration
    algorithms. We propose the following three algorithms: an algorithm for
    finding all the $s$-$t$ paths in acyclic graph; an algorithm for finding
    all the $s$-$t$ shortest paths in directed graphs whose edge set has
    a positive length function; and an algorithm for finding all the optimum
    solutions of the 0-1 knapsack problems.}}

@article{MatTamIke-DAM-94,
  title = {{Algorithms for finding a $K$th best valued assignment}},
  author = {Tomomi Matsui and A. Tamura and Y. Ikebe},
  journal = {Discrete Applied Mathematics},
  volume = {50},
  number = {3},
  pages = {283--296},
  year = {1994},
  review = {MR-95e-90051}}

@article{MR-95e-90051,
  reviews = {MatTamIke-DAM-94},
  journal = {Mathematical Reviews},
  publisher = {Amer. Math. Soc.},
  title = {{Algorithms for finding a $K$th best valued assignment}},
  volume = {95e},
  number = {90051},
  year = {1995},
  text = {We consider a new problem, the $K$th best valued assignment problem.
    Given a bipartite graph $G$ and a cost vector $w$ on its edge set, this
    is the problem of finding a perfect matching $M\sb K$ in $G$ such that
    there exist perfect matchings $M\sb 1,\cdots,M\sb {K-1}$ satisfying $w(M\sb
    1)<\cdots<w(M\sb {K-1})<w(M\sb K)$, and $w(M\sb K)<w(M)$ for all perfect
    matchings $M$ with $w(M)\neq w(M\sb 1),\cdots,w(M\sb K)$. Here $w(M)$
    denotes the sum of costs of edges in $M$. In this paper, we propose two
    algorithms for solving this problem and verify the efficiency of our
    algorithms by our preliminary computational experiments.}}

@article{MayPla-Comb-90,
  title = {{On the spanning trees of weighted graphs}},
  author = {Ernst W. Mayr and C. Greg Plaxton},
  journal = {Combinatorica},
  volume = {12},
  pages = {433--447},
  year = {1992}}

@inproceedings{MayPla-WG-88,
  title = {{On the spanning trees of weighted graphs}},
  author = {Ernst W. Mayr and C. Greg Plaxton},
  booktitle = {Proc. 14th Int. Worksh. Graph-theoretic Concepts in Computer
    Science},
  number = {344},
  series = {Lecture Notes in Computer Science},
  publisher = {Springer Verlag},
  pages = {394--405},
  year = {1988},
  review = {MR-90j-05055}}

@article{MR-90j-05055,
  reviews = {MayPla-WG-88},
  journal = {Mathematical Reviews},
  publisher = {Amer. Math. Soc.},
  title = {{On the spanning trees of weighted graphs}},
  author = {Peter B. Gibbons},
  volume = {90j},
  number = {05055},
  year = {1990},
  text = {This paper addresses four conjectures of M. Kano [Combinatorica
    7 (1987), no. 2, 205--214; MR 88k:05064] relating to the partitioning
    of the spanning trees of a weighted graph into weight classes. Given
    a weighted graph, let $W\sb 1, W\sb 2, W\sb 3,\cdots $ denote the increasing
    sequence of all possible distinct spanning tree weights. The main result
    of the paper is a proof that every minimum spanning tree is at most $k-1$
    edge swaps away from some representative of the $k$th weight class, $W\sb
    k$. This settles the first of Kano's conjectures. With regard to the
    three remaining conjectures, the authors propose a stronger unified conjecture
    and prove that it holds for two nontrivial families of graphs. A proof
    of this conjecture would establish Kano's remaining three conjectures.
    Finally the authors consider the algorithmic complexity of generating
    a spanning tree of weight $W\sb k$. For fixed $k$ they obtain a polynomial-time
    $(\Theta((mn)\sp {k-1}))$ algorithm. When $k$ is part of the input, the
    associated integer weight decision problem (KMST) is shown to be NP-hard
    using a reduction due to D. B. Johnson and S. D. Kashdan [J. Assoc. Comput.
    Mach. 25 (1978), no. 4, 556--570; MR 80b:68054] for the related $k$th
    best spanning tree problem (KBST). A simple branch-and-bound algorithm
    exists for KBST with a running time that is pseudo-polynomial in $k$.
    The authors regard this as a hopeful sign that a similar result might
    be possible for KMST. The authors do not achieve this goal, but instead
    obtain an algorithm for KMST for which the running time is pseudo-polynomial
    in the edge-weights as well as $k$. At the expense of an extra polynomial
    factor this can be converted into an algorithm for generating a representative
    of $W\sb k$. The existence of a pseudo-polynomial (in $k$ alone) algorithm
    for this problem remains an open question.}}

@article{MegTamZem-SJC-81,
  title = {{An $O(n\log^2 n)$ algorithm for the $k$th longest path in a tree
    with applications to location problems}},
  author = {Nimrod Megiddo and Arie Tamir and Eitan Zemel and R. Chandrasekaran},
  journal = {SIAM J. Computing},
  publisher = {SIAM},
  volume = {10},
  pages = {328--337},
  year = {1981},
  abstract = {Many known algorithms are based on selection in a set whose
    cardinality is superlinear in terms of the input length. It is desirable
    in these cases to have selection algorithms that run in sublinear time
    in terms of the cardinality of the set. This paper presents a successful
    development in this direction. The methods developed here are applied
    to improve the previously known upper bounds for the time complexity
    of various location problems.}}

@inproceedings{MelGal-ASSP-95,
  title = {{Global discrimination for neural predictive systems based on
    $N$-best algorithm}},
  author = {A. Mellouk and P. Gallinari},
  booktitle = {Proc. Int. Conf. Acoustics, Speech, and Signal Processing},
  publisher = {IEEE},
  volume = {1},
  pages = {465--468},
  month = {May},
  year = {1995},
  abstract = {We describe a general formalism for training neural predictive
    systems. We then introduce discrimination at the frame level and show
    how it relates to maximum mutual information training. Finally, we propose
    an approach for performing discrimination in predictive systems at the
    sequence level, it makes use of $N$-best sequence selection. The performance
    for acoustic-phonetic decoding showed a 77.4{\%} phone accuracy on the 1988
    version of the TIMIT database.}}

@inproceedings{MelGal-ICANN-95,
  title = {{Improvements in a discriminant hybrid neural predictive system
    for acoustic-phonetic decoding}},
  author = {A. Mellouk and P. Gallinari},
  booktitle = {Proc. Int. Conf. Artificial Neural Networks},
  publisher = {EC2 {\&} Cie},
  volume = {1},
  pages = {247--252},
  month = {October},
  year = {1995},
  abstract = {We describe a general formalism for training neural predictive
    systems. We then introduce discrimination at the frame level and show
    how it relates to maximum mutual information training. Last, we propose
    an approach for performing discrimination in predictive systems at the
    sequence level, it makes use of $N$-Best sequence selection. Performances
    for acoustic-phonetic decoding reach 77.4{\%} phone accuracy on 1988 version
    of TIMIT.}}

@article{MiaChi-EJOR-91,
  title = {{Computing $k$-shortest path for nuclear spent fuel highway transportation}},
  author = {Shaw-Pin Miaou and S.-M. Chin},
  journal = {Eur. J. Operational Research},
  volume = {53},
  pages = {64--80},
  year = {1991},
  abstract = {Four k-shortest path algorithms were implemented to select
    a set of optimal routes for transporting nuclear spent fuel on the US
    Interstate highway system. The first two algorithms maintained a priority
    queue under two different management systems, a linear search and a binary
    heap. The third was an adaptive algorithm which exploited the knowledge
    of the Euclidean distances between nodes to reduce search effort. The
    relative effectiveness of these algorithms in determining the k-shortest
    path was examined in terms of computation time. Finally, a simple (or
    loopless) path algorithm, which required only a minor modification of
    the original k-shortest path algorithm, was introduced for situations
    in which a large set of simple paths was needed.}}

@article{MigMarSci-JCP-90,
  title = {{An algorithm to find all paths between two nodes in a graph}},
  author = {Michele Migliore and Vincenzo Martorana and F. Sciortino},
  journal = {J. Computational Physics},
  volume = {87},
  number = {1},
  pages = {231--236},
  month = {March},
  year = {1990},
  abstract = {The problem of finding paths connecting two nodes in a given
    graph is of great interest for several applications in different fields.
    Whenever complete information on all paths (e.g. total number of paths,
    length, and cost) is needed, a heuristic search is useless. If the size
    of a given application is manageable in terms of available CPU time and/or
    memory limits, an exhaustive search (that is a comprehensive analysis)
    is still the only way to solve this problem. The algorithm presented
    in this note has been successfully used to analyze data from Metropolis-Monte
    Carlo and molecular dynamics computer simulations of 125 water molecules
    interacting through MCY or ST2 potentials. However, it could be easily
    used virtually without modifications in any case that requires an exhaustive
    search of an undirected graph.}}

@article{Mih-PCIT-79,
  title = {{On the problem of the second best assignment}},
  author = {L. Mih{\'a}lyffy},
  journal = {Problems Control Inform. Theory/Problemy Upravlen. Teor. Inform.},
  volume = {8},
  number = {3},
  pages = {257--265},
  year = {1979},
  review = {MR-80e-68158}}

@article{MR-80e-68158,
  reviews = {Mih-PCIT-79},
  journal = {Mathematical Reviews},
  publisher = {Amer. Math. Soc.},
  title = {{On the problem of the second best assignment}},
  volume = {80e},
  number = {68158},
  year = {1980},
  text = {We consider the following problem. Suppose that the unit matrix
    X{sup}0=(x{sub}(ij){sup}0) of order n is an optimal solution of the assignment
    problem min({sum}{sub}(i=1){sup}n 3{sum}{sub}(j=1) {sup}n 3c{sub}(ij)x{sub}(ij){vert}X=(x{sub}(ij))
    is a permutation matrix), and minimize the objective function of this
    assignment problem subject to the constraints (a) X=(x{sub}(ij)) is a
    permutation matrix; (b) X{ncongr}X{sup}0. "This problem, called the problem
    of the second best assignment (PSBA), is solved as follows. First, for
    k=1, 32, ... ,n - 2, i, 3j=1, 32, ... ,n - k, i{neq}j, the coefficients
    c{sup}((k)){sub}(ij) are computed by the formula
    c{sup}((k)){sub}(ij)=min(c{sup}((k - 1)){sub}(ij), 3c{sup}((k - 1)){sub}(i,n
    - k+1) - c{sub}(n - k+1,n - k+1)+c{sup}((k - 1)){sub}(n - k+1,j)), c
    {sup}((0)){sub}(ij)=c{sub}(ij); then the values F{sub}(kl)= - c{sub}(kk)+c
    {sup}((l)){sub}(k,n - l) - c{sub}(n - l,n - l)+c{sup}((l)){sub}(n - l,k)
    are calculated for l=0, 31, 32, ... ,n - 2, k=1, 32, ... ,n - l - 1.
    It is shown that F{sub}(kl) {$>$}= 0 for all k and l if and only if X{sup}0
    is an optimal solution of the assignment problem. If this necessary and
    sufficient condition is fulfilled, a minimal F{sub}(kl) may be determined.
    By the definition of c{sup}((k)){sub}(ij) this can be written in the
    form F {sub}(kl)={sum}{sub}(i=1){sup}n 3{sum}{sub}(j=1){sup}n 3c{sub}(ij)u{sub}(ij);
    X{sup}0+U is an optimal solution of PSBA (U=(u{sub}(ij))). The algorithm
    requires at most 7n{sup}3/6 arithmetic operations.}}

@techreport{MilStoCox-TR-95,
  title = {{Optimizing Murty's ranked assignment method}},
  author = {Matt L. Miller and Harold S. Stone and Ingemar J. Cox},
  address = {4 Independence Way, Princeton, NJ 08540, USA},
  organization = {NEC Research Inst.},
  number = {95-08},
  year = {1995},
  url = {http://www.neci.nj.nec.com/tr/neci-tr-95-8.ps},
  abstract = {We describe an implementation of an algorithm due to Murty
    for determining a ranked set of solutions to assignment problems. The
    intended use of the algorithm is in the context of multi-target tracking,
    where it has been shown that real-time multi-target tracking is now feasible,
    but many other uses of the algorithm are also possible. Three optimizations
    are discussed: (1) inheriting dual variables and partial solutions during
    partitioning, (2) sorting subproblems by lower cost bounds before solving
    and (3) partitioning in an optimized order. When used to find the 100
    best solutions to random 100x100 assignment problems, these optimizations
    produce a speedup of over a factor of 20, finding all 100 solutions in
    about 0:6 seconds. For a random cost matrix, the average time complexity
    for finding k solutions to random NxN problems appears to be nearly linear
    in both k and N , for sufficiently large k.}}

@article{Min-CACM-74,
  title = {{On computing sets of shortest paths in a graph}},
  author = {Edward Minieka},
  journal = {Commun. Assoc. Comput. Mach.},
  publisher = {ACM},
  volume = {17},
  pages = {351--353},
  year = {1974},
  abstract = {Two algorithms are presented that construct the k shortest
    paths between every pair of vertices in a directed graph. These algorithms
    generalize the Floyd algorithm and the Dantzig algorithm for finding
    the shortest path between every pair of vertices in a directed graph.}}

@inproceedings{Min-JNM-75,
  title = {{The $K$-th shortest path problem}},
  author = {Edward Minieka},
  booktitle = {ORSA/TIMS Joint National Mtg.},
  journal = {Bull. Operations Research Soc. of America},
  volume = {23},
  pages = {B/116},
  year = {1975},
  abstract = {This paper presents a short graph theoretical proof for the
    Jacobi, Gauss-Seidel and Double Sweep Algorithms for finding the K shortest
    paths from a given vertex to each other vertex. This proof is valid for
    any starting solution that exceeds the optimal solution.}}

@article{MinShi-JIMA-73,
  title = {{A note on an algebra for the $k$ best routes in a network}},
  author = {Edward Minieka and Douglas R. Shier},
  journal = {J. Inst. Mathematics and Its Applications},
  volume = {11},
  pages = {145--149},
  year = {1973},
  abstract = {This note extends the general algebraic theory of network routing
    problems to the problem of finding the k best routes in a network. Techniques
    for solving linear equations in this extended algebra produce corresponding
    algorithms for determining the k best routes.},
  review = {MR-48-13216}}

@article{MR-48-13216,
  reviews = {MinShi-JIMA-73},
  journal = {Mathematical Reviews},
  publisher = {Amer. Math. Soc.},
  title = {{A note on an algebra for the $k$ best routes in a network}},
  author = {G. Berman},
  volume = {48},
  number = {13216},
  year = {1974}}

@article{MirArj-IPL-85,
  title = {{Selection in $X+Y$ and matrices with sorted rows and columns}},
  author = {Andranik Mirzaian and E. Arjomandi},
  journal = {Information Processing Letters},
  volume = {20},
  number = {1},
  pages = {13--17},
  year = {1985}}

@article{Mis-ETED-81,
  title = {{Connection matrix approach for global reliability path enumeration}},
  author = {R. B. Misra},
  journal = {J. Inst. Engineers (India) Electronics and Telecommunication
    Engineering Division},
  volume = {61},
  pages = {ET3:74--76},
  year = {1981},
  abstract = {An algorithm for enumeration of all simple paths for global
    reliability in a communication network is presented. The paths are enumerated
    with the help of incidence and connection matrices of the graph. The
    method is also applicable to networks having both nodes and branches
    of finite failure probability. The efficiency of the method increases
    with the complexity of the network and is best suitable for networks
    having both nodes and branches unreliable. A computer program for implementation
    of the algorithm is also developed.}}

@article{Mis-MR-79,
  title = {{An algorithm for enumerating all simple paths in a communication
    network}},
  author = {R. B. Misra},
  journal = {Microelectronics and Reliability},
  volume = {19},
  number = {4},
  pages = {363--366},
  year = {1979},
  abstract = {A more efficient algorithm of path enumeration for global reliability
    evaluation of a communication network is presented and analyzed. The
    paths are generated from the incidence matrix of the graph. This new
    algorithm seems to be promising in respect to existing methods both for
    computation time and computer memory requirement.}}

@article{MisMis-MR-80,
  title = {{Enumeration of all simple paths in a communication network}},
  author = {R. B. Misra and K. B. Misra},
  journal = {Microelectronics and Reliability},
  volume = {20},
  pages = {419--426},
  year = {1980},
  abstract = {An algorithm has been developed for enumerating all simple
    paths in a communication network for specified terminal pairs. The efficiency
    of the method increases with the number of terminal pairs for which path
    enumeration is required. The algorithm generates the paths in ascending
    order of cardinality. The method is applicable to the graphs having finite
    non zero failure probability nodes. A FORTRAN program for implementation
    of the algorithm has been developed and results are reported.}}

@article{MotMurOls-EJOR-91,
  title = {{A parametric approach to solving bicriterion shortest path problems}},
  author = {J. Mote and I. Murthy and D. L. Olson},
  journal = {Eur. J. Operational Research},
  volume = {53},
  number = {1},
  pages = {81--92},
  month = {July},
  year = {1991},
  abstract = {A new algorithm is developed to solve bicriterion shortest
    path problems (BSP). This algorithm first relaxes the integrality conditions
    and solves a simple bicriterion network problem. The bicriterion network
    problem is solved parametrically, exploiting properties associated with
    adjacent basis trees. Those Pareto-optimal paths not obtained by solving
    the LP relaxation are obtained using a label correcting procedure. Computational
    results comparing the parametric approach to the label setting approach
    and the K-th shortest path approach are also presented.}}

@inproceedings{MouJouMon-ASSP-95,
  title = {{On using a priori segmentation of the speech signal in an $N$-best
    solutions post-processing}},
  author = {T. Moudenc and D. Jouvet and J. Monne},
  booktitle = {Proc. Int. Conf. Acoustics, Speech, and Signal Processing},
  publisher = {IEEE},
  volume = {1},
  pages = {580--583},
  month = {May},
  year = {1995},
  abstract = {This paper proposes a new approach to the incorporation of
    automatic a-priori segmentation into an HMM based speech recognizer.
    The approach used for the post-processing of $N$-best solutions is based
    on stochastic modelling of the number of speech signal stationarity changes
    which occur within the phonetic segments of each solution. The objective
    of this post-processing is to validate the presence of stationarity zones
    in the speech signal. This particular validation cannot be exploited
    using a centisecond approach. The signal stationarity changes are detected
    using an ``a priori'' segmentation algorithm. Two phonetic models are calculated
    for each phonetic segment. One corresponds to correct solutions and the
    other one corresponds to incorrect solutions. These two models are used
    simultaneously in order to compute a post-processing score for each solution.
    In the initial set of experiments, which was conducted on telephone databases,
    the use of this method resulted in a 9{\%} error rate reduction on the ``Number''
    database, and a 15{\%} error rate reduction on the ``Digit'' database.}}

@article{Mur-OR-68,
  title = {{An algorithm for ranking all the assignments in order of increasing
    costs}},
  author = {K. G. Murty},
  journal = {Operations Research},
  volume = {16},
  pages = {682--687},
  year = {1968}}

@phdthesis{Mur-PhD-95,
  title = {{Survivable Network Management for High-Speed ATM Networks}},
  author = {Kazutaka Murakami},
  school = {Carnegie Mellon University},
  year = {1995},
  abstract = {Fast restoration from a network failure has been recognized
    as a key ingredient in realizing survivable networks in emerging high-speed
    ATM environments. Self-healing techniques have been proposed to provide
    service continuity to end-users by autonomously switching affected virtual
    paths to alternate routes. However, their success greatly depends on
    how traffic is distributed and spare capacity is dimensioned over the
    network when a failure occurs. Therefore, a fast restoration mechanism
    alone is not enough to achieve a high level of survivability. This dissertation
    aims at defining an integrated framework for survivable ATM network management
    ranging from network design and virtual path management to fast restoration
    protocol. The focus is placed on two aspects essential to promoting restoration
    capability: the survivable virtual path routing (SVPR) and the survivable
    capacity and flow assignment (SCFA). The SVPR attempts to maximize restorability
    from a possible network failure by adjusting virtual path configuration
    in response to a change in traffic demand or facility network configuration.
    The two-step restoration concept is also introduced to achieve fast restoration
    as well as optimal reconfiguration. The SCFA seeks for the most economical
    physical link capacity placement in order to deploy a survivable network
    in a cost-effective manner. Joint optimization is carried out to find
    a globally optimal solution. The problems for maximum-flow restoration-based
    networks are formulated as a large-scale linear programming model. Several
    mechanisms are devised to reduce computation time by facilitating the
    basis matrix factorization. The SVPR for k-shortest path restoration-based
    networks is modeled as a non-smooth multicommodity flow problem with
    linear constraints. A modified flow deviation method is developed to
    obtain a near-optimal solution in a reasonable computation time. Premature
    convergence to a non-smooth point is avoided by properly adjusting optimization
    parameters. Using the proposed optimization procedures, the minimum resource
    installation cost is quantitatively analyzed for different fast restoration
    schemes. Contrary to a wide belief in the economic advantage of the end-to-end
    restoration scheme, this study reveals that the attainable gain could
    be marginal for a well-connected and/or unbalanced network.}}

@inproceedings{Nag-ICSLP-94,
  title = {{A stochastic morphological analyzer for spontaneously spoken
    languages}},
  author = {M. Nagata},
  booktitle = {Proc. Int. Conf. Spoken Language Processing},
  publisher = {Acoustical Soc. Japan},
  volume = {2},
  pages = {795--798},
  month = {September},
  year = {1994},
  abstract = {We present a morphological analysis method for the phonetic
    transcription of spontaneous speech using a stochastic language modeling
    technique and an efficient two-pass $N$-best search strategy. It can
    segment a phonetically transcribed utterance into word, assign parts
    of speech to each segmented words, and convert the phonetic transcription
    into an orthographic transcription, which, in the case of Japanese, means
    the conversion from ``hiragana'' (phonogram) to ``kanji'' (ideogram). The
    morphological analyzer can handle pauses, interjections, restatements
    and chimings, all which are characteristics of spontaneous speech, by
    learning the parameters of the language model directly from the phonetic
    transcription. The proposed morphological analyzer achieves 95.0{\%} recall
    and 95.3{\%} precision on closed text when it was trained and tested on
    a portion (containing 172,826 words) of the ATR Corpus, telephone dialogues
    in the conference registration domain.}}

@inproceedings{NagNisIba-ISAAC-94,
  title = {{Computing all small cuts in undirected networks}},
  author = {H. Nagamochi and K. Nishimura and Toshihide Ibaraki},
  booktitle = {Proc. 5th Int. Symp. Algorithms and Computation},
  number = {834},
  series = {Lecture Notes in Computer Science},
  publisher = {Springer Verlag},
  pages = {190--198},
  year = {1994},
  abstract = {Let $\lambda(N)$ denote the weight of a minimum cut in an edge-weighted
    undirected network $N$, where $n$ and $m$ are the numbers of vertices
    and edges, respectively. It is known that $O(n^2k)$ is an upper bound
    on the number of cuts with weights less than $k\lambda(N)$. We first
    show that all cuts of weights less than $k\lambda(N)$ can be enumerated
    in$O(mn^3+n^2k+2)$ time without using the maximum flow algorithm. We
    then prove for $k<4/3$ that $n\choose 2$ is a tight upper bound on the
    number of cuts of wights less than $k\lambda(N)$.}}

@inproceedings{NakShi-ICSLP-94,
  title = {{Accent phrase segmentation by finding $N$-best sequences of pitch
    pattern templates}},
  author = {M. Nakai and H. Shimodaira},
  booktitle = {Proc. Int. Conf. Spoken Language Processing},
  publisher = {Acoustical Soc. Japan},
  volume = {1},
  pages = {347--350},
  month = {September},
  year = {1994},
  abstract = {This paper describes a prosodic method for segmenting continuous
    speech into accent phrases. Optimum sequences are obtained on the basis
    of least squared error criterion by using dynamic time warping between
    $F_0$ contours of input speech and reference accent patterns called `pitch
    pattern templates'. But the optimum sequence does not always give good
    agreement with phrase boundaries labeled by hand, while the second or
    the third optimum candidate sequence does well. Therefore, we expand
    our system to be able to find out multiple candidates by using $N$-best
    algorithm. Evaluation tests were carried out using the ATR continuous
    speech database of 10 speakers. The results showed about 97{\%} of phrase
    boundaries were correctly detected when we took 30-best candidates, and
    this accuracy is 7.5{\%} higher than the conventional method without using
    $N$-best search algorithm.}}

@inproceedings{NakSinSag-ASSP-95,
  title = {{Automatic prosodic segmentation by $F_0$ clustering using superpositional
    modeling}},
  author = {M. Nakai and H. Singer and Y. Sagisaka and H. Shimodaira},
  booktitle = {Proc. Int. Conf. Acoustics, Speech, and Signal Processing},
  publisher = {IEEE},
  volume = {1},
  pages = {624--627},
  month = {May},
  year = {1995},
  abstract = {In this paper, we propose an automatic method for detecting
    accent phrase boundaries in Japanese continuous speech by using $F_0$
     information. In the training phase, hand labeled accent patterns are
    parameterized according to a superpositional model proposed by Fujisaki,
    and assigned to some clusters by a clustering method, in which accent
    templates are calculated as centroid of each cluster. In the segmentation
    phase, automatic $N$-best extraction of boundaries is performed by one-stage
    DP matching between the reference templates and the target $F_0$ contour.
    About 90{\%} of accent phrase boundaries were correctly detected in speaker
    independent experiments with the ATR Japanese continuous speech database.}}

@inproceedings{NaoBru-CPM-93,
  title = {{On suboptimal alignments of biological sequences}},
  author = {Dalit Naor and Douglas Brutlag},
  booktitle = {Proc. 4th Symp. Combinatorial Pattern Matching},
  number = {684},
  series = {Lecture Notes in Computer Science},
  publisher = {Springer Verlag},
  pages = {179--196},
  year = {1993},
  url = {http://cmgm.stanford.edu/~brutlag/Publications/naor93.html},
  review = {MR-94i-92013}}

@article{MR-94i-92013,
  reviews = {NaoBru-CPM-93},
  journal = {Mathematical Reviews},
  publisher = {Amer. Math. Soc.},
  title = {{On suboptimal alignments of biological sequences}},
  volume = {94i},
  number = {92013},
  year = {1994},
  text = {It is widely accepted that the optimal alignment between a pair
    of proteins or nucleic acid
    sequences that minimizes the edit distance may not necessarily reflect
    the correct biological alignment. Alignments of proteins based on their
    structures or of DNA sequences based on evolutionary changes are often
    different from alignments that minimize edit distance. However, in many
    cases (e.g. when the sequences are close), the edit distance alignment
    is a good approximation to the biological one. Since, for most sequences,
    the true alignment is unknown, a method that either assesses the significance
    of the optimal alignment, or that provides few `close' alternatives to
    the optimal one, is of great importance. 
    
    A suboptimal alignment is an alignment whose score lies within the neighborhood
    of the optimal score. Enumeration of suboptimal alignments is not very
    practical since there are many such alignments. Other approaches that
    use only partial information about suboptimal alignments are more successful
    in practice.
    
    We present a method for representing all alignments whose score is within
    any given delta from the optimal score. It represents a large number
    of alignments by a compact graph which makes it easy to impose additional
    biological constraints and select one desirable alignment from this large
    set. We study the combinatorial nature of suboptimal alignments. We define
    a set of `canonical' suboptimal alignments, and argue that these are
    the essential ones since any other suboptimal alignment is a combination
    of few canonical ones. We then show how to efficiently enumerate suboptimal
    alignments in order of their score, and count their numbers. Examples
    are presented to motivate the problem. 
    
    Since alignments are essentially $(s,t)$-paths in a directed acyclic
    graph with (possibly negative) weights on its edges, our solution gives
    an extremely simple method to enumerate all $K$ shortest (or longest)
    paths from $s$ to $t$ in such graphs in increasing order, as well as
    all $(s,t)$ paths that are within $\delta$ of the optimum, for any $\delta$.
    We compare this solution with known algorithms that find the $K$-best
    shortest paths in a graph.}}

@article{NaoBru-JCB-94,
  title = {{On near-optimal alignments of biological sequences}},
  author = {Dalit Naor and Douglas Brutlag},
  journal = {J. Computational Biology},
  volume = {1},
  number = {4},
  pages = {349--366},
  year = {1994},
  url = {http://cmgm.stanford.edu/~brutlag/Publications/naor94.html}}

@inproceedings{NguSchZha-HLTW-94,
  title = {{Is $N$-best dead?}},
  author = {L. Nguyen and Richard Schwartz and Y. Zhao and G. Zavaliagkos},
  booktitle = {Proc. ARPA Human Language Technology Worksh.},
  pages = {411--414},
  year = {1994}}

@inproceedings{NicPit-ICT-96,
  title = {{Towards network survivability by finding the $K$-best paths through
    a trellis tree}},
  author = {Stavros D. Nikolopoulos and Andreas Pitsillides},
  booktitle = {Proc. Int. Conf. Telecommunications},
  site = {Istanbul, Turkey},
  pages = {817--821},
  month = {April},
  year = {1996}}

@inproceedings{NikPitTip-INFOCOM-97,
  title = {{Addressing network survivability issues by finding the $K$-best
    paths through a trellis graph}},
  author = {Stavros D. Nikolopoulos and Andreas Pitsillides and David Tipper},
  booktitle = {Proc. 16th Joint. Conf. IEEE Computer {\&} Communications Socs.},
  volume = {1},
  pages = {370--377},
  month = {April},
  year = {1997},
  url = {ftp://violet.tele.pitt.edu/pub/Telecom_Faculty/Tipper/info97.ps},
  abstract = {Due to the increasing reliance of society on the timely and
    reliable transfer of large quantities of information (such as voice,
    data, and video) across high speed communication networks, it is becoming
    important for a network to offer survivability, or at least graceful
    degradation, in the event of network failure. In this paper we aim to
    offer a solution in the selection of the K-best disjoint paths through
    a network by using graph theoretic techniques. The basic approach is
    to map an arbitrary network graph into a trellis graph which allows the
    application of computationally efficient methods to find disjoint paths.
    Use of the knowledge of the K-best disjoint paths for improving the survivability
    of ATM networks at the virtual path and virtual circuit level is discussed.}}

@inproceedings{NouHafGen-LCN-97,
  title = {{A dynamic routing procedure for connections with quality of service
    requirements}},
  author = {M'hamed Nour and Abdelhakim Hafid and Michel Gendreau},
  booktitle = {Proc. 22nd Conf. Local Computer Networks},
  publisher = {IEEE},
  pages = {460--468},
  month = {November},
  year = {1997},
  annote = {The last paragraph of the intro seems more descriptive than the
    actual abstract: ``In this paper, we present a routing procedure that
    minimizes a cost function while satisfying the requested QoS. The cost
    function could be defined in terms of QoS information, real money to
    pay for the operation of network resources, number of hops between the
    source and destination, network reliability, etc.; it is not restricted
    to QoS information, such as the functions used in existing techniques
    (e.g. minimizing the end-to-end delay). The routing procedure determines
    a path that satisfies bandwidth, delay and loss rate requirements of
    the connection to establish. This procedure limits its search space and
    thus limits its response time as it uses a constrained modified Double-Sweep
    Algorithm \cite{Shi-Nw-76} which finds the k-shortest path lengths between
    a specified node and all other nodes in the graph. It also increases
    the probability that the  connection establishment will be successful
    as it uses the most recent information on local resource availability.''}}

@inproceedings{NouMarAtw-INFORMS-98,
  title = {{Simulation of network performance based connection admission
    control}},
  author = {M'hamed Nour and Ernesto de Queir{\'o}s Vieira Martins and J. William
    Atwood and Michel Gendreau and Marta Margarida Braz Pascoal and Jos{\'e}
    Lu{\'\i}s Esteves dos Santos},
  booktitle = {INFORMS/CORS Montr{\'e}al '98},
  year = {1998},
  abstract = {ATM provides various classes and requires Connection Admission
    Control procedures for deciding whether a new request from a user can
    be accepted. The Objective of this presentation is to show how k-shortest
    path algorithms may be used in the context of ATM Networks to provide
    decisions for Connection Admission Control.}}

@inproceedings{NowTho-SCT-91,
  title = {{An efficient implementation of the $N$-best algorithm for lexical
    access (large vocabulary speech recognition)}},
  author = {P. Nowell and H. S. Thompson},
  booktitle = {Proc. 2nd Eur. Conf. Speech Communication and Technology},
  volume = {2},
  pages = {667--670},
  year = {1991},
  abstract = {The authors describe an efficient implementation of the $N$-best
    algorithm for lexical access. An extension has been made to the original
    algorithm which reduces the search space by 80{\%} whilst retaining over
    99{\%} of the top ten optimal paths produced by the standard $N$-best algorithm.
    The authors have also found that pruning can reduce the search space
    further by a further 50{\%} without a significant loss of optimal paths.}}

@inproceedings{PasSanMar-INFORMS-98,
  title = {{An algorithm for ranking loopless paths}},
  author = {Marta Margarida Braz Pascoal and Jos{\'e} Lu{\'\i}s Esteves dos Santos
    and Ernesto de Queir{\'o}s Vieira Martins},
  booktitle = {INFORMS/CORS Montr{\'e}al '98},
  year = {1998},
  abstract = {A new algorithm is proposed for ranking paths as so as its
    adaption for loopless paths. Comparative computational experiments are
    also presented. This allows the ranking of more than half a million of
    loopless paths in 10000 nodes, 100000 arcs euclidean networks in less
    than half second.}}

@inproceedings{PasSanMar-OPTI-98,
  title = {{Ranking paths and loopless paths}},
  author = {Marta Margarida Braz Pascoal and Jos{\'e} Lu{\'\i}s Esteves dos Santos
    and Ernesto de Queir{\'o}s Vieira Martins},
  booktitle = {Proc. Optimization 98},
  month = {July},
  year = {1998}}

@phdthesis{Ped-PhD-68,
  title = {{On directed communication networks}},
  author = {Robert Dennis Pedersen},
  school = {Southern Methodist Univ.},
  year = {1968},
  abstract = {Treats mathematically several aspects of directed communication
    networks and presents results on optimum routing strategies in noisy
    radio communication networks. In particular, techniques are presented
    for the determination of all possible paths in directed networks. Solutions
    to the $k^{\rm th}$ longest path problems are outlined, and a detailed
    study of the implications of linear dependencies of network paths on
    flow distributions is made. Also, relationships between link flows and
    terminal flows imposed by linear dependencies of source node and sink
    node combinations are derived and studied in detail. From this investigation
    some interesting relationships between conventional cutset and incidence
    matrices from linear graph theory are deduced.}}

@article{Per-Nw-86,
  title = {{Implementation of algorithms for $K$ shortest loopless paths}},
  author = {Aarni Perko},
  journal = {Networks},
  volume = {16},
  pages = {149--160},
  year = {1986},
  review = {MR-87j-05102}}

@article{MR-87j-05102,
  reviews = {Per-Nw-86},
  journal = {Mathematical Reviews},
  publisher = {Amer. Math. Soc.},
  title = {{Implementation of algorithms for $K$ shortest loopless paths}},
  author = {Richard D. Ringeisen},
  volume = {87j},
  number = {05102},
  year = {1987},
  text = {In this paper, the authors implement various known algorithms for
    doing the $k$ shortest path problem. Here, the problem is to obtain not
    just the usual shortest path but also the collection of $k$ paths between
    two given vertices which in total have the shortest lengths. They use
    various implementation and data storage techniques to implement two well-known
    algorithms due to S. Clarke et al. [J. Soc. Indust. Appl. Math. 11 (1963),
    1096--1102; MR 28 {\#}3648] and J. Y. Yen [Management Sci. 17 (1970/71),
    712--716; MR 45 {\#}9827] and to present a new algorithm which they refer
    to as using ``loopless deviations''. After listing a general, rather generic
    algorithm for the problem, the authors explain how to use tree relations
    between paths to compare them. The original path is the root of a tree,
    and deviations from a given path are the immediate successors in the
    tree. 
    
    The paper includes a table which compares CPU times for the three algorithms
    under various implementation techniques. It concludes with discussions
    of storage requirements and of qualitative aspects of the problem.}}

@article{PerShi-JACM-78,
  title = {{Finding two disjoint paths between two pairs of vertices in a
    graph}},
  author = {Yehoshua Perl and Yossi Shiloach},
  journal = {J. Assoc. Comput. Mach.},
  publisher = {ACM},
  volume = {25},
  number = {1},
  pages = {1--9},
  year = {1978}}

@article{Pie-Nw-75,
  title = {{Bibliography on algorithms for shortest path, shortest spanning
    tree, and related circuit routing problems (1956-1974)}},
  author = {A. R. Pierce},
  journal = {Networks},
  volume = {5},
  number = {2},
  pages = {129--149},
  month = {April},
  year = {1975},
  abstract = {This bibliography contains 431 references on algorithms and
    machine calculation techniques for solving the shortest path, k-th shortest
    path, and the shortest spanning tree problems. Chapter 1-Paths and Circuits-is
    divided into four sections, dealing respectively with shortest path,
    optimal path, Traveling Salesman and other related algorithms. Chapter
    2 deals with spanning trees, and Chapter 3 covers the computer aided
    design of electronic systems that utilize minimum path or shortest tree
    algorithms.}}

@article{PieLas-MS-73,
  title = {{Improved combinatorial programming algorithms for a class of
    all-zero-one integer programming problems}},
  author = {J. F. Pierce and J. S. Lasky},
  journal = {Management Science},
  volume = {19},
  pages = {528--543},
  year = {1973},
  abstract = {In the present paper a number of improvements in earlier algorithms
    are presented, including a new search strategy, methods for reducing
    the original problem, and mechanisms for feasibility filtering in multi-word
    problems. With these improvements problem-solving efficiency has been
    increased in many instances by an order of magnitude. In addition, the
    paper contains computational experience obtained in solving problems
    for the k-best solutions.}}

@article{Pol-JMAA-61,
  title = {{Solutions of the {$k$th} best route through a network---a review}},
  author = {M. Pollack},
  journal = {J. Math. Anal. and Appl.},
  volume = {3},
  pages = {547--559},
  year = {1961}}

@article{Pol-OR-61,
  title = {{The $k$th best route through a network}},
  author = {M. Pollack},
  journal = {Operations Research},
  volume = {9},
  pages = {578--580},
  year = {1961}}

@inproceedings{Pol-ORSA-69,
  title = {{Shortest path solutions of the the $k$th best route problems}},
  author = {M. Pollack},
  booktitle = {Proc. 36th Mtg. Operations Research Society of America},
  journal = {Bull. Operations Research Soc. of America},
  year = {1969}}

@article{PooLibSie-COR-99,
  title = {{Solving the $k$-best traveling salesman problem}},
  author = {Edo S. van der Poort and Marek Libura and Gerard Sierksma and
    Jack A. A. van der Veen},
  journal = {Computers and Operations Research},
  volume = {26},
  number = {4},
  pages = {409--425},
  month = {April},
  year = {1999},
  abstract = {Although k-best solutions for polynomial solvable problems
    are extensively studied in the literature, not much is known for NP-hard
    problems. In this paper we design algorithms for finding sets of k-best
    solutions to the Traveling Salesman Problem (TSP) for some positive integer
    k. It will be shown that a set of k-best Hamiltonian tours in a weighted
    graph can be determined by applying the so-called partitioning algorithms
    and by algorithms based on modifications of solution methods like branch-and-bound.
    In order to study the effectiveness of these algorithms, the time for
    determining a set of k-best solutions is investigated for a number of
    instances in Reinelt's TSPLIB library. It appears that the time required
    to find a set of k-best tours grows rather slowly in k. Furthermore,
    the results of numerical experiments show that the difference in length
    between a longest and a shortest tour in the set of k-best solutions
    grows only slowly in k and that also the 'structure' of the tours in
    the set of k-best tours is quite robust.}}

@article{RaiKum-IJE-86,
  title = {{On path enumeration}},
  author = {S. Rai and A. Kumar},
  journal = {Int. J. Electronics},
  volume = {60},
  pages = {421--425},
  year = {1986},
  abstract = {The authors discuss a simple method for path enumeration in
    reliability logic diagrams. The method utilizes only simple algebraic
    concepts. It is straightforward and lacks computational complexity. An
    example illustrates the method.}}

@article{RanBriSpe-CC-79,
  title = {{Search for all self-avoiding paths for molecular graphs}},
  author = {M. Randic and G. M. Brissey and R. B. Spencer and C. L. Wilkins},
  journal = {Computers and Chemistry},
  volume = {3},
  number = {1},
  pages = {5--13},
  year = {1979},
  abstract = {An algorithm which finds all paths through a molecular skeleton
    (graph) is described. Programs implementing this algorithm in PL/1, BASIC
    and FORTRAN are described and illustrative examples are shown. The number
    of paths in a graph increases rapidly with the number of cycles, but
    for most molecular graphs counting all paths is a practical task. Input
    to the programs is the connectivity relationships for a molecule either
    explicitly or in the form of adjacency matrix. As output, one may obtain
    all paths (by listing of the atoms involved) or only the total number
    of paths of each length. The latter is of interest for characterization
    of structures, and is convenient in subsequent comparisons and searches
    for structural similarities. It is suggested that the number of paths
    in a graph be considered as a useful quantitative measure of the complexity
    of a graph or structure.}}

@inproceedings{RaoDatRed-CUPUM-97,
  title = {{Bus transit route generation by $K$-shortest path algorithm}},
  author = {K. Ramachandra Rao and R. N. Datta and K. Sudhakara Reddy},
  booktitle = {Proc. 5th Int. Conf. Computers in Urban Planning and Urban
    Management},
  publisher = {Indian Inst. of Technology, Bombay},
  month = {December},
  year = {1997}}

@article{RawBed-JFI-75,
  title = {{On enumerating paths of $K$ arcs in unoriented complete graphs}},
  author = {Eugene Rawdin and Samuel D. Bedrosian},
  journal = {J. Franklin Inst.},
  volume = {299},
  number = {1},
  pages = {73--76},
  month = {January},
  year = {1975},
  abstract = {In an unoriented complete graph of $V$ vertices, let $K$ denote
    the number of arcs in a path. Also, let $S(V,K)=$ number of paths of
    $K$ arcs from one specified vertex to another; $SS(V,K)=$ number of paths
    of $K$ arcs from one specified vertex to another. Theorems and tableaux
    are given for $S(V,K)$ and $SS(V,K)$ as well as relations among the entries
    in the tables. The final theorem indicates that for the the number of
    paths of all possible lengths we have the remarkable approximation: $SS(V,K)\approx\epsilon
    (V-2)!$.}}

@article{ReeTar-Nw-75,
  title = {{Bounds on backtrack algorithms for listing cycles, paths, and
    spanning trees}},
  author = {R. C. Reed and Robert E. Tarjan},
  journal = {Networks},
  volume = {5},
  number = {3},
  pages = {237--252},
  month = {July},
  year = {1975},
  abstract = {Backtrack algorithms for listing certain kinds of subgraphs
    of a graph are described and analyzed. Included are algorithms for listing
    all spanning trees, all cycles, all simple cycles, or all of certain
    other kinds of paths. The algorithms have $O(V+E)$ space requirements
    and $O(V+E+EN)$ time requirements, if the problem graph has $V$ vertices,
    $E$ edges, and $N$ subgraphs of the type to be listed.}}

@article{Ren-EJOR-85,
  title = {{Ranking scalar products to improve bounds for the quadratic assignment
    problem}},
  author = {F. Rendl},
  journal = {Eur. J. Operational Research},
  volume = {20},
  pages = {363--372},
  year = {1985},
  abstract = {The eigenvalue bound for the quadratic assignment problem (QAP)
    is successively improved by considering a set of k-best scalar products,
    related to the QAP. An efficient procedure is proposed to find such a
    set of k-best scalar products. A class of QAPs is described for which
    this procedure in general improves existing lower bounds and at the same
    time generates good suboptimal solutions. The method leaves the user
    with a large flexibility in controlling the quality of the bound. However,
    since the method is sensitive to input data it should only be used in
    combination with other bounding rules.}}

@article{RibMinPen-EJOR-89,
  title = {{An optimal column-generation-with-ranking algorithm for very
    large-scale set partitioning problems in traffic assignment}},
  author = {C. C. Ribeiro and M. Minoux and M. C. Penna},
  journal = {Eur. J. Operational Research},
  volume = {41},
  number = {2},
  pages = {232--239},
  month = {July},
  year = {1989}}

@inproceedings{RicOstRoh-ASSP-95,
  title = {{Lattice-based search strategies for large vocabulary speech recognition}},
  author = {F. Richardson and M. Ostendorf and J. R. Rohlicek},
  booktitle = {Proc. Int. Conf. Acoustics, Speech, and Signal Processing},
  publisher = {IEEE},
  volume = {1},
  pages = {576--579},
  month = {May},
  year = {1995},
  abstract = {The design of search algorithms is an important issue in large
    vocabulary speech recognition, especially as more complex models are
    developed for improving recognition accuracy. Multi-pass search strategies
    have been used as a means of applying simple models early on to prune
    the search space for subsequent passes using more expensive knowledge
    sources. The pruned search space is typically represented by an $N$-best
    sentence list or a word lattice. Here, we investigate three alternatives
    for lattice search: $N$-best rescoring, a lattice dynamic programming
    search algorithm and a lattice local search algorithm. Both the lattice
    dynamic programming and lattice local search algorithms are shown to
    achieve comparable performance to the $N$-best search algorithm while
    running as much as 10 times faster on a 20k word lexicon; the local search
    algorithm has the additional advantage of accommodating sentence-level
    knowledge sources.}}

@article{RinRodSun-AML-00,
  title = {{A simplification of the double-sweep algorithm to solve the $k$-shortest
    path problem}},
  author = {K. A. Rink and E. Y. Rodin and V. Sundarapandian},
  journal = {Applied Math. Lett.},
  volume = {13},
  number = {8},
  pages = {77--85},
  month = {November},
  year = {2000}}

@article{RinRodSun-MCP-99,
  title = {{Routing airlift aircraft by the double-sweep algorithm}},
  author = {K. A. Rink and E. Y. Rodin and V. Sundarapandian and M. A. Redfern},
  journal = {Mathematical and Computer Modelling},
  volume = {30},
  number = {5--6},
  pages = {133--147},
  month = {September},
  year = {1999},
  abstract = {We describe the problem of modeling the routing of aircraft
    across a network of enroute bases. This is done to provide routes for
    scenarios that are being studied by the analysis tools at the Airlift
    Mobility Command (AMC). We are primarily concerned with the development
    of routes that can be easily implemented with the airlift operations
    analysis tools in use at AMC. We describe the specific implementation
    issues that have been addressed. One such issue is the use of available
    data in a specific input file format. Another crucial issue is adapting
    the base-to-base route set provided by the double-sweep algorithm into
    a region-to-region route set which can be used by the airlift analysis
    models. The methods used to adapt the route sets appropriately are described,
    and test results are provided for two different scenarios. Finally, recommendations
    that were given to the analysts at AMC for use of the k-shortest path
    routine are given.}}

@techreport{Rom-TR-93,
  title = {{On enumeration of near to best solutions in discrete and dynamic
    programming}},
  author = {J. V. Romanovsky},
  institution = {DIMACS},
  number = {93-64},
  year = {1993},
  url = {http://dimacs.rutgers.edu/techps/1993/93-64.ps},
  abstract = {We consider a new approach to enumeration of near-to-optimal
    solutions in discrete optimization problems. The main idea is to consider
    the processes that generate such solutions, and to describe possible
    operations with the processes. The preliminary set of operations is proposed
    in the paper. This set allows ones to construct a rather standard tool
    for enumeration in those optimization problems that may be solved with
    ideas of splitting (as in Branch-and-Bound) and recursion (as in Dynamic
    programming). As examples we considered the problems of shortest and
    the quickest paths in a graph, and the non-serial dynamic programming.
    Some experimenal software were developed to check the ideas. It was described
    at the end of the paper.}}

@article{RosSunXue-COR-91,
  title = {{Algorithms for the quickest path problem and the enumeration
    of quickest paths}},
  author = {J. B. Rosen and S.-Z. Sun and G.-L. Xue},
  journal = {Computers and Operations Research},
  volume = {18},
  pages = {579--584},
  year = {1991},
  abstract = {Let $N=(V,A,c,l)$ be an input network with node set $V$, arc
    set $A$, positive arc weight function $c$ and nonnegative arc weight
    function l. Let sigma be the amount of data to be transmitted. The quickest
    path problem is to find a routing path in $N$ to transmit the given amount
    of data in minimum time. Y. L. Chen and Y. H. Chin (1990) proposed this
    problem and developed algorithms for the single pair quickest path problem
    with time complexity $O(re+rn\log{n})$, where $n=|V|$, $e=|A|$, and $r$
    is the number of distinct capacity values of $N$. The authors develop
    an alternative algorithm for the single pair quickest path problem with
    same time complexity and less space requirement. They then study the
    constrained quickest path problem and propose an $O(re+rn\log{n})$ time
    algorithm. Finally, they develop an algorithm to enumerate the first
    $m$ quickest paths to send a given amount of data from one node to another
    with time complexity $O(rmne+rmn^2\log{n})$.}}

@article{RoyGal-RAIRO-73,
  title = {{Enumeration of $\epsilon$-minimum admissible paths between two
    points}},
  author = {B. Roy and D. Galland},
  journal = {Revue Francaise d'Automatique Informatique Recherche Operationelle
    (RAIRO)},
  volume = {7},
  number = {V3},
  pages = {3--20},
  month = {September},
  year = {1973},
  abstract = {Let $G=(X,U)$ be a network to every arc of which corresponds
    a length $a(u)\in R$. A path $\mu$ joining two nodes $x_1$ and $x_n$
    is said $\epsilon$-minimum if its length $a(\mu)$ is at most $\epsilon$
    bigger than the length of the shortest path of $G$ joining $x_1$ to $x_n$.
    This path will be admissible if it also satisfies to some constraints
    concerning the succession of arcs and nodes of which it is composed.
    This paper describes an algorithm allowing the enumeration of all $\epsilon$-minimum
    admissible paths joining $x_1$ to $x_n$ for a rather general set of admissibility
    constraints. It is based upon a Procedure of Separation and Evaluation
    in Sequence. The paper gives a practical examples and some precisions
    on a program written for C.D.C. 6600 and its performances.}}

@article{Rub-IEICE-78,
  title = {{Enumerating all simple paths in a graph}},
  author = {F. Rubin},
  journal = {IEICE Trans. Circuits {\&} Systems},
  volume = {CAS-25},
  number = {8},
  pages = {641--642},
  month = {August},
  year = {1978},
  abstract = {Warshall's theorem is used to obtain a matrix power algorithm
    for enumerating all simple paths in a graph. The algorithm uses $O(N^3)$
    matrix operations, compared to $O(N^4)$ operations for previous algorithms.}}

@article{Rup-Algo-00,
  title = {{Finding the $k$ shortest paths in parallel}},
  author = {Eric Ruppert},
  journal = {Algorithmica},
  volume = {28},
  number = {2},
  pages = {242--254},
  month = {October},
  year = {2000}}

@mastersthesis{Rup-MS-96,
  title = {{Parallel algorithms for the $k$ shortest paths and related problems}},
  author = {Eric Ruppert},
  school = {Univ. of Toronto, Dept. of Computer Science},
  year = {1996},
  url = {http://www.cs.utoronto.ca/~ruppert/thesis.ps.gz}}

@inproceedings{Rup-STACS-97,
  title = {{Finding the $k$ shortest paths in parallel}},
  author = {Eric Ruppert},
  booktitle = {Proc. 14th Symp. Theoretical Aspects of Computer Science},
  month = {February},
  year = {1997},
  note = {A concurrent-read exclusive-write PRAM algorithm is developed to
    find the $k$ shortest paths between pairs of vertices in an edge-weighted
    directed graph.  Repetitions of vertices along the paths are allowed.
     The algorithm computes an implicit representation of the $k$ shortest
    paths to a given destination vertex from every vertex of a graph with
    $n$ vertices and $m$ edges, using $O(m + nk\log^2 k)$ work and $O(\log^3
    k\log^* k + \log n(\log\log k + \log^* n))$ time, assuming that a shortest
    path tree rooted at the destination is precomputed.  The paths themselves
    can be extracted from the implicit representation in $O(\log L\log n)$
    time, and $O(n\og n + L)$ work, where $L$ is the total length of the
    output.}}

@article{SaiOikOno-IEICE-80,
  title = {{Generation of all trees and the hybrid system to check the graph
    connectivities}},
  author = {K. Saisyu and H. Oikawa and R. Onodera and Y. Taniguchi},
  journal = {IEICE Trans. Information {\&} Systems},
  volume = {E63},
  number = {1},
  pages = {78--79},
  month = {January},
  year = {1980},
  abstract = {Describes a system to check graph connectivities and some procedures
    for generating all subgraphs of a linear graph without duplication using
    it. The sets of trees, circuits, paths and simple cutsets can be listed
    with this method. The system is composed of link circuits, node circuits
    and control circuits. The link and node circuits correspond to links
    and nodes of a graph respectively. The system is controlled by a microcomputer.
    To list a set of subgraph, the terminals of link circuits and nodes circuits
    are connected according to the graph and the computer controls the system
    to make subgraphs and lists the set. The system is simple in construction
    and since operation is very fast the procedure becomes more efficient
    than other well-known methods.}}

@techreport{Sak-TR-66,
  title = {{The $k$ shortest routes and the $k$ shortest chains in a graph}},
  author = {M. Sakarovitch},
  institution = {Univ. of California, Berkeley, Operations Research Ctr.},
  number = {ORC 66-32},
  year = {1966}}

@inproceedings{SanMar-INFORMS-98,
  title = {{Ranking paths in the multiobjective shortest path problem}},
  author = {Jos{\'e} Lu{\'\i}s Esteves dos Santos and Ernesto de Queir{\'o}s Vieira Martins},
  booktitle = {INFORMS/CORS Montr{\'e}al '98},
  year = {1998},
  abstract = {A new algorithm is proposed for the biobjective shortest path
    problem, which is based on the ranking of shortest paths. The inportance
    of the ojective function in the ranking problem is shown and comparative
    computational experiments are presented.}}

@inproceedings{SanPasMar-OPTI-98,
  title = {{A new algorithm for the multiobjective shortest path problem}},
  author = {Jos{\'e} Lu{\'\i}s Esteves dos Santos and Marta Margarida Braz Pascoal
    and Ernesto de Queir{\'o}s Vieira Martins},
  booktitle = {Proc. Optimization 98},
  month = {July},
  year = {1998}}

@article{SaqBatSte-PE-92,
  title = {{Towards an automatic method of predicting protein structure by
    homology: an evaluation of suboptimal sequence alignments}},
  author = {M. A. S. Saqi and P. Bates and M. J. E. Sternberg},
  journal = {Protein Engineering},
  volume = {5},
  number = {4},
  pages = {305--311},
  month = {June},
  year = {1992},
  abstract = {A major problem in predicting protein structure by homology
    modelling is that the sequence alignment from which the model is built
    may not be the best one in terms of the correct equivalencing of residues
    assessed by structural or functional criteria. A useful strategy is to
    generate and examine a number of suboptimal alignments as better alignments
    can often be found away from the optimal. A procedure to filter rapidly
    suboptimal alignments based on measurement of core volumes and packing
    pair potentials is investigated. The approach is benchmarked on three
    pairs of sequences which are non-trivial to align correctly, namely two
    immunoglobulin domains, plastocyanin with azurin and two distant globin
    sequences. It is shown to be useful to reduce a large ensemble of possible
    alignments down to a few which correspond more closely to the correct
    (structure based) alignment.}}

@article{SaqSte-JMB-91,
  title = {{A simple method to generate non-trivial alternative alignments
    of protein sequences}},
  author = {M. A. S. Saqi and M. J. E. Sternberg},
  journal = {J. Mol. Biol.},
  volume = {219},
  number = {4},
  pages = {727--732},
  month = {June},
  year = {1991},
  abstract = {A major problem in sequence alignments based on the standard
    dynamic programming method is that the optimal path does not necessarily
    yield the best equivalencing of residues assessed by structural or functional
    criteria. An algorithm is presented that finds suboptimal alignments
    of protein sequences by a simple modification to the standard dynamic
    programming method. The standard pairwise weight matrix elements are
    modified in order to penalize, but not eliminate, the equivalencing of
    residues obtained from previous alignments. The algorithm thereby yields
    a limited set of alternate alignments that can differ considerably from
    the optimal. The approach is benchmarked on the alignments of immunoglobulin
    domains. Without a prior knowledge of the optimal choice of gap penalty,
    one of the suboptimal alignments is shown to be more accurate than the
    optimal.}}

@article{SarMat-SJO-93,
  title = {{A note on $K$-best solutions to the Chinese postman problem}},
  author = {Yasufumi Saruwatari and Tomomi Matsui},
  journal = {SIAM J. Optimization},
  publisher = {SIAM},
  volume = {3},
  number = {4},
  pages = {726--733},
  year = {1993},
  review = {MR-95a-90087}}

@article{MR-95a-90087,
  reviews = {SarMat-SJO-93},
  journal = {Mathematical Reviews},
  publisher = {Amer. Math. Soc.},
  title = {{A note on $K$-best solutions to the Chinese postman problem}},
  author = {Svatopluk Poljak},
  volume = {95a},
  number = {90087},
  year = {1995},
  text = {The authors present a polynomial time algorithm to find $K$-best
    solutions to the Chinese postman problem (CPP). The time complexity of
    their algorithm is $$O(S(n,m) + K(n + m + \log K + nT(n+m,m)))$$ where
    $S(s,t)$ is the complexity of the ordinary Chinese postman problem and
    $T(s,t)$ is the complexity of a post-optimal algorithm for nonbipartite
    matching in a graph with $s$ vertices and $t$ edges. The authors first
    analyze the properties of the 2-best solution to the CPP. $K$-best solutions
    are then found by solving 2-best CPP iteratively.}}

@inproceedings{Sch-CA-94,
  title = {{Vector-weighted matchings}},
  author = {Dietmar Schweigert},
  booktitle = {Combinatorics Advances},
  number = {329},
  series = {Math. Appl.},
  publisher = {Kluwer},
  pages = {267--276},
  year = {1994},
  review = {MR-96k-90059}}

@article{MR-96k-90059,
  reviews = {Sch-CA-94},
  journal = {Mathematical Reviews},
  publisher = {Amer. Math. Soc.},
  title = {{Vector-weighted matchings}},
  author = {Peter Butkovic},
  volume = {96k},
  number = {90059},
  year = {1996},
  text = {Consider a complete bipartite graph $G$ the edges of which are
    weighted by nonnegative real vectors. The weight of a matching $M$ in
    $G$ (notation $w(M)$) is the sum of the weights of edges in $M$. A perfect
    matching $M$ in $G$ is called an efficient solution if there is no perfect
    matching $M'$ in $G$ such that $w(M)\leq w(M')$ with strict inequality
    in at least one component. The task is to find all efficient solutions
    in $G$. It is shown that the method of preference functions finds some
    but in general not all efficient solutions. Another method called ``descent
    on a chain'' based on a repeated use of an algorithm for finding the $K$-best
    solutions to the classical assignment problem is proposed but an example
    indicates that it is computationally very hard.}}

@article{Sch-SJC-98,
  title = {{All highest scoring paths in weighted grid graphs and their application
    to finding all approximate repeats in strings}},
  author = {Jeannette P. Schmidt},
  journal = {SIAM J. Computing},
  publisher = {SIAM},
  volume = {27},
  number = {4},
  pages = {972--992},
  month = {August},
  year = {1998},
  abstract = {Weighted paths in directed grid graphs of dimension $(m\times
    n)$ can be used to model the string edit problem, which consists of obtaining
    optimal (weighted) alignments between substrings of $A$, $|A|=m$, and
    substrings of $B$, $|B|=n$. We build a data structure (in $O(mn\log m)$
    time) that supports $O(\log m)$ time queries about the weight of any
    of the $O(m^2n)$ best paths from the vertices in column 0 of the graph
    to all other vertices. Using these techniques we present a simple $O(n^2\log
    n)$ time and $\Theta(n^2)$ space algorithm to find all (the locally optimal)
    approximate tandem (or nontandem) repeats $xy$ within a string of size
    $n$. This improves (by a factor of $\log n$) upon several previous algorithms
    for this problem and is the first algorithm to find {\em all locally
    optimal} repeats. For edit graphs with weights in $\{0,-1,1\}$, a slight
    modification of our techniques yields an $O(n^2)$ algorithm for the cyclic
    string comparison problem, as compared to $O(n^2\log n)$ for the case
    of general weights.}}

@article{Sha-JIE-80,
  title = {{Path finding algorithm --- an algebraic method}},
  author = {J. K. R. Shastry},
  journal = {J. Inst. of Engineers (India) Electronics {\&} Telecommunication
    Engineering Div.},
  volume = {60},
  number = {ET-3},
  pages = {76--78},
  month = {April},
  year = {1980},
  abstract = {An efficient algorithm for determining all paths between a
    terminal node pair of a non-oriented network has been proposed. The algorithm
    is suitable both for hand computation and, when the network is large,
    for programming on a digital computer. The memory requirement in this
    method is much less than in other existing methods.}}

@inproceedings{ShaSmi-INPS-83,
  title = {{The reliability of a computer communication network under a given
    level of traffic}},
  author = {F. Shatwan and D. G. Smith},
  booktitle = {Proc. 2nd Int. Network Planning Symp., Networks 83},
  pages = {310--315},
  year = {1983},
  abstract = {In probabilistic reliability analysis the network is represented
    by a graph. The nodes correspond to computer centres and the edges correspond
    to links between the centres. Each element (link or node) is given a
    probability of being operative. The usual aim is to find either the terminal
    reliability, which is the probability that at least one path exists between
    a given pair of nodes, or global reliability, which is the probability
    that at least one path exists between every pair of nodes. Four methods
    are suggested to determine terminal reliability and unreliability. In
    methods one and three, path enumeration is used to determine terminal
    reliability, and in methods two and four terminal unreliability is found
    by using cutset enumeration. Monte Carlo techniques are also used in
    methods three and four.}}

@article{She-MR-95,
  title = {{A new simple algorithm for enumerating all minimal paths and
    cuts of a graph}},
  author = {Yuanlong Shen},
  journal = {Microelectronics and Reliability},
  volume = {35},
  number = {6},
  pages = {973--976},
  month = {June},
  year = {1995},
  abstract = {There are many algorithms to enumerate MPS and MCS. All of
    these involve advanced mathematics. This paper presents a new simple
    algorithm to determine all minimal paths between specified single terminal
    pair of arbitrary graphs or to determine all minimal cuts when the graph
    is planar. The algorithm is based on elementary concept of graph theory
    and dual principle. This algorithm is fast and simple. An example illustrates
    the algorithm.}}

@mastersthesis{Shi-BS-95,
  title = {{Finding the $k$ shortest paths by AI search techniques}},
  author = {Tetsuo Shibuya},
  type = {Bachelors Thesis},
  school = {Univ. of Tokyo, Faculty of Science},
  year = {1995}}

@article{Shi-ISM-95,
  title = {{Finding the $k$ shortest paths by AI search techniques}},
  author = {Tetsuo Shibuya},
  journal = {Cooperative Research Reports in Modeling and Algorithms},
  publisher = {Inst. of Statical Mathematics},
  address = {Tokyo},
  volume = {7},
  number = {77},
  pages = {212--222},
  month = {March},
  year = {1995}}

@inproceedings{Shi-JNM-76,
  title = {{Algorithms for finding the $k$ shortest paths in a network}},
  author = {Douglas R. Shier},
  booktitle = {ORSA/TIMS Joint National Mtg.},
  journal = {Bull. Operations Research Soc. of America},
  pages = {115},
  year = {1976},
  abstract = {It is sometimes important to find not only paths of minimum
    length in a network but also paths that have nearly minimum length. Several
    algorithms for computing these k shortest paths are presented, and computational
    experience with such algorithms on networks having several hundred nodes
    is described. The relative strengths and weaknesses of these algorithms
    for certain types of network structures are also discussed.}}

@mastersthesis{Shi-MS-97,
  title = {{New Approaches to Flexible Alignment of Multiple Biological Sequences}},
  author = {Tetsuo Shibuya},
  address = {Faculty of Science, Hongo 7-3-1, Bunkyo-ku, Tokyo 113, JAPAN},
  school = {Univ. of Tokyo, Dept. of Information Science},
  month = {February},
  year = {1997},
  url = {http://naomi.is.s.u-tokyo.ac.jp/papers/THESIS/MASTER/shibuya.ps.gz}}

@article{Shi-NBS-74,
  title = {{Computational experience with an algorithm for finding the $K$
    shortest paths in a network}},
  author = {Douglas R. Shier},
  journal = {J. Res. Nat. Bur. Standards Sec. B},
  volume = {78B},
  pages = {139--165},
  year = {1974},
  review = {MR-50-12195}}

@article{MR-50-12195,
  reviews = {Shi-NBS-74},
  journal = {Mathematical Reviews},
  publisher = {Amer. Math. Soc.},
  title = {{Computational experience with an algorithm for finding the $K$
    shortest paths in a network}},
  volume = {50},
  number = {12195},
  year = {1975}}

@article{Shi-Nw-76,
  title = {{Iterative methods for determining the $k$ shortest paths in a
    network}},
  author = {Douglas R. Shier},
  journal = {Networks},
  volume = {6},
  number = {3},
  pages = {205--229},
  year = {1976},
  abstract = {Presents and develops an algebraic structure for determining
    the k shortest paths from a given node to all other nodes of a network.
    Three new methods for calculating such k shortest path information are
    examined and compared. These methods are based on a fairly strong analogy
    which exists between the solution of such network problems and traditional
    techniques for solving linear equations. On the basis of both theoretical
    and computational evidence, one of the three methods is seen to offer
    an extremely effective procedure for finding the k shortest paths from
    a given node in a network.},
  review = {MR-56-2294}}

@article{MR-56-2294,
  reviews = {Shi-Nw-76},
  journal = {Mathematical Reviews},
  publisher = {Amer. Math. Soc.},
  title = {{Iterative methods for determining the $k$ shortest paths in a
    network}},
  author = {M. M. Sys{\l}o},
  volume = {56},
  number = {2294},
  year = {1978}}

@article{Shi-Nw-79,
  title = {{On algorithms for finding the $k$ shortest paths in a network}},
  author = {Douglas R. Shier},
  journal = {Networks},
  volume = {9},
  number = {3},
  pages = {195--214},
  year = {1979},
  review = {MR-80g-90047}}

@article{MR-80g-90047,
  reviews = {Shi-Nw-79},
  journal = {Mathematical Reviews},
  publisher = {Amer. Math. Soc.},
  title = {{On algorithms for finding the $k$ shortest paths in a network}},
  volume = {80g},
  number = {90047},
  year = {1980},
  text = {This paper presents, within a unified framework, several new algorithms
    for computing $k$ shortest paths in a network. These algorithms utilize
    strategies which have proved to be efficient in solving shortest path
    problems. In addition, a computational study was conducted to assess
    the effects of the different `arc processing' orders which are characteristic
    of each algorithm. Testing was performed using generated classes of moderately
    large grid, complete and random networks. Two particular algorithms emerge
    as the most promising among those evaluated.}}

@inproceedings{ShiIkeIma-ITS-95,
  title = {{Finding a realistic detour by AI search techniques}},
  author = {Tetsuo Shibuya and T. Ikeda and Hiroshi Imai and Shigeki Nishimura
    and Hiroshi Shimoura and Kenji Tenmoku},
  booktitle = {Proc. 2nd Intelligent Transportation Systems},
  volume = {4},
  pages = {2037--2044},
  month = {November},
  year = {1995},
  url = {http://naomi.is.s.u-tokyo.ac.jp/papers/navigation/suboptimal-routes/ITS95/its.ps.gz}}

@inproceedings{ShiIma-GIW-93,
  title = {{Finding $K$-best alignments of multiple sequences}},
  author = {G. Shibayama and Hiroshi Imai},
  booktitle = {Proc. Genome Informatics Worksh. IV},
  publisher = {Universal Academy Press},
  pages = {120--129},
  year = {1993},
  url = {http://naomi.is.s.u-tokyo.ac.jp/papers/genome/suboptimal.ps.gz},
  abstract = {Detecting similarities of multiple genome sequences is one
    of the most important topics in genome informatics. For the purpose of
    finding such similarities, an alignment with the highest score with respect
    to some similarity criterion is provided as an output. However, the alignment
    with the best score is not necessarily the most significant alignment
    of the sequences from the viewpoint of biology. In this respect, providing
    suboptimal alignments is very useful. Since finding an alignment of sequences
    corresponds to finding a path in some directed acyclic graph, we propose
    a simple algorithm to enumerate all $K$-best alignments in order, where
    $K$ may not necessarily be specified beforehand, by finding the $K$ longest
    paths in the graph. We further consider finding the subgraph formed by
    such $K$ longest paths. Several useful approaches to find the optimal
    paths in a graph are also mentioned.}}

@article{ShiIma-IPSJ-96,
  title = {{Suboptimal alignments of multiple biological sequences}},
  author = {Tetsuo Shibuya and Hiroshi Imai},
  journal = {IPSJ SIG Notes},
  volume = {SIGAL51-1},
  pages = {1--8},
  month = {May},
  year = {1996}}

@inproceedings{ShiIma-ISMB-96,
  title = {{Suboptimal alignments of multiple biological sequences}},
  author = {Tetsuo Shibuya and Hiroshi Imai},
  booktitle = {Intelligent Systems in Molecular Biology},
  pages = {76},
  month = {June},
  year = {1996},
  note = {Poster session abstract.}}

@inproceedings{ShiIma-PSB-97,
  title = {{Enumerating suboptimal alignments of multiple biological sequences
    efficiently}},
  author = {Tetsuo Shibuya and Hiroshi Imai},
  booktitle = {Proc. 2nd Pacific Symp. Biocomputing},
  pages = {409--420},
  month = {January},
  year = {1997},
  url = {http://www-smi.stanford.edu/people/altman/psb97/shibuya.pdf}}

@inproceedings{ShiIma-RECOMB-97,
  title = {{New flexible approaches for multiple sequence alignment}},
  author = {Tetsuo Shibuya and Hiroshi Imai},
  booktitle = {Proc. 1st Int. Conf. Computational Molecular Biology},
  publisher = {ACM},
  pages = {267--276},
  month = {January},
  year = {1997},
  url = {http://naomi.is.s.u-tokyo.ac.jp/papers/genome/recomb97.ps.gz}}

@inproceedings{ShiImaNis-CODAS-96,
  title = {{Detour queries in geographical databases for navigation and related
    algorithm animations}},
  author = {Tetsuo Shibuya and Hiroshi Imai and Shigeki Nishimura and Hiroshi
    Shimoura and Kenji Tenmoku},
  booktitle = {Proc. Int. Symp. Cooperative Database Systems for Advanced
    Applications},
  volume = {2},
  pages = {333--340},
  month = {December},
  year = {1996},
  url = {http://naomi.is.s.u-tokyo.ac.jp/papers/databases/codas96.ps.gz}}

@article{ShiIshIto-JJFTS-98,
  title = {{Shortest path problems in fuzzy network}},
  author = {F. Shimada and H. Ishii and T. Itoh},
  journal = {Japanese J. Fuzzy Th. and Systems},
  volume = {10},
  number = {2},
  pages = {221--232},
  year = {1998},
  abstract = {We extend traditional shortest path models to fuzzy versions
    with the existence possibility of arcs and fuzzy arc  length. First,
    we consider the model where existence of each arc is fuzzy but its length
    is ordinary number. That is, we maximize the possibility of the existence
    of the path and minimize the length of the path, and seek nondominated
    paths since usually there does not exist a path that optimizes both criteria
    at a time. In order to solve this problem, we first find an optimal path
    on an ordinary network with arcs whose existence possibility is maximum
    by the Floyd-Warshall method. Next, repeatedly arcs with lower existence
    possibilities are added to the network and nondominated paths are found.
    Further, we extend this solution procedure to the shortest path problem
    whose arc lengths are fuzzy numbers.}}

@article{ShiTsuShi-IEICE-87,
  title = {{On a second shortest $k$-tuple of edge-disjoint paths}},
  author = {S. Shinoda and S. Tsukiyama and I. Shirakawa},
  journal = {IEICE Trans. Information {\&} Systems},
  volume = {E70},
  number = {10},
  pages = {945--950},
  month = {October},
  year = {1987},
  abstract = {Let $G$ be a directed graph containing $n$ nodes and $m$ edges,
    with each edge of non-negative length. Given two specified nodes $s$
    and $t$, the length of a $k$-tuple of edge-disjoint paths from $s$ to
    $t$ in $G$ is the sum of the lengths of all the edges on these $k$ paths.
    A polynomial time algorithm for finding a shortest $k$-tuple of edge-disjoint
    paths from $s$ to $t$ in $G$ has been devised. Based on this algorithm,
    the authors consider the problem of finding a second shortest $k$-tuple
    of edge-disjoint paths from $s$ to $t$ in $G$, for which an $O(\min(n^3,nm\log
    n))$-time algorithm is described.}}

@inproceedings{ShiYou-ICSLP-94,
  title = {{Computer assisted grammar construction}},
  author = {H.-H. Shih and S. J. Young},
  booktitle = {Proc. Int. Conf. Spoken Language Processing},
  publisher = {Acoustical Soc. Japan},
  volume = {2},
  pages = {855--858},
  month = {September},
  year = {1994},
  abstract = {The paper presents a system for computer assisted grammar construction
    (CAGC) and its application in speech processing. The CAGC system is designed
    to infer linguistically-motivated broad-coverage stochastic context-free
    grammars (SCFGs) for large corpora, without requiring significant manual
    contributions. Our approach utilizes an extended inside-outside learning
    algorithm to train a hybrid SCFG from a bracketed training set. The bracketing
    information is derived by an automatic surface bracketing system (AUTO)
    specifically designed for this purpose. Experimental results, evaluated
    by using Parseval metrics, demonstrate that the CAGC system is capable
    of inferring a grammar from a subset of the Wall Street Journal (WSJ)
    tagged text corpus and that the inferred grammar achieves high coverage
    and good precision. As an application, the inferred grammar acts as a
    language model for rescoring $N$-best outputs from a speech recognizer.}}

@inproceedings{Sin-ICT-98,
  title = {{Minimum cost routing and wavelength allocation using a genetic-algorithm/heuristic
    hybrid approach}},
  author = {Mark C. Sinclair},
  booktitle = {Proc. 6th IEE Conf. Telecommunications},
  month = {March},
  year = {1998},
  url = {http://esewww.essex.ac.uk/~mcs/ict98_sin.html},
  annote = {Describes early results in minimum cost routing and wavelength
    allocation of multi-wavelength all-optical transport networks using a
    genetic-algorithm/heuristic hybrid approach in which path mutation simply
    selects a path at random from the k-shortest paths.}}

@inproceedings{Sin-RION-92,
  title = {{Single-moment analysis of unreliable trunk networks employing
    $K$-shortest-path routing}},
  author = {Mark C. Sinclair},
  booktitle = {Proc. IEE Colloq. Resilience in Optical Networks},
  pages = {3/1--6},
  month = {October},
  year = {1992},
  url = {http://esewww.essex.ac.uk/~mcs/ps/RION_sin.ps.gz},
  abstract = {In a recent paper, two methods were given for the single-moment
    analysis of fixed-alternative-routing (FAR) circuit-switched communications
    networks with reliable nodes but unreliable links. The second of these,
    MKV_GOS, employs a Markov model for an unreliable link, in combination
    with earlier work, so as to greatly reduce execution time compared to
    existing algorithms. 
    
    In the current paper, an extension to the MKV_GOS method, which was originally
    limited to OOC-SF (Originating Office Control with Spill-Forward) table-based
    routing, is described. This extension allows the analysis of networks
    employing two additional types of routing, K-shortest-disjoint-loopless-path
    and K-shortest-loopless-path. The extended method is then demonstrated
    by comparing results for the two K-shortest-path routing types in terms
    of their overall NGOS for an example network. In addition, the execution
    time of the method for a series of networks of increasing size is presented.}}

@incollection{SkiGol-AOR-89,
  title = {{Solving $k$-shortest and constrained shortest path problems efficiently}},
  author = {Christopher C. Skicism and Bruce Leonard Golden},
  booktitle = {Network Optimization and Applications},
  number = {20},
  editor = {Bala Shetty},
  series = {Annals of Operations Research},
  publisher = {Baltzer Science Publishers},
  pages = {249--282},
  year = {1989},
  review = {MR-90i-90048}}

@article{MR-90i-90048,
  reviews = {SkiGol-AOR-89},
  journal = {Mathematical Reviews},
  publisher = {Amer. Math. Soc.},
  title = {{Solving $k$-shortest and constrained shortest path problems efficiently}},
  volume = {90i},
  number = {90048},
  year = {1990},
  text = {In this paper, we examine the problems of finding the $k$-shortest
    paths, the $k$-shortest paths without repeated nodes, and the shortest
    path with a single side constraint between an origin and destination
    pair. Distances are assumed to be nonnegative, but networks may be either
    directed or undirected. Two versions of algorithms for all these problems
    are compared. The computational results show that, in each case, the
    advantage of the adaptive version (as measured by total number of permanent
    labels) grows with the problem size.}}

@article{SkiGol-Nw-87,
  title = {{Computing $k$-shortest path lengths in Euclidean networks}},
  author = {Christopher C. Skicism and Bruce Leonard Golden},
  journal = {Networks},
  volume = {17},
  number = {3},
  pages = {341--352},
  year = {1987},
  review = {MR-88k-90068}}

@article{MR-88k-90068,
  reviews = {SkiGol-Nw-87},
  journal = {Mathematical Reviews},
  publisher = {Amer. Math. Soc.},
  title = {{Computing $k$-shortest path lengths in Euclidean networks}},
  volume = {88k},
  number = {90068},
  year = {1988},
  text = {In this paper, we examine the problem of finding $k$-shortest paths
    between an origin and destination pair when distances are Euclidean.
    Two versions of a generalized Dijkstra algorithm are compared. Computational
    results show that the advantage of the adaptive version (measured by
    total number of permanent labels) grows with both $k$ and the network
    size. For large networks, the adaptive algorithm exhibits a 100:1 advantage
    in the number of permanent labels set.}}

@article{Slo-BSTJ-72,
  title = {{On finding the paths through a network}},
  author = {Neil J. A. Sloane},
  journal = {Bell System Technical J.},
  volume = {51},
  number = {2},
  pages = {371--390},
  month = {February},
  year = {1972},
  abstract = {Given a directed graph $G$, algorithms are discussed for finding
    all paths through $G$ with prescribed originating and terminating nodes,
    a subset of these paths containing all the edges, a subset containing
    all the edge-edge transitions, and a subset containing the most likely
    paths.}}

@inproceedings{Smi-SCS-88,
  title = {{Routing in evacuation networks with Q-GERT and QNET-C}},
  author = {J. MacGregor Smith},
  booktitle = {Proc. 5th SCS Simulators Conf.},
  pages = {311--315},
  year = {1988},
  abstract = {The optimal routing of occupants in emergency situations is
    a difficult transient, integer, nonlinear programming problem. A design
    methodology is presented for routing occupants based on a multiobjective
    K-shortest path routing algorithm. The design methodology can be incorporated
    into any simulation or analytical model for calculating an egress network's
    performance measures and routing the occupants. Along with a description
    of the problem, design methodology, and routing algorithm, computational
    experience with the design methodology is also presented.}}

@article{SolGorSou-TRB-98,
  title = {{Using decomposition in large-scale highway network design with
    a quasi-optimization heuristic}},
  author = {R. S. Solanki and J. K. Gorti and F. Southworth},
  journal = {Transportation Research, Part B. -- Methodological},
  volume = {32B},
  number = {2},
  pages = {127--140},
  month = {February},
  year = {1998},
  abstract = {The highway network design problem deals with the selection
    of links from a base network to facilitate the flow of vehicles from
    origins to destinations. A proper selection of links requires a balance
    between minimization of travel costs from origins to destinations and
    minimization of costs incurred in building or improving links in the
    network. Link construction costs are usually minimized as a part of the
    objective or constrained by budget availability. National or regional
    highway network design problems require excessive amounts of computing
    time, if solved to optimality. This paper presents a variation of the
    modified quasi-optimization (MQO) heuristic developed by Dionne and Florian
    (1979). The proposed algorithm solves a large network design problem
    by decomposing it in a sequence of smaller problems. Additional savings
    in computation time are achieved by limiting the search in the MQO heuristic
    to a well-designed set of paths for each OD pair. These paths are generated
    to suit the network design problem and differ from the K-shortest paths
    for the OD pairs. The combined use of decomposition and a limited set
    of paths allows the proposed heuristic to address realistic network design
    problems. Numerical experience with a problem involving 6563 nodes and
    9800 two-ways links is reported.}}

@article{Son-C-79,
  title = {{An algorithm for searching alternative routes in traffic networks}},
  author = {H. Sonntag},
  journal = {Computing},
  volume = {21},
  number = {4},
  pages = {323--331},
  year = {1979},
  abstract = {A tree building algorithm which calculates all relevant alternative
    routes in traffic networks is represented. Routes are called relevant,
    when they progress steadily from the origin. The efficiency of the algorithm
    with regard to the computer time compared to existing $k$ shortest paths
    algorithms is remarkable.}}

@inproceedings{Str-ICSLP-94,
  title = {{Experiments with a new algorithm for fast speaker adaptation}},
  author = {N. Strom},
  booktitle = {Proc. Int. Conf. Spoken Language Processing},
  publisher = {Acoustical Soc. Japan},
  volume = {2},
  pages = {459--462},
  month = {September},
  year = {1994},
  abstract = {A new method for improving continuous speech recognition (CSR)
    using speaker adaptation is introduced. The proposed method is unsupervised-no
    prior information about the speaker is used and there is no training
    phase involved. The effect of speaker adaptation is achieved by assuming
    that a set of speaker parameters is constant over the utterance. Both
    the acoustic information and the speaker parameters condition the phoneme
    classification. This approach makes it possible to search for the optimal
    speaker parameters and the optimal phoneme sequence in a unified optimisation
    procedure. The general method is tested using speech recognition based
    on a segmental artificial neural network (ANN). The results from this
    first test are reported. The performance on the utterance level, measured
    as the position of the correct phoneme string in the sorted list of highest
    scoring hypotheses ($N$-best list) is improved even for very short utterances.
    The contribution to phoneme classification performance is positive only
    when recognising long utterances.}}

@mastersthesis{Sub-MS-97,
  title = {{Routing algorithms for dynamic, intelligent transportation networks}},
  author = {Shivaram Subramanian},
  school = {Virginia Technical Univ., Dept. of Civil Engineering},
  month = {September},
  year = {1997},
  url = {http://scholar.lib.vt.edu/theses/public/etd-9797-123411/etd-title.html},
  abstract = {Traffic congestion has been cited as the most conspicuous problem
    in traffic management. It has far-reaching economic,social and political
    effects. Intelligent Transportation Systems (ITS) research and development
    programs have been assigned the task of developing sophisticated techniques
    and counter-measures to reduce traffic congestion to manageable levels,
    and also achieve these objectives using area-wide traffic management
    methods. During times of traffic congestion, the traffic network in a
    transient, time-dynamic state, and resembles a dynamic network. In addition,
    in the context of ITS, the network can accurately detect such transient
    behavior using traffic sensors, and several other information gathering
    devices. In conjunction with Operations Research techniques, the time-varying
    traffic flows can be routed through the network in an optimal manner,
    based on the feedback from these information sources. Dynamic Traffic
    Assignment (DTA) methods have been proposed to perform this task. An
    important step in DTA is the calculation of user-optimal, system-optimal,
    and multiple optimal routes for assigning traffic. One would also require
    the calculation of user-optimal paths for vehicle scheduling and dispatching
    problems. 
    
    The main objective of this research study is to analyze the effectiveness
    of time-dependent shortest path (TDSP) algorithms and k-shortest path
    (k-SP) algorithms as a practical routing tool in such intelligent transportation
    networks. Similar algorithms have been used to solve routing problems
    in computer networks. The similarities and differences between computer
    and ITS road networks are studied. An exhaustive review of TDSP and k-SP
    algorithms was conducted to classify and determine the best algorithms
    and implementation procedures available in the literature. A new (heuristic)
    algorithm (TD-kSP) that calculates multiple optimal paths for dynamic
    networks is proposed and developed. A complete object-oriented computer
    program in C++ was written using specialized network representations,
    node-renumbering schemes and efficient path processing data structures
    (classes) to implement this algorithm. A software environment where such
    optimization algorithms can be applied in practice was then developed
    using object-oriented design methodology. Extensive statistical and regression
    analysis tests for various random network sizes, densities and other
    parameters were conducted to determine the computational efficiency of
    the algorithm. Finally, the algorithm was incorporated within the GIS-based
    Wide-Area Incident Management Software System (WAIMSS) developed at the
    Center for Transportation Research, Virginia Tech. The results of these
    tests are used to obtain the empirical time-complexity of the algorithm.
    Results indicate that the performance of this algorithm is comparable
    to the best TDSP algorithms available in the literature, and strongly
    encourages its possible application in real-time applications. 
    
    Complete testing of the algorithm requires the use of real-time link
    flow data. While the use of randomly generated data and delay functions
    in this study may not significantly affect its computational performance,
    other measures of effectiveness as a routing tool remains untested. This
    can be verified only if the algorithm itself becomes a part of the user-behavior
    feedback loop. A closed loop traffic simulation/ system-dynamics study
    would be required to perform this task. On the other hand, an open-loop
    simulation would suffice for vehicle scheduling/dispatching problems.}}

@article{SugKat-IPSJ-85,
  title = {{An algorithm for finding $k$ shortest loopless paths in a directed
    network}},
  author = {K. Sugimoto and Naoki Katoh},
  journal = {Trans. Information Processing Soc. Japan},
  volume = {26},
  pages = {356--364},
  year = {1985},
  abstract = {This paper is concerned with a new algorithm for finding k
    shortest loopless paths in a directed network. In this algorithm, multiple
    loopless paths to the ending point are systematically represented by
    a tree. It is known that there is no change in the order of the distance
    between paths when some rules are changed for each link length in the
    networks without changing the starting point of the path. The objective
    paths can be obtained by efficiently growing the tree using this principle.
    The authors describe the new algorithm, concrete examples in a model
    network, measured values of calculation time in the grid-type network
    and the comparison between the algorithm and existing algorithms. As
    a result, it is proved that this is a very efficient and practically
    effective algorithm.},
  note = {In Japanese}}

@article{Suu-Nw-74,
  title = {{Disjoint paths in a network}},
  author = {J. W. Suurballe},
  journal = {Networks},
  volume = {4},
  pages = {125--145},
  year = {1974},
  abstract = {Routes between two given nodes of a network are called diversified
    if they are node-disjoint, except at the terminals. Diversified routes
    are required for reliability in communication, and an additional criterion
    is that their total cost, assumed to be the sum of individual arc lengths
    or costs, is minimum. An algorithm and related theory is described for
    a general number K of node-disjoint paths with minimum total length.
    The algorithm applies shortest path labelling algorithms familiar in
    the literature. K node-disjoint paths are found in K iterations of a
    single shortest path algorithm.}}

@article{SuzTsuHir-JORSJ-87,
  title = {{Water salesman problem}},
  author = {H. Suzuki and M. Tsuji and R. Hirabayashi},
  journal = {J. Oper. Res. Soc. Japan},
  volume = {30},
  number = {4},
  pages = {472--492},
  month = {December},
  year = {1987},
  abstract = {The shortest path problem is one of the classic and fundamental
    problems in mathematical programming. Many real-world problems are formulated
    as a shortest path problem and solved by a dynamic programming approach.
    Recently there have been several studies on shortest path problems with
    one or more knapsack type side constraints. In a constrained shortest
    path problem every edge of the network has not only a distance but also
    some weight such as time or cost. The paper concerns a type of constrained
    shortest path problem in which the network has a weight imposed on its
    nodes. For example, given a water price and its demand at every node,
    the requirement is to find a sales route with maximal profit (=sales-cost)
    that does not exceed the total supply Q. This is called the water salesman
    problem. It is a subproblem derived from an existing vehicle routing
    problem with supply constraints in a steel company. Two algorithms are
    discussed for solving a generalized water salesman problem, including
    the original one, where split deliveries of water are allowable. One
    is based on dynamic programming where every state consists of two factors,
    the current node and the remaining water supply. The other is an algorithm
    using the k-th shortest path method. The algorithms are tested out on
    randomly generated problems. The first algorithm can solve any water
    salesman problem with 10 to 80 nodes but takes relatively more time.
    The second one can solve almost all problems rapidly, but for some it
    is forced to stop before obtaining the optimum solution because of memory
    capacity.}}

@inproceedings{SzePev-RECOMB-97,
  title = {{Las Vegas algorithms for gene recognition: suboptimal and error-tolerant
    spliced alignment}},
  author = {Sing-Hoi Sze and Pavel A. Pevzner},
  booktitle = {Proc. 1st Int. Conf. Computational Molecular Biology},
  publisher = {ACM},
  pages = {300--309},
  month = {January},
  year = {1997}}

@inproceedings{TakBorLoe-WM-00,
  title = {{Dealing with additional constraints in the $k$-shortest path
    problem}},
  author = {Tuomo Takkala and Ralf Bornd{\"o}rfer and Andreas L{\"o}bel},
  booktitle = {Proc. WM 2000},
  url = {http://www.cs.chalmers.se/~ilya/WM2000/proceedings.html},
  abstract = {We discuss a method that deals with additional constraints
    in a k-shortest path problem. These constraints can be of knapsack or
    generalized covering type and model resources on subsets of the arcs
    or the nodes. Our goal is to develop a method which handles these types
    of constraints without changes in the k-shortest path code. Instead,
    the cost coefficients (distances) of the arcs are modified and the resulting
    problem is solved as usual. The basic idea is to impose penalties for
    constraint violation and by that favor legal paths in the list of all
    shortest paths.}}

@phdthesis{Tal-PhD-85,
  title = {{Stochastic Network Evacuation Models}},
  author = {Kayhan Talebi},
  school = {Univ. of Massachusetts, Amherst, Dept. of Industrial Engineering},
  year = {1985},
  abstract = {Stochastic network evacuation models are crucial for the safe
    evacuation of occupants from regions. Interest in stochastic models has
    flourished only recently largely due to their cost effectiveness and
    their ability to capture the overall egress process more realistically.
    The overall objective of this thesis is to extend and complement the
    recent developments in modeling egress problems via analytical queueing
    networks. In the first part of this thesis, along with modeling the evacuation
    problem with queueing networks, the existence of capacity limitations
    at different locations in the egress network is addressed. An approximation
    technique entitled the Expansion method is introduced for finite closed
    queueing networks with single exponential servers. The approximation
    technique is tested on networks with different topologies and the results
    are validated by exact and simulation procedures. In the second part
    of this thesis, the optimal routing problem within the stochastic framework
    is discussed. Multi-objective integer programming formulations are presented
    for both the uncapacitated and capacitated routing problems. The exact
    procedures, however, are computationally intractable for most real world
    problems due to the integer nature of the optimization problem. Three
    heuristics based on the K-Shortest Path Algorithm are presented with
    respect to two objectives: (1) Minimize total distance traveled, and
    (2) Minimize maximum evacuation time. These heuristics are tested on
    example egress networks and the results are presented. Finally, some
    ideas and open questions are presented for future research in the area
    of finite closed queueing networks and the optimal routing problem.}}

@phdthesis{Tan-PhD-95,
  title = {{A Framework for Hierarchical Interactive Generation of Cellular{ }Layout{}}},
  author = {Chi Tang},
  school = {Rutgers Univ., Dept. Industrial Engineering},
  year = {1995},
  abstract = {Many manufacturing companies have adopted the concept of cellular
    layout in system configurations to obtain efficiency, productivity, and
    flexibility. A key factor in achieving these goals is the physical layout
    of manufacturing cells on the factory floor. A 'good' cellular layout
    design will not only reduce capital investment, but also eliminate unnecessary
    activities. For general facility layout problems, researchers and practitioners
    alike have developed numerous algorithms and procedures. However, most
    of the existing methods ignore the flow directions and the cyclic routes
    in flow analysis. Also, these methods usually treat machine cells and
    storage areas as points or squares of equal size, with no or little consideration
    for their geometric characteristics. Moreover, these methods do not explicitly
    plan an efficient overall flow pattern to guide the layout process. This
    is despite the fact that improving the material flow through system facilities
    is one of the most important goals in manufacturing system layout design.
    To address these issues, this study develops a flow-network based hierarchical
    interactive approach that encapsulates many important considerations
    of cellular layout planning. This approach can be systematically executed
    in a three-phase design procedure. Phase 1 uses an extension of the K-Shortest
    Path technique (Double-Sweep Method) to rationalize the various flows
    of a system into a master flow network. Phase 2 plans a flow pattern
    and designates the aisle structure for the system based on the master
    flow network. Using a specially developed linear programming model, Phase
    3 interactively locates and allocates the machine cells around the planned
    flow pattern to generate layout solutions. The proposed method explicitly
    considers the flow precedence in flow analysis and the geometric constraints
    in the cell location and allocation process. Also, it integrates the
    traffic aisle structure design into the layout process. In spite of its
    comprehensiveness, the suggested approach is easy to apply and provides
    flexibility to accommodate practical constraints.}}

@article{TanAbd-IJPR-96,
  title = {{A framework for hierarchical interactive generation of cellular
    layout}},
  author = {Chi Tang and Layek L. Abdel-Malek},
  journal = {Int. J. Production Res.},
  volume = {34},
  number = {8},
  pages = {2133--2162},
  month = {August},
  year = {1996},
  abstract = {This paper proposes a flow-network-oriented approach that hierarchically
    addresses the problem of cellular layout design. It consists of three
    major phases: 1) utilize the $k$-shortest path method to rationalize
    the various flows of a system into a master flow network; 2) based on
    this flow network, plan a flow pattern and designate the aisle structure
    for the system; and 3) locate and allocate cells around the flow pattern
    and aisle structure within a restricted floor plan. These three phases
    compose an integrated interactive layout design process. The applicability
    of this approach as well as its effectiveness is illustrated by case
    studies.}}

@article{TanLia-JCUST-90,
  title = {{A parallel algorithm for finding $K$ minimum spanning trees}},
  author = {Ce Shan Tang and Wei Fa Liang},
  journal = {J. China Univ. Sci. Tech.},
  volume = {20},
  number = {4},
  pages = {464--471},
  year = {1990}}

@inproceedings{TanZha-ICCT-98,
  title = {{A study of two rerouting methods of link-restoration based selfhealing
    algorithms in selfhealing networks}},
  author = {Tang{ }Jian and Zhang{ }Huiming},
  booktitle = {Proc. Int. Conf. Communication Technology},
  publisher = {IEEE},
  volume = {2},
  year = {1998},
  abstract = {In communication networks, single link failure is more frequent
    than other failures. Link-restoration based selfhealing algorithms is
    effective to single link failure. Among all rerouting methods of selfhealing
    algorithms, KSP (K-shortest path) and KMF (K-maximum flow) are most important.
    This approach presents a study of KSP and KMF. Computer experiments show
    that, the rerouting ability of KSP and KMF are approximate to the maximum
    and the rerouting ability of KMF is a little better than KSP. This result
    reveals the good performance of KSP and KMF. It is helpful to choosing
    a selfhealing algorithm with high restoration ratio.}}

@book{Tar-SIAM-83,
  title = {{Data Structures and Network Algorithms}},
  author = {Robert E. Tarjan},
  series = {CBMS-NSF Regional Conference Series in Applied Mathematics},
  publisher = {SIAM},
  number = {44},
  year = {1983}}

@inproceedings{TasTakMor-ASSP-94,
  title = {{Efficient chart parsing of speech recognition candidates}},
  author = {T. Tashiro and T. Takezawa and T. Morimoto and M. Nagata},
  booktitle = {Proc. Int. Conf. Acoustics, Speech, and Signal Processing},
  publisher = {IEEE},
  volume = {2},
  pages = {II/13--16},
  month = {April},
  year = {1994},
  abstract = {In a spoken language system that uses the $N$-best interface
    between the continuous-speech recognition component and the natural language
    processing component, the role of the language processing component is
    to filter speech recognition candidates and to determine the semantic
    interpretation of the input. We propose as efficient chart parsing method
    of finding the most plausible sentence within the $N$-best candidate
    sentences and determining the semantic interpretation of the sentence,
    while avoiding the re-computation of the common substrings. We use syntactic
    and semantic constraints described in the unification-based framework
    and context-sensitive conditional probability CFG preferences to reorder
    the $N$-best candidates. In preliminary tests, our parser has been successful
    in reducing parsing steps by sharing common substrings and in selecting
    correct sentences first.}}

@article{Thu-ZOR-75,
  title = {{A method for selecting the shortest path of a network}},
  author = {R. Thumer},
  journal = {Zeitschrift f{\"u}r Operations Research, Serie B (Praxis)},
  volume = {19},
  pages = {B149--153},
  year = {1975},
  abstract = {The method proposed can be used to avoid some of the well known
    weaknesses of the generally applied algorithms for determining shortest
    routes through networks by increasing their efficiency. Therefore it
    is even possible to evaluate without much more effort the k best routes
    in large networks. In addition bottlenecks can easily be taken into account.},
  note = {In German}}

@inproceedings{Top-ICC-86,
  title = {{A $k$-shortest path algorithm for adaptive routing in communications
    networks}},
  author = {Donald M. Topkis},
  booktitle = {Int. Conf. Communications},
  publisher = {IEEE},
  volume = {1},
  pages = {108--113},
  year = {1986}}

@article{Top-TC-88,
  title = {{A $k$-shortest path algorithm for adaptive routing in communications
    networks}},
  author = {Donald M. Topkis},
  journal = {Trans. Communications},
  publisher = {IEEE},
  volume = {36},
  number = {7},
  pages = {855--859},
  year = {1988},
  review = {MR-89f-90057}}

@article{MR-89f-90057,
  reviews = {Top-TC-88},
  journal = {Mathematical Reviews},
  publisher = {Amer. Math. Soc.},
  title = {{A $k$-shortest path algorithm for adaptive routing in communications
    networks}},
  author = {Peter Brucker},
  volume = {89f},
  number = {90057},
  year = {1989},
  text = {For a network with $n$ nodes and $e$ arcs an $O(ke \log n)$-algorithm
    is given which finds the $k$ shortest paths with distinct initial links
    from a particular node to all other nodes. Using Fibonacci heaps the
    complexity can be improved to $O(kp \log(n)+ke)$. Under the assumption
    that all arc lengths are equal to one an $O(ke)$-algorithm is developed.}}

@inproceedings{TraSeiSte-ICSLP-96,
  title = {{A word graph based $N$-best search in continuous speech recognition}},
  author = {B.-H. Tran and F. Seide and T. Steinbiss},
  booktitle = {Proc. 4th Int. Conf. Spoken Language Processing},
  publisher = {IEEE},
  editor = {H. T. Bunnell and W. Idsardi},
  volume = {4},
  pages = {2127--2130},
  month = {October},
  year = {1996},
  abstract = {The authors introduce an efficient algorithm for the exhaustive
    search of N-best sentence hypotheses in a word graph. The search procedure
    is based on a two-pass algorithm. In the first pass, a word graph is
    constructed with standard time-synchronous beam search. The actual extraction
    of N-best word sequences from the word graph takes place during the second
    pass. With the implementation of a tree-organized N-best list, the search
    is performed directly on the resulting word graph. Therefore, the parallel
    bookkeeping of N hypotheses at each processing step during the search
    is not necessary. It is important to point out that the proposed N-best
    search algorithm produces an exact N-best list as defined by the word
    graph structure. Possible errors can only result from pruning during
    the construction of the word graph. In a postprocessing step, the N candidates
    can be rescored with a more complex language model with highly reduced
    computational cost. This algorithm is also applied in speech understanding
    to select the most likely sentence hypothesis that satisfies some additional
    constraints.}}

@phdthesis{Tse-PhD-97,
  title = {{Towards a Framework for an Automated Landfill System}},
  author = {Hui-Ping Tserng},
  school = {Univ. of Wisconsin, Madison, Dept. of Civil Engineering},
  year = {1997},
  abstract = {This research developed a framework for an Automated Landfill
    System (ALS). The automation characteristics of ALS offers significant
    potential for increase in productivity, improvement in landfill space
    management, and reduction in risk to workers in the landfill compaction
    operation. The development of ALS requires: (1) Efficient space model
    to maintain the landfill configuration, (2) Space management to monitor
    landfill space consumption and achieve proper storage strategy, (3) Mapping
    and positioning system to update landfill configuration in real-time,
    (4) Instantaneous motion planning and controlling for multiple landfill
    equipment, and (5) Measurement of in-situ waste density to avoid re-compaction.
    This research focuses on the space model development, space model management,
    multi-equipment motion planning, and a study of mapping and positioning
    system. A 3-D Graphical Database System
     (GDS) along with an Octree algorithm was developed as a space model
    for a landfill site that will improve and assist the recovery program
    as well as monitor the space usage of the landfill site. Space consumption
    and waste information can be obtained easily by traversing the Octree
    data structure via Octant's coding and property system. Furthermore,
    Global Positioning System (GPS) technology can be used as a mapping and
    positioning system to achieve the real-time space measurement for landfill
    sites. An Instantaneous Motion Planning And Controlling Tool (IMPACT)
    was developed to generate efficient and collision-free path for multiple
    landfill equipment during the compaction operation. Each landfill equipment
    will have a given starting point through which appropriate paths can
    be determined while avoiding collisions with obstacles, other equipment,
    and operators. The Quadtree-Cube algorithm, modified from Quadtree algorithm,
    is proposed to address the motion planning for various types of landfill
    equipment. The specific Network Graph can be extracted from the Quadtree-Cube
    system for each piece of equipment. Then, IMPACT uses k-shortest path
    algorithm to traverse the Network Graph. Subsequently, the IMPACT finds
    a set of efficient and collision-free paths for each piece of landfill
    equipment. An example application of IMPACT for landfill compaction operation
    was also provided. The system has been implemented using a 3-D graphic
    functional interface library--OpenGL, with C++ program binding.}}

@article{TsuShiOza-ECJ-75,
  title = {{An algorithm for generating the cycles of a digraph}},
  author = {S. Tsukiyama and I. Shirakawa and H. Ozaki},
  journal = {Electronics and Communications in Japan},
  volume = {58},
  number = {4},
  pages = {8--15},
  month = {April},
  year = {1975},
  abstract = {Application of the proposed algorithm to a digraph G requires
    memory space and processing time of the order of O(n+m+s) and O( nu mc+n+m),
    respectively, where n, m and c are the numbers of vertices, edges and
    cycles of G, s is the total length of cycles and nu maximum number of
    vertices of strongly-connected nonseparable components in G. The algorithm
    was programmed in FORTRAN and run on an IBM 370/165. Several implemented
    examples revealing its efficiency are shown.}}

@article{TsuShiOza-IEICE-78,
  title = {{On the algorithm to enumerate all the cutsets in a graph}},
  author = {S. Tsukiyama and I. Shirakawa and H. Ozaki},
  journal = {IEICE Trans. Information {\&} Systems},
  volume = {E61},
  number = {7},
  pages = {544},
  month = {July},
  year = {1978},
  abstract = {Deals with the problem to enumerate all the cutsets in an undirected
    graph, and presents a new linear time algorithm to this problem.}}

@article{TsuShiOza-IPSJ-75,
  title = {{An algorithm for generating all the paths between two vertices
    in a digraph and its application}},
  author = {T. D. Am and S. Tsukiyama and I. Shirakawa and H. Ozaki},
  journal = {Trans. Information Processing Soc. Japan},
  volume = {16},
  number = {9},
  pages = {774--780},
  year = {1975},
  abstract = {Proposes a new efficient algorithm to generate all the paths
    from a specified vertex to another one in a given directed graph. The
    algorithm requires processing time of order $\Theta((n+m)(p+1))$ and
    memory space of order $\Theta(n+m)$; where $n$, $m$, and $p$ denote the
    numbers of vertices, edges, and directed paths to be sought of a graph.
    As an application of the algorithm, this paper also considers the shortest
    or the longest path problem in such a directed graph as contains cycle
    of negative weight.},
  note = {Did this version of the paper include Am as co-author?}}

@article{TsuShiOza-JACM-80,
  title = {{An algorithm to enumerate all cutsets of a graph in linear time
    per cutset}},
  author = {S. Tsukiyama and I. Shirakawa and H. Ozaki and H. Ariyoshi},
  journal = {J. Assoc. Comput. Mach.},
  publisher = {ACM},
  volume = {27},
  number = {4},
  pages = {619--632},
  month = {October},
  year = {1980},
  abstract = {Deals with the problem or enumerating all the cutsets or all
    the s-t cutsets separating two specified vertices s and t in an undirected
    graph. A variety of approaches have been proposed for this problem, among
    which one based on the partition of a set of vertices into two sets is
    the most efficient. It is first shown that an algorithm of this type
    has time complexity O((n+m)(n-log/sub 2/ mu ) mu ), and two new algorithms
    with time complexity O((n+m)( mu +1)) are then proposed. One of these
    new algorithms has space complexity O(n/sup 2/), and the other has space
    complexity O(n+m), where n and m are the numbers of vertices and edges,
    respectively, and mu is the number of s-t cutsets in a given graph. The
    results of some computational experiments are also described. An investigation
    is made of the extent to which the new algorithms are better, and how
    good the performance of the old algorithm is, especially when a given
    graph is 'dense', i.e., 2m/(n(n-1)){$>$}or=0.4.}}

@inproceedings{TsuShiOza-UJCC-75,
  title = {{A survey: generating all the cycles of a digraph}},
  author = {S. Tsukiyama and I. Shirakawa and H. Ozaki},
  booktitle = {Proc. 2nd USA-Japan Computer Conf.},
  publisher = {AFIPS},
  pages = {92--96},
  month = {August},
  year = {1975},
  abstract = {The generation of all the cycles of a digraph is fundamental
    in the theory of graphs, and is also of great importance in the application
    of digraph theory to computer science. The recent development of reducing
    the computational labor in the problem of listing and counting the cycles
    of a digraph is remarkable. The present paper surveys several representative
    algorithms of the problem, and then proposes a new efficient method of
    computational labor O(n+m) per cycle, with n and m representing the numbers
    of vertices and edges of a digraph, respectively. The paper also observes
    that the proposing algorithm can be applied with more efficiency than
    any other especially to digraphs.}}

@inproceedings{VazYan-ICALP-92,
  title = {{Suboptimal cuts -- their enumeration, weight and number}},
  author = {Vijay V. Vazirani and Mihalis Yannakakis},
  booktitle = {Proc. 19th Int. Coll. Automata, Languages, and Programming},
  number = {623},
  series = {Lecture Notes in Computer Science},
  publisher = {Springer Verlag},
  pages = {366--377},
  year = {1992},
  note = {We present (1) an algorithm that enumerates the cuts of a network
    by increasing weight with polynomial delay, and (2) an algorithm that
    computes the k-th minimum weight in polynomial time for fixed k. We also
    show that in the case of undirected networks there are only polynomially
    many cuts that have the k-th minimum weight for any fixed k (whereas
    directed networks can have exponentially many different minimum cuts).}}

@phdthesis{vdP-PhD-97,
  title = {{Aspects of Sensitivity Analysis for the Traveling Salesman Problem}},
  author = {Edo S. van der Poort},
  school = {Univ. of Groningen, Dept. of Econometrics},
  month = {6 November},
  year = {1997},
  note = {Discusses the computational complexity of sensitivity analysis
    and $k$-best solutions for TSP problems. In the first half of this thesis,
    van der Poort shows that these problems are just as hard to solve as
    the TSP itself, but that algorithms for solving the TSP can be used to
    determine the required sensitivity information. The second half examines
    the relationship between stability and $k$-best problems for the TSP.}}

@article{VemKal-VLSI-95,
  title = {{Generation of design verification tests from behavioral VHDL
    programs using path enumeration and constraint programming}},
  author = {R. Vemuri and R. Kalyanaraman},
  journal = {Trans. VLSI Systems},
  publisher = {IEEE},
  volume = {3},
  pages = {201--214},
  year = {1995},
  abstract = {A method for generation of design verification tests from behavior-level
    VHDL programs is presented. The method generates stimuli to execute desired
    control-flow paths in the given VHDL program. This method is based on
    path enumeration, constraint generation and constraint solving Behavioral
    VHDL programs contain multiple communicating processes, signal assignment
    statements, and wait statements which are not found in traditional software
    programming languages. Our model of constraint generation is specifically
    developed for VHDL programs with such constructs. Control-flow paths
    for which design verification tests are desired are specified through
    certain annotations attached to the control statements in the VHDL programs.
    These annotations are used to enumerate the desired paths. Each enumerated
    path is translated into a set of mathematical constraints corresponding
    to the statements in the path. Methods for generating constraint variables
    corresponding to various types of carriers in VHDL and for mapping various
    VHDL statements into mathematical relationships among these constraint
    variables are developed. These methods treat spatial and temporal incarnations
    of VHDL carriers as unique constraint variables thereby preserving the
    semantics of the behavioral VHDL programs. Constraints are generated
    in the constraint programming language CLP(R) and are solved using the
    CLP(R) system. A solution to the set of constraints so generated yields
    a design verification test sequence which can be applied for executing
    the corresponding control path when the design is simulated. If no solution
    exists, then it implies that the corresponding path can never be executed.
    Experimental studies pertaining to the quality of path coverage and fault
    coverage of the verification tests are presented.}}

@article{Vin-COSB-96,
  title = {{Near-optimal sequence alignment}},
  author = {Martin Vingron},
  journal = {Current Opinion in Structural Biology},
  volume = {6},
  number = {3},
  pages = {346--352},
  month = {June},
  year = {1996},
  abstract = {Recent advances in algorithmic techniques and statistics of
    sequence alignment have helped to make near-optimal alignments an important
    tool in the delineation of biologically valid alignments. Near-optimal
    alignments serve to judge the reliability of portions of a sequence alignment.
    The statistical assessment of suboptimal alignment scores makes sequence
    alignments less dependent on gap-penalty choice.}}

@mastersthesis{Voh-MS-90,
  title = {{Diverse Routing in Network Planning}},
  author = {Sonia Isabel Vohnout},
  school = {Univ. of Arizona},
  year = {1990},
  abstract = {This thesis discusses an algorithm and two heuristics for solving
    a particular network optimization problem: the node-disjoint paths problem.
    The goal of this optimization problem is to find two node-disjoint paths
    between a given origin-destination pair whose total cost is minimum.
    This problem is shown to be NP-hard. Two heuristics are investigated
    in this thesis. The sequential shortest paths heuristic is the faster
    of the two methods, but the quality of the solution may be sacrificed.
    On the other hand, the simultaneous shortest paths heuristic, which yields
    very good solutions, has higher complexity.  We also discuss an implicit
    enumeration algorithm that is used to verify the quality of the solution
    obtained from the heuristics.}}

@article{Wal-BIT-83,
  title = {{On degeneracy in enumeration}},
  author = {Stein W. Wallace},
  journal = {BIT},
  volume = {23},
  number = {2},
  pages = {267--270},
  year = {1983},
  review = {MR-84e-90062}}

@article{MR-84e-90062,
  reviews = {Wal-BIT-83},
  journal = {Mathematical Reviews},
  publisher = {Amer. Math. Soc.},
  title = {{On degeneracy in enumeration}},
  volume = {84e},
  number = {90062},
  year = {1984},
  text = {In the case of degeneracy in an LP-formulation, there is not a
    one-to-one
    correspondence between extreme points and feasible bases. If the task
    is to find the $k$ best extreme points in the set of feasible solutions
    to an LP, this lack of correspondence has a certain importance, since
    methods based on the simplex algorithm are oriented towards feasible
    bases instead of the relevant extreme points. We therefore present an
    easily implementable method to avoid this problem.}}

@phdthesis{Wal-PhD-95,
  title = {{Minimum Cost Routing in Stochastic Networks}},
  author = {Kenneth Scott Walley},
  school = {Univ. of California, Irvine, Dept. of Electronics and Electrical
    Engineering},
  year = {1995},
  abstract = {An important management function in communication and computer
    networks is the determination of the routes taken by incoming traffic
    through the network. In route selection, costs are assigned to each potential
    route, and the chosen route is determined from these costs. In this research,
    models and analytical techniques are developed to estimate the costs
    of virtual circuit routes in store and forward packet switched networks
    in order to study routing behavior and improve routing algorithms. A
    discrete-time stochastic queuing network model is considered first, and
    analytic results are developed for the approximate occupancy probability
    distribution of each stage along a tandem of infinite capacity queues
    in which there are arrivals and departures at each stage. These results
    improve upon previous discrete-time tandem analysis and are applied to
    a virtual circuit routing algorithm with traffic prediction. In order
    to limit the computational burden, candidate paths for analysis are preselected
    using a k-shortest paths algorithm. Simulation studies show that improved
    network delay performance is obtained for the routing algorithm considered
    here over standard algorithms which use measured delay or mean occupancy
    estimates based on Poisson traffic assumptions. A simple random network
    model consisting of a G(n,p) random weighted graph where Prob(edge) =
    p and edge costs are i.i.d. between different node pairs is also considered.
    For the case of edge cost distributions which are discrete or which have
    a general Taylor's series at zero cost, bounds, limit values, and some
    exact results are determined for the probability distributions for the
    shortest path cost, shortest path edge count, and the graph diameter.
    These results are used to investigate properties of minimum cost routes.
    An example using this model demonstrates the significant effect that
    knowledge of the routed session traffic rate has on the routing performance
    in virtual circuit routing. These results are also used to study for
    more general random graph models than previously considered, the average
    case performance benefits of two all-shortest paths algorithms in which
    graph preprocessing to eliminate edges is used to reduce computations.}}

@techreport{Wal-RI-82,
  title = {{Enumeration algorithm in linear programming}},
  author = {Stein W. Wallace},
  series = {Reports in Informatics},
  institution = {Univ. of Bergen, Dept. of Informatics},
  number = {3},
  year = {1982},
  review = {MR-84g-90062}}

@article{MR-84g-90062,
  reviews = {Wal-RI-82},
  journal = {Mathematical Reviews},
  publisher = {Amer. Math. Soc.},
  title = {{Enumeration algorithm in linear programming}},
  volume = {84g},
  number = {90062},
  year = {1984},
  text = {Consider the linear programming problem: (1) Min $f(X)=C^T X$ subject
    to $AX=a_0$, $X,a_0 \ge 0$, where $A$ is an $m\times n$ matrix and $rank(A)=rank(A,a_0)=m$.
    $C$ and $X$ are $n$-vectors and $a_0$ is an $m$-vector. Let $X_{i_1}$
    be an optimal solution to (1) with corresponding $f_{i_1}$. From $X_{i_1}$
    we seek the $k$ best solutions to (1). By `best' we mean that if $i_1$,
    $i_2$, $\ldots$, $i_k$ are the indices of the $k$ best extreme points,
    then $f_{i_1} \le f_{i_2} \le\cdots\le f_{i_k}$ and $f_{i_j} \le f_{i_t}$
    for all $j$, $t$ so that $j \le k < t \le r$, where $r$ is the total
    number of extreme points. Solutions to this problem are often presented
    as algorithms for finding all extreme points to (1). Such algorithms
    are not always suitable when only a small number of extreme points is
    asked for. The basis of our method is that of M. E. Dyer and L. G. Proll
    [Math. Programming 12 (1977), 81 - 96; MR 57 {\#}18805]. Their algorithm
    solves the problem of finding all the extreme points in the set of feasible
    solutions to (1). We change the algorithm to solve the enumeration problem,
    and in addition we make some important changes in the tests for neighbours.
    We also prove that the algorithm works both as an enumeration algorithm
    and as an algorithm for finding all extreme points. Whether we use perturbation
    techniques or not, it is well known that degeneracies may produce several
    versions of the same extreme point. Therefore we present a test to avoid
    the same extreme point being registered several times among the $k$ best.
    We also suggest how the problem of unbounded sets of feasible solutions
    can be handled. One chapter is devoted to detailed algorithms and implementation
    considerations, especially due to the fact that storage is often the
    limiting factor in this kind of problem.}}

@article{WanIma-TIS-95,
  title = {{A new approach of parsing and search based on the divide and
    conquer strategy for continuous speech recognition}},
  author = {Ming-Sheng Wang and S. Imai},
  journal = {IEICE Trans. Information {\&} Systems},
  volume = {E78-D},
  number = {4},
  pages = {455--465},
  month = {April},
  year = {1995},
  abstract = {We report a new approach concerning a parsing and searching
    problem for a given phonetic lattice. The approach is based on the divide
    and conquer (DC) strategy. By dividing the phonetic lattice, we first
    construct a PD-tree to represent this lattice, then, we parse through
    this PD-tree to identify the possible sentence which is supposed to be
    the speech utterance. Next, we propose a new search scheme called Downward
    Request (DR) search model to decrease the computation costs, and this
    search model gives us the optimal or $N$-best solutions. Experiments
    performed on Chinese speech recognition show us the good results.}}

@article{Wat-NAS-83,
  title = {{Sequence alignments in the neighborhood of the optimum}},
  author = {Michael S. Waterman},
  journal = {Proc. Natl. Acad. Sci. USA},
  volume = {80},
  pages = {3123--3124},
  year = {1983}}

@article{WatBye-MB-85,
  title = {{A dynamic programming algorithm to find all solutions in a neighborhood
    of the optimum}},
  author = {Michael S. Waterman and Thomas Hancock Byers},
  journal = {Mathematical Biosciences},
  volume = {77},
  pages = {179--185},
  year = {1985},
  review = {MR-87c-90234}}

@article{MR-87c-90234,
  reviews = {WatBye-MB-85},
  journal = {Mathematical Reviews},
  publisher = {Amer. Math. Soc.},
  title = {{A dynamic programming algorithm to find all solutions in a neighborhood
    of the optimum}},
  volume = {87c},
  number = {90234},
  year = {1987},
  text = {This paper describes a new technique for finding $K$th best policies
    which modifies the usual backtracking procedure and lists all near-optimal
    policies. This practical algorithm is very much in the spirit of the
    original formulation of dynamic programming. An application to matching
    biological sequences is given.}}

@article{WauDem-JSAC-96,
  title = {{Design of the optical-path layer in multiwavelength cross-connected
    networks}},
  author = {N. Wauters and P. Demeester},
  journal = {J. Selected Areas in Communications},
  publisher = {IEEE},
  volume = {14},
  number = {6},
  pages = {881--892},
  month = {June},
  year = {1996},
  annote = {According to Sinclair \cite{Sin-ICT-98}, this paper describes
    two routing algorithms, one of which is ``based on iterative application
    of a modified version of Yen's k-shortest path algorithm, and aims to
    produce the lowest cost allocation that still achieves minimum network
    wavelength requirement.''}}

@inproceedings{Wei-ASSP-95,
  title = {{LVCSR log-likelihood ratio scoring for keyword spotting}},
  author = {M. Weintraub},
  booktitle = {Proc. Int. Conf. Acoustics, Speech, and Signal Processing},
  publisher = {IEEE},
  volume = {1},
  pages = {297--300},
  month = {May},
  year = {1995},
  abstract = {A new scoring algorithm has been developed for generating wordspotting
    hypotheses and their associated scores. This technique uses a large-vocabulary
    continuous speech recognition (LVCSR) system to generate the $N$-best
    answers along with their Viterbi alignments. The score for a putative
    hit is computed by summing the likelihoods for all hypotheses that contain
    the keyword normalized by dividing by the sum of all hypothesis likelihoods
    in the $N$-best list. Using a test set of conversational speech from
    Switchboard Credit Card conversations, we achieved an 81{\%} figure of merit
    (FOM). Our word recognition error rate on this same test set is 54.7{\%}.}}

@article{Wei-Comp-76,
  title = {{A new algorithm for the solution of the $k$-th best route problem}},
  author = {M. M. Weigand},
  journal = {Computing},
  volume = {16},
  pages = {139--151},
  year = {1976},
  abstract = {The algorithm for finding the k-shortest loopless paths from
    one node to another is presented. Though memory need is less, the algorithm
    is running about 20 times as fast on large networks (1000 nodes and more).
    The computer time increases linearly with k and about quadratic with
    the number of nodes on the generated paths.}}

@article{Wei-Nw-73,
  title = {{The shortest and the $K$-shortest routes as assignment problems}},
  author = {A. Weintraub},
  journal = {Networks},
  volume = {3},
  pages = {61--73},
  year = {1973},
  review = {MR-54-9639}}

@article{MR-54-9639,
  reviews = {Wei-Nw-73},
  journal = {Mathematical Reviews},
  publisher = {Amer. Math. Soc.},
  title = {{The shortest and the $K$-shortest routes as assignment problems}},
  volume = {54},
  number = {9639},
  year = {1977}}

@inproceedings{Wei-ORSA-72,
  title = {{A shortest route algorithm with unrestricted costs on the arcs}},
  author = {A. Weintraub},
  booktitle = {Proc. 42nd Mtg. Operations Research Society of America},
  journal = {Bull. Operations Research Soc. of America},
  volume = {20},
  pages = {B/334--335},
  year = {1972},
  abstract = {An algorithm for finding the shortest route between two nodes
    in a network with unrestricted costs on the arcs is presented. The method
    is based on solving an equivalent assignment problem. A parametric analysis
    is presented. It is shown that if, after a shortest route is determined,
    the costs on all arcs incident into or out of a node are modified in
    any form, at most elementary calculations of order m-squared will determine
    a new optimal solution. This feature, shared by Dynamic Programming algorithms
    only for cases where all costs decrease, can be applied to problems such
    as the determination of the K-shortest route and the K-smallest assignments
    leading to upper bounds of order K-m-cubed in both cases.},
  note = {Supplement 2}}

@article{WilJai-NRL-88,
  title = {{An approach to postoptimality and sensitivity analysis of zero-one
    goal programs}},
  author = {G. R. Wilson and H. K. Jain},
  journal = {Naval Research Logistics},
  volume = {35},
  pages = {73--84},
  year = {1988},
  abstract = {Presents a methodology for postoptimality and sensitivity analysis
    of zero-one goal programs based on the set of k-best solutions. A method
    for generating the set of k-best solutions using a branch and bound algorithm
    and an implicit enumeration scheme for multiple objective problems are
    discussed. Rules for determining the range of parameter changes that
    still allows a member of the k-best set to be optimal are developed.
    An investigation of a sufficient condition for postoptimality analysis
    is also presented.}}

@article{Won-DM-79,
  title = {{Semirings and path spaces}},
  author = {A. Wongseelashote},
  journal = {Discrete Mathematics},
  volume = {26},
  pages = {55--78},
  year = {1979},
  abstract = {This paper develops a unified algebraic theory for a class
    of path problems such as that of finding the shortest or, more generally,
    the k shortest paths in a network; the enumeration of elementary or simple
    paths in a graph. It differs from most earlier work in that the algebraic
    structure appended to a graph or a network of a path problem is not axiomatically
    given as a starting point of the theory, but is derived from a novel
    concept called a 'path space'. This concept is shown to provide a coherent
    framework for the analysis of path problems, and hence the development
    of algebraic methods for solving them.}}

@article{Won-Nw-76,
  title = {{An algebra for determining all path-values in a network with
    application to $k$-shortest-paths problems}},
  author = {A. Wongseelashote},
  journal = {Networks},
  volume = {6},
  pages = {307--334},
  year = {1976},
  abstract = {This paper presents an algebra which is appropriate for the
    formulation and solution of k-shortest-paths problems. The algebra is
    a generalization of 'Schedule Algebra' for computing path values in a
    network. It is shown formally that these path values can be calculated
    by using direct methods of numerical linear algebra for solving systems
    of linear equations and an algorithm similar to the long division procedure
    of ordinary arithmetic. Such a method is then modified to yield an algorithm
    for finding k shortest elementary paths in a network.},
  review = {MR-56-14628}}

@article{MR-56-14628,
  reviews = {Won-Nw-76},
  journal = {Mathematical Reviews},
  publisher = {Amer. Math. Soc.},
  title = {{An algebra for determining all path-values in a network with
    application to $k$-shortest-paths problems}},
  author = {E. Ja. Gabovic},
  volume = {56},
  number = {14628},
  year = {1978}}

@inproceedings{WutOMa-ECOC-95,
  title = {{A simple algorithm for wavelength assignment in optical networks}},
  author = {L. Wuttisittikulkij and M. J. O'Mahony},
  booktitle = {Proc. 21st Eur. Conf. Opt. Comm.},
  pages = {859--862},
  year = {1995},
  annote = {According to Sinclair \cite{Sin-ICT-98}, this paper ``developed
    a simple, fast and non-iterative algorithm, which works with k-lowest
    hop count paths to obtain a low network wavelength requirement'' for optical
    network routing.}}

@inproceedings{YamSekKub-IWPT-89,
  title = {{An efficient enumeration algorithm of parses for ambiguous context-free
    languages}},
  author = {N. Yamai and T. Seko and N. Kubo and T. Kawata},
  booktitle = {Proc. Int. Worksh. Parsing Technologies},
  publisher = {Carnegie Mellon University},
  pages = {286--296},
  month = {August},
  year = {1989},
  abstract = {An efficient algorithm that enumerates parses of ambiguous
    context-free languages is described, and its time and space complexities
    are discussed. The paper first introduces a hierarchical graph suitable
    for enumeration. Using this graph, enumeration of parses in the order
    of acceptability is equivalent to finding paths of this graph in the
    order of length. Then, an efficient enumeration algorithm is presented
    with this graph, which can be applied to arbitrary context-free grammars.
    For enumeration of $k$ parses in the order of the total weight of all
    applied productions, the time and space complexities of the algorithm
    are $O(n^3+kn^2)$ and $O(n^3+kn)$, respectively.}}

@article{Yen-MS-71,
  title = {{Finding the $K$ shortest loopless paths in a network}},
  author = {Jin Y. Yen},
  journal = {Management Science},
  volume = {17},
  pages = {712--716},
  year = {1971},
  abstract = {Presents an algorithm for finding the K loopless paths that
    have the shortest lengths from one node to another node in a network.
    The significance of the new algorithm is that its computational upper
    bound increases only linearly with the value of K. Consequently, in general,
    the new algorithm is extremely efficient. This paper first reviews the
    algorithms presently available for finding the K shortest loopless paths
    in terms of the computational effort and memory addresses they require.
    This is followed by the presentation of the new algorithm and its justification.
    Finally, the efficiency of the new algorithm is examined and compared
    with that of other algorithms.},
  review = {MR-45-9827}}

@article{MR-45-9827,
  reviews = {Yen-MS-71},
  journal = {Mathematical Reviews},
  publisher = {Amer. Math. Soc.},
  title = {{Finding the $K$ shortest loopless paths in a network}},
  author = {W.-K. Chen},
  volume = {45},
  number = {9827},
  year = {1973}}

@inproceedings{Yen-ORSA-72,
  title = {{Another algorithm for finding the $K$ shortest-loopless network
    paths}},
  author = {Jin Y. Yen},
  booktitle = {Proc. 41st Mtg. Operations Research Society of America},
  journal = {Bull. Operations Research Soc. of America},
  volume = {20},
  pages = {B/185},
  year = {1972},
  abstract = {This paper presents a new algorithm for finding the K loopless
    paths from the origin to a sink that have the shortest lengths in the
    network. The significance of the new algorithm is that it requires fewer
    computations than other available algorithms proposed by Bock, Kantner
    and Haynes (1957), Pollack (1961), Clarke, Krikorian, and Rausan (1963),
    Sakarovitch (1968), and Yen (1971). A comparison of the efficiencies
    of different algorithms is also presented.}}

@inproceedings{YenKuo-ASIIH-94,
  title = {{Degraded gray-scale text recognition using pseudo-2D hidden Markov
    models and $N$-best hypotheses}},
  author = {Chinching Yen and Shyh-Shiaw Kuo},
  booktitle = {Proc. Conf. Automatic Systems for the Identification and Inspection
    of Humans},
  number = {2277},
  series = {Proc. SPIE},
  publisher = {Int. Soc. Optical Engineering},
  pages = {180--191},
  month = {July},
  year = {1994}}

@article{YenKuo-GMIP-95,
  title = {{Degraded gray-scale text recognition using pseudo-2D hidden Markov
    models and $N$-best hypotheses}},
  author = {Chinching Yen and Shyh-Shiaw Kuo},
  journal = {Graphical Models and Image Processing},
  volume = {57},
  number = {2},
  pages = {131--145},
  month = {March},
  year = {1995},
  abstract = {The pseudo-two-dimensional hidden Markov Model (PHMM), which
    is an extension of the 1D HMM, has been shown to be an effective approach
    in recognition of highly degraded and connected text. In this paper,
    the PHMM is extended to directly recognize poorly printed gray-level
    document images. The performance of the system is further enhanced by
    the $N$-best hypotheses search, coupled with duration constraint. Experimental
    results show that the new system has significantly improved the performance
    when compared to a similar system using thresholded binary images as
    inputs. The recognition rate improves from 97.7{\%} in the binary system
    to 99.9{\%} in gray level with modified $N$-best search, over a testing
    set with similar blur and noise conditions as the training set. For a
    much more degraded testing set, it improves from 89.59 to 98.51{\%}. This
    also demonstrates the robustness of the proposed system.}}

@inproceedings{YenKuo-ICIP-95,
  title = {{On the use of duration-corrected $N$-best hypotheses for text
    recognition in gray-scale document images}},
  author = {Chinching Yen and Shyh-Shiaw Kuo},
  booktitle = {Proc. Int. Conf. Image Processing},
  publisher = {IEEE},
  volume = {3},
  pages = {332--335},
  month = {October},
  year = {1995},
  abstract = {The pseudo two dimensional hidden Markov model (PHMM) is extended
    to directly recognize poorly-printed gray-scale document images. The
    $N$-best hypotheses search, coupled with duration correction, is also
    developed to find best candidates. Experimental results have demonstrated
    that the performance of the new system has been significantly improved
    when compared to the original PHMM system [Kuo and Agazzi, 1994] using
    binary images as inputs. The recognition rate improves from 97.7{\%} to
    100{\%}, over a testing set with similar blur and noise conditions as the
    training set. For a testing range far outside the training one, it improves
    from 89.59{\%} to 98.51{\%}, which also demonstrates the robustness of the
    proposed system.}}

@inproceedings{YuSec-GLSV-94,
  title = {{Generation of colour-constrained spanning trees with application
    in symbolic circuit analysis}},
  author = {Q. C. Yu and C. Sechen},
  booktitle = {Proc. 4th Great Lakes Symp. VLSI},
  publisher = {IEEE},
  pages = {252--255},
  month = {March},
  year = {1994}}

@article{YuSec-IJCTA-96,
  title = {{Generation of colour-constrained spanning trees with application
    in symbolic circuit analysis}},
  author = {Q. C. Yu and C. Sechen},
  journal = {Int. J. Circuit Theory {\&} Applications},
  volume = {24},
  number = {5},
  pages = {597--603},
  year = {1996},
  abstract = {The main goal of approximate symbolic analysis of analogue
    circuits is to find an approximate symbolic expression of limited size
    for an arbitrary network function of a linear or linearized circuit in
    the Laplace domain. In the classical two-graph tree enumeration approach,
    finding the product terms in the symbolic network function corresponds
    to finding the common spanning trees of a pair of graphs derived from
    the circuit. A good step towards efficient approximation is to find the
    important common trees without finding all of them. To simplify the problem,
    we find important spanning trees of one graph and check them against
    the other and retain common spanning trees only. For the symbolic expression
    to be valid for a wide frequency range, capacitance-type edges have to
    be distinguished from conductance-type edges. The problem can be abstracted
    as the following: given a weighted undirected graph in which each edge
    is either red or green, find the $K_i$ lowest weight spanning trees,
    each of which has exactly $i$ red edges, in increasing order of weight
    for all feasible $i$. We describe an efficient algorithm for this problem
    which is an extension of one of the existing algorithms to generate spanning
    trees in increasing order of weight, where no edge colour is introduced.
    Implemented in a symbolic analysis programme are also presented.}}

@article{YuSec-TCAD-97,
  title = {{Efficient approximation of symbolic network functions using matroid
    intersection algorithms}},
  author = {Q. C. Yu and C. Sechen},
  journal = {Trans. Computer-Aided Design of Integrated Circuits {\&} Systems},
  publisher = {IEEE},
  volume = {16},
  number = {10},
  pages = {1073--1081},
  month = {October},
  year = {1997},
  abstract = {An efficient and effective approximation strategy is crucial
    to the success of symbolic analysis of large analog circuits. In this
    paper we propose a new approximation strategy for the symbolic analysis
    of linear circuits in the complex frequency domain. The strategy directly
    generates common spanning trees of a two-graph in decreasing order of
    tree admittance product, using matroid intersection algorithms. The strategy
    reduces the total time for computing an approximate symbolic expression
    in expanded format to polynomial with respect to the circuit size under
    the assumption that the number of product terms retained in the final
    expression is polynomial. Experimental results are clearly superior to
    those reported in previous works.}}

@article{YuSec-TCS-96,
  title = {{A unified approach to the approximate symbolic analysis of large
    analog integrated circuits}},
  author = {Q. C. Yu and C. Sechen},
  journal = {Trans. Circuits and Systems},
  publisher = {IEEE},
  volume = {43},
  number = {8},
  pages = {656--669},
  month = {August},
  year = {1996},
  note = {This paper describes a unified approach to the approximate symbolic
    analysis of large linearized analog circuits in the complex frequency
    domain. It combines two new approximation-during-computation strategies
    with a variation of the classical two-graph tree enumeration method.
    The first strategy is to generate common trees of the two-graphs, and
    therefore the product terms in the symbolic network function, in the
    decreasing order of magnitude. This is made possible by our algorithm
    for generating color-constrained spanning trees in the order of weight.
    It avoids the burden of computing all the product terms only to find
    most of them numerically negligible. The second approximation strategy
    is the sensitivity-based simplification of two-graphs, which excludes
    from the two-graphs many of the insignificant circuit elements that have
    little effect on the network function being derived. It significantly
    reduces the complexity of the two-graphs before tree enumeration, Our
    approach is therefore able to symbolically analyze much larger analog
    integrated circuits than previously reported, using complete small signal
    models for the semiconductor devices. We show accurate yet reasonably
    sized symbolic network functions for integrated circuits with up to 39
    transistors whereas previous approaches were limited to less than 15,
    For even larger circuits, the limit is imposed mainly by the interpretability
    of the generated symbolic network function.}}

@article{ZavZhaSch-TSAP-94,
  title = {{A hybrid segmental neural net/hidden Markov model system for
    continuous speech recognition}},
  author = {G. Zavaliagkos and Y. Zhao and Richard Schwartz and J. Makhoul},
  journal = {Trans. Speech {\&} Audio Processing},
  publisher = {IEEE},
  volume = {2},
  number = {1, part 2},
  pages = {151--160},
  month = {January},
  year = {1994},
  abstract = {The current state-of-the-art in large-vocabulary, continuous
    speech recognition is based on the use of hidden Markov models (HMM).
    In an attempt to improve over HMM performance, the authors developed
    a hybrid  system that combines the advantages of neural networks and
    HMM using a multiple hypothesis (or $N$-best) paradigm. The connectionist
    component of the system, the segmental neural net (SNN), models all the
    frames of a phonetic segment simultaneously, thus overcoming the well-known
    conditional-independence limitation of the HMM. They describe the hybrid
    system and discuss various aspects of SNN modeling, including network
    architectures, training algorithms and context modeling. Finally, they
    evaluate the hybrid system by performing several speaker-independent
    experiments with the DARPA Resource Management (RM) corpus, and demonstrate
    that the hybrid system shows a consistent improvement in performance
    over the baseline HMM system.}}

@phdthesis{Zil-PhD-94,
  title = {{Optimum Path Algorithms on Multidimensional Networks: Analysis,
    Design, Implementation and Computational Experience}},
  author = {Athanasios Kostantine Ziliaskopoulos},
  school = {Univ. of Texas, Austin, Dept. of Civil Engineering},
  year = {1994},
  abstract = {This thesis is concerned with the problem of simultaneously
    computing many paths between two nodes on networks with arcs characterized
    by multiple attributes. These networks are referred to as multidimensional
    networks and their properties are defined in this thesis. The motivation
    is the emerging need for complex path algorithms arising from the development
    of intelligent vehicle-highway systems (IVHS). A variety of problems
    can be modeled and solved efficiently by the proposed approach: least-time
    and least-cost path problems on networks with general time-dependent
    arc costs, k-shortest path problems on uni- or multidimensional networks,
    optimum path problems on networks with multiple user groups, intermodal
    route planning problems, shortest path problems with penalties for intersection
    movements, and stochastic shortest path problems. The general objective
    of this thesis is to study the problem of computing optimum paths on
    a multidimensional network from every node and dimensional element to
    a destination node and a final dimensional element. One general approach
    to model and solve these problems is to augment the network by adding
    nodes and arcs, and applying conventional shortest path algorithms on
    the resulting augmented network. However, augmentation is not always
    possible, as in the case of continuous cost functions, and when it is
    possible, it creates prohibitively large networks that are difficult
    to represent, and code, and inflexible to alter. The proposed approach
    does not require explicit expansion. It computes the paths for all the
    dimensional elements simultaneously. It drives its efficiency by exploiting
    the fact that the various dimensions share a common network topology.
    The whole scheme can be easily expanded to include additional dimensions,
    reflecting additional complexities of actual networks, without altering
    the underlying network topology. The definition of the dimensions is
    left open so the proposed approach is general and applicable to a broad
    range of optimum path problems. For some dimension realizations, this
    approach provides a solution to problems that were not addressed previously.
    In other cases, it yields algorithms that are more efficient than existing
    methods. The general solution approach is a dynamic programming approach,
    both for the continuous and for the discrete time cases. The general
    algorithms have computational disadvantages that restrict their applicability;
    these disadvantages are identified and discussed along with a number
    of common properties of the general optimum paths.}}

@article{ZilMah-TRB-96,
  title = {{A note on least time path computation considering delays and
    prohibitions for intersection movements}},
  author = {Athanasios Kostantine Ziliaskopoulos and Hani S. Mahmassani},
  journal = {Transportation Research, Part B. -- Methodological},
  volume = {30},
  number = {5},
  pages = {359--367},
  month = {October},
  year = {1996},
  note = {Most shortest path algorithms do not explicitly consider intersection
    movements in calculating best paths.  However, in congested street networks,
    turning movement delays can be significant, and ignoring them may lead
    to the calculation of suboptimal or illogical paths.  To reflect turning
    movements in practice, it is common to ''explode'' the network representation
    for use with standard shortest path algorithms.  This paper proposes
    a considerably more efficient approach; it consists of an 
    extension to the commonly used forward star structure to represent the
    network including intersection movements and movement prohibitions. 
    A label correcting shortest path algorithm is modified to take advantage
    of the proposed representation and calculate the least time paths in
    a computationally efficient way.  The approach is implemented, tested
    and compared with existing techniques.  The application of similar modifications
    to time-dependent and k-shortest path algorithms is also discussed.}}

@article{Zuk-JMB-91,
  title = {{Suboptimal sequence alignment in molecular biology: alignment
    with error analysis}},
  author = {M. Zuker},
  journal = {J. Mol. Biol.},
  volume = {221},
  number = {2},
  pages = {403--420},
  month = {September},
  year = {1991},
  abstract = {A molecular sequence alignment algorithm based on dynamic programming
    has been extended to allow the computation of all pairs of residues that
    can be part of optimal and suboptimal sequence alignments. The uncertainties
    inherent in sequence alignment can be displayed using a new form of dot
    plot. The method allows the qualitative assessment of whether or not
    two sequences are related, and can reveal what parts of the alignment
    are better determined than others. It also permits the computation of
    representative optimal and suboptimal alignments. The relation between
    alignment reliability and alignment parameters is discussed. Other applications
    are to cyclical permutations of sequences and the detection of self-similarity.
    An application to multiple sequence alignment is noted.}}

@article{Zuk-Sci-89,
  title = {{On finding all suboptimal foldings of an RNA molecule}},
  author = {M. Zuker},
  journal = {Science},
  volume = {244},
  pages = {48--52},
  month = {April},
  year = {1989}}
