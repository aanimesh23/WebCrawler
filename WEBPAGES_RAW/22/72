<HTML>
<HEAD>
<TITLE>ICS 1F, Homework 6</TITLE>
</HEAD>
<BODY>
<CENTER>
<H1>ICS 1F, Homework 6</H1>
<B>Due Friday, March 13</B>
</CENTER>

<OL>
<P><LI>Suppose you have offices in five cities, Anchorage, Portland,
Seattle, San Francisco, and Los Angeles, that you wish to connect up by
a communications network.  The costs to connect each pair of cities are

<P><CENTER><TABLE BORDER=0>
<TR><TD>Anchorage - Los Angeles</TD><TD>$1400</TD></TR>
<TR><TD>Anchorage - Portland</TD><TD>$1200</TD></TR>
<TR><TD>Anchorage - San Francisco</TD><TD>$1300</TD></TR>
<TR><TD>Anchorage - Seattle</TD><TD>$1500</TD></TR>
<TR><TD>Los Angeles - Portland</TD><TD>$900</TD></TR>
<TR><TD>Los Angeles - San Francisco</TD><TD>$1000</TD></TR>
<TR><TD>Los Angeles - Seattle</TD><TD>$700</TD></TR>
<TR><TD>Portland - San Francisco</TD><TD>$600</TD></TR>
<TR><TD>Portland - Seattle</TD><TD>$300</TD></TR>
<TR><TD>San Francisco - Seattle</TD><TD>$500</TD></TR>
</TABLE></CENTER>

<P>(a) What is the minimum cost of a communications network connecting all
your offices?  (I.e., what is the minimum spanning tree.)
Draw this network.

<P>(b) Some types of network require the offices to be connected into a
single loop (so the cheapest network is the same as the solution to the
traveling salesman problem).
Does there exist an algorithm for solving this problem?
Draw the best such network you can find.

<P><LI>For each of the following functions,
state whether or not a program having the function as its running time
would be a polynomial-time program.

<P>(a) time(n) = 4n<sup>3</sup> + 3n + 3
<BR>(b) time(n) = 2n log n + 30n
<BR>(c) time(n) = n<sup>1.5</sup>
<BR>(d) time(n) = 2<sup>n</sup> log n

<P><LI>For each of the following functions of a single parameter n,
simplify it as much as possible using O-notation.
For instance, if the function
is 4n<sup>3</sup> + 3n + 3,
you should simplify it to O(n<sup>3</sup>).

<P>(a) n + n<sup>2</sup>
<BR>(b) 2<sup>n</sup> + n<sup>2</sup> + 2n + 2/n
<BR>(c) (n+1)/(n-1)
<BR>(d) 2<sup>n</sup> + 3<sup>n</sup> + 4<sup>n</sup> + 5<sup>n</sup>
<BR>(e) n<sup>2</sup> + 100n + 10000


</OL>
</BODY>
</HTML>
