<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"><HTML><HEAD>   <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">   <META NAME="GENERATOR" CONTENT="Mozilla/4.07 (Macintosh; I; PPC) [Netscape]">   <TITLE>Deliverable 3: Design</TITLE></HEAD><BODY BGCOLOR="#FFFFF0"><CENTER><H2> Informatics 117: Project in Software System Design</H2></CENTER><CENTER><H3> Winter Quarter 2009</H3></CENTER><CENTER><H1> Architecture and Module Specifications</H1></CENTER><H3>Due Date</H3>February 12, 2009.<HR><h3>Overview</h3><P>Develop adesign that fully satisfies the requirements for yourapplication. This deliverable  consists of two elements:a design specification (consisting of an architectureand module specifications) and an integration test plan.<P>Your document must specify the correspondence between therequirements elements and your design. You may show thiscorrespondence any way you feel is appropriate (e.g., make notationsthroughout your document or using a table that cross-referencesparagraph numbers).<P>Developing the software design will undoubtedly reveal inadequaciesin previous documents. Please note these problems and what was done toresolve them.<P>Don't forget to include your meeting minutes and performance appraisalswith your document; refer to the syllabus for the complete check-list ofwhat has to be turned in. As before, make sure that you post your designdocuments and your meeting minutes to your team web page.<HR><H3> Deliverable Objectives/Quality</H3>Keep in mind that key objectives of a design document include:<UL><LI> Develop a coherent representation of software that will satisfy the requirements</LI><LI> Identify inadequacies in requirements</LI><LI> Decompose the system into sub-systems that provide related sets of services</LI><LI> Establish a framework for sub-system control and communication</LI><LI> Specify modules that can be assigned as coding responsibilities</LI><LI> Document design decisions and rationale</LI><LI> Provide a reference tool readable by developers, testers, and maintainers</LI><LI> Provide a basis for integration and testing</LI></UL>In addition, keep in mind that a design document should exhibit thefollowing qualities:<UL><LI> Complete: everything that is essential is described</LI><LI> Unambiguous: expressed in a well-defined notation</LI><LI> Consistent: no mismatched interfaces</LI><LI> Modifiable: this document will change just like all the others</LI><LI> Confirmable/testable: you can tell when you've met thedesign</LI></UL><HR><H3> Document Contents</H3><H4> Introduction</H4>Expand your previous introduction to discuss your specific approaches to thedesign of the system and the organization of this document. Thisdescription is essentially just an updated version of the introductionyou included in your previous deliverable.<H4> Understanding</H4>Expand the understanding section of your previous document. Include brief descriptionsof  actions you took to understand each technology studied duringthis phase. If you make changes to this section, add text describing why thechange was necessary, and why it more accurately reflects your new understanding.This section need not be different if your understanding hasn't changed.<H4> Project Plan</H4>This will be an iterative expansion of your previous submission. Updateyour project plan to show what you have accomplished  sofar.  Reassess the project risks as necessary. Expand your task network or workbreakdown structure to include the effort expended to complete thistask, as necessary. Based on the work you have done, revise your estimates onhow much your team can accomplish and deliver.<P>If you make changes, add text describing why the change wasnecessary or why it will improve the ability of your team to accomplishthe work you have proposed.<H4> Design Specification</H4><UL><LI> Architecture Overview</LI>   <UL>   <LI> Architectural Style<BR>     What style of architecture did you adopt? Provide a reference to a   defining document.   </LI>   <LI> System Architecture Overview<BR>     This is the place for your "one great diagram" that shows how your   system is built. You might want to use more than one diagram, to show,   e.g., some different abstractions of the design (such as a data flow view,   a layers of abstraction view, an object view, or an OS process view) &ndash; multiple     diagrams are fine.</LI>   <LI> Subsystem Narrative<BR>     What each subsystem means   </LI>   <LI> Major limitations on the current design (if any)</LI>   <LI><br>   </LI>   </UL><LI>Modules/Objects Specification</LI><UL>   <LI> List of Modules/Objects within your system</LI>   <LI> For each module/object, provide a Module Specification</LI>     <UL>      <LI> Name</LI>      <LI> Definition/Purpose - what it is/does</LI>      <LI> Narrative/Comment - how it works</LI>      <LI> What are the interfaces or APIs? Visibility?<BR>      </LI>       <LI> Data - What state does it keep (if any)?</LI>      <LI> Access - Who has access to the module/object/data?</LI>      <LI>Requires &ndash; What modules does this module depend upon?</LI>      <LI> Constraints - what constraints are there for this object/module? (e.g.        must start first, must be registered with ..., must ....)</LI>      <LI>anything else necessary to fully describe the module</LI>     </UL>   <LI>Diagrams you could consider using in providing this specification: UML     class diagrams, event sequence (trace) charts, state transition diagrams,     package diagrams, ...</LI>  </UL></UL><H4> Integration Test Plan</H4><p>A test plan capable of demonstrating that thedesign meets the  requirements. Testcases should cover each module/object  interactionspecified. The test cases can be grouped with the designentity to which they apply, otherwise a cross reference listing of somesort should be provided.<UL>   <LI> For each test</LI>      <UL>      <LI> Test ID</LI>      <LI> Purpose of Test</LI>      <LI> Item(s) being tested</LI>      <LI> Input specification</LI>      <LI> Output specification</LI>         <UL>         <LI> Expected Results or Test Oracle Mechanism</LI>         </UL>      <LI> Test environmental needs or special test procedures</LI>      </UL></UL><H4> Initial Demonstration Plan</H4>What and how will you demonstrate? <H4> Tracking and Control Mechanisms</H4><p><em>Configuration Managemen</em>t: how will your modules/objects be managed?<UL>   <LI> SVN? CVS?</LI>   <LI>file structure, sub-directories, Makefiles, etc.</LI>   <LI> where is your persistent data going to live?</LI></UL><p><em>Requirements Cross Reference</em>: what modules/objects satisfy what requirements?<UL>   <LI> a table mapping requirement to module/object</LI></UL><H4> Modifications to Prior Documents</H4><H5> Requirements</H5>If any requirements changed make them explicit. Highlight why the requirementwas changed/added/deleted and by whom (customer, developer, etc.).  If yourrequirements have not changed, then so state.<H4> Glossary</H4>Define any &quot;irregular&quot; terms used in the specifications above.  This portionof the document may be written as an extension to the glossary submittedwith the requirements, or may be a separate document that only definesterms local to the design activity.<H4> Additional Documentation</H4>This section is reserved for any additional documentation developedduring this phase of the project. Specifically, if during the course ofdeveloping the architecture your understanding of the varioustechnologies involved in the project changed, or you discovered itemsthat were not documented but which are important, include thatinformation here. Also list here the major background sources that you used duringthis phase or any that you plan to use during the remainder of theproject. This includes references to similar systems and/orprocedures.<hr><h3>Design Presentations.</h3>See the syllabus for dates. Each team should prepare a 15 minute presentation. <p>Your presentation should includethe following:<UL>   <LI> Some context for your project (very brief!);</LI>   <LI> Current state of your project plan and comparison to the previous version     of the plan;</LI>   <LI> Highlights of your design including</LI>      <UL>      <LI> an overview of your architecture (this should comprise the bulk	 of your presentation) &ndash; the &quot;one great diagram&quot;</LI>      <LI> one or more key module/object specifications;</LI>      </UL>   <LI> [As needed] Modifications to your requirements that arose as a result     of your design process;</LI>   <LI> Overview of your integration test plan. </LI></UL>        <hr><h3>&nbsp;</h3></BODY></HTML>