<!DOCTYPE html>
<html>
  <head>
    <meta http-equiv="Content-Type" content="text/html;
    charset=utf-8"/>
    <title>Efficient Parallel Set-Similarity Joins Using
      MapReduce</title>
    <link rel="stylesheet" href="/media/paper.css">
  </head>
  <body>
    <div id="main">
      <div id="inner">
        <div id="header">
          <h1>Efficient Parallel Set-Similarity Joins Using
          MapReduce</h1>
          <div id="authors">
            <div id="names">
              <span class="name">
                <a href="http://www.ics.uci.edu/~rares/">Rares
                Vernica</a>
              </span>
              <span class="name">
                <a href="http://www.ics.uci.edu/~mjcarey/">Michael
                J. Carey</a>
              </span>
              <span class="name">
                <a href="http://www.ics.uci.edu/~chenli/">Chen Li</a>
              </span>
            </div>
            Department of Computer Science<br> University of
            California, Irvine
          </div>
        </div>
        <div id="body">
          <h2>Abstract</h2>
          <p>In this paper we study how to efficiently perform
            set-similarity joins in parallel using the popular
            MapReduce framework.  We propose a 3-stage approach for
            end-to-end set-similarity joins. We take as input a set of
            records and output a set of joined records based on a
            set-similarity condition. We efficiently partition the
            data across nodes in order to balance the workload and
            minimize the need for replication. We study both self-join
            and R-S join cases, and show how to carefully control the
            amount of data kept in main memory on each node. We also
            propose solutions for the case where, even if we use the
            most fine-grained partitioning, the data still does not
            fit in the main memory of a node. We report results from
            extensive experiments on real datasets, synthetically
            increased in size, to evaluate the speedup and scaleup
            properties of the proposed algorithms using Hadoop.</p>
          <ul>
            <li><b>Efficient Parallel Set-Similarity Joins Using
                MapReduce.</b><br>
              <a href="/pub/sigmod10-p495-vernica.pdf">Paper</a>
              <a href="/pub/sigmod10-p495-vernica-long.pdf">Long Version</a><br>
              <a href="/slides/fuzzyjoin/sigmod10-p495-vernica-slides.pdf">Slides</a>
              <a href="/slides/fuzzyjoin/sigmod10-p495-vernica-slides-long.pdf">Long Version</a>
              <a href="/slides/fuzzyjoin/hadoop-summit10-li-slides.ppt">Hadoop Summit 2010</a><br>
              <a href="/pub/sigmod10-p495-vernica-poster.pdf">Poster</a>
              <br> Rares Vernica, Michael J. Carey, Chen Li<br> SIGMOD
              2010
          </ul>
          <div class="break"></div>
          <h2>Source Code</h2>

          All the algorithms are implemented in Java. The source code
          is licensed under the Apache License, Version 2.0.

          <ul>
            <li>
              <a href="fuzzyjoin-0.0.2.tgz">fuzzyjoin-0.0.2.tgz</a>
              (April 12th, 2011)
            <li>
              <a href=" fuzzyjoin-0.0.2-patch-2011-11-09.tgz">fuzzyjoin-0.0.2-patch-2011-11-09.tgz</a>
            <li><a href="README.html">README</a> (also available in
            the package)
            <li><a href="FAQ.html">FAQ</a> (last updated April 12th, 2011)
            <li><a href="CHANGELOG.html">CHANGELOG</a> (also available in
            the package)
          </ul>
          Previous releases:
          <ul>
            <li>
              <a
              href="fuzzyjoin-mapreduce-RWE-2010-04-23.tgz">fuzzyjoin-mapreduce-RWE-2010-04-23.tgz</a>
              (April 23rd, 2010)
            <li>
              <a href="fuzzyjoin-mapreduce-1.0.tgz">fuzzyjoin-mapreduce-1.0.tgz</a>
              (March 24th, 2010)
          </ul>
          <h3>ACM SIGMOD 2010 Repeatability & Workability
          Evaluation</h3>
          Our <a
          href="fuzzyjoin-mapreduce-RWE-2010-04-23.tgz">fuzzyjoin-mapreduce-RWE-2010-04-23.tgz</a>
          (April 23rd, 2010) release of the code was verified by
          the <a href="http://event.cwi.nl/SIGMOD-RWE/2010/">ACM
          SIGMOD 2010 Repeatability & Workability Evaluation</a>
          committee against the claims in SIGMOD 2010 "Efficient
          Parallel Set-Similarity Joins Using MapReduce" paper. The
          Repeatability was Fully confirmed and the Workability was
          Partly confirmed. The reviews of the code are available
          here:
          <ul>
            <li><a
            href="http://event.cwi.nl/SIGMOD-RWE/2010/17-8cbba9/review-1.pdf">Review
            1</a>
            <li><a
            href="http://event.cwi.nl/SIGMOD-RWE/2010/17-8cbba9/review-2.txt">Review
            2</a>
          </ul>
          <div class="break"></div>
          <h2>Datasets</h2>
          <p>Bellow are the two datasets used in the study:</p>
          <ul>
            <li>DBLP
              <a href="/data/dblp.raw.txt.gz">dblp.raw.txt.gz</a> (83MB,
              1.2M records)
            <li>CITESEERX
              <a href="/data/csx.raw.txt.gz">csx.raw.txt.gz</a> (591MB, 1.3M
              records)
          </ul>
          <div class="break"></div>
          <h3>Acknowledgments</h3>
          <p>This study is supported by NSF IIS
            awards <a href="http://www.nsf.gov/awardsearch/showAward.do?AwardNumber=0844574">0844574</a>
            and <a href="http://www.nsf.gov/awardsearch/showAward.do?AwardNumber=0910989">0910989</a>,
            as well as a grant from the UC Discovery program and a
            donation from eBay.
          </p>
          <div class="break"></div>
          <div>This study is part of the <a href="/">ASTERIX</a>
            and <a href="http://flamingo.ics.uci.edu/">Flamingo</a>
            projects.<br>For any questions about this study, please
            contact <a href="http://www.ics.uci.edu/~rares/">Rares
            Vernica.</a>
          </div>


          <!-- begin disqus code -->
          <div id="disqus_thread"></div>
          <script type="text/javascript">
            var disqus_shortname = 'asterix-fuzzyjoin';
            var disqus_identifier = 'sigmod2010';
            var disqus_url = 'http://asterix.ics.uci.edu/fuzzyjoin/index.html';

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = 'http://' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
          </script>
          <noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
          <!-- end disqus code -->

          <div id="ack">
            <a href="http://www.tumblr.com/theme/3292">Stationery</a>
            theme
            by <a
            href="http://thijsjacobs.com/">Thijs.</a> <a
            href='http://www.olark.com'>Live Chat Software</a> by
            Olark. <a href="http://disqus.com">Blog comments powered
            by Disqus</a>
          </div>
        </div>
      </div>
    </div>

<!-- begin olark code -->
<script type='text/javascript'>/*{literal}<![CDATA[*/window.olark||(function(i){var e=window,h=document,a=e.location.protocol=="https:"?"https:":"http:",g=i.name,b="load";(function(){e[g]=function(){(c.s=c.s||[]).push(arguments)};var c=e[g]._={},f=i.methods.length; while(f--){(function(j){e[g][j]=function(){e[g]("call",j,arguments)}})(i.methods[f])} c.l=i.loader;c.i=arguments.callee;c.f=setTimeout(function(){if(c.f){(new Image).src=a+"//"+c.l.replace(".js",".png")+"&"+escape(e.location.href)}c.f=null},20000);c.p={0:+new Date};c.P=function(j){c.p[j]=new Date-c.p[0]};function d(){c.P(b);e[g](b)}e.addEventListener?e.addEventListener(b,d,false):e.attachEvent("on"+b,d); (function(){function l(j){j="head";return["<",j,"></",j,"><",z,' onload="var d=',B,";d.getElementsByTagName('head')[0].",y,"(d.",A,"('script')).",u,"='",a,"//",c.l,"'",'"',"></",z,">"].join("")}var z="body",s=h[z];if(!s){return setTimeout(arguments.callee,100)}c.P(1);var y="appendChild",A="createElement",u="src",r=h[A]("div"),G=r[y](h[A](g)),D=h[A]("iframe"),B="document",C="domain",q;r.style.display="none";s.insertBefore(r,s.firstChild).id=g;D.frameBorder="0";D.id=g+"-loader";if(/MSIE[ ]+6/.test(navigator.userAgent)){D.src="javascript:false"} D.allowTransparency="true";G[y](D);try{D.contentWindow[B].open()}catch(F){i[C]=h[C];q="javascript:var d="+B+".open();d.domain='"+h.domain+"';";D[u]=q+"void(0);"}try{var H=D.contentWindow[B];H.write(l());H.close()}catch(E){D[u]=q+'d.write("'+l().replace(/"/g,String.fromCharCode(92)+'"')+'");d.close();'}c.P(2)})()})()})({loader:(function(a){return "static.olark.com/jsclient/loader0.js?ts="+(a?a[1]:(+new Date))})(document.cookie.match(/olarkld=([0-9]+)/)),name:"olark",methods:["configure","extend","declare","identify"]});
/* custom configuration goes here (www.olark.com/documentation) */
olark.identify('7038-290-10-3313');/*]]>{/literal}*/</script>
<!-- end olark code -->

  </body>
</html>
