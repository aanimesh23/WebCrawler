<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
<title>22.4 OEUnaryPredicate</title>
<META NAME="description" CONTENT="22.4 OEUnaryPredicate">
<META NAME="keywords" CONTENT="cplusprog">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link rel="STYLESHEET" href="cplusprog.css">
<link rel="first" href="cplusprog.html">
<link rel="contents" href="contents.html" title="Contents">

<LINK REL="next" HREF="node176.html">
<LINK REL="previous" HREF="node174.html">
<LINK REL="up" HREF="node171.html">
<LINK REL="next" HREF="node176.html">
</head>
<body>
<DIV CLASS="navigation">
<table align="center" border="0" width="100%" cellpadding="0" cellspacing="0">
<tr>
<td rowspan=2><A HREF="node174.html"><img src="../icons/previous.gif"
  border="0" alt="Previous Page"></A></td>
<td rowspan=2><A HREF="node171.html"><img src="../icons/up.gif"
  border="0" alt="Up One Level"></A></td>
<td rowspan=2><A HREF="node176.html"><img src="../icons/next.gif"
  border="0" alt="Next Page"></A></td><td width="100%" rowspan="2"> </td>
<td valign="center" align="right" height="56" background="../icons/title_bkgd.gif" colspan=4 class="navigation">OEChem - C++ Theory Manual
<BR>
Version 1.3.1</td></tr>
<tr><td><img src="../icons/spacer_1.gif"
  border="0" alt=""></td>
<td><A href="contents.html"><img src="../icons/contents.gif"
  border="0" alt="Contents"></A></td>
<td><img src="../icons/spacer_2.gif"
  border="0" alt=""></td>
<td><img src="../icons/blank_4.gif"
  border="0" alt=""></td>
</tr></table>
<b class="navlabel">Previous:</b> <a class="sectref" HREF="node174.html">22.3 Functors have State</A>
<b class="navlabel">Up:</b> <a class="sectref" HREF="node171.html">22. Predicate Functors</A>
<b class="navlabel">Next:</b> <a class="sectref" HREF="node176.html">22.5 Call-Backs</A>
<br><hr>
</DIV>
<!--End of Navigation Panel-->

<H1><A NAME="SECTION0025400000000000000000">
22.4 OEUnaryPredicate</A>
</H1>

<P>
In OEChem, we define a very limited set of functors called the
<code>OEUnaryPredicate</code> and <code>OEBinaryPredicate</code>.  These two classes
are abstract base classes which define interfaces with the following
restrictions.  First, they only return boolean.  Second, they must define
an <code>operator()</code> which is a const function (<I>i.e.</I> - doesn't change
the state of the predicate).  Third, the unary predicate is a template of 1
argument ArgType whose <code>operator()</code> must take a single argument of
type const &amp; to ArgType.  Similarly, the binary predicate is a template of
2 arguments (ArgType1, ArgType2) whose <code>operator()</code> must take two
arguments, one of const &amp; to ArgType1 and another of const &amp; to ArgType2.
Fourth, these predicates must define a virtual constructor function
(<code>CreateCopy</code>) which returns a pointer to a copy of the predicate.
This is useful for generating copies of a functor which has been passed
into a function as a reference to the <code>OEUnaryPredicate</code> base class.
Fifth, these predicates define <code>Eval</code> functions which are wrappers
around <code>operator()</code> and effectively make <code>operator()</code> a virtual
function.

<P>
While these restrictions may seem limiting at first glance, they actually
produce a set of reliable behaviors which are quite useful.  Unary
predicates are used throughout OEChem as filters on the atoms, bonds,
conformers, and molecules a programmer is interested in examining via
iterator interfaces.

<P>

<DIV CLASS="navigation">
<p><hr>
<table align="center" border="0" width="100%" cellpadding="0" cellspacing="0">
<tr>
<td rowspan=2><A HREF="node174.html"><img src="../icons/previous.gif"
  border="0" alt="Previous Page"></A></td>
<td rowspan=2><A HREF="node171.html"><img src="../icons/up.gif"
  border="0" alt="Up One Level"></A></td>
<td rowspan=2><A HREF="node176.html"><img src="../icons/next.gif"
  border="0" alt="Next Page"></A></td><td width="100%" rowspan="2"> </td>
<td valign="center" align="right" height="56" background="../icons/title_bkgd.gif" colspan=4 class="navigation">OEChem - C++ Theory Manual
<BR>
Version 1.3.1</td></tr>
<tr><td><img src="../icons/spacer_1.gif"
  border="0" alt=""></td>
<td><A href="contents.html"><img src="../icons/contents.gif"
  border="0" alt="Contents"></A></td>
<td><img src="../icons/spacer_2.gif"
  border="0" alt=""></td>
<td><img src="../icons/blank_4.gif"
  border="0" alt=""></td>
</tr></table>
<b class="navlabel">Previous:</b> <a class="sectref" HREF="node174.html">22.3 Functors have State</A>
<b class="navlabel">Up:</b> <a class="sectref" HREF="node171.html">22. Predicate Functors</A>
<b class="navlabel">Next:</b> <a class="sectref" HREF="node176.html">22.5 Call-Backs</A>
<hr>
<span class="release-info">Documentation released on July 30, 2004.</span>
</DIV>
<!--End of Navigation Panel-->

</BODY>
</HTML>
