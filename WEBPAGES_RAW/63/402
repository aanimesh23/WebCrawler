<!-- received="Mon Jun 10 06:27:00 1996 PDT" -->
<!-- sent="Mon, 10 Jun 1996 09:26:28 -0400" -->
<!-- name="David J. Fiander" -->
<!-- email="davidf@worf.mks.com" -->
<!-- subject="Re: version management and relative links" -->
<!-- id="ade264654f021004d237@[128.195.21.209]" -->
<!-- inreplyto="version management and relative links" -->
<title>Archive of Working Group on Versioning and Configuration Management of World Wide Web Content: Re: version management and relative links</title>
<h1>Re: version management and relative links</h1>
<b>David J. Fiander</b> (<a href="mailto:davidf@worf.mks.com"><i>davidf@worf.mks.com</i></a>)<br>
<i>Mon, 10 Jun 1996 09:26:28 -0400</i>
<p>
<ul>
<li> <b>Messages sorted by:</b> <a href="index.html#73">[ date ]</a><a href="thread.html#73">[ thread ]</a><a href="subject.html#73">[ subject ]</a><a href="author.html#73">[ author ]</a>
<!-- next="start" -->
<li> <b>Next message:</b> <a href="0074.html">David J. Fiander: "Re: Version identifier in URL"</a>
<li> <b>Previous message:</b> <a href="0072.html">David J. Fiander: "Re: First cut at Functional Requirements document"</a>
<li> <b>Maybe in reply to:</b> <a href="0063.html">Larry Masinter: "version management and relative links"</a>
<!-- nextthread="start" -->
<!-- reply="end" -->
</ul>
<hr>
<!-- body="start" -->
<pre>
&gt; Sure, we could use HTTP headers -- but I think that we should have a way to
&gt; GET a _particular_ version of an object. As I say later, I think that it's
&gt; not unreasonable to expect that one should be able to inspect URLs to
&gt; determine that they are different versions of the same document.

Why?  We can't even inspect vanilla URLs to determine if they are
the _same_ document.

&gt;     Given the fact that resource versions affect referential integrity,
&gt; while MIME types, modification dates, and other meta-data do not, it seems
&gt; that there is evidence that a version is part of the identification of a
&gt; resource, and not just information about it.

This is almost the same argument that I've made.  Revision 1.2
and revision 1.3 of foo.html are different resources.  For
something like the Economist pages, something like the normal,
computerish, incremental version control system is probably
pointless;  the June 1 version of the page has absolutely nothing
in common with the June 8 version of the page.  On the other
hand, HTTP://www.w3.org/pub/WWW/ probably does change in an
incremental fashion, so the June 1 version is probably "weakly"
equivalent to the June 8 version.

&gt;     I don't want to question the feasibility of using HTTP headers and
&gt; additional specialized requests to accomplish version identification, but I
&gt; don't see the need to require an extra set of HTTP transactions that must
&gt; be done in order for a version-aware browser to decide how to follow a
&gt; link.

Following a link will always work.  The client may discover that
the link was a versioned link when the server returns a
"Content-Version" header with the requested page, however.

&gt;
&gt; &gt;As Larry M said, the flip side is "given a URL A and a version V,
&gt; &gt;there should be a standard way to combine them into a new URL A'
&gt; &gt;such that GETting A' yields version V of A."
&gt; &gt;
&gt; &gt;This flip side is reasonable.
&gt;
&gt; I'm not so sure. I don't see why we need to create _more_ URL aliasing to
&gt; handle versions. Also what happens if I use the recipe on a URL A that
&gt; already specifies version V' of A (in the server's private notation)? If
&gt; the URL's version information is completely opaque, this cannot be
&gt; prevented. I was going to ask what happens if we apply the recipe to A',
&gt; but we can define the syntax to prevent that.

Client's will (probably) only be combining URLs with version
information provided by a human, so it's the human's problem to
make sure that the version information is a) correct and b) being
applied to the correct link.  If you tried to attach version
information to a link that already contained version information,
the server would be fully justified in sending back an error
indication.

&gt; useful. Obviously, I don't set design strategy for the WWW, but I'm not
&gt; sure that version really meets the criteria for genericity. Of course,

I agree that version (that is, revision) information probably
isn't a "genericity" kind of thing, but that doesn't stop me from
saying that URLs &lt;em/that a client receives/ are, in general,
opaque.  Special purpose clients, that have been told a lot about
the site policies and the VCS being used might be able to decode
URLs, but that's an extension that's not supported by the basic
web functionality.

- David
</pre>
<!-- body="end" -->
<hr>
<p>
<ul>
<!-- next="start" -->
<li> <b>Next message:</b> <a href="0074.html">David J. Fiander: "Re: Version identifier in URL"</a>
<li> <b>Previous message:</b> <a href="0072.html">David J. Fiander: "Re: First cut at Functional Requirements document"</a>
<li> <b>Maybe in reply to:</b> <a href="0063.html">Larry Masinter: "version management and relative links"</a>
<!-- nextthread="start" -->
<!-- reply="end" -->
</ul>
