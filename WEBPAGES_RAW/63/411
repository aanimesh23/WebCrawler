# Program1-1.py
#
# This is version 1 of a program to find candidate genes on the given
# strand of DNA sequences.  This version takes its input from the user,
# who types the sequences in, one at a time.
#
# This program is broken into separate functions.  It does more than
# one job, so it's best to teach Python, separately, how to do each
# job by writing a function, then combine the functions together to
# complete the program.


# The printCandidateGenes function takes a DNA sequence as a parameter
# (i.e., as its input), finds any candidate genes using the rules we've
# used previously, then prints information about it.  For each, it prints
# the start position of the candidate gene, as well as its length (measured
# in codons.
#
# Remember that, as Python reads this program and sees this function
# definition, it says "Ah, next time you ask me to printCandidateGenes,
# I'll know what to do," but it doesn't do it yet.

def printCandidateGenes(dnaSequence):
    for i in range(0, len(dnaSequence)-2):
        if dnaSequence[i : i+3] == 'ATG':
            for j in range(i+3, len(dnaSequence)-2, 3):
                if dnaSequence[j : j+3] == 'TAA' or dnaSequence[j : j+3] == 'TAG' or dnaSequence[j : j+3] == 'TGA':
                    if j+3-i >= 60:
                        print "-----"
                        print "Candidate gene found"
                        print "     Start position    :", (i+1)
                        print "     Length (in codons):", (j+3-i)/3
                    break


# This is the program that we want Python to run, now that it knows
# how to print candidate genes.


userHasQuit = False

# This "while" loop will continually do what's inside of it until the
# variable "userHasQuit" is assigned the value True.  In this case, we
# want to keep asking the user for a DNA sequence and, so long as they
# haven't entered a blank line, print any candidate genes found within
# it.  When the user enters a blank line, we quit.

while not userHasQuit:
    dnaSequence = raw_input("Enter a DNA sequence, or press Enter to quit: ")

    if dnaSequence == "":
        userHasQuit = True
    else:
        printCandidateGenes(dnaSequence)


