<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 3.2//EN">
<html><head>
<title>David Eppstein - Publications</title>
<meta name="viewport" content="width=device-width, initial-scale=1">
</head>
<body bgcolor="#ffffff" text="#000000">
<h1>David Eppstein - Publications</h1>
<hr><p>
<h2>
1993
</h2>
Note that a paper may appear in listings for multiple years
due to multiple publication (of tech. report, conference, and journal versions).
<p>
<ul>
<li><b>Maintenance of a minimum spanning forest in a dynamic plane graph</b>.<br>
D. Eppstein, 
<a href="//www.info.uniroma2.it/~italiano/">G.F. Italiano</a>, 
<a href="//www.cs.brown.edu/people/rt/home.html">R. Tamassia</a>, 
<a href="//www.cs.Princeton.EDU/~ret/">R.E. Tarjan</a>,
J. Westbrook,
and M. Yung.<br>
<a href="//portal.acm.org/citation.cfm?id=320177">
<i>1st ACM-SIAM Symp. Discrete Algorithms,</i>
San Francisco, 1990, pp. 1&ndash;11</a>.<br>
<i>J. Algorithms</i> 13 (1): 33&ndash;54, 1992
(special issue for 1st Symp. Discrete Algorithms).<br>
Corrigendum, <i>J. Algorithms</i> 15: 173, 1993.
<p>
The complement of a
<a href="mst.html">minimum spanning tree</a> is a maximum spanning tree in
the dual graph.  By applying this fact we can use a modified form of
Sleator and Tarjan's dynamic tree data structure to update the MST in
logarithmic time per update.
<p>(<a href="/~eppstein/bibs/eppstein.html#Maintenance of a minimum spanning forest in a dynamic planar graph">BibTeX</a> --
<a href="//fano.ics.uci.edu/cites/Document/Maintenance-of-a-minimum-spanning-forest-in-a-dynamic-planar-graph.html">Citations</a> --
<a href="//citeseer.ist.psu.edu/eppstein92maintenance.html">CiteSeer</a> --
<a href="//portal.acm.org/citation.cfm?id=139668">ACM DL</a>)
<p>
<li><b>Efficient algorithms for sequence analysis</b>.<br>
D. Eppstein,
<a href="//www.scs.gatech.edu/people/zvi-galil">Z. Galil</a>,
<a href="//hpdma2.math.unipa.it/giancarl/source.html">R. Giancarlo</a>,
and <a href="//www.info.uniroma2.it/~italiano/">G.F. Italiano</a>.<br>
<a href="EppGalGia-IAWS-91.pdf"><i>International Advanced Workshop on
Sequences,</i> Positano, Italy, 1991</a>.<br>
<i>Sequences II: Methods in Communication, Security, and Computer Science,</i>
R.M. Capocelli, A. De Santis, and U. Vaccaro, eds.,
Springer, 1993, pp. 225&ndash;244.<br>
<p>
Surveys results on speeding up certain dynamic programs
used for sequence comparison and RNA structure prediction.
<p>(<a href="/~eppstein/bibs/eppstein.html#Efficient algorithms for sequence analysis">BibTeX</a> --
<a href="//fano.ics.uci.edu/cites/Document/Efficient-algorithms-for-sequence-analysis.html">Citations</a> --
<a href="//citeseer.ist.psu.edu/eppstein91efficient.html">CiteSeer</a>)
<p>
<li><b>Improved bounds for intersecting triangles and halving planes</b>.<br>
D. Eppstein.<br>
<a href="Epp-TR-91-60.pdf">Tech. Rep. 91-60</a>, ICS, UCI, 1991.<br>
<i>J. Combinatorial Theory Ser. A</i> 62: 176&ndash;182, 1993.
<p>
Reduces the polylogarithmic term in an upper bound for
the three-dimensional <i>k</i>-set problem.
<p>
A bug in the proof was <a href="//arxiv.org/abs/0804.4415">corrected by Nivasch and Sharir</a>.
<p>(<a href="/~eppstein/bibs/eppstein.html#Improved bounds for intersecting triangles and halving planes">BibTeX</a> --
<a href="//fano.ics.uci.edu/cites/Document/Improved-bounds-for-intersecting-triangles-and-halving-planes.html">Citations</a> --
<a href="//citeseer.ist.psu.edu/eppstein93improved.html">CiteSeer</a> --
<a href="//portal.acm.org/citation.cfm?id=158384">ACM DL</a>)
<p>
<li><b>Connectivity, graph minors, and subgraph multiplicity</b>.<br>
D. Eppstein.<br>
Tech. Rep. 92-06, ICS, UCI, 1992.<br>
<a href="Epp-JGT-93.pdf"><i>J. Graph Th.</i> 17: 409&ndash;416, 1993</a>.
<p>
It was known that planar graphs have O(<i>n</i>) subgraphs isomorphic
to K<sub>3</sub> or K<sub>4</sub>. That is, K<sub>3</sub> and
K<sub>4</sub> have linear subgraph multiplicity.
This paper shows that the graphs with linear subgraph multiplicity in
the planar graphs are exactly the 3-connected planar graphs.
Also, the graphs with linear subgraph multiplicity in the outerplanar
graphs are exactly the 2-connected outerplanar graphs.
<p>
More generally, let F be a minor-closed family, and let x be the
smallest number such that some complete bipartite graph K<sub>x,y</sub>
is a forbidden minor for F. Then the x-connected graphs have linear
subgraph multiplicity for F, and there exists an
(x&nbsp;&minus;&nbsp;1)-connected graph (namely
K<sub>x&nbsp;&minus;&nbsp;1,x&nbsp;&minus;&nbsp;1</sub>) that does not
have linear subgraph multiplicity.
When x&nbsp;&le;&nbsp;3 or when x&nbsp;=&nbsp;4 and the minimal
forbidden minors for F are triangle-free, then the graphs with linear
subgraph multiplicity for F are exactly the x-connected graphs.
<p>
Please refer only to the journal version, and not the earlier technical
report: the technical report had a bug that was repaired in the journal
version.
<p>(<a href="/~eppstein/bibs/eppstein.html#Connectivity, graph minors, and subgraph multiplicity">BibTeX</a> --
<a href="//fano.ics.uci.edu/cites/Document/Connectivity-graph-minors-and-subgraph-multiplicity.html">Citations</a>)
<p>
<li><b>Edge insertion for optimal triangulations</b>.<br>
<a href="//www.parc.xerox.com/csl/members/bern/">M. Bern</a>,
<a href="//www.cs.duke.edu/~edels/">H. Edelsbrunner</a>,
D. Eppstein, 
<a href="//endo.sandia.gov/~samitch/index.html">
S. Mitchell</a>, and
<a href="//www.comp.nus.edu.sg/~tants/">T.S. Tan</a>.<br>
<i>1st Latin Amer. Symp. Theoretical Informatics,</i> Sao Paulo, 1992.<br>
Springer, <i>Lecture Notes in Comp. Sci.</i> 583, 1992, pp. 46&ndash;60.<br>
Tech. Rep. EDC UILU-ENG-92-1702, Univ. Illinois, Urbana-Champaign, 1992.<br>
<a href="//www.comp.nus.edu.sg/~tants/Paper/eis.ps.gz"><i>Disc.
&amp; Comp. Geom.</i> 10: 47&ndash;65, 1993</a>.
<p>
One standard way of constructing Delaunay triangulations
is by iterated local improvement, in which each step
flips the diagonal of some quadrilateral.
For many other optimal triangulation problems, flipping is
insufficient, but the problems can instead be solved
by a more general local improvement step in which
a new edge is added to the triangulation, cutting through
several triangles, and the region it cuts through
is retriangulated on both sides.
<p>(<a href="/~eppstein/bibs/eppstein.html#Edge insertion for optimal triangulation">BibTeX</a> --
<a href="//fano.ics.uci.edu/cites/Document/Edge-insertion-for-optimal-triangulation.html">Citations</a> --
<a href="//citeseer.ist.psu.edu/bern92edge.html">CiteSeer</a> --
<a href="//portal.acm.org/citation.cfm?id=689852">ACM DL</a>)
<p>
<li><b>Iterated nearest neighbors and finding minimal polytopes</b>.<br>
D. Eppstein and 
<a href="//compgeom.cs.uiuc.edu/~jeffe/">J. Erickson</a>.<br>
Tech. Rep. 92-71, ICS, UCI, 1992.<br>
<a href="//portal.acm.org/citation.cfm?id=313612">
<i>4th ACM-SIAM Symp. Discrete Algorithms,</i> Austin, 1993, pp. 64&ndash;73</a>.<br>
<a href="//compgeom.cs.uiuc.edu/~jeffe/pubs/pdf/small.pdf"><i>Disc. Comp. Geom.</i> 11: 321&ndash;350, 1994</a>.
<p>
Showed that for various optimization criteria, the
optimal polygon containing <i>k</i> of <i>n</i>
points must be near one of the points, hence one can transform
time bounds involving several factors of <i>n</i>
to bounds linear in <i>n</i> but polynomial in <i>k.</i>
Used as a subroutine are data structures for finding several
<a href="geom-nn.html">nearest neighbors</a> in rectilinear metric spaces, and
algorithms for finding the
<a href="geom-deep.html">deepest point in an arrangement</a> of cubes or
spheres.
<p>(<a href="/~eppstein/bibs/eppstein.html#Iterated nearest neighbors and finding minimal polytopes">BibTeX</a> --
<a href="//fano.ics.uci.edu/cites/Document/Iterated-nearest-neighbors-and-finding-minimal-polytopes.html">Citations</a> --
<a href="//compgeom.cs.uiuc.edu/~jeffe/pubs/small.html">Jeff's pub list entry</a> --
<a href="//citeseer.ist.psu.edu/erickson94iterated.html">CiteSeer</a>)
<p>
<li><b>A deterministic linear time algorithm for geometric separators
and its applications</b>.<br>
D. Eppstein, 
<a href="//www.cs.cmu.edu/afs/cs.cmu.edu/user/glmiller/public/www/home.html">
G.L. Miller</a>, and 
<a href="//www-sal.cs.uiuc.edu/~steng/">
S.-H. Teng</a>.<br>
<a href="//portal.acm.org/citation.cfm?id=161005"><i>9th ACM Symp. Comp. Geom.,</i> San Diego, 1993, pp. 99&ndash;108</a>.<br>
<a href="EppMilTen-FI-95.ps.gz"><i>Fundamenta Informaticae</i> 22: 309&ndash;330, 1995</a>
(special issue on computational geometry).
<p>
Teng and others previously showed that certain geometric graphs had
small separators that could be found by lifting the graph to a sphere
one dimension up and choosing a random great circle.  Here we show
that epsilon-cuttings and the method of conditional expectations can be
used to guide a deterministic prune-and-search method for the same problem.
Applications include finding the intersection graph of a collection of
spheres and computing or approximating the maximum number of spheres
having a common intersection.
<p>(<a href="/~eppstein/bibs/eppstein.html#A deterministic linear time algorithm for geometric separators and its applications">BibTeX</a> --
<a href="//fano.ics.uci.edu/cites/Document/A-deterministic-linear-time-algorithm-for-geometric-separators-and-its-applications.html">Citations</a> --
<a href="//citeseer.ist.psu.edu/eppstein93deterministic.html">CiteSeer</a>)
<p>
<li><b>Sparsification--A technique for speeding up dynamic graph algorithms</b>.<br>
D. Eppstein,
<a href="//www.scs.gatech.edu/people/zvi-galil">Z. Galil</a>, 
<a href="//www.info.uniroma2.it/~italiano/">
G.F. Italiano</a>, and A. Nissenzweig.<br>
<i>33rd IEEE Symp. Foundations of Comp. Sci.,</i> Pittsburgh, 1992, pp. 60&ndash;69.<br>
Tech. Rep. RC 19272 (83907), IBM, 1993.<br>
Tech. Rep. CS96-11, Univ. Ca' Foscari di Venezia, Oct. 1996.<br>
<a href="//doi.org/10.1145/265910.265914"><i>J. ACM</i> 44 (5): 669&ndash;696, 1997</a>.
<p>
Uses a divide and conquer on the edge set of a graph, together with the
idea of replacing subgraphs by sparser certificates, to make various
dynamic algorithms as fast on dense graphs as they are on sparse graphs.
Applications include random generation of spanning trees
as well as finding the <i>k</i>
<a href="mst.html">minimum weight spanning trees</a>
for a given parameter <i>k.</i>
<p>(<a href="/~eppstein/bibs/eppstein.html#Sparsification --- A technique for speeding up dynamic graph algorithms">BibTeX</a> --
<a href="//fano.ics.uci.edu/cites/Document/Sparsification-A-technique-for-speeding-up-dynamic-graph-algorithms.html">Citations</a> --
<a href="//theory.lcs.mit.edu/~dmjones/FOCS/References/eppsteingin1992:60.html">MIT hypertext bibliography</a> --
<a href="//portal.acm.org/citation.cfm?id=265914">ACM DL</a>)
<p>
<li><b>Improved sparsification</b>.<br>
D. Eppstein,
<a href="//www.scs.gatech.edu/people/zvi-galil">Z. Galil</a>, and 
<a href="//www.info.uniroma2.it/~italiano/">
G.F. Italiano</a>.<br>
<a href="EppGalIta-TR-93-20.pdf">Tech. Rep. 93-20</a>, ICS, UCI, 1993.
<p>
Saves a log factor over dynamic graph algorithms in
"<a href="p-sparsification.html">Sparsification</a>"
and their applications, by dividing vertices instead of edges.
Merged into the journal version of "Sparsification".
<p>(<a href="/~eppstein/bibs/eppstein.html#Improved sparsification">BibTeX</a> --
<a href="//fano.ics.uci.edu/cites/Document/Improved-sparsification.html">Citations</a> --
<a href="//citeseer.ist.psu.edu/eppstein93improved.html">CiteSeer</a>)
<p>
<li><b>Separator based sparsification for dynamic planar graph algorithms</b>.<br>
D. Eppstein,
<a href="//www.scs.gatech.edu/people/zvi-galil">Z. Galil</a>, 
<a href="//www.info.uniroma2.it/~italiano/">
G.F. Italiano</a>, and T. Spencer.<br>
<a href="//portal.acm.org/citation.cfm?id=167159"><i>25th ACM Symp. Theory of Computing,</i> San Diego, 1993, pp. 208&ndash;217.</a>
<p>
Replaces portions of a hierarchical separator decomposition with smaller
certificates to achieve fast update times for various dynamic planar graph problems.  Applications include finding the <i>k</i>
<a href="mst.html">best spanning trees</a> of a planar graph.
<p>
(<a href="/~eppstein/bibs/eppstein.html#Separator based sparsification for dynamic planar graph algorithms">BibTeX</a> --
<a href="//fano.ics.uci.edu/cites/Document/Separator-based-sparsification-for-dynamic-planar-graph-algorithms.html">Citations</a> --
<a href="//theory.lcs.mit.edu/~dmjones/STOC/References/eppsteingis1993:208.html">MIT hypertext bibliography</a>)
<p>
<li><b>Average case analysis of dynamic geometric optimization</b>.<br>
D. Eppstein.<br>
<a href="Epp-TR-93-18.pdf">Tech. Rep. 93-18</a>, ICS, UCI, 1993.<br>
<a href="//portal.acm.org/citation.cfm?id=314481">
<i>5th ACM-SIAM Symp. Discrete Algorithms,</i> Arlington, 1994, pp. 77&ndash;86</a>.<br>
<a href="//doi.org/10.1016/0925-7721(95)00018-6">
<i>Comp. Geom. Theory &amp; Applications</i> 6: 45&ndash;68, 1996</a>.
<p>
The Tech. Report used the more informative title
"Updating widths and maximum spanning trees using the rotating caliper graph",
which I also used for the journal submission,
but the referees made me change it back.
Dynamic geometry in a model of Mulmuley and Schwarzkopf in which insertions
and deletions are chosen randomly among a worst-case pool of points.
This paper introduces several fundamental techniques
including the <a href="/~eppstein/junkyard/rcg.html">rotating caliper
graph</a> of a point set and a method for performing
decomposible range queries in the average case setting.
It has also since inspired the use of a similar model in dynamic graph
algorithms.
<p>(<a href="/~eppstein/bibs/eppstein.html#Average case analysis of dynamic geometric optimization">BibTeX</a> --
<a href="Epp-SODA-94-dyngeom.pdf">SODA paper</a> --
<a href="Epp-CGTA-96.pdf">Full paper</a> --
<a href="//fano.ics.uci.edu/cites/Document/Average-case-analysis-of-dynamic-geometric-optimization.html">Citations</a> --
<a href="//citeseer.ist.psu.edu/eppstein96average.html">CiteSeer</a> --
<a href="//portal.acm.org/citation.cfm?id=228291">ACM DL</a>)
<p>
<li><b>Dynamic geometric optimization</b>.<br>
D. Eppstein.<br>
Invited talk,
<a href="ftp://ams.sunysb.edu/pub/geometry/msi-workshop/93/CG-workshop-abstracts-93.ps.Z">
<i>3rd MSI Worksh. Computational Geometry</i>, 1993, p. 14</a>.<br>
<p>
<li><b>Computing the discrepancy</b>.<br>
<a href="//www.cs.Princeton.EDU/~dpd/">
D. P. Dobkin</a> and D. Eppstein.<br>
<a href="//portal.acm.org/citation.cfm?id=160997"><i>9th ACM Symp. Comp. Geom.,</i> San Diego, 1993, pp. 47&ndash;52.</a>
<p>
Measures how well a sample of points from a set works as a discrete
approximation to the continuous measure of shapes in the set,
using algorithms based on Overmars and van Leeuwen's dynamic convex hull
data structure.
Some versions of the problem also involve subroutines
for finding the deepest point in an arrangement of quadrants or orthants.
<p>
This paper was merged with results of Mitchell to form the journal version,
"<a href="p-supersample.html">Computing the discrepancy with applications
to supersampling patterns</a>".
<p>(<a href="/~eppstein/bibs/eppstein.html#Computing the discrepancy">BibTeX</a> --
<a href="//fano.ics.uci.edu/cites/Document/Computing-the-discrepancy.html">Citations</a>)
<p>
<li><b>Approximating center points with iterated Radon points</b>.<br>
<a href="//www.almaden.ibm.com/u/kclarkson/">
K. Clarkson</a>, D. Eppstein, 
<a href="//www.cs.cmu.edu/afs/cs.cmu.edu/user/glmiller/public/www/home.html">G.L. Miller</a>,
<a href="//www-users.cs.umn.edu/~carl/">C. Sturtivant</a>, and 
<a href="//www-sal.cs.uiuc.edu/~steng/">S.-H. Teng</a>.<br>
<a href="//portal.acm.org/citation.cfm?id=161004"><i>9th ACM Symp. Comp. Geom.,</i> San Diego, 1993, pp. 91&ndash;98</a>.<br>
<a href="//kenclarkson.org/center/p.pdf"><i>Int. J. Comp. Geom. &amp; Appl.</i> 6 (3): 357&ndash;377, 1996</a>.
<p>
Given a collection of <i>n</i> sites,
a center point is a point (not necessarily a site)
such that no hyperplane through the centerpoint
partitions the collection into a very small and a very large subset.
Center points have been used by Teng and others
as a key step in the construction of geometric separators.
One can find a point with this property by choosing
a random sample of the collection and applying
<a href="geom-lp.html">linear programming</a>,
but the complexity of that method grows exponentially with the dimension.
This paper proposes an alternate method that
produces lower quality approximations (in terms of the size
of the worst hyperplane partition) but takes time
polynomial in both <i>n</i> and <i>d.</i>
<p>(<a href="/~eppstein/bibs/eppstein.html#Approximating center points with iterated Radon points">BibTeX</a> --
<a href="//fano.ics.uci.edu/cites/Document/Approximating-center-points-with-iterated-Radon-points.html">Citations</a>)
<p>
<li><b>Worst-case bounds for subadditive geometric graphs</b>.<br>
<a href="//www.parc.xerox.com/csl/members/bern/">M. Bern</a>
and D. Eppstein.<br>
<a href="//portal.acm.org/citation.cfm?id=161018"><i>9th ACM Symp. Comp. Geom.,</i> San Diego, 1993, pp. 183&ndash;188.</a>
<p>
For many geometric graph problems for points in the unit square,
such as <a href="mst.html">minimum spanning trees</a>,
<a href="graph-match.html">matching</a>, and
<a href="tsp.html">traveling salesmen</a>,
the sum of edge lengths is O(sqrt <i>n</i>) and the sum of
<i>d</i>th powers of edge lengths is O(log <i>n</i>).
We provide a "gap theorem" showing that if these bounds do not hold
for a class of graphs, both sums will instead be Omega(<i>n</i>).
For traveling salesmen the O(log <i>n</i>) bound is tight
but for some other graphs the sum of
<i>d</i>th powers of edge lengths is O(1).
<p>(<a href="/~eppstein/bibs/eppstein.html#Worst-case bounds for subadditive geometric graphs">BibTeX</a> --
<a href="//fano.ics.uci.edu/cites/Document/Worst-case-bounds-for-subadditive-geometric-graphs.html">Citations</a> --
<a href="BerEpp-SCG-93.pdf">Preprint of SCG version</a> --
<a href="//citeseer.ist.psu.edu/bern93worstcase.html">CiteSeer</a>)
<p>
<li><b>Parallel construction of quadtrees and quality triangulations</b>.<br>
<a href="//www.parc.xerox.com/csl/members/bern/">M. Bern</a>,
D. Eppstein, and 
<a href="//www-sal.cs.uiuc.edu/~steng/">S.-H. Teng</a>.<br>
<a href="BerEppTen-WADS-93.pdf"><i>3rd Worksh. Algorithms and Data
Structures,</i> Montreal, 1993</a>.<br>
Springer, <i>Lecture Notes in
Comp. Sci.</i> 709, 1993, pp. 188&ndash;199.<br>
Tech. Rep. 614, MIT Lab. for Comp. Sci., 1994.<br>
<a href="BerEppTen-IJCGA-99.pdf"><i>Int. J. Comp. Geom. &amp; Appl.</i>
9 (6): 517&ndash;532, 1999.</a>
<p>
A parallelization of the quadtree constructions in
"<a href="p-pgood.html">Provably good mesh generation</a>",
in an integer model of computation, based on a technique of
sorting the input points using values formed by shuffling the binary
representations of the coordinates.
A side-effect is an efficient construction for the "fair split tree"
hierarchical clustering method used by Callahan and Kosaraju for various
nearest neighbor problems.
<p>(<a href="/~eppstein/bibs/eppstein.html#Parallel construction of quadtrees and quality triangulations">BibTeX</a> --
<a href="//www.CiteSeer.com/eppstein93parallel.html">CiteSeer</a> --
<a href="//fano.ics.uci.edu/cites/Document/Parallel-construction-of-quadtrees-and-quality-triangulations.html">Citations</a> --
<a href="//portal.acm.org/citation.cfm?id=672684">ACM DL</a>)
<p>
<li><b>Clustering for faster network simplex pivots</b>.<br>
D. Eppstein.<br>
<a href="Epp-TR-93-19.pdf">Tech. Rep. 93-19</a>, ICS, UCI, 1993.<br>
<a href="//portal.acm.org/citation.cfm?id=314490">
<i>5th ACM-SIAM Symp. Discrete Algorithms,</i>
Arlington, 1994, pp. 160&ndash;166</a>.<br>
<i>Networks</i> 35 (3): 173&ndash;180, 2000.
<p>
Speeds up the worst case time per pivot for various versions of
the network simplex algorithm for minimum cost flow problems.
Uses techniques from dynamic graph algorithms as well as some simple
geometric data structures.
<p>(<a href="/~eppstein/bibs/eppstein.html#Clustering for faster network simplex pivots">BibTeX</a> --
<a href="//citeseer.ist.psu.edu/eppstein93clustering.html">CiteSeer</a>)
<p>
</ul>

<hr><p>
<a href="year.html">Years</a> --
<a href="/~eppstein/pubs/">Publications</a> --
<a href="/~eppstein/">David Eppstein</a> --
<a href="/~theory/">Theory Group</a> --
<a href="/">Inf. &amp; Comp. Sci.</a> --
<a href="//www.uci.edu/">UC Irvine</a>
<p>
<small>Semi-automatically <a href="filter.html">filtered</a>
from a common source file.</small>
</body></html>
