<!DOCTYPE html PUBLIC "-//IETF//DTD HTML 2.0//EN">
<html>
<head>
<title>Theory Seminar, February 20, 2015</title>
    <link rel="stylesheet" href="../stylesheet.css" type="text/css">
    <meta name="viewport" content="width=device-width, initial-scale=1">
<script type="text/x-mathjax-config">
MathJax.Hub.Config({
  tex2jax: {inlineMath: [['$','$'], ['\\(','\\)']]}
});
</script>
<script type="text/javascript" src="//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML">
</script>
</head>
<body>
<a href="/~theory/"><img src="http://www.ics.uci.edu/~theory/logo/CATOC2.jpg"></a>
<h2><a href="/~theory/269/">Winter 2015: Theory Seminar</a><br>
ICS, Room 243, 1:00pm

<hr />
February 20, 2015:</h2>
<h1>
The Simplex Algorithm is NP-Mighty
</h1>
<h2>
Will Devanny
</h2>

<p>
We propose to classify the power of algorithms by the complexity of the
problems that they can be used to solve. Instead of restricting to the
problem a particular algorithm was designed to solve explicitly, however, we
include problems that, with polynomial overhead, can be solved ‘implicitly’
during the algorithm’s execution. For example, we allow to solve a decision
problem by suitably transforming the input, executing the algorithm, and
observing whether a specific bit in its internal configuration ever switches
during the execution.
  We show that the Simplex Method, the Network Simplex Method (both with
  Dantzig’s original pivot rule), and the Successive Shortest Path Algorithm
  are NP-mighty, that is, each of these algorithms can be used to solve any
  problem in NP. This result casts a more favorable light on these
  algorithms’ exponential worst-case running times. Furthermore, as a
  consequence of our approach, we obtain several novel hardness results. For
  example, for a given input to the Simplex Algorithm, deciding whether a
  given variable ever enters the basis during the algorithm’s execution and
  determining the number of iterations needed are both NP-hard problems.
  Finally, we close a long-standing open problem in the area of network flows
  over time by showing that earliest arrival flows are NP-hard to obtain.

<p>
  This paper was presented at SODA 2015.

</body>
</html>

