<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<!-- Page automatically generated from latex_to_html converter. -->
<!-- by cc_extract_html, $Revision: 3.19 $ -->
<!-- LaTeX source file: './Box_intersection_d_ref/box_self_intersection_all_pairs_d.tex' -->
<html> <head>  
<title>box_self_intersection_all_pairs_d</title>
</head>  
<link href="../latex_to_html.css" rel="STYLESHEET">
<body bgcolor="white">
<!-- ------------------------------------------------------------------- -->


<!-- Top Navigation ---------------------------------------------------- -->
<div class="NavTop">
<hr>
  <strong>Navigation:</strong>
<a href="Chapter_intro.html">Up</a>, 
  <a href="../contents.html">Table of Contents</A>,
  <a href="../biblio.html">Bibliography</a>,
  <a href="../manual_index.html">Index</a>,
  <a href="../title.html">Title Page</a>
<hr><!-- End of Top Navigation ----------------------------------------- -->
</div>


<A NAME="Cross_link_anchor_1239"></A>

<A NAME="Cross_link_anchor_1240"></A>

      
     
     
     
<A NAME="Index_anchor_1314"></A> 

   
<TABLE ALIGN=RIGHT><TR><TD><IMG ALIGN=TOP SRC="cc_Function.gif"></TD></TR></TABLE>


    <A NAME="ccRef_CGAL::box_self_intersection_all_pairs_d"></A>
<h2><I>CGAL::box_self_intersection_all_pairs_d</I></h2>


   
     
     
<A NAME="Index_anchor_1315"></A> 

   

   
     
     
<A NAME="Index_anchor_1316"></A>
<P>

<H3>Definition</H3>
<P>

The function <I><A HREF="Function_box_self_intersection_all_pairs_d.html#Cross_link_anchor_1240">box_self_intersection_all_pairs_d</A></I> computes the pairwise intersecting boxes
in a sequence of iso-oriented boxes in arbitrary dimension.
It does so by comparing all possible pairs of boxes and is thus
inferior to the fast <I><A HREF="Function_box_self_intersection_d.html#Cross_link_anchor_1237">CGAL::box_self_intersection_d</A></I> algorithm on 
page&nbsp;<A HREF="Function_box_self_intersection_d.html#ccRef_CGAL::box_self_intersection_d"><IMG SRC="cc_ref_up_arrow.gif" ALT="reference" WIDTH="10" HEIGHT="10"></A>.
<P>

The sequence of boxes is given with a forward iterator range. The
sequences are not modified. For each intersecting pair of boxes a
<I>callback</I> function object is called with the two intersecting
boxes as argument.
<P>

The algorithm is interface compatible with the
<I><A HREF="Function_box_self_intersection_d.html#Cross_link_anchor_1237">CGAL::box_self_intersection_d</A></I> function. Similarly, we call the
<I>value_type</I> of the iterators the <I>box handle</I>, which is
either our box type or a pointer type to our box type.
<P>

A <MATH><I>d</I></MATH>-dimensional iso-oriented box is defined as the <A HREF="../Kernel_23_ref/Class_Cartesian.html#Cross_link_anchor_6">Cartesian</A> product
of <MATH><I>d</I></MATH> intervals. We call the box <I>half-open</I> if the <MATH><I>d</I></MATH>
intervals <MATH><I>{ [lo<SUB>i</SUB>,hi<SUB>i</SUB>) | 0  <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC="cc_leq.gif"> i &lt; d}</I></MATH> are half-open intervals,
and we call the box <I>closed</I> if the <MATH><I>d</I></MATH> intervals <MATH><I>{ [lo<SUB>i</SUB>,hi<SUB>i</SUB>]
| 0  <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC="cc_leq.gif"> i &lt; d}</I></MATH> are closed intervals. Note that closed boxes support
zero-width boxes and they can intersect at their boundaries, while
non-empty half-open boxes always have a positive <A HREF="../Kernel_23_ref/Function_volume.html#Cross_link_anchor_269">volume</A> and they only
intersect iff their interiors overlap.  The distinction between closed
or half-open boxes does not require a different representation of
boxes, just a different interpretation when comparing boxes, which is
selected with the <I>topology</I> parameter and its two values,
<I>CGAL::Box_intersection_d::HALF_OPEN</I> and
<I>CGAL::Box_intersection_d::CLOSED</I>.
<P>

The algorithm uses a traits class of the <I><A HREF="Concept_BoxIntersectionTraits_d.html#Cross_link_anchor_1242">BoxIntersectionTraits_d</A></I>
concept to access the boxes. A default traits class is provided that
assumes that the box type is a model of the <I><A HREF="Concept_BoxIntersectionBox_d.html#Cross_link_anchor_1241">BoxIntersectionBox_d</A></I>
concept and that the box handle, i.e., the iterators value type, is
identical to the box type or a pointer to the box type.
<P>

<I>#include &lt;<A HREF="../../../include/CGAL/box_intersection_d.h">CGAL/box_intersection_d.h</A>&gt;</I>
<P>

<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>
        <I><NOBR>
    template&lt; class ForwardIterator, class Callback &gt;
        </I></NOBR>
        </TD></TR>
        
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_void_box_self_intersection_all_pairs_d6_ForwardIterator_begin+_ForwardIterator_end+_Callback_callback+_Box_intersection_d::Topology_topology_=_Box_intersection_d::CLOSED9;"></A>
void
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP COLSPAN=2><I>
    <A HREF="Function_box_self_intersection_all_pairs_d.html#Cross_link_anchor_1240">box_self_intersection_all_pairs_d</A> ( </I></TD></TR><TR><TD WIDTH=50 NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>
    ForwardIterator begin,<BR>

ForwardIterator end,<BR>

Callback callback,<BR>

Box_intersection_d::Topology topology = Box_intersection_d::CLOSED)</I></TD></TR></TABLE>
    
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    Invocation of box <A HREF="../Kernel_23_ref/Function_intersection.html#Cross_link_anchor_221">intersection</A> with default box traits
    <I><A HREF="Class_Box_intersection_d--Box_traits_d.html#Cross_link_anchor_1245">CGAL::Box_intersection_d::Box_traits_d</A>&lt;Box_handle&gt;</I>, where
    <I>Box_handle</I> corresponds to the iterator value type  of
    <I>ForwardIterator</I>.
        </TD></TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>
        <I><NOBR>
    template&lt; class ForwardIterator, class Callback, class BoxTraits &gt;
        </I></NOBR>
        </TD></TR>
        
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_void_box_self_intersection_all_pairs_d6_ForwardIterator_begin+_ForwardIterator_end+_Callback_callback+_BoxTraits_box_traits+_Box_intersection_d::Topology_topology_=_Box_intersection_d::CLOSED9;"></A>
void
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP COLSPAN=2><I>
    <A HREF="Function_box_self_intersection_all_pairs_d.html#Cross_link_anchor_1240">box_self_intersection_all_pairs_d</A> ( </I></TD></TR><TR><TD WIDTH=50 NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>
    ForwardIterator begin,<BR>

ForwardIterator end,<BR>

Callback callback,<BR>

BoxTraits box_traits,<BR>

Box_intersection_d::Topology topology = Box_intersection_d::CLOSED)</I></TD></TR></TABLE>
    
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    Invocation with custom box traits.
        </TD></TR>
        </TABLE>
<P>

<H3>Requirements</H3>
<P>

<UL>
  <LI><I>ForwardIterator</I> must be a forward iterator. We call its
    value type <I>Box_handle</I> in the following. 
  <LI><I>Callback</I> must be of the <I>BinaryFunction</I> concept. 
    The <I>Box_handle</I> must be convertible to both argument types. The
    return type is not used and can be <I>void</I>.
  <LI>The <I>Box_handle</I> must be a model of the <I>Assignable</I> concept.
  <LI>In addition, if the default box traits is used the <I>Box_handle</I> must 
    be a class type <I>T</I> or a pointer to a class type <I>T</I>, where
    <I>T</I> must be a model of the <I><A HREF="Concept_BoxIntersectionBox_d.html#Cross_link_anchor_1241">BoxIntersectionBox_d</A></I> concept.
    In both cases, the default box traits specializes to a suitable
    implementation.
  <LI><I>BoxTraits</I> must be of the <I><A HREF="Concept_BoxIntersectionTraits_d.html#Cross_link_anchor_1242">BoxIntersectionTraits_d</A></I> concept.
</UL>
<P>

<H3>See Also</H3>
<P>

<I><A HREF="Function_box_intersection_d.html#Cross_link_anchor_1233">CGAL::box_intersection_d</A></I><BR>

<I><A HREF="Function_box_self_intersection_d.html#Cross_link_anchor_1237">CGAL::box_self_intersection_d</A></I><BR>

<I><A HREF="Function_box_intersection_all_pairs_d.html#Cross_link_anchor_1235">CGAL::box_intersection_all_pairs_d</A></I>
<P>

<I><A HREF="Class_Box_intersection_d--Box_traits_d.html#Cross_link_anchor_1245">CGAL::Box_intersection_d::Box_traits_d</A>&lt;BoxHandle&gt;</I><BR>

<I><A HREF="Concept_BoxIntersectionBox_d.html#Cross_link_anchor_1241">BoxIntersectionBox_d</A></I><BR>

<I><A HREF="Concept_BoxIntersectionTraits_d.html#Cross_link_anchor_1242">BoxIntersectionTraits_d</A></I>
<P>

<H3>Implementation</H3>
<P>

The algorithm is trivially testing all pairs and runs therefore in time
<MATH><I>O(n<SUP>2</SUP>)</I></MATH> where <MATH><I>n</I></MATH> is the size of the input sequence. This algorithm
does not use the id-number of the boxes.
<P>

<div class="NavNext"><hr> <b>Next:</b> <a href="Concept_BoxIntersectionBox_d.html"><I>BoxIntersectionBox_d</I></a> 


    
<div class="NavBottom">
<hr><!-- Bottom Navigation --------------------------------------------- -->
  <strong>Navigation:</strong>
<!Up_chapter_link_58!>
  <a href="../contents.html">Table of Contents</A>,
  <a href="../biblio.html">Bibliography</a>,
  <a href="../manual_index.html">Index</a>,
  <a href="../title.html">Title Page</a>
<!-- End of Bottom Navigation ------------------------------------------ -->


<hr><!-- --------------------------------------------------------------- -->
<div class="NavAddress">

The <A HREF=http://www.cgal.org>CGAL Project</A> .

Tue, December 21, 2004 .
<hr></div>
</body>  </html>  
