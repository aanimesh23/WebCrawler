<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 3.2//EN">
<html><head>
<title>David Eppstein - Publications</title>
<meta name="viewport" content="width=device-width, initial-scale=1">
</head>
<body bgcolor="#ffffff" text="#000000">
<h1>David Eppstein - Publications</h1>
<hr><p>
<h2>
Quadtrees and related hierarchical decompositions
</h2>
<ul>
<li><b>Provably good mesh generation</b>.<br>
<a href="//www.parc.xerox.com/csl/members/bern/">M. Bern</a>,
D. Eppstein, and 
<a href="//sandbox.parc.xerox.com/gilbert/">
J. Gilbert</a>.<br>
<i>31st IEEE Symp. Foundations of Comp. Sci.,</i>
St. Louis, Missouri, 1990, pp. 231&ndash;241.<br>
<i>J. Comp. Sys. Sci.</i> 48: 384&ndash;409, 1994 (special issue for 31st FOCS).
<p>
In this paper, we construct triangulations of point sets and polygons by
using quadtrees to add extra vertices to the input. As a result we can
guarantee that all triangles have angles bounded
away from zero, using a number of triangles within a constant of
optimal; this was the first paper to provide simultaneous bounds on mesh
element quality and mesh complexity of this form, and therefore the
first to provide finite element mesh generation algorithms that
guarantee both the robustness of the algorithm against unexpected input
geometries and the quality of its output.
<p>
In the same paper we also use quadtrees to triangulate planar point sets
so that all angles are non-obtuse, using linearly many triangles, and to
triangulate higher dimensional point sets with no small solid angles and
a number of simplices within a constant of optimal.  Also, we can
augment any higher dimensional point set so the Delaunay triangulation
has linear complexity.
<p>
In later follow-up work, I showed that the same
technique can also be used to find a triangulation whose edges have <a
href="p-mwst.html">total length within a constant factor of
optimal</a>. Bern, Mitchell, and Ruppert
showed that alternative methods can be used to triangulate any polygon
without obtuse angles; see "<a href="p-cpack.html">Faster circle packing
with application to nonobtuse triangulation</a>" for an algorithmic
improvement to their technique. Additionally, with Bern, Chew, and
Ruppert, we showed that <a href-"p=dihedral.html">any point set in
higher dimensions can be triangulated with nonobtuse simplices</a>.
Bern and I surveyed these and related results in our paper "<a
href="p-meshgen.html">Mesh generation and optimal triangulation</a>".
<p>(<a href="/~eppstein/bibs/eppstein.html#Provably good mesh generation">BibTeX</a> --
<a href="//fano.ics.uci.edu/cites/Document/Provably-good-mesh-generation.html">Citations</a> --
<a href="BerEppGil-JCSS-94.pdf">Preliminary copy of journal version</a> --
<a href="//theory.lcs.mit.edu/~dmjones/FOCS/References/berneg1990:231.html">MIT hypertext bibliography</a> --
<a href="//citeseer.ist.psu.edu/bern90provably.html">CiteSeer</a> --
<a href="//portal.acm.org/citation.cfm?id=183122">ACM DL (JCSS)</a>)
<p>
<li><b>Approximating the minimum weight Steiner triangulation</b>.<br>
D. Eppstein.<br>
<a href="Epp-TR-91-55.pdf">Tech. Rep. 91-55</a>, ICS, UCI, 1991.<br>
<a href="//portal.acm.org/citation.cfm?id=139415"><i>3rd ACM-SIAM Symp. Discrete Algorithms,</i> Orlando, 1992, pp. 48&ndash;57</a>.<br>
<a href="Epp-DCG-94.pdf"><i>Disc. Comp. Geom.</i> 11: 163&ndash;191, 1994</a>.
<p>
<a href="geom-qt.html">Quadtree</a> based
<a href="geom-tri.html">triangulation</a> gives a large but constant factor
<a href="geom-approx.html">approximation</a>
to the minimum weight triangulation of a point set or
convex polygon, allowing extra Steiner points to be added as vertices.
Includes proofs of several bounds on triangulation weight relative to
the <a href="mst.html">minimum spanning tree</a> or non-Steiner
triangulation, and a conjecture
that for convex polygons the only points that need to be added are on
the polygon boundary.
<p>(<a href="/~eppstein/bibs/eppstein.html#Approximating the minimum weight Steiner triangulation">BibTeX</a> --
<a href="//fano.ics.uci.edu/cites/Document/Approximating-the-minimum-weight-Steiner-triangulation.html">Citations</a> --
<a href="//citeseer.ist.psu.edu/eppstein92approximating.html">CiteSeer</a>)
<p>
<li><b>Algorithms for proximity problems in higher dimensions</b>.<br>
<a href="//www.middlebury.edu/~dickerso/">
M. T. Dickerson</a> and D. Eppstein.<br>
<a href="//doi.org/10.1016/0925-7721(95)00009-7">
<i>Comp. Geom. Theory &amp; Applications</i> 5: 277&ndash;291, 1996</a>.
<p>
Combines a method from
"<a href="p-pgood.html">Provably good mesh generation</a>" for
finding sparse high-dimensional Delaunay triangulations,
a method of Dickerson, Drysdale, and Sack
["<a href="//www.middlebury.edu/~dickerso/research/enum.html">Simple
algorithms for enumerating interpoint distances</a>", IJCGA 1992]
for using Delaunay
triangulations to search for nearest neighbors,
and a method of Frederickson for speeding up tree-based searches.
The results are fast algorithms for several proximity problems
such as finding the <i>k</i> nearest neighbors to each point
in a given point set.
<p>(<a href="/~eppstein/bibs/eppstein.html#Algorithms for proximity problems in higher dimensions">BibTeX</a> --
<a href="DicEpp-CGTA-96.pdf">Full paper</a> --
<a href="//fano.ics.uci.edu/cites/Document/Algorithms-for-proximity-problems-in-higher-dimensions.html">Citations</a> --
<a href="//citeseer.ist.psu.edu/dickerson96algorithms.html">CiteSeer</a> --
<a href="//portal.acm.org/citation.cfm?id=236474">ACM DL</a>)
<p>
<li><b>Parallel construction of quadtrees and quality triangulations</b>.<br>
<a href="//www.parc.xerox.com/csl/members/bern/">M. Bern</a>,
D. Eppstein, and 
<a href="//www-sal.cs.uiuc.edu/~steng/">S.-H. Teng</a>.<br>
<a href="BerEppTen-WADS-93.pdf"><i>3rd Worksh. Algorithms and Data
Structures,</i> Montreal, 1993</a>.<br>
Springer, <i>Lecture Notes in
Comp. Sci.</i> 709, 1993, pp. 188&ndash;199.<br>
Tech. Rep. 614, MIT Lab. for Comp. Sci., 1994.<br>
<a href="BerEppTen-IJCGA-99.pdf"><i>Int. J. Comp. Geom. &amp; Appl.</i>
9 (6): 517&ndash;532, 1999.</a>
<p>
A parallelization of the quadtree constructions in
"<a href="p-pgood.html">Provably good mesh generation</a>",
in an integer model of computation, based on a technique of
sorting the input points using values formed by shuffling the binary
representations of the coordinates.
A side-effect is an efficient construction for the "fair split tree"
hierarchical clustering method used by Callahan and Kosaraju for various
nearest neighbor problems.
<p>(<a href="/~eppstein/bibs/eppstein.html#Parallel construction of quadtrees and quality triangulations">BibTeX</a> --
<a href="//www.CiteSeer.com/eppstein93parallel.html">CiteSeer</a> --
<a href="//fano.ics.uci.edu/cites/Document/Parallel-construction-of-quadtrees-and-quality-triangulations.html">Citations</a> --
<a href="//portal.acm.org/citation.cfm?id=672684">ACM DL</a>)
<p>
<li><b>Faster geometric <i>k</i>-point MST approximation</b>.<br>
D. Eppstein.<br>
<a href="Epp-TR-95-13.pdf">Tech. Rep. 95-13</a>, ICS, UCI, 1995.<br>
<i>Comp. Geom. Theory &amp; Applications</i> 8: 231&ndash;240, 1997.
<p>
Various authors have looked at a variant of geometric clustering
in which one must select <i>k</i> points that can be connected by a
small
<a href="mst.html">spanning tree</a>.  The problem is NP-complete (for
variable <i>k</i>);
good approximations are known based on dynamic programming techniques
but the time dependence on <i>n</i> is high.  This paper describes
a faster approximation algorithm based on dynamic programming in
quadtrees, and a general technique
based on that in "<a href="p-inn.html">Iterated nearest neighbors</a>"
for reducing the dependence
on <i>n</i> in any approximation algorithm.
<p>(<a href="/~eppstein/bibs/eppstein.html#Faster geometric $k$-point MST approximation">BibTeX</a> --
<a href="//fano.ics.uci.edu/cites/Document/Faster-geometric-k-point-MST-approximation.html">Citations</a> --
<a href="//citeseer.ist.psu.edu/eppstein95faster.html">CiteSeer</a> --
<a href="//portal.acm.org/citation.cfm?id=264740">ACM DL</a>)
<p>
<li><b>Algorithms for coloring quadtrees</b>.<br>
<a href="//www.parc.xerox.com/csl/members/bern/">M. Bern</a>,
D. Eppstein, and
B. Hutchings.<br>
<a href="//arXiv.org/abs/cs.CG/9907030">arXiv:cs.CG/9907030</a>.<br>
<i>Algorithmica</i> 32 (1): 87&ndash;94, 2002.
<p>
We consider several variations of the problem of
<a href="graph-color.html">coloring</a> the squares of a
<a href="geom-qt.html">quadtree</a> so that no two adjacent squares are
colored alike.
We give simple linear time algorithms for 3-coloring balanced quadtrees
with edge adjacency, 4-coloring unbalanced quadtrees with edge
adjacency, and 6-coloring balanced or unbalanced quadtrees with corner
adjacency.  The number of colors used by the first two algorithms is
optimal; for the third algorithm, 5 colors may sometimes be
needed.
<p>(<a href="/~eppstein/bibs/eppstein.html#Algorithms for coloring quadtrees">BibTeX</a> --
<a href="//fano.ics.uci.edu/cites/Document/Algorithms-for-coloring-quadtrees.html">Citations</a>)
<p>
<li><b>The skip quadtree: a simple dynamic data structure
for multidimensional data.</b><br>
D. Eppstein,
<a href="//www.ics.uci.edu/~goodrich/">M. T. Goodrich</a>,
and
<a href="//www.ics.uci.edu/~zhengsun/">J. Z. Sun</a>.<br>
<i>21st ACM Symp. Comp. Geom.,</i> Pisa, 2005, pp. 296&ndash;305.<br>
<a
href="//arxiv.org/abs/cs.CG/0507049">arXiv:cs.CG/0507049</a>.<br>
<i>Int. J. Comp. Geom. &amp; Appl.</i> 18(1-2): 131&ndash;160, 2008.
<p>
We describe a data structure consisting of a sequence of compressed
quadtrees for successively sparser samples of an input point set, with
connections between the same squares in successive members of the
sequence.  Using this structure, we can insert or delete points and
answer approximate range queries and approximate nearest neighbor
queries in O(log n) time per operation.
<p>
(<a href="EppGooSun-SoCG-05.pdf">SoCG05 talk slides</a> --
<a href="//www.ics.uci.edu/~eppstein/bibs/eppstein.html#The skip quadtree: a simple dynamic data structure for multidimensional data">BibTeX</a>)
<p>
<li><b>Skip-webs: efficient distributed data structures for
multi-dimensional data sets.</b><br>
<a href="//www.daimi.au.dk/~large/">L. Arge</a>,
D. Eppstein,
and
<a href="//www.ics.uci.edu/~goodrich/">M. T. Goodrich</a>.<br>
<a href="//doi.org/10.1145/1073827"><i>Proc. 24th ACM SIGACT-SIGOPS Symp. Principles of Distributed Computing
(PODC 2005)</i>, Las Vegas,  July 2005, pp. 69&ndash;76</a>.<br>
<a href="//arxiv.org/abs/cs.DC/0507050">arXiv:cs.DC/0507050</a>.
<p>
Describes efficient distributed versions of skip quadtrees and related
spatial searching structures.
<p>
(<a href="//www.ics.uci.edu/~eppstein/bibs/eppstein.html#Skip-webs: efficient distributed data structures for multi-dimensional data sets">BibTeX</a> --
<a href="//fano.ics.uci.edu/cites/Document/Skip-webs-efficient-distributed-data-structures-for-multi-dimensional-data-sets.html">Citations</a>)
<p>
<li><b>Diamond-kite meshes: adaptive quadrilateral meshing and orthogonal circle packing</b>.<br>
D. Eppstein.<br>
<a href="//arxiv.org/abs/1207.5082">arXiv:1207.5082</a>.<br>
<a href="//doi.org/10.1007/978-3-642-33573-0_16"><i>21st International Meshing Round Table</i>, San Jose, California,
2012, pp. 261&ndash;277</a>.<br>
<a href="//doi.org/10.1007/s00366-013-0327-9"><i>Engineering
with Computers</i> 30 (2): 223&ndash;235 (special issue for the 21st
Int. Meshing Roundtable), 2014</a>.
<p>
We describe a recursive subdivision of the plane into quadrilaterals in
the form of rhombi and kites with 60, 90, and 120 degree angles. The
vertices of the resulting quadrilateral mesh form the centers of a set
of circles that cross orthogonally for every two adjacent vertices,
and it has many other properties that are important in finite element meshing.
<p>
(<a href="Epp-IMR-12.pdf">Slides</a>)
<p>
</ul>

<hr><p>
<a href="geom.html">Geometry</a> --
<a href="/~eppstein/pubs/">Publications</a> --
<a href="/~eppstein/">David Eppstein</a> --
<a href="/~theory/">Theory Group</a> --
<a href="/">Inf. &amp; Comp. Sci.</a> --
<a href="//www.uci.edu/">UC Irvine</a>
<p>
<small>Semi-automatically <a href="filter.html">filtered</a>
from a common source file.</small>
</body></html>
