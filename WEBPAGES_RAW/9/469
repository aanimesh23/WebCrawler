<HTML>
<HEAD>
 <TITLE>Access control</TITLE> 
</HEAD>
<BODY>
 <H1>Access control</H1> 
 <P><H2>Access control</H2>

</P>

<P><UL><LI>User problem<UL><LI>Provide granular permissions (read, edit, turn off revisions, print, etc.) to different users </UL><LI>Solution<UL><LI>Username-based permissions list</UL><LI>Web considerations<UL><LI>Security and server support</UL></UL></P>

<P></P> 
<P>
<TABLE>
<TD HEIGHT=100 WIDTH=100>

<A HREF = "tsld010.htm">Previous slide </A> </TD>
<TD HEIGHT=100 WIDTH=100>

<A HREF = "tsld012.htm">Next slide </A>  </TD>
<TD HEIGHT=100 WIDTH=150>

<A HREF = "index.htm">Back to the first slide </A>  </TD>
<TD HEIGHT=100 WIDTH=150>

<A HREF = "sld011.htm">View Graphic Version </A>  </TD>
</TABLE>
<BR>
</p>

<FONT size=4><STRONG> Notes: </FONT></STRONG>
<HR SIZE=3>
<P> </P>

<P>Access control is something that Word Pro gives far greater control to than Word. In Word, you have document read and write permissions based on passwords, and then a document can be protected to only allow revisions or annotations, also based on a password. In Word Pro 96, you can specify quite precisely every role that every possible user has. </P>

<P></P>

<P>This is all based on a set of permissions lists. These are stored right there in the binary file format.</P>

<P></P>

<P>Naturally this would take some adapting if, for instance, you wanted it to work with HTML documents. Obviously you can�t just store the permissions lists right there in unencrypted ASCII text. It would require considerable server-side support, and, if you wanted to implement it to the degree that Lotus does, authoring environment support. So for instance, if I call up an access-controlled file, the server would hand my editor a file, with instructions about what I�m allowed to do and not to do. If my editor cheats and lets me do things locally, the server of course still won�t let me do those nasty things to the server copy. So it�s not trivial, to say the least.</P>

<P> </P> 
</Body>
</HTML>