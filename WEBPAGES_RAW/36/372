<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="GENERATOR" CONTENT="Globetrotter 1.1.1" />
<META HTTP-EQUIV="AUTHOR" CONTENT="David G. Kay" />
<META HTTP-EQUIV="UPDATED" CONTENT="Monday, September 26, 2005 5:35 PM" />
<TITLE>Pair Programming Guidelines</TITLE>
<META HTTP-EQUIV="X-GLOBETROTTERDATA" CONTENT="D2EE0D93" />
<META HTTP-EQUIV=KEYWORDS CONTENT="Pair Programming, Programming Courses" />
<META HTTP-EQUIV="DESCRIPTION" CONTENT="Guidelines for pair programming in ICS H21, the honors section of the first-quarter introductory course  in the Department of Information and Computer Science at the University of California, Irvine." />
<META HTTP-EQUIV="COPYRIGHT" CONTENT="Copyright &#169; 2003 by David G. Kay.  All rights reserved." />
<style type="text/css">
<!--
.style1 {	font-size: x-small;
	font-family: "Goudy Old Style";
}
.style2 {font-family: "Goudy Old Style"}
-->
</style>
<link href="/~kay/courses/31/mainstyle.css" rel="stylesheet" type="text/css" />
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<P><FONT size="2"  >ICS 3</FONT><FONT size="2"  >1 &bull; DAVID G. KAY &bull; UC IRVINE </FONT></P>
<P>
<span class="medsize"><B>Pair Programming Guidelines</B></span></P>
<P>
<FONT  >Two heads are better than one, according to
an old saying.  This even applies to writing programs:  A pair of programmers
(working as described here) nearly always beats the stereotypical solitary
loner.  The pair produces more high-quality code in less time, by far more
than two-to-one.</FONT></P>
<P>
<FONT  >In pair programming, two programmers share
one computer.  One is the &quot;driver,&quot; who controls the keyboard
and mouse.  The other is the &quot;navigator,&quot; who observes, asks questions,
suggests solutions, and thinks about slightly longer-term strategies.  The
two programmers switch roles frequently&mdash;every 15 minutes would be a good
interval for us, though that&#39;s flexible.  Even the activities of the
driver and navigator are flexible (except for who does the typing); the
goal is to work together collaboratively, each partner assisting the other as needed,
to produce the best joint result possible.  It is not pair programming if
one person does all the work or if the partners just split up the work and
each does half independently.</FONT></P>
<P>
<FONT  >That&#39;s the basic idea:  Spend your time in the scheduled labs working with your partner,
one of you as driver and the other as navigator, switching regularly.  You
may need to arrange other times to meet, beyond the scheduled lab sections.
 We expect everyone to be as flexible and professional as possible in arranging
those times as necessary; if your schedule is highly constrained, explore
possible outside meeting times with your prospective partners before you commit to the partnership.</FONT></P>
<P>
<FONT  >You may enjoy reading this paper about pair
programming:  <A HREF="http://portal.acm.org/ft_gateway.cfm?id=332848&type=pdf&coll=ACM&dl=ACM&CFID=12916017&CFTOKEN=16268370">All I Really Need to Know About Pair Programming I Learned in Kindergarten</A>,
by Laurie A. Williams and Robert R. Kessler (<I>Communications of the ACM,</I>
May 2000).  <A HREF="http://collaboration.csc.ncsu.edu/laurie/Papers/Kindergarten.PDF">[Alternate link]</A></FONT></P>
<P>
<FONT  ><strong>What about individual differences? </strong>People new to pair programming often ask what
happens if the members of the pair have different abilities.  Actually,
that will be true of any pair of people in the world, probably even including
identical twins.  The differences may be great or small, one member may
have more strengths than the other, but this is exactly like most real-world
working situations.  Part of accomplishing a task is to get the most out
of each member and make each member stronger and more productive on subsequent
tasks.</FONT></P>
<P>
<FONT  >A clearly stronger partner may feel frustrated
or slowed down by the other partner, but the stronger partner still benefits
from the teamwork in many ways: The other partner&#39;s requests for clarification
often point out flaws in the approach or solution, the stronger partner builds teamwork skills that
have great value in the job market, and the exercise of providing a clear
explanation solidifies and deepens the explainer&#39;s own understanding.</FONT></P>
<P>
<FONT  >The less strong partner may feel that questions
hold the other partner back or that there is no benefit to participating
actively, but pair programming studies show that paired work is consistently
better than work the stronger partner does individually.  It is part of
each partner&#39;s job to understand the whole task; that means asking questions
when necessary and answering them when possible.</FONT></P>
<P><font  >You will choose a different partner for every assignment, so your partners' skill levels are certain to vary from week to week. Still, when you have a choice, you should try to pick a partner whose skill level is close to your own. This won't always be possible, and it's sometimes hard to compare skill levels at all, but we find that pairs are most productive when the partners are at about the same level&mdash;there's a more balanced give-and-take.</font></P>
<P><strong>What happens if you don't &quot;do it right,&quot; according to these guidelines?</strong> You won't learn as much, your scores on the exams will be lower, and so will your grades in this class and others. You may get a low partner evaluation score; too many of those can affect your class participation score. These consequences don't strike you instantly like a bolt of lightning, but they're real nonetheless.</P>
<P>That's so important that it bears repeating. If you're the stronger partner, it is your job to explain what you're doing and help your partner understand. If you're the less strong partner, it's your job to come to the lab prepared (by attending class, reading the assignment, and doing the preparation part) and to ask questions so that you do understand. If you just let your stronger partner take the lead and you follow along passively, or worse yet disengage completely, you will not learn the necessary skills and concepts. You might get a decent score on that assignment, benefiting from your partner's work, but next week you may be the stronger partner, and you won't be ready. Even if you have strong partners all quarter long, you won't do well on the exams if you didn't participate in the labs, and most importantly, you won't know what you need to know in the following courses. You can't just skip a few topics in ICS 31; everything comes up somewhere in a later class. Imagine the feeling (which a few people experience every quarter) of being in a more advanced class, having a solo assignment to do, and not having the skills and knowledge to do it. At that point you can't just &quot;look up&quot; a few facts; you'll be missing critical skills and you'll be pretty much stuck. Don't risk that; stay engaged with your lab work in ICS 31.</P>
<P><strong>What happens if you can't find a partner?</strong> There are plenty of potential partners in every lab section, so it is your responsibility to find a (new) partner to work with every week. The Partner App lists who's still unpartnered. If there's an odd number of students and you happen to be the last unpaired person, see your TA; you may be given permission to work solo, but that's a one-time deal and you'll need to take special care to get a partner for the rest of the assignments. Repeatedly working solo may lead to lower scores. The lab assignments are doable in a week by one person; we use pair programming not to assign harder work but for the benefits in communication, collaboration, and learning that pair programming provides. It's not a tragedy if you miss that for one week, but it is part of the course. What you should <em>not</em> do if you don't have a partner is just attach yourself to some other pair. In rare cases your TA may authorize this, but if you have an unauthorized group, it will look as if you copied each other's work and that could lead to serious trouble. If you're working solo and need help, you have the lab tutors, the TA, the instructor, and Piazza for any questions.</P>
<P><FONT  ><strong>How does this affect my grade? </strong>Participation in pair programming won't be the cause of any low grades. (Failure to participate fully and cooperatively, on the other hand, could be a problem.) On assignments that specify pair programming,
  each pair will submit one solution, marked with both partners&#39; names.
  (For electronic submissions via Checkmate, just one member of the pair
  should submit the solution, which must contain both partners&#39;
  names at the top of the file; also, make sure you inform your TA of your pairings in the first place.)  Each pair will receive
  a single score on the assignment.</FONT></P>
<P>
<FONT  >Also, for each paired assignment, each student
individually will submit a brief partner evaluation form, administered electronically,
which will ask these questions:  Did your partner come to the scheduled meetings on time and ready to work? Did your partner read the assignment and preparatory materials before coming to the scheduled meetings, showing up either with specific questions or ready to contribute? Did your partner cooperatively follow the pair programming model (rotating roles of driver and navigator, questioning and making observations as the navigator)? Did your partner contribute fully, fairly, and actively, to the best of his or her ability, to the completion of the lab assignment? Was your partner's participation professional and cooperative overall?</FONT></P>
<P>
<FONT  >Filling out the evaluation is required of each
student for each assignment; forgetting the evaluation will lower your participation
score. </FONT><FONT  >We will tally these evaluation scores and use them in computing the
participation part of the grade (taking care that nobody&#39;s score is
hurt by a single bad partnership).  <!--We may also give you a small bonus if your partner
does particularly well on the following week&#39;s quiz; we have yet to
work out the details, but this should be an added incentive to master the
material as a team.-->
<!-- -->
</FONT></P>
<P>
<FONT  >It may be instructive to read a selection of
students&#39; <A HREF="http://www.ics.uci.edu/~kay/courses/i41/hw/evalcomments.html">partner evaluation comments</A>
from a previous course; they give a picture of what good partnerships are
like (and a few disasters, too).</FONT></P>
<P>
<FONT  ><strong>Additional information: </strong>Pair programming is one aspect of the 
programming methodology called Agile Development.  A search for &quot;pair programming&quot;
or &quot;agile methodologies&quot; on the Web will yield many references.<B>
</B></FONT></P>
<HR />
<span class="style2"><A HREF="http://www.ics.uci.edu/~kay/">David G. Kay</A>, <A HREF="mailto:kay@uci.edu">kay@uci.edu</A></span><A HREF="mailto:kay@uci.edu"><span class="style2"><br />
</span></A><span class="style1">
<!-- #BeginDate format:fcAm1a -->Monday, September 12, 2016 11:49 AM<!-- #EndDate -->
</span><BR CLEAR=ALL />
</BODY>
</HTML>
