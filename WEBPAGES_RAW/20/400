<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<!-- Page automatically generated from latex_to_html converter. -->
<!-- by cc_extract_html, $Revision: 3.19 $ -->
<!-- LaTeX source file: './Polyhedron_ref/Polyhedron_3_Halfedge.tex' -->
<html> <head>  
<title>Polyhedron_3&lt;Traits&gt;::Halfedge</title>
</head>  
<link href="../latex_to_html.css" rel="STYLESHEET">
<body bgcolor="white">
<!-- ------------------------------------------------------------------- -->


<!-- Top Navigation ---------------------------------------------------- -->
<div class="NavTop">
<hr>
  <strong>Navigation:</strong>
<a href="Chapter_intro.html">Up</a>, 
  <a href="../contents.html">Table of Contents</A>,
  <a href="../biblio.html">Bibliography</a>,
  <a href="../manual_index.html">Index</a>,
  <a href="../title.html">Title Page</a>
<hr><!-- End of Top Navigation ----------------------------------------- -->
</div>


<A NAME="Cross_link_anchor_857"></A>

<A NAME="Cross_link_anchor_858"></A>

      
     
     
     
<A NAME="Index_anchor_838"></A> 

   
<TABLE ALIGN=RIGHT><TR><TD><IMG ALIGN=TOP SRC="cc_Class.gif"></TD></TR></TABLE>


    <A NAME="ccRef_CGAL::Polyhedron_3<Traits>::Halfedge"></A>
<h2><I>CGAL::Polyhedron_3&lt;Traits&gt;::Halfedge</I></h2>
<P>

<H3>Definition</H3>
<P>

Figure&nbsp;
  <A HREF="#figurePolyOptionalMethods"><IMG 
  SRC="cc_ref_up_arrow.gif" ALT="reference arrow" WIDTH="10" HEIGHT="10"></A>

depicts the relationship between a halfedge and its incident
halfedges, vertices, and facets.  A halfedge is an oriented edge
between two vertices. It is always paired with a halfedge pointing in
the <A HREF="../Kernel_23_ref/Function_opposite.html#Cross_link_anchor_243">opposite</A> direction. The <I><A HREF="../Kernel_23_ref/Function_opposite.html#Cross_link_anchor_243">opposite</A>()</I> member function returns
this halfedge of <A HREF="../Kernel_23_ref/Function_opposite.html#Cross_link_anchor_243">opposite</A> <A HREF="../Kernel_23_ref/Function_orientation.html#Cross_link_anchor_247">orientation</A>. If a halfedge is incident to a
facet the <I>next()</I> member function points to the <A HREF="../STL_Extension_ref/Function_successor.html#Cross_link_anchor_1444">successor</A>
halfedge around this facet. For border edges the <I>next()</I> member
function points to the <A HREF="../STL_Extension_ref/Function_successor.html#Cross_link_anchor_1444">successor</A> halfedge along the hole. For more
than two border edges at a vertex, the next halfedge along a hole is
not uniquely defined, but a consistent assignment of the next halfedge
will be maintained in the data structure. An invariant is that
successive assignments of the form <I>h = h-&gt;next()</I> cycle
counterclockwise around the facet (or hole) and traverse all halfedges
incident to this facet (or hole). A similar invariant is that successive
assignments of the form <I>h = h-&gt;next()-&gt;<A HREF="../Kernel_23_ref/Function_opposite.html#Cross_link_anchor_243">opposite</A>()</I> cycle
clockwise around the vertex and traverse all halfedges incident to
this vertex. Two circulators are provided for these circular orders.
<P>

<CENTER>
    <A NAME="figurePolyOptionalMethods">
    <A HREF="fig/poly_optional.gif">
        <img src="fig/poly_optional_small.gif" 
             alt="Class Diagram"></A><BR>

<A HREF="fig/poly_optional.gif">Figure:</A>
    The three classes <I>Vertex</I>, <I>Halfedge</I>, and 
          <I>Facet</I> of the polyhedral surface. Member
          functions with shaded background are mandatory. The others
          are optionally supported.
    </CENTER>
<P>

The incidences encoded in <I><A HREF="../Kernel_23_ref/Function_opposite.html#Cross_link_anchor_243">opposite</A>()</I> and <I>next()</I> are
available for each instantiation of polyhedral surfaces.  The other
incidences are optionally available as indicated with type tags.  The
<I>prev()</I> member function points to the preceding halfedge around
the same facet. It is always available, though it might perform a
search around the facet using the <I>next()</I> member function to find
the previous halfedge if the underlying halfedge data structure does
not provide an efficient <I>prev()</I> member function for halfedges.
Handles to the incident vertex and facet are optionally stored.
<P>

The circulators are assignable to the <I>Halfedge_handle</I>. The
circulators are bidirectional if the halfedge provided to the
polyhedron with the <I>Items</I> template argument provides a member
function <I>prev()</I>, otherwise they are of the forward category.
<P>

<I>#include &lt;<A HREF="../../../include/CGAL/Polyhedron_3.h">CGAL/Polyhedron_3.h</A>&gt;</I>
<P>

<H3>Types</H3>
<P>

<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>
        <I><NOBR>
    <A HREF="Class_Polyhedron_3-Traits---Halfedge.html#Cross_link_anchor_858">Polyhedron_3&lt;Traits&gt;::Halfedge</A>::Vertex
        </I></NOBR>
        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>
    type of incident vertices.
<P>

</TD></TR>
        
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>
        <I><NOBR>
    <A HREF="Class_Polyhedron_3-Traits---Halfedge.html#Cross_link_anchor_858">Polyhedron_3&lt;Traits&gt;::Halfedge</A>::Facet
        </I></NOBR>
        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>
    type of incident facets.
<P>

</TD></TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>
        <I><NOBR>
    <A HREF="Class_Polyhedron_3-Traits---Halfedge.html#Cross_link_anchor_858">Polyhedron_3&lt;Traits&gt;::Halfedge</A>::Vertex_handle
        </I></NOBR>
        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>
    handle to vertex.
<P>

</TD></TR>
        
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>
        <I><NOBR>
    <A HREF="Class_Polyhedron_3-Traits---Halfedge.html#Cross_link_anchor_858">Polyhedron_3&lt;Traits&gt;::Halfedge</A>::Halfedge_handle
        </I></NOBR>
        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>
    handle to halfedge.
<P>

</TD></TR>
        
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>
        <I><NOBR>
    <A HREF="Class_Polyhedron_3-Traits---Halfedge.html#Cross_link_anchor_858">Polyhedron_3&lt;Traits&gt;::Halfedge</A>::Facet_handle
        </I></NOBR>
        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>
    handle to facet.
<P>

</TD></TR>
        
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>
        <I><NOBR>
    <A HREF="Class_Polyhedron_3-Traits---Halfedge.html#Cross_link_anchor_858">Polyhedron_3&lt;Traits&gt;::Halfedge</A>::Halfedge_around_vertex_circulator
        </I></NOBR>
        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>
    circulator of
  halfedges around a vertex.
<P>

</TD></TR>
        
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>
        <I><NOBR>
    <A HREF="Class_Polyhedron_3-Traits---Halfedge.html#Cross_link_anchor_858">Polyhedron_3&lt;Traits&gt;::Halfedge</A>::Halfedge_around_facet_circulator
        </I></NOBR>
        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>
    circulator of
  halfedges around a facet.
<P>

</TD></TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>
        <I><NOBR>
    <A HREF="Class_Polyhedron_3-Traits---Halfedge.html#Cross_link_anchor_858">Polyhedron_3&lt;Traits&gt;::Halfedge</A>::Vertex_const_handle
        </I></NOBR>
        </TD></TR>
<P>


        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>
        <I><NOBR>
    <A HREF="Class_Polyhedron_3-Traits---Halfedge.html#Cross_link_anchor_858">Polyhedron_3&lt;Traits&gt;::Halfedge</A>::Halfedge_const_handle
        </I></NOBR>
        </TD></TR>
<P>


        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>
        <I><NOBR>
    <A HREF="Class_Polyhedron_3-Traits---Halfedge.html#Cross_link_anchor_858">Polyhedron_3&lt;Traits&gt;::Halfedge</A>::Facet_const_handle
        </I></NOBR>
        </TD></TR>
<P>


        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>
        <I><NOBR>
    <A HREF="Class_Polyhedron_3-Traits---Halfedge.html#Cross_link_anchor_858">Polyhedron_3&lt;Traits&gt;::Halfedge</A>::Halfedge_around_vertex_const_circulator
        </I></NOBR>
        </TD></TR>
<P>


        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>
        <I><NOBR>
    <A HREF="Class_Polyhedron_3-Traits---Halfedge.html#Cross_link_anchor_858">Polyhedron_3&lt;Traits&gt;::Halfedge</A>::Halfedge_around_facet_const_circulator
        </I></NOBR>
        </TD></TR>
<P>

<TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>
        <I><NOBR>
    <A HREF="Class_Polyhedron_3-Traits---Halfedge.html#Cross_link_anchor_858">Polyhedron_3&lt;Traits&gt;::Halfedge</A>::Supports_halfedge_prev
        </I></NOBR>
        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>
    <MATH><I> <IMG BORDER=0 WIDTH=11 HEIGHT=9 ALIGN=BOTTOM SRC="cc_equiv.gif"> </I></MATH> <I><A HREF="../Kernel_23_ref/Class_Tag_true.html#Cross_link_anchor_477">CGAL::Tag_true</A></I> or 
  <I><A HREF="../Kernel_23_ref/Class_Tag_false.html#Cross_link_anchor_475">CGAL::Tag_false</A></I>.
<P>

</TD></TR>
        
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>
        <I><NOBR>
    <A HREF="Class_Polyhedron_3-Traits---Halfedge.html#Cross_link_anchor_858">Polyhedron_3&lt;Traits&gt;::Halfedge</A>::Supports_halfedge_vertex
        </I></NOBR>
        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>
    <MATH><I> <IMG BORDER=0 WIDTH=11 HEIGHT=9 ALIGN=BOTTOM SRC="cc_equiv.gif"> </I></MATH>  <I><A HREF="../Kernel_23_ref/Class_Tag_true.html#Cross_link_anchor_477">CGAL::Tag_true</A></I> or 
  <I><A HREF="../Kernel_23_ref/Class_Tag_false.html#Cross_link_anchor_475">CGAL::Tag_false</A></I>.
<P>

</TD></TR>
        
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>
        <I><NOBR>
    <A HREF="Class_Polyhedron_3-Traits---Halfedge.html#Cross_link_anchor_858">Polyhedron_3&lt;Traits&gt;::Halfedge</A>::Supports_halfedge_face
        </I></NOBR>
        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>
    <MATH><I> <IMG BORDER=0 WIDTH=11 HEIGHT=9 ALIGN=BOTTOM SRC="cc_equiv.gif"> </I></MATH>  <I><A HREF="../Kernel_23_ref/Class_Tag_true.html#Cross_link_anchor_477">CGAL::Tag_true</A></I> or 
  <I><A HREF="../Kernel_23_ref/Class_Tag_false.html#Cross_link_anchor_475">CGAL::Tag_false</A></I>.
<P>

</TD></TR>
        </TABLE>
<P>

<H3>Creation</H3>
<P>

<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>
        <I><NOBR>
    <A HREF="Class_Polyhedron_3-Traits---Halfedge.html#Cross_link_anchor_858">Polyhedron_3&lt;Traits&gt;::Halfedge</A> h;
        </I></NOBR>
        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>
    default constructor.
<P>

</TD></TR>
        </TABLE>
<P>

<H3>Operations</H3>
<P>

<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_Halfedge_handle_opposite69;"></A>
Halfedge_handle
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    h.<A HREF="../Kernel_23_ref/Function_opposite.html#Cross_link_anchor_243">opposite</A> () 
        </I></NOBR>
        </TD>
    
        </TR>
        
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>
        <I><NOBR>
    <A NAME="Function_Halfedge_const_handle_opposite69_const;"></A>
Halfedge_const_handle
        </I></NOBR>
        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    h.<A HREF="../Kernel_23_ref/Function_opposite.html#Cross_link_anchor_243">opposite</A> () const
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    the <A HREF="../Kernel_23_ref/Function_opposite.html#Cross_link_anchor_243">opposite</A> halfedge.
        </TD></TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_Halfedge_handle_next69;"></A>
Halfedge_handle
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    h.next () 
        </I></NOBR>
        </TD>
    
        </TR>
        
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>
        <I><NOBR>
    <A NAME="Function_Halfedge_const_handle_next69_const;"></A>
Halfedge_const_handle
        </I></NOBR>
        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    h.next () const
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    the next halfedge around the facet.
        </TD></TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_Halfedge_handle_prev69;"></A>
Halfedge_handle
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    h.prev () 
        </I></NOBR>
        </TD>
    
        </TR>
        
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>
        <I><NOBR>
    <A NAME="Function_Halfedge_const_handle_prev69_const;"></A>
Halfedge_const_handle
        </I></NOBR>
        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    h.prev () const
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    the previous halfedge around the facet.
        </TD></TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_Halfedge_handle_next_on_vertex69;"></A>
Halfedge_handle
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    h.next_on_vertex () 
        </I></NOBR>
        
    
        </TR>
        
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>
        <I><NOBR>
    <A NAME="Function_Halfedge_const_handle_next_on_vertex69_const;"></A>
Halfedge_const_handle
        </I></NOBR>
        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    h.next_on_vertex () const
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    the next halfedge around the vertex (clockwise). Is equal
    to <I>h.next()-&gt;<A HREF="../Kernel_23_ref/Function_opposite.html#Cross_link_anchor_243">opposite</A>()</I>.
        </TD></TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_Halfedge_handle_prev_on_vertex69;"></A>
Halfedge_handle
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    h.prev_on_vertex () 
        </I></NOBR>
        
    
        </TR>
        
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>
        <I><NOBR>
    <A NAME="Function_Halfedge_const_handle_prev_on_vertex69_const;"></A>
Halfedge_const_handle
        </I></NOBR>
        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    h.prev_on_vertex () const
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    the previous halfedge around the vertex (counterclockwise). 
    Is equal to <I>h.<A HREF="../Kernel_23_ref/Function_opposite.html#Cross_link_anchor_243">opposite</A>()-&gt;prev()</I>.
        </TD></TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_bool_is_border69_const;"></A>
bool
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    h.is_border () const
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    is true if <I>h</I> is a border halfedge.
        </TD></TR>
        
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_bool_is_border_edge69_const;"></A>
bool
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    h.is_border_edge () const
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    is true if <I>h</I> or <I>h.<A HREF="../Kernel_23_ref/Function_opposite.html#Cross_link_anchor_243">opposite</A>()</I> is a border halfedge.
        </TD></TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>
        <I><NOBR>
    <A NAME="Function_Halfedge_around_vertex_circulator_vertex_begin69;"></A>
Halfedge_around_vertex_circulator
        </I></NOBR>
        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    h.vertex_begin () 
        </I></NOBR>
        </TD>
    
        </TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>
        <I><NOBR>
    <A NAME="Function_Halfedge_around_vertex_const_circulator_vertex_begin69_const;"></A>
Halfedge_around_vertex_const_circulator
        </I></NOBR>
        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    h.vertex_begin () const
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    circulator of halfedges around the vertex (clockwise).
        </TD></TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>
        <I><NOBR>
    <A NAME="Function_Halfedge_around_facet_circulator_facet_begin69;"></A>
Halfedge_around_facet_circulator
        </I></NOBR>
        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    h.facet_begin () 
        </I></NOBR>
        </TD>
    
        </TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>
        <I><NOBR>
    <A NAME="Function_Halfedge_around_facet_const_circulator_facet_begin69_const;"></A>
Halfedge_around_facet_const_circulator
        </I></NOBR>
        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    h.facet_begin () const
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    circulator of halfedges around the facet (counterclockwise).
        </TD></TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_std::size_t_vertex_degree69_const;"></A>
std::size_t
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    h.vertex_degree () const
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    the degree of the 
  incident vertex, i.e., number of edges emanating from this vertex.
        </TD></TR>
        
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_bool_is_bivalent69_const;"></A>
bool
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    h.is_bivalent () const
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    returns <I>true</I> if the
  incident vertex has exactly two incident edges.
        </TD></TR>
        
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_bool_is_trivalent69_const;"></A>
bool
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    h.is_trivalent () const
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    returns <I>true</I> if the
  incident vertex has exactly three incident edges.
        </TD></TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_std::size_t_facet_degree69_const;"></A>
std::size_t
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    h.facet_degree () const
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    the degree of the
  incident facet, i.e., number of edges on the boundary of this facet.
        </TD></TR>
        
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_bool_is_triangle69_const;"></A>
bool
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    h.is_triangle () const
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    returns <I>true</I> if the 
  incident facet is a triangle.
        </TD></TR>
        
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_bool_is_quad69_const;"></A>
bool
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    h.is_quad () const
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    returns <I>true</I> if the 
  incident facet is a quadrilateral.
        </TD></TR>
        </TABLE>
<P>

<H3>Operations available if <I>Supports_halfedge_vertex</I> <MATH><I> <IMG BORDER=0 WIDTH=11 HEIGHT=9 ALIGN=BOTTOM SRC="cc_equiv.gif"> </I></MATH> 
           <I>CGAL::Tag_true</I></H3>
<P>

<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_Vertex_handle_vertex69;"></A>
Vertex_handle
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    h.vertex () 
        </I></NOBR>
        </TD>
    
        </TR>
        
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>
        <I><NOBR>
    <A NAME="Function_Vertex_const_handle_vertex69_const;"></A>
Vertex_const_handle
        </I></NOBR>
        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    h.vertex () const
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    the incident vertex of <I>h</I>.
        </TD></TR>
        </TABLE>
<P>

<H3>Operations available if <I>Supports_halfedge_facet</I> <MATH><I> <IMG BORDER=0 WIDTH=11 HEIGHT=9 ALIGN=BOTTOM SRC="cc_equiv.gif"> </I></MATH> 
           <I>CGAL::Tag_true</I></H3>
<P>

<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_Facet_handle_facet69;"></A>
Facet_handle
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    h.facet () 
        </I></NOBR>
        </TD>
    
        </TR>
        
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_Facet_const_handle_facet69_const;"></A>
Facet_const_handle
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    h.facet () const
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    the incident facet of <I>h</I>.  If <I>h</I> is a border halfedge 
      the result is default construction of the handle.
        </TD></TR>
        </TABLE>
<P>

<H3>See Also</H3>
<P>

<I><A HREF="Class_Polyhedron_3-Traits---Vertex.html#Cross_link_anchor_859">CGAL::Polyhedron_3&lt;Traits&gt;::Vertex</A></I><BR>

<I><A HREF="Class_Polyhedron_3-Traits---Facet.html#Cross_link_anchor_855">CGAL::Polyhedron_3&lt;Traits&gt;::Facet</A></I><BR>

<I><A HREF="Class_Polyhedron_3.html#Cross_link_anchor_853">CGAL::Polyhedron_3</A>&lt;Traits&gt;</I>
<P>

<H3>Implementation</H3>
<P>

The member functions <I>prev()</I> and <I>prev_on_vertex()</I> work in
constant time if <I>Supports_halfedge_prev</I> <MATH><I> <IMG BORDER=0 WIDTH=11 HEIGHT=9 ALIGN=BOTTOM SRC="cc_equiv.gif"> </I></MATH>
<I><A HREF="../Kernel_23_ref/Class_Tag_true.html#Cross_link_anchor_477">CGAL::Tag_true</A></I>. Otherwise both methods search for the previous
halfedge around the incident facet.
<P>

<div class="NavNext"><hr> <b>Next:</b> <a href="Class_Polyhedron_3-Traits---Vertex.html"><I>Polyhedron_3&lt;Traits&gt;::Vertex</I></a> 


    
<div class="NavBottom">
<hr><!-- Bottom Navigation --------------------------------------------- -->
  <strong>Navigation:</strong>
<!Up_chapter_link_28!>
  <a href="../contents.html">Table of Contents</A>,
  <a href="../biblio.html">Bibliography</a>,
  <a href="../manual_index.html">Index</a>,
  <a href="../title.html">Title Page</a>
<!-- End of Bottom Navigation ------------------------------------------ -->


<hr><!-- --------------------------------------------------------------- -->
<div class="NavAddress">

The <A HREF=http://www.cgal.org>CGAL Project</A> .

Tue, December 21, 2004 .
<hr></div>
</body>  </html>  
