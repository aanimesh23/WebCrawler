<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 3.2//EN">
<html>
<head>
<title>Theory Seminar, 9 May 1997</title>
</head>
<body>
<a href="/~theory/"><img src="/~theory/logo/shortTheory.gif" width= 
"521" height="82" border="0" alt="ICS Theory Group"></a> 

<h1>ICS 269, Spring 1997: Theory Seminar</h1>

<hr>
<h2>9 May 1997:<br>
Randomization in Online Computation<br>
Final Public Oral Dissertation Defense<br>
<a href="http://www.ics.uci.edu/~sseiden/">Steve Seiden</a>, ICS,
UC Irvine</h2>

<p>We study the use of randomization to improve the performance of
online algorithms. Two problems are examined.</p>

<p>First we study the metrical task system problem of Borodin,
Linial, and Saks. For this problem, these authors give a
deterministic (2<i>n</i>&nbsp;-&nbsp;1)-competitive algorithm.
Using a technique we call thresholding, we design a randomized
algorithm which is
(<i>e</i>/(<i>e</i>&nbsp;-&nbsp;1)<i>n</i>&nbsp;-&nbsp;1/(<i>e</i>&nbsp;-&nbsp;1)&nbsp;<u>
~</u>&nbsp;1.5820<i>n</i>&nbsp;-&nbsp;0.5820)-competitive. For
uniform task systems, Borodin, Linial, and Saks present an
algorithm which is 2<i>H</i><sub><i>n</i></sub>-competitive, and
show a lower bound of <i>H</i><sub><i>n</i></sub>. Again using
thresholding, we design a randomized algorithm which is
(<i>H</i><sub><i>n</i></sub>/ln&nbsp;2&nbsp;<u>
~</u>&nbsp;1.4427<i>H</i><sub><i>n</i></sub>&nbsp;+&nbsp;1)-competitive.
Using a different technique we design an algorithm which is
(<i>H</i><sub><i>n</i></sub>&nbsp;+&nbsp;O(sqrt&nbsp;log&nbsp;<i>
n</i>))-competitive.</p>

<p>The second problem studied is online multiprocessor scheduling.
The problem of scheduling independent jobs on <i>m</i> machines
originates with Graham. While the deterministic case of this
problem has been studied extensively, little work has been done on
the randomized case. For <i>m</i>&nbsp;=&nbsp;2 a randomized
4/3-competitive algorithm was found by Bartal, Fiat, Karloff and
Vohra. A randomized algorithm for <i>m</i>&nbsp;<u>&gt;</u>&nbsp;3
is presented. It achieves competitive ratios of 1.55665, 1.65888,
1.73376, 1.78295 and 1.81681, for <i>m</i>&nbsp;=&nbsp;3, 4, 5, 6,
7 respectively. These competitive ratios are less than the best
deterministic lower bound for <i>m</i>&nbsp;=&nbsp;3, 4, 5 and less
than the best known deterministic competitive ratio for <i>
m</i>&nbsp;=&nbsp;3, 4, 5, 6, 7. Two models of multiprocessor
scheduling with rejection are studied. The first is the model of
Bartal, Leonardi, Marchetti-Spaccamela, Sgall and Stougie. Two
randomized algorithms for this model are presented. The first
algorithm performs well for small <i>m</i>, achieving competitive
ratios of 3/2,
(7&nbsp;+&nbsp;sqrt&nbsp;129)/10&nbsp;&lt;&nbsp;1.83579,
(5&nbsp;+&nbsp;2&nbsp;sqrt&nbsp;22)/7&nbsp;&lt;&nbsp;2.05441 for
<i>m</i>&nbsp;=&nbsp;2,3,4, respectively. The second algorithm
outperforms the first for <i>m</i>&nbsp;<u>&gt;</u>&nbsp;5. It
beats the deterministic algorithm of Bartal <i>et al.</i> for all
<i>m</i>&nbsp;=&nbsp;5,&nbsp;...&nbsp;1000. It is conjectured that
this is true for all <i>m</i>. The second model differs in that
preemption is allowed. For this model, randomized algorithms are
presented which outperform the best deterministic algorithm for
small&nbsp;<i>m</i>.</p>
</body>
</html>

