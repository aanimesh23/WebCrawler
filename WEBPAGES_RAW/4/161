<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
  <title>Dr. Rina Dechter @ UCI</title>
  <link rel="Stylesheet" href="/%7Edechter/basic.css">
</head>
<body alink="#00aaaa" bgcolor="#ffffff" link="#008080" vlink="#008080">
<!-- Begin Header --><!--#include virtual="/~dechter/header.html" --><!-- End Header --><!-- Begin Body --><!--#include file="pubs-nav.html"--> 
<center>
<table border="0" cellpadding="0" cellspacing="0" width="80%">
  <tbody>
    <tr valign="top">
      <td><b>R200</b></td>
|<br>
      <br>
      </td>
    </tr>
    <tr>
      <td colspan="2">
      <div class="title"><span style="font-weight: bold;">
              Semiring-Based Mini-Bucket Partitioning Scheme
      </span></div>
      <span style="font-weight: bold;">
      Emma Rollon, Javier Larrosa and Rina Dechter
      </span><br>
      <tt></tt></td>
    </tr>
  </tbody>
</table>
<table border="0" cellpadding="0" cellspacing="0" width="80%">
  <tbody>
    <tr>
      <td><br>
      <div class="abstract"><b>Abstract</b><br>
    	  <div style="text-align: justify;">
              Graphical models are one of the most prominent frameworks to model complex systems and efficiently query them. Their underlying algebraic properties are captured by a valuation structure that, most usually, is a semiring. Depending on the semiring of choice, we can capture probabilistic models, constraint networks, cost networks, etc. In this paper we address the partitioning problem which occurs in many approximation techniques such as mini-bucket elimination and join-graph propagation algorithms. Roghly speaking, subject to complexity bounds, the algorithm needs to find a partition of a set of factors such that best approximates the whole set. While this problem has been addressed in the past in a particular case, we present here a general description. Furthermore, we also propose a general partitioning scheme. Our proposal is general in the sense that it is presented in terms of a generic semiring with the only additional requirements of a division operation and a
refinement of its order. The proposed algorithm instantiates to the particular task of computing the probability of evidence, but also applies directly to other important reasoning tasks. We demonstrate its good empirical behaviour on the problem of computing the most probable explanation.

</div>
      </div>
      <br>
      <a target="blank" href="r200.pdf">
      <b>[pdf]</b></a>
      </td>
    </tr>
  </tbody>
</table>
</center>
<br>
<!-- End Body-->
<!--- Begin Footer --><!--#include virtual="/~dechter/footer.html" --><!--- End Footer -->
</body>
</html>
