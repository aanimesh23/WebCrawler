<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN">
<html>
<head>
<title>Theory Seminar, March 4, 2016</title>
<link rel="stylesheet" href="../stylesheet.css" type="text/css">
<meta name="viewport" content="width=device-width, initial-scale=1">
<script type="text/x-mathjax-config">
MathJax.Hub.Config({
  tex2jax: {inlineMath: [['$','$'], ['\\(','\\)']]}
});
</script>
<script type="text/javascript" src="//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML">
</script>
<meta name="viewport" content="width=device-width, initial-scale=1">
</head>

<body>
<p><a href="/~theory/"><img src="/~theory/logo/CATOC2.jpg" 
alt="ICS Theory Group"></a></p>

<h2><a href="/~theory/269/">Winter 2016: Theory Seminar</a><br>
ICS, Room 243, 1:00pm</h2>

<hr>

<h2>March 4, 2016:</h2>
<h1>
Probabilistic Mutually Exclusive Task Sequencing, with Applications to
Online Advertising
</h1>
<h2>
Dmitri Arkhipov
</h2>

<p>One by one solicitation (OBOS) is one of two dominant strategies for
filling ad space in Web content on-demand. In OBOS an ad network
sequentially solicits applicable in-network advertisers in some
order. Each ad space should fill in no more than 200ms, but both whether
a solicitation is successful, and the magnitude of the round trip
network delay of the solicitation are random variables. We study the
problem of determining an optimal order of solicitation.</p>

<p>We present a dynamic programming (DP) formulation of the problem
solvable in time exponential in the number of applicable
advertisers. For larger instances we describe an approximate DP (ADP)
formulation based on the real time dynamic programming (RTDP)
technique. We compare both the DP and ADP to a greedy randomized
adaptive search procedure (GRASP) local search.</p>

<p>Our ADP formulation requires as a subroutine a tractable algorithm
for calculating an upper bound value for our problem. We present a
relaxation of our original problem; the solution of our relaxed problem
is an upper bound for our original problem. We present a
pseudo-polynomial time solution algorithm for our relaxed problem.</p>

<p>(Joint work with John Turner, Michael Dillencourt, and Amelia Regan.)</p>

</body>
</html>

