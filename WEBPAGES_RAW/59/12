<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns:m="http://schemas.microsoft.com/office/2004/12/omml"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 14">
<meta name=Originator content="Microsoft Word 14">
<link rel=File-List href="bloat_files/filelist.xml">
<link rel=Edit-Time-Data href="bloat_files/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Program Analyses for Bloat Detection and Optimization</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>harrygxu</o:Author>
  <o:LastAuthor>harrygxu</o:LastAuthor>
  <o:Revision>29</o:Revision>
  <o:TotalTime>278</o:TotalTime>
  <o:Created>2014-07-25T18:45:00Z</o:Created>
  <o:LastSaved>2016-11-22T01:41:00Z</o:LastSaved>
  <o:Pages>2</o:Pages>
  <o:Words>2048</o:Words>
  <o:Characters>14133</o:Characters>
  <o:Lines>256</o:Lines>
  <o:Paragraphs>126</o:Paragraphs>
  <o:CharactersWithSpaces>16055</o:CharactersWithSpaces>
  <o:Version>14.00</o:Version>
 </o:DocumentProperties>
 <o:OfficeDocumentSettings>
  <o:AllowPNG/>
 </o:OfficeDocumentSettings>
</xml><![endif]-->
<link rel=themeData href="bloat_files/themedata.thmx">
<link rel=colorSchemeMapping href="bloat_files/colorschememapping.xml">
<!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:Zoom>91</w:Zoom>
  <w:SpellingState>Clean</w:SpellingState>
  <w:GrammarState>Clean</w:GrammarState>
  <w:TrackMoves>false</w:TrackMoves>
  <w:TrackFormatting/>
  <w:ValidateAgainstSchemas/>
  <w:SaveIfXMLInvalid>false</w:SaveIfXMLInvalid>
  <w:IgnoreMixedContent>false</w:IgnoreMixedContent>
  <w:AlwaysShowPlaceholderText>false</w:AlwaysShowPlaceholderText>
  <w:DoNotPromoteQF/>
  <w:LidThemeOther>EN-US</w:LidThemeOther>
  <w:LidThemeAsian>X-NONE</w:LidThemeAsian>
  <w:LidThemeComplexScript>X-NONE</w:LidThemeComplexScript>
  <w:Compatibility>
   <w:BreakWrappedTables/>
   <w:SplitPgBreakAndParaMark/>
   <w:UseFELayout/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
  <m:mathPr>
   <m:mathFont m:val="Cambria Math"/>
   <m:brkBin m:val="before"/>
   <m:brkBinSub m:val="&#45;-"/>
   <m:smallFrac m:val="off"/>
   <m:dispDef/>
   <m:lMargin m:val="0"/>
   <m:rMargin m:val="0"/>
   <m:defJc m:val="centerGroup"/>
   <m:wrapIndent m:val="1440"/>
   <m:intLim m:val="subSup"/>
   <m:naryLim m:val="undOvr"/>
  </m:mathPr></w:WordDocument>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:LatentStyles DefLockedState="false" DefUnhideWhenUsed="true"
  DefSemiHidden="true" DefQFormat="false" DefPriority="99"
  LatentStyleCount="267">
  <w:LsdException Locked="false" Priority="0" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Normal"/>
  <w:LsdException Locked="false" Priority="9" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="heading 1"/>
  <w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 2"/>
  <w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 3"/>
  <w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 4"/>
  <w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 5"/>
  <w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 6"/>
  <w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 7"/>
  <w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 8"/>
  <w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 9"/>
  <w:LsdException Locked="false" Priority="39" Name="toc 1"/>
  <w:LsdException Locked="false" Priority="39" Name="toc 2"/>
  <w:LsdException Locked="false" Priority="39" Name="toc 3"/>
  <w:LsdException Locked="false" Priority="39" Name="toc 4"/>
  <w:LsdException Locked="false" Priority="39" Name="toc 5"/>
  <w:LsdException Locked="false" Priority="39" Name="toc 6"/>
  <w:LsdException Locked="false" Priority="39" Name="toc 7"/>
  <w:LsdException Locked="false" Priority="39" Name="toc 8"/>
  <w:LsdException Locked="false" Priority="39" Name="toc 9"/>
  <w:LsdException Locked="false" Priority="35" QFormat="true" Name="caption"/>
  <w:LsdException Locked="false" Priority="10" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Title"/>
  <w:LsdException Locked="false" Priority="1" Name="Default Paragraph Font"/>
  <w:LsdException Locked="false" Priority="11" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Subtitle"/>
  <w:LsdException Locked="false" Priority="22" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Strong"/>
  <w:LsdException Locked="false" Priority="20" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Emphasis"/>
  <w:LsdException Locked="false" Priority="59" SemiHidden="false"
   UnhideWhenUsed="false" Name="Table Grid"/>
  <w:LsdException Locked="false" UnhideWhenUsed="false" Name="Placeholder Text"/>
  <w:LsdException Locked="false" Priority="1" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="No Spacing"/>
  <w:LsdException Locked="false" Priority="60" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Shading"/>
  <w:LsdException Locked="false" Priority="61" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light List"/>
  <w:LsdException Locked="false" Priority="62" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Grid"/>
  <w:LsdException Locked="false" Priority="63" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 1"/>
  <w:LsdException Locked="false" Priority="64" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 2"/>
  <w:LsdException Locked="false" Priority="65" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 1"/>
  <w:LsdException Locked="false" Priority="66" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 2"/>
  <w:LsdException Locked="false" Priority="67" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 1"/>
  <w:LsdException Locked="false" Priority="68" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 2"/>
  <w:LsdException Locked="false" Priority="69" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 3"/>
  <w:LsdException Locked="false" Priority="70" SemiHidden="false"
   UnhideWhenUsed="false" Name="Dark List"/>
  <w:LsdException Locked="false" Priority="71" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Shading"/>
  <w:LsdException Locked="false" Priority="72" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful List"/>
  <w:LsdException Locked="false" Priority="73" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Grid"/>
  <w:LsdException Locked="false" Priority="60" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Shading Accent 1"/>
  <w:LsdException Locked="false" Priority="61" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light List Accent 1"/>
  <w:LsdException Locked="false" Priority="62" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Grid Accent 1"/>
  <w:LsdException Locked="false" Priority="63" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 1 Accent 1"/>
  <w:LsdException Locked="false" Priority="64" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 2 Accent 1"/>
  <w:LsdException Locked="false" Priority="65" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 1 Accent 1"/>
  <w:LsdException Locked="false" UnhideWhenUsed="false" Name="Revision"/>
  <w:LsdException Locked="false" Priority="34" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="List Paragraph"/>
  <w:LsdException Locked="false" Priority="29" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Quote"/>
  <w:LsdException Locked="false" Priority="30" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Intense Quote"/>
  <w:LsdException Locked="false" Priority="66" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 2 Accent 1"/>
  <w:LsdException Locked="false" Priority="67" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 1 Accent 1"/>
  <w:LsdException Locked="false" Priority="68" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 2 Accent 1"/>
  <w:LsdException Locked="false" Priority="69" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 3 Accent 1"/>
  <w:LsdException Locked="false" Priority="70" SemiHidden="false"
   UnhideWhenUsed="false" Name="Dark List Accent 1"/>
  <w:LsdException Locked="false" Priority="71" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Shading Accent 1"/>
  <w:LsdException Locked="false" Priority="72" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful List Accent 1"/>
  <w:LsdException Locked="false" Priority="73" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Grid Accent 1"/>
  <w:LsdException Locked="false" Priority="60" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Shading Accent 2"/>
  <w:LsdException Locked="false" Priority="61" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light List Accent 2"/>
  <w:LsdException Locked="false" Priority="62" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Grid Accent 2"/>
  <w:LsdException Locked="false" Priority="63" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 1 Accent 2"/>
  <w:LsdException Locked="false" Priority="64" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 2 Accent 2"/>
  <w:LsdException Locked="false" Priority="65" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 1 Accent 2"/>
  <w:LsdException Locked="false" Priority="66" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 2 Accent 2"/>
  <w:LsdException Locked="false" Priority="67" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 1 Accent 2"/>
  <w:LsdException Locked="false" Priority="68" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 2 Accent 2"/>
  <w:LsdException Locked="false" Priority="69" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 3 Accent 2"/>
  <w:LsdException Locked="false" Priority="70" SemiHidden="false"
   UnhideWhenUsed="false" Name="Dark List Accent 2"/>
  <w:LsdException Locked="false" Priority="71" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Shading Accent 2"/>
  <w:LsdException Locked="false" Priority="72" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful List Accent 2"/>
  <w:LsdException Locked="false" Priority="73" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Grid Accent 2"/>
  <w:LsdException Locked="false" Priority="60" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Shading Accent 3"/>
  <w:LsdException Locked="false" Priority="61" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light List Accent 3"/>
  <w:LsdException Locked="false" Priority="62" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Grid Accent 3"/>
  <w:LsdException Locked="false" Priority="63" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 1 Accent 3"/>
  <w:LsdException Locked="false" Priority="64" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 2 Accent 3"/>
  <w:LsdException Locked="false" Priority="65" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 1 Accent 3"/>
  <w:LsdException Locked="false" Priority="66" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 2 Accent 3"/>
  <w:LsdException Locked="false" Priority="67" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 1 Accent 3"/>
  <w:LsdException Locked="false" Priority="68" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 2 Accent 3"/>
  <w:LsdException Locked="false" Priority="69" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 3 Accent 3"/>
  <w:LsdException Locked="false" Priority="70" SemiHidden="false"
   UnhideWhenUsed="false" Name="Dark List Accent 3"/>
  <w:LsdException Locked="false" Priority="71" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Shading Accent 3"/>
  <w:LsdException Locked="false" Priority="72" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful List Accent 3"/>
  <w:LsdException Locked="false" Priority="73" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Grid Accent 3"/>
  <w:LsdException Locked="false" Priority="60" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Shading Accent 4"/>
  <w:LsdException Locked="false" Priority="61" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light List Accent 4"/>
  <w:LsdException Locked="false" Priority="62" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Grid Accent 4"/>
  <w:LsdException Locked="false" Priority="63" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 1 Accent 4"/>
  <w:LsdException Locked="false" Priority="64" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 2 Accent 4"/>
  <w:LsdException Locked="false" Priority="65" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 1 Accent 4"/>
  <w:LsdException Locked="false" Priority="66" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 2 Accent 4"/>
  <w:LsdException Locked="false" Priority="67" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 1 Accent 4"/>
  <w:LsdException Locked="false" Priority="68" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 2 Accent 4"/>
  <w:LsdException Locked="false" Priority="69" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 3 Accent 4"/>
  <w:LsdException Locked="false" Priority="70" SemiHidden="false"
   UnhideWhenUsed="false" Name="Dark List Accent 4"/>
  <w:LsdException Locked="false" Priority="71" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Shading Accent 4"/>
  <w:LsdException Locked="false" Priority="72" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful List Accent 4"/>
  <w:LsdException Locked="false" Priority="73" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Grid Accent 4"/>
  <w:LsdException Locked="false" Priority="60" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Shading Accent 5"/>
  <w:LsdException Locked="false" Priority="61" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light List Accent 5"/>
  <w:LsdException Locked="false" Priority="62" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Grid Accent 5"/>
  <w:LsdException Locked="false" Priority="63" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 1 Accent 5"/>
  <w:LsdException Locked="false" Priority="64" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 2 Accent 5"/>
  <w:LsdException Locked="false" Priority="65" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 1 Accent 5"/>
  <w:LsdException Locked="false" Priority="66" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 2 Accent 5"/>
  <w:LsdException Locked="false" Priority="67" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 1 Accent 5"/>
  <w:LsdException Locked="false" Priority="68" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 2 Accent 5"/>
  <w:LsdException Locked="false" Priority="69" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 3 Accent 5"/>
  <w:LsdException Locked="false" Priority="70" SemiHidden="false"
   UnhideWhenUsed="false" Name="Dark List Accent 5"/>
  <w:LsdException Locked="false" Priority="71" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Shading Accent 5"/>
  <w:LsdException Locked="false" Priority="72" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful List Accent 5"/>
  <w:LsdException Locked="false" Priority="73" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Grid Accent 5"/>
  <w:LsdException Locked="false" Priority="60" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Shading Accent 6"/>
  <w:LsdException Locked="false" Priority="61" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light List Accent 6"/>
  <w:LsdException Locked="false" Priority="62" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Grid Accent 6"/>
  <w:LsdException Locked="false" Priority="63" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 1 Accent 6"/>
  <w:LsdException Locked="false" Priority="64" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 2 Accent 6"/>
  <w:LsdException Locked="false" Priority="65" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 1 Accent 6"/>
  <w:LsdException Locked="false" Priority="66" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 2 Accent 6"/>
  <w:LsdException Locked="false" Priority="67" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 1 Accent 6"/>
  <w:LsdException Locked="false" Priority="68" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 2 Accent 6"/>
  <w:LsdException Locked="false" Priority="69" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 3 Accent 6"/>
  <w:LsdException Locked="false" Priority="70" SemiHidden="false"
   UnhideWhenUsed="false" Name="Dark List Accent 6"/>
  <w:LsdException Locked="false" Priority="71" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Shading Accent 6"/>
  <w:LsdException Locked="false" Priority="72" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful List Accent 6"/>
  <w:LsdException Locked="false" Priority="73" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Grid Accent 6"/>
  <w:LsdException Locked="false" Priority="19" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Subtle Emphasis"/>
  <w:LsdException Locked="false" Priority="21" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Intense Emphasis"/>
  <w:LsdException Locked="false" Priority="31" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Subtle Reference"/>
  <w:LsdException Locked="false" Priority="32" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Intense Reference"/>
  <w:LsdException Locked="false" Priority="33" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Book Title"/>
  <w:LsdException Locked="false" Priority="37" Name="Bibliography"/>
  <w:LsdException Locked="false" Priority="39" QFormat="true" Name="TOC Heading"/>
 </w:LatentStyles>
</xml><![endif]-->
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Courier;
	panose-1:2 7 4 9 2 2 5 2 4 4;
	mso-font-alt:"Courier New";
	mso-font-charset:0;
	mso-generic-font-family:modern;
	mso-font-format:other;
	mso-font-pitch:fixed;
	mso-font-signature:3 0 0 0 1 0;}
@font-face
	{font-family:Wingdings;
	panose-1:5 0 0 0 0 0 0 0 0 0;
	mso-font-charset:2;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:0 268435456 0 0 -2147483648 0;}
@font-face
	{font-family:SimSun;
	panose-1:2 1 6 0 3 1 1 1 1 1;
	mso-font-alt:\5B8B\4F53;
	mso-font-charset:134;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:3 680460288 22 0 262145 0;}
@font-face
	{font-family:"Cambria Math";
	panose-1:2 4 5 3 5 4 6 3 2 4;
	mso-font-charset:0;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:-536870145 1107305727 0 0 415 0;}
@font-face
	{font-family:Tahoma;
	panose-1:2 11 6 4 3 5 4 4 2 4;
	mso-font-charset:0;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:-520081665 -1073717157 41 0 66047 0;}
@font-face
	{font-family:"\@SimSun";
	panose-1:2 1 6 0 3 1 1 1 1 1;
	mso-font-charset:134;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:3 680460288 22 0 262145 0;}
@font-face
	{font-family:"Times New Roman \; color\:black";
	panose-1:0 0 0 0 0 0 0 0 0 0;
	mso-font-charset:0;
	mso-generic-font-family:roman;
	mso-font-format:other;
	mso-font-pitch:auto;
	mso-font-signature:0 0 0 0 0 0;}
@font-face
	{font-family:Times-Roman;
	panose-1:0 0 0 0 0 0 0 0 0 0;
	mso-font-charset:0;
	mso-generic-font-family:roman;
	mso-font-format:other;
	mso-font-pitch:auto;
	mso-font-signature:3 0 0 0 1 0;}
@font-face
	{font-family:Times-Italic;
	panose-1:0 0 0 0 0 0 0 0 0 0;
	mso-font-charset:0;
	mso-generic-font-family:roman;
	mso-font-format:other;
	mso-font-pitch:auto;
	mso-font-signature:3 0 0 0 1 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-parent:"";
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman","serif";
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;}
h1
	{mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-link:"Heading 1 Char";
	mso-margin-top-alt:auto;
	margin-right:0in;
	mso-margin-bottom-alt:auto;
	margin-left:0in;
	mso-pagination:widow-orphan;
	mso-outline-level:1;
	font-size:24.0pt;
	font-family:"Times New Roman","serif";
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;}
a:link, span.MsoHyperlink
	{mso-style-priority:99;
	color:blue;
	text-decoration:underline;
	text-underline:single;}
a:visited, span.MsoHyperlinkFollowed
	{mso-style-noshow:yes;
	mso-style-priority:99;
	color:purple;
	text-decoration:underline;
	text-underline:single;}
p.MsoAcetate, li.MsoAcetate, div.MsoAcetate
	{mso-style-noshow:yes;
	mso-style-priority:99;
	mso-style-link:"Balloon Text Char";
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:8.0pt;
	font-family:"Tahoma","sans-serif";
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;}
p.MsoListParagraph, li.MsoListParagraph, div.MsoListParagraph
	{mso-style-priority:34;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:.5in;
	margin-bottom:.0001pt;
	mso-add-space:auto;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman","serif";
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;}
p.MsoListParagraphCxSpFirst, li.MsoListParagraphCxSpFirst, div.MsoListParagraphCxSpFirst
	{mso-style-priority:34;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-type:export-only;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:.5in;
	margin-bottom:.0001pt;
	mso-add-space:auto;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman","serif";
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;}
p.MsoListParagraphCxSpMiddle, li.MsoListParagraphCxSpMiddle, div.MsoListParagraphCxSpMiddle
	{mso-style-priority:34;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-type:export-only;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:.5in;
	margin-bottom:.0001pt;
	mso-add-space:auto;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman","serif";
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;}
p.MsoListParagraphCxSpLast, li.MsoListParagraphCxSpLast, div.MsoListParagraphCxSpLast
	{mso-style-priority:34;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-type:export-only;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:.5in;
	margin-bottom:.0001pt;
	mso-add-space:auto;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman","serif";
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;}
span.Heading1Char
	{mso-style-name:"Heading 1 Char";
	mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Heading 1";
	mso-ansi-font-size:14.0pt;
	mso-bidi-font-size:14.0pt;
	font-family:"Cambria","serif";
	mso-ascii-font-family:Cambria;
	mso-ascii-theme-font:major-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:Cambria;
	mso-hansi-theme-font:major-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#365F91;
	mso-themecolor:accent1;
	mso-themeshade:191;
	font-weight:bold;}
span.BalloonTextChar
	{mso-style-name:"Balloon Text Char";
	mso-style-noshow:yes;
	mso-style-priority:99;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Balloon Text";
	mso-ansi-font-size:8.0pt;
	mso-bidi-font-size:8.0pt;
	font-family:"Tahoma","sans-serif";
	mso-ascii-font-family:Tahoma;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;
	mso-hansi-font-family:Tahoma;
	mso-bidi-font-family:Tahoma;}
span.SpellE
	{mso-style-name:"";
	mso-spl-e:yes;}
span.GramE
	{mso-style-name:"";
	mso-gram-e:yes;}
.MsoChpDefault
	{mso-style-type:export-only;
	mso-default-props:yes;
	font-size:10.0pt;
	mso-ansi-font-size:10.0pt;
	mso-bidi-font-size:10.0pt;
	mso-fareast-font-family:SimSun;}
@page WordSection1
	{size:8.5in 11.0in;
	margin:1.0in 1.0in 1.0in 1.0in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.WordSection1
	{page:WordSection1;}
 /* List Definitions */
 @list l0
	{mso-list-id:1530991976;
	mso-list-type:hybrid;
	mso-list-template-ids:1773672824 67698691 67698691 67698693 67698689 67698691 67698693 67698689 67698691 67698693;}
@list l0:level1
	{mso-level-number-format:bullet;
	mso-level-text:o;
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	text-indent:-.25in;
	font-family:"Courier New";}
@list l0:level2
	{mso-level-number-format:bullet;
	mso-level-text:o;
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	text-indent:-.25in;
	font-family:"Courier New";}
@list l0:level3
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	text-indent:-.25in;
	font-family:Wingdings;}
@list l0:level4
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	text-indent:-.25in;
	font-family:Symbol;}
@list l0:level5
	{mso-level-number-format:bullet;
	mso-level-text:o;
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	text-indent:-.25in;
	font-family:"Courier New";}
@list l0:level6
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	text-indent:-.25in;
	font-family:Wingdings;}
@list l0:level7
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	text-indent:-.25in;
	font-family:Symbol;}
@list l0:level8
	{mso-level-number-format:bullet;
	mso-level-text:o;
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	text-indent:-.25in;
	font-family:"Courier New";}
@list l0:level9
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	text-indent:-.25in;
	font-family:Wingdings;}
ol
	{margin-bottom:0in;}
ul
	{margin-bottom:0in;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-priority:99;
	mso-style-parent:"";
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-para-margin:0in;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman","serif";}
</style>
<![endif]--><!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="1026"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body bgcolor=white lang=EN-US link=blue vlink=purple style='tab-interval:.5in'>

<div class=WordSection1>

<h1><span style='mso-fareast-font-family:"Times New Roman";mso-no-proof:yes'><!--[if gte vml 1]><v:shapetype
 id="_x0000_t75" coordsize="21600,21600" o:spt="75" o:preferrelative="t"
 path="m@4@5l@4@11@9@11@9@5xe" filled="f" stroked="f">
 <v:stroke joinstyle="miter"/>
 <v:formulas>
  <v:f eqn="if lineDrawn pixelLineWidth 0"/>
  <v:f eqn="sum @0 1 0"/>
  <v:f eqn="sum 0 0 @1"/>
  <v:f eqn="prod @2 1 2"/>
  <v:f eqn="prod @3 21600 pixelWidth"/>
  <v:f eqn="prod @3 21600 pixelHeight"/>
  <v:f eqn="sum @0 0 1"/>
  <v:f eqn="prod @6 1 2"/>
  <v:f eqn="prod @7 21600 pixelWidth"/>
  <v:f eqn="sum @8 21600 0"/>
  <v:f eqn="prod @7 21600 pixelHeight"/>
  <v:f eqn="sum @10 21600 0"/>
 </v:formulas>
 <v:path o:extrusionok="f" gradientshapeok="t" o:connecttype="rect"/>
 <o:lock v:ext="edit" aspectratio="t"/>
</v:shapetype><v:shape id="Picture_x0020_1" o:spid="_x0000_i1031" type="#_x0000_t75"
 style='width:149.25pt;height:128.25pt;visibility:visible;mso-wrap-style:square'>
 <v:imagedata src="pic/bloat.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img width=199 height=171
src="pic/bloat.png" v:shapes="Picture_x0020_1"><![endif]></span><span
style='mso-fareast-font-family:"Times New Roman";color:black'>Program Analyses
for Bloat Detection and Optimization</span><span style='mso-fareast-font-family:
"Times New Roman"'><o:p></o:p></span></h1>

<div class=MsoNormal align=center style='text-align:center;mso-layout-grid-align:
none;text-autospace:none'><span style='mso-fareast-font-family:"Times New Roman";
color:black'>

<hr size=2 width="100%" align=center>

</span></div>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><b><span
style='font-size:24.0pt;mso-fareast-font-family:"Times New Roman";color:black;
mso-font-kerning:18.0pt'>About<o:p></o:p></span></b></p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span
style='mso-fareast-font-family:"Times New Roman";color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span
style='mso-ascii-font-family:"Times New Roman";mso-ascii-theme-font:major-fareast;
mso-fareast-font-family:"Times New Roman";mso-hansi-font-family:"Times New Roman";
mso-hansi-theme-font:major-fareast;mso-bidi-font-family:"Times New Roman";
mso-bidi-theme-font:major-fareast'>Despite the employment of faster CPUs and
larger memory systems, the levels of inefficiencies in real-world programs grow
surprisingly fast and there is an ever-increasing demand for performance
optimization in modern software. Performance and scalability issues are
becoming increasingly critical partly due to the pervasive use of
object-oriented programming languages. The inefficiencies inherent in the
implementation of an object-oriented language as well as the commonly adopted
design and implementation principles in the object-oriented community often
combine to hurt performance. The community-wide recognition of the importance
of <i>abstraction </i>and <i>reuse </i>results in increased emphasis on modular
design, declaration of general interfaces, and use of models and patterns. Programmers
are taught to focus first and foremost on them, taking it for granted that
compilers and run-time systems can remove all the inefficiencies. In a large
program that is typically built on top of many layers of frameworks and
libraries, a small set of inefficiencies can multiply and quickly get magnified
to slow down the system. When the call stack grows to be deep, the usefulness
of the dataflow analyses in a dynamic compiler becomes limited and the
optimizer can no longer remove these inefficiencies. As a result, many
applications suffer from chronic run-time performance problems that
significantly affect scalability and performance. This is a serious problem for
real-world software systems used every day by thousands of businesses. The
pressing need for new optimization techniques can be especially seen as
object-orientation goes everywhere into systems of any size. The extensive use
of object-oriented languages in the development of memory-constrained
applications such as smartphone apps (e.g., Java used in Android and C# used in
Windows phones) and data-intensive systems (e.g., Hadoop, <span class=SpellE>Giraph</span>,
and <span class=SpellE>Hyracks</span>) introduces numerous research
challenges-- these systems have small memory space but large amounts of data to
process and inefficiencies in these systems can be significantly exacerbated.
The burden of reducing unnecessary work should not be only on the shoulder of
hardware designers, especially in the modern era when Moore's dividend becomes
less obvious. It strongly calls for higher-level performance optimization
techniques that can detect and remove inefficiencies for all categories of
object-oriented applications. Our group has an established record on
performance optimization for large-scale systems. Our recent efforts focus on
the following projects:<span style='color:black'><o:p></o:p></span></span></p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span
style='mso-fareast-font-family:"Times New Roman";color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><b
style='mso-bidi-font-weight:normal'><span style='mso-fareast-font-family:"Times New Roman";
color:black'>(1) Providing efficient infrastructures for detecting bloat<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:.5in;mso-layout-grid-align:none;
text-autospace:none'><span style='mso-fareast-font-family:"Times New Roman";
color:black'>A recent piece of work focuses on the development of a tunable
object lifetime profiling technique, called <i style='mso-bidi-font-style:normal'>Resurrector</i>
[<a href="../../papers/xu-oopsla13.pdf">OOPSLA13</a>]. Many existing
optimization techniques (such as object pooling and <span class=SpellE>pretenuring</span>)
require precise identification of object lifetimes. However, it is particularly
challenging to obtain object lifetimes both precisely and efficiently: precise
profiling techniques such as Merlin introduce several hundred times slowdown
even for small programs while efficient approximation techniques often
sacrifice precision and produce less useful lifetime information. Resurrector
solves the problem by exploring the middle ground between high precision and
high efficiency to find the precision-scalability <span class=SpellE>sweetspot</span>
for various optimization techniques. <span class=SpellE>Resurrector's</span>
design is motivated by an important observation that the scalability bottleneck
of a traditional OLP algorithm (such as Merlin) lies in the need to compute
transitive closures on the dead objects (e.g., Merlin's backward pass).
Resurrector improves efficiency by completely eliminating this need. Similarly
to Merlin, Resurrector first identifies the root dead objects whose reference
counts are zero. Instead of computing transitive closures from them,
Resurrector exploits object caching and reusing to find dead objects
(transitively reachable from the roots) that have non-zero reference counts. <o:p></o:p></span></p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span
style='mso-fareast-font-family:"Times New Roman";color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:.5in;mso-layout-grid-align:none;
text-autospace:none'><span style='mso-ascii-font-family:"Times New Roman";
mso-ascii-theme-font:major-fareast;mso-fareast-font-family:"Times New Roman";
mso-hansi-font-family:"Times New Roman";mso-hansi-theme-font:major-fareast;
mso-bidi-font-family:"Times New Roman";mso-bidi-theme-font:major-fareast;
color:black'>Another infrastructure we have built is a runtime framework that
performs <i style='mso-bidi-font-style:normal'>abstract dynamic slicing </i>[<a
href="../../papers/xu-pldi10a.pdf">PLDI10-a</a>, <a
href="../../papers/xu-tosem15.pdf">TOSEM14</a>] to identify performance
problems that manifest themselves in dataflow activities. <span class=GramE>A<span
style='color:windowtext'>bstract dynamic slicing, a technique that applies
dynamic slicing over an abstract domain whose size is limited by bounds
independent of the runtime execution.</span></span></span><span
style='mso-ascii-font-family:"Times New Roman";mso-ascii-theme-font:major-fareast;
mso-fareast-font-family:"Times New Roman";mso-hansi-font-family:"Times New Roman";
mso-hansi-theme-font:major-fareast;mso-bidi-font-family:"Times New Roman";
mso-bidi-theme-font:major-fareast'> This technique is embedded in the general
framework parameterized by the abstract domain. The output of this framework is
an abstract dependence graph that contains abstractions of instructions, rather
than their actual runtime instances. This new approach is motivated by the
observation that a client of dynamic slicing often needs to access only a small
portion of the complete execution trace collected by a regular slicing
algorithm and thus tremendous effort is wasted on collecting information not
used by the client. The runtime (space and time) overhead can be significantly
reduced if the slicing algorithm is client aware, that is, it understands what
information would be needed by its client and records only such information
during the execution. Abstract dynamic slicing makes this possible by asking
the analysis developer to provide an abstraction that specifies this knowledge.<span
style='color:black'><o:p></o:p></span></span></p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span
style='mso-fareast-font-family:"Times New Roman";color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><b><span style='mso-fareast-font-family:"Times New Roman";
color:black'>(2) Improved performance debugging and testing </span></b><span
style='mso-fareast-font-family:"Times New Roman";color:black'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in;mso-layout-grid-align:none;
text-autospace:none'><span style='mso-ascii-font-family:"Times New Roman";
mso-ascii-theme-font:major-fareast;mso-fareast-font-family:"Times New Roman";
mso-hansi-font-family:"Times New Roman";mso-hansi-theme-font:major-fareast;
mso-bidi-font-family:"Times New Roman";mso-bidi-theme-font:major-fareast'>Performance
problems in a large-scale application are extremely difficult to find.
Traditional performance test oracles such as time/memory checks are
coarse-grained and subjective; as a result, performance bugs often escape to
production runs, hurting software reliability and user experience. We are in
the process of developing a general technique, called <span class=SpellE><span
class=GramE><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'>PerfBlower</i></b></span></span><span class=GramE>, that</span> can <i>amplify
</i>the effects of a class of performance problems whose symptoms can be
described by logical statements over a history of heap updates as well as
provide precise diagnostic information. Amplification serves as an <i>automated
test oracle </i>because it increases memory consumption significantly for tests
that trigger performance problems while having a very small impact on bug-free
runs. As a result, developers can easily divide tests into successful and
failing runs, and focus their effort on failing tests. Please read our <a
href="../../papers/fang-ecoop15.pdf">ECOOP<i style='mso-bidi-font-style:normal'><span
style='mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:"Times New Roman";
mso-bidi-font-family:"Times New Roman"'>'</span></i>15 paper</a> for details. <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in;mso-layout-grid-align:none;
text-autospace:none'><span style='mso-ascii-font-family:"Times New Roman";
mso-ascii-theme-font:major-fareast;mso-fareast-font-family:"Times New Roman";
mso-hansi-font-family:"Times New Roman";mso-hansi-theme-font:major-fareast;
mso-bidi-font-family:"Times New Roman";mso-bidi-theme-font:major-fareast'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:.5in;mso-layout-grid-align:none;
text-autospace:none'><span style='mso-ascii-font-family:"Times New Roman";
mso-ascii-theme-font:major-fareast;mso-fareast-font-family:"Times New Roman";
mso-hansi-font-family:"Times New Roman";mso-hansi-theme-font:major-fareast;
mso-bidi-font-family:"Times New Roman";mso-bidi-theme-font:major-fareast'>Caching/<span
class=SpellE>resuing</span> opportunities can often be found in large-scale
applications. A big source of run-time performance problems in large-scale, object-oriented
applications is the frequent creation of data structures whose lifetimes are
disjoint, and whose shapes and data content are always the same. Constructing
these data structures and computing the same data values many times is
expensive; significant performance improvements can be achieved by reusing
their instances, shapes, and/or data values rather than reconstructing them. We
first classify caching/reusing opportunities into three categories: instance
reusability, shape reusability, and data reusability [<a
href="../../papers/xu-oopsla12.pdf">OOPSLA12</a>]. We next develop scalable
runtime techniques that can quickly detect these opportunities by exploiting
cooperative compiler and runtime system support. For example, work from [<a
href="../../papers/xu-oopsla12.pdf">OOPSLA12</a>] is a technique that
piggybacks on GC to find reuse opportunities while <span class=SpellE>Cachetor</span>
[<a href="../../papers/nguyen-fse13.pdf">FSE13</a>] relies on heavyweight
dependence profiling to understand if data values are cacheable. <o:p></o:p></span></p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span
style='mso-ascii-font-family:"Times New Roman";mso-ascii-theme-font:major-fareast;
mso-fareast-font-family:"Times New Roman";mso-hansi-font-family:"Times New Roman";
mso-hansi-theme-font:major-fareast;mso-bidi-font-family:"Times New Roman";
mso-bidi-theme-font:major-fareast'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><b
style='mso-bidi-font-weight:normal'><span style='mso-ascii-font-family:"Times New Roman";
mso-ascii-theme-font:major-fareast;mso-fareast-font-family:"Times New Roman";
mso-hansi-font-family:"Times New Roman";mso-hansi-theme-font:major-fareast;
mso-bidi-font-family:"Times New Roman";mso-bidi-theme-font:major-fareast'>(3)
Adaptive selection of algorithms and data structures<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:.5in;mso-layout-grid-align:none;
text-autospace:none'><span style='mso-ascii-font-family:"Times New Roman";
mso-ascii-theme-font:major-fareast;mso-fareast-font-family:"Times New Roman";
mso-hansi-font-family:"Times New Roman";mso-hansi-theme-font:major-fareast;
mso-bidi-font-family:"Times New Roman";mso-bidi-theme-font:major-fareast'>A</span><span
style='font-family:"Times-Roman","serif";mso-fareast-font-family:"Times New Roman";
mso-bidi-font-family:Times-Roman'>n important source of runtime bloat is the
inefficient use of container implementations. Standard libraries of
object-oriented languages such as Java and C# contain collection frameworks
that provide with users, for each abstract data type (such as </span><span
style='font-family:Courier;mso-fareast-font-family:"Times New Roman";
mso-bidi-font-family:Courier'>List</span><span style='font-family:"Times-Roman","serif";
mso-fareast-font-family:"Times New Roman";mso-bidi-font-family:Times-Roman'>),
many different implementations (such as </span><span class=SpellE><span
style='font-family:Courier;mso-fareast-font-family:"Times New Roman";
mso-bidi-font-family:Courier'>ArrayList</span></span><span style='font-family:
Courier;mso-fareast-font-family:"Times New Roman";mso-bidi-font-family:Courier'>
</span><span style='font-family:"Times-Roman","serif";mso-fareast-font-family:
"Times New Roman";mso-bidi-font-family:Times-Roman'>and <span class=SpellE>L<span
style='font-family:Courier;mso-bidi-font-family:Courier'>inkedList</span></span>),
each of which features a different design choice suitable for a specific
execution scenario. However, in real-world development, choosing the most
appropriate container implementation is challenging. As a result, developers
tend to keep using the implementations that are most general or well-known
(e.g., </span><span class=SpellE><span style='font-family:Courier;mso-fareast-font-family:
"Times New Roman";mso-bidi-font-family:Courier'>HashSet</span></span><span
style='font-family:Courier;mso-fareast-font-family:"Times New Roman";
mso-bidi-font-family:Courier'> </span><span style='font-family:"Times-Roman","serif";
mso-fareast-font-family:"Times New Roman";mso-bidi-font-family:Times-Roman'>for
</span><span style='font-family:Courier;mso-fareast-font-family:"Times New Roman";
mso-bidi-font-family:Courier'>Set</span><span style='font-family:"Times-Roman","serif";
mso-fareast-font-family:"Times New Roman";mso-bidi-font-family:Times-Roman'>),
regardless of whether or not they fit the usage context. We develop a novel
container optimization technique, called <span class=SpellE>CoCo</span>, that
is able to (1) determine at run time, for each container instance (e.g., a </span><span
class=SpellE><span style='font-family:Courier;mso-fareast-font-family:"Times New Roman";
mso-bidi-font-family:Courier'>LinkedList</span></span><span style='font-family:
Courier;mso-fareast-font-family:"Times New Roman";mso-bidi-font-family:Courier'>
</span><span style='font-family:"Times-Roman","serif";mso-fareast-font-family:
"Times New Roman";mso-bidi-font-family:Times-Roman'>object) used in the
program, whether or not there exists another container implementation (e.g., </span><span
class=SpellE><span style='font-family:Courier;mso-fareast-font-family:"Times New Roman";
mso-bidi-font-family:Courier'>ArrayList</span></span><span style='font-family:
"Times-Roman","serif";mso-fareast-font-family:"Times New Roman";mso-bidi-font-family:
Times-Roman'>) that is more suitable for the execution; and (2) automatically
and safely switch to this new container implementation (e.g., replace the old </span><span
class=SpellE><span style='font-family:Courier;mso-fareast-font-family:"Times New Roman";
mso-bidi-font-family:Courier'>LinkedList</span></span><span style='font-family:
Courier;mso-fareast-font-family:"Times New Roman";mso-bidi-font-family:Courier'>
</span><span style='font-family:"Times-Roman","serif";mso-fareast-font-family:
"Times New Roman";mso-bidi-font-family:Times-Roman'>object with a new </span><span
class=SpellE><span style='font-family:Courier;mso-fareast-font-family:"Times New Roman";
mso-bidi-font-family:Courier'>ArrayList</span></span><span style='font-family:
Courier;mso-fareast-font-family:"Times New Roman";mso-bidi-font-family:Courier'>
</span><span style='font-family:"Times-Roman","serif";mso-fareast-font-family:
"Times New Roman";mso-bidi-font-family:Times-Roman'>object </span><i><span
style='font-family:"Times-Italic","serif";mso-fareast-font-family:"Times New Roman";
mso-bidi-font-family:Times-Italic'>online</span></i><span style='font-family:
"Times-Roman","serif";mso-fareast-font-family:"Times New Roman";mso-bidi-font-family:
Times-Roman'>) for increased <span class=SpellE>efficiency.While</span> there
exists work (such as Chameleon and Brainy) that could identify Java collection
inefficiencies and report them to users for </span><i><span style='font-family:
"Times-Italic","serif";mso-fareast-font-family:"Times New Roman";mso-bidi-font-family:
Times-Italic'>offline </span></i><span style='font-family:"Times-Roman","serif";
mso-fareast-font-family:"Times New Roman";mso-bidi-font-family:Times-Roman'>inspection,
none of these techniques can change implementations </span><i><span
style='font-family:"Times-Italic","serif";mso-fareast-font-family:"Times New Roman";
mso-bidi-font-family:Times-Italic'>online</span></i><span style='font-family:
"Times-Roman","serif";mso-fareast-font-family:"Times New Roman";mso-bidi-font-family:
Times-Roman'>. Details about <span class=SpellE>CoCo</span> can found in the <a
href="../../papers/xu-ecoop13.pdf">ECOOP<i style='mso-bidi-font-style:normal'><span
style='font-family:"Times New Roman","serif";color:black;text-decoration:none;
text-underline:none'>'</span></i>13</a> paper. In collaboration with the
information system group, we are currently developing techniques that can
automatically select table joining algorithms for message-based Big Data
systems (such as graph processing systems). Details of this project will be
reported later. <o:p></o:p></span></p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><span
style='font-family:"Times-Roman","serif";mso-fareast-font-family:"Times New Roman";
mso-bidi-font-family:Times-Roman'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='mso-layout-grid-align:none;text-autospace:none'><b
style='mso-bidi-font-weight:normal'><span style='font-family:"Times-Roman","serif";
mso-fareast-font-family:"Times New Roman";mso-bidi-font-family:Times-Roman'>(4)
Static and dynamic detection of Java memory leaks</span></b><b
style='mso-bidi-font-weight:normal'><span style='mso-ascii-font-family:"Times New Roman";
mso-ascii-theme-font:major-fareast;mso-fareast-font-family:"Times New Roman";
mso-hansi-font-family:"Times New Roman";mso-hansi-theme-font:major-fareast;
mso-bidi-font-family:"Times New Roman";mso-bidi-theme-font:major-fareast'><o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:.5in;mso-layout-grid-align:none;
text-autospace:none'><span style='mso-ascii-font-family:"Times New Roman";
mso-ascii-theme-font:major-fareast;mso-fareast-font-family:"Times New Roman";
mso-hansi-font-family:"Times New Roman";mso-hansi-theme-font:major-fareast;
mso-bidi-font-family:"Times New Roman";mso-bidi-theme-font:major-fareast'>In
managed languages such as Java and C#, developers do not need to worry about
memory correctness issues such as dangling pointers and double free errors. However,
it remains challenging to avoid leaks. A memory leak in a managed language is
caused by keeping unnecessary references to objects that are no longer used.
These objects cannot be reclaimed by the garbage collector (GC), often leading
to severe performance degradation and even program crashes. We have developed
both static and dynamic techniques for memory leak detection. In particular, we
propose LeakChaser [<a href="../../papers/xu-pldi11.pdf">PLDI11</a>], a
specification-based leak detector, that exploits user insight (expressed in the
form of liveness assertions) to narrow down causes of memory leaks. Another
attractive direction is to perform static leak detection because it does not
rely on any leak-triggering inputs, allowing compile-time tools to find leaks
before software is released. A long-standing issue that prevents practical
static memory leak detection for Java is that it can be very expensive to
statically determine object liveness in large applications. We present a
practical static leak detection technique, called <span class=SpellE>LeakChecker</span>
[<a href="../../papers/yan-cgo14.pdf">CGO14</a>] that bypasses this problem by
considering a common leak pattern. In many cases severe leaks occur in loops
where, <span class=GramE>in each iteration</span>, some objects created by the
iteration are unnecessarily referenced by objects external to the loop. These
unnecessary references are never used in later loop iterations. Based on this
insight, we shift our focus from computing liveness, which is very difficult to
achieve precisely and efficiently for large programs, to the easier goal of
identifying objects that flow out of a loop but never flow back in.<span
style='color:black;mso-bidi-font-weight:bold'><o:p></o:p></span></span></p>

<div class=MsoNormal align=center style='text-align:center'><span
style='mso-fareast-font-family:"Times New Roman";color:black'>

<hr size=2 width="100%" align=center>

</span></div>

<p class=MsoNormal><b><span style='font-size:24.0pt;mso-fareast-font-family:
"Times New Roman";color:black;mso-font-kerning:18.0pt'>Papers<o:p></o:p></span></b></p>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman";
color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoListParagraphCxSpFirst style='text-indent:-.25in;mso-list:l0 level1 lfo2'><![if !supportLists]><span
style='font-family:"Courier New";mso-fareast-font-family:"Courier New"'><span
style='mso-list:Ignore'>o<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span></span><![endif]><span style='mso-fareast-font-family:"Times New Roman \; color\:black"'><a
href="../../papers/fang-ecoop15.pdf"><span class=SpellE>PerfBlower</span>:<span
style='font-family:"Arial","sans-serif";mso-fareast-font-family:"Times New Roman";
mso-fareast-theme-font:minor-fareast;background:white'> Quickly Detecting
Memory-Related Performance Problems via Amplification</span></a>,<o:p></o:p></span></p>

<p class=MsoListParagraphCxSpMiddle><span class=GramE><span style='mso-fareast-font-family:
"Times New Roman";color:black'>Lu Fang, Liang Dou, and Guoqing (Harry) Xu.</span></span><span
style='mso-fareast-font-family:"Times New Roman";color:black'><o:p></o:p></span></p>

<p class=MsoListParagraphCxSpMiddle><i style='mso-bidi-font-style:normal'><span
style='mso-fareast-font-family:"Times New Roman";color:black'>ECOOP'15:
European Conference on Object-Oriented Programming</span></i><span
style='mso-fareast-font-family:"Times New Roman";color:black'>.<o:p></o:p></span></p>

<p class=MsoListParagraphCxSpMiddle><span style='mso-fareast-font-family:"Times New Roman";
color:black'>[<a href="../../slides/ecoop15.pdf">Slides</a>]<o:p></o:p></span></p>

<p class=MsoListParagraphCxSpMiddle><span style='mso-fareast-font-family:"Times New Roman \; color\:black"'><o:p>&nbsp;</o:p></span></p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-.25in;mso-list:l0 level1 lfo2'><![if !supportLists]><span
style='font-family:"Courier New";mso-fareast-font-family:"Courier New"'><span
style='mso-list:Ignore'>o<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span></span><![endif]><span style='mso-fareast-font-family:"Times New Roman \; color\:black"'><a
href="../../papers/yan-cgo14.pdf"><span class=SpellE>LeakChecker</span>:
Practical Static Memory Leak Detection for Managed Languages</a>,<o:p></o:p></span></p>

<p class=MsoListParagraphCxSpMiddle><span class=GramE><span style='mso-fareast-font-family:
"Times New Roman";color:black'>Dacong Yan, Guoqing (Harry) Xu, Shengqian Yang,
and Atanas Rountev.</span></span><span style='mso-fareast-font-family:"Times New Roman";
color:black'><o:p></o:p></span></p>

<p class=MsoListParagraphCxSpMiddle><i style='mso-bidi-font-style:normal'><span
style='mso-fareast-font-family:"Times New Roman";color:black'>CGO'14:
International Conference on Code Generation and Optimization</span></i><span
style='mso-fareast-font-family:"Times New Roman";color:black'>.<o:p></o:p></span></p>

<p class=MsoListParagraphCxSpMiddle><span style='mso-fareast-font-family:"Times New Roman";
color:black'>[<a
href="https://docs.google.com/presentation/d/1LXi07DA2OKmi7VNkjkKzBO89U1VWpFhT48Iu7gQzcjw/edit#slide=id.p">Slides</a>]<o:p></o:p></span></p>

<p class=MsoListParagraphCxSpMiddle><span style='mso-fareast-font-family:"Times New Roman";
color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoListParagraphCxSpLast style='text-indent:-.25in;mso-list:l0 level1 lfo2'><![if !supportLists]><span
style='font-family:"Courier New";mso-fareast-font-family:"Courier New";
color:black'><span style='mso-list:Ignore'>o<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span></span><![endif]><span style='mso-fareast-font-family:"Times New Roman";
color:black'><a href="../../papers/xu-tosem15.pdf">Scalable Runtime Bloat
Detection Using Abstract Dynamic Slicing</a>,<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span class=GramE><span
style='mso-fareast-font-family:"Times New Roman";color:black'>Guoqing (Harry)
Xu, </span><strong><span style='font-weight:normal;mso-bidi-font-weight:bold'>Nick
Mitchell, Matthew Arnold, Atanas Rountev, Edith Schonberg, and Gary <span
class=SpellE>Sevitsky</span>.</span></strong></span><span style='mso-fareast-font-family:
"Times New Roman";color:black'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span class=GramE><i
style='mso-bidi-font-style:normal'><span style='mso-fareast-font-family:"Times New Roman";
color:black'>TOSEM'14, </span>ACM Transactions on Software Engineering and
Methodology</i><span style='mso-fareast-font-family:"Times New Roman";
color:black'>.</span></span><span style='mso-fareast-font-family:"Times New Roman";
color:black'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='mso-fareast-font-family:
"Times New Roman";color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoListParagraph style='text-indent:-.25in;mso-list:l0 level1 lfo2'><![if !supportLists]><span
style='font-family:"Courier New";mso-fareast-font-family:"Courier New";
color:black'><span style='mso-list:Ignore'>o<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span></span><![endif]><span style='mso-fareast-font-family:"Times New Roman";
color:black'><a href="../../papers/xu-oopsla13.pdf">Resurrector: A Tunable
Object Lifetime Profiling Technique for Optimizing Real-World Programs</a>,<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span class=GramE><span
style='mso-fareast-font-family:"Times New Roman";color:black'>Guoqing (Harry)
Xu.</span></span><span style='mso-fareast-font-family:"Times New Roman";
color:black'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><i style='mso-bidi-font-style:normal'><span
style='mso-fareast-font-family:"Times New Roman";color:black'>OOPSLA'13, </span>ACM
SIGPLAN Conference on Object-Oriented Programming Systems, Language, and
Applications.</i><span style='mso-fareast-font-family:"Times New Roman";
color:black'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='mso-fareast-font-family:
"Times New Roman";color:black'>[<a
href="http://www.ics.uci.edu/~guoqingx/slides/oopsla13.pptx">Slides</a>]<o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman";
color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoListParagraph style='text-indent:-.25in;mso-list:l0 level1 lfo2'><![if !supportLists]><span
style='font-family:"Courier New";mso-fareast-font-family:"Courier New";
color:black'><span style='mso-list:Ignore'>o<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span></span><![endif]><span style='mso-fareast-font-family:"Times New Roman";
color:black'><a href="http://www.ics.uci.edu/~guoqingx/papers/nguyen-fse13.pdf"><span
class=SpellE>Cachetor</span>: Detecting Cacheable Data to Remove Bloat</a>,<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:.5in'><span class=GramE><span
style='mso-fareast-font-family:"Times New Roman";color:black'>Khanh Nguyen and
Guoqing (Harry) Xu.</span></span><span style='mso-fareast-font-family:"Times New Roman";
color:black'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><i style='mso-bidi-font-style:normal'><span
style='mso-fareast-font-family:"Times New Roman";color:black'>FSE'13, </span>ACM
SIGSOFT Symposium on the Foundations of Software Engineering.</i><span
style='mso-fareast-font-family:"Times New Roman";color:black'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='mso-fareast-font-family:
"Times New Roman";color:black'>[<a
href="http://www.ics.uci.edu/~guoqingx/slides/fse13.pptx">Slides</a>]<o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman";
color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoListParagraph style='text-indent:-.25in;mso-list:l0 level1 lfo2'><![if !supportLists]><span
style='font-family:"Courier New";mso-fareast-font-family:"Courier New";
color:black'><span style='mso-list:Ignore'>o<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span></span><![endif]><b><a
href="http://www.ics.uci.edu/~guoqingx/papers/xu-ecoop13.pdf"><span
class=SpellE>CoCo</span>: <span style='mso-bidi-font-weight:normal'>Sound and
Adaptive Replacement of Java Collections</span></a></b><span style='mso-fareast-font-family:
"Times New Roman";color:black'>,<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:.5in'><span class=GramE><span
style='mso-fareast-font-family:"Times New Roman";color:black'>Guoqing (Harry)
Xu.</span></span><span style='mso-fareast-font-family:"Times New Roman";
color:black'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><i style='mso-bidi-font-style:normal'><span
style='mso-fareast-font-family:"Times New Roman";color:black'>ECOOP'13, </span>European
Conference on Object-Oriented Programming.</i><span style='mso-fareast-font-family:
"Times New Roman";color:black'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='mso-fareast-font-family:
"Times New Roman";color:black'>[<a
href="http://www.ics.uci.edu/~guoqingx/slides/ecoop13.pptx">Slides</a>]<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='mso-fareast-font-family:
"Times New Roman";color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoListParagraph style='text-indent:-.25in;mso-list:l0 level1 lfo2'><![if !supportLists]><span
style='font-family:"Courier New";mso-fareast-font-family:"Courier New";
color:black'><span style='mso-list:Ignore'>o<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span></span><![endif]><b><a
href="http://www.ics.uci.edu/~guoqingx/papers/xu-oopsla12.pdf">Finding Reusable
Data Structures</a></b><span style='mso-fareast-font-family:"Times New Roman";
color:black'>,<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:.5in'><span class=GramE><span
style='mso-fareast-font-family:"Times New Roman";color:black'>Guoqing (Harry)
Xu.</span></span><span style='mso-fareast-font-family:"Times New Roman";
color:black'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><i style='mso-bidi-font-style:normal'><span
style='mso-fareast-font-family:"Times New Roman";color:black'>OOPSLA'12, </span>ACM
SIGPLAN Conference on Object-Oriented Programming Systems, Language, and
Applications.</i><span style='mso-fareast-font-family:"Times New Roman";
color:black'> <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='mso-fareast-font-family:
"Times New Roman";color:black'>[<a
href="http://www.ics.uci.edu/~guoqingx/slides/oopsla12.pptx">Slides</a>]<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='mso-fareast-font-family:
"Times New Roman";color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoListParagraph style='text-indent:-.25in;mso-list:l0 level1 lfo2'><![if !supportLists]><span
style='font-family:"Courier New";mso-fareast-font-family:"Courier New";
color:black'><span style='mso-list:Ignore'>o<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span></span><![endif]><b><a
href="https://www.ics.uci.edu/~guoqingx/papers/xu-ecoop12.pdf">Static Detection
of Loop-Invariant Data Structures</a></b><span style='mso-fareast-font-family:
"Times New Roman";color:black'>,<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:.5in'><span class=GramE><span
style='mso-fareast-font-family:"Times New Roman";color:black'>Guoqing (Harry)
Xu, Dacong Yan, and Atanas Rountev.</span></span><span style='mso-fareast-font-family:
"Times New Roman";color:black'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><i style='mso-bidi-font-style:normal'><span
style='mso-fareast-font-family:"Times New Roman";color:black'>ECOOP'12, </span>European
Conference on Object-Oriented Programming.</i><span style='mso-fareast-font-family:
"Times New Roman";color:black'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='mso-fareast-font-family:
"Times New Roman";color:black'>[<a
href="http://www.ics.uci.edu/~guoqingx/slides/ecoop12.pptx">Slides</a>]<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='mso-fareast-font-family:
"Times New Roman";color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoListParagraph style='text-indent:-.25in;mso-list:l0 level1 lfo2'><![if !supportLists]><span
style='font-family:"Courier New";mso-fareast-font-family:"Courier New";
color:black'><span style='mso-list:Ignore'>o<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span></span><![endif]><b><a
href="https://www.ics.uci.edu/~guoqingx/papers/xu-pldi11.pdf"><span
class=SpellE>LeakChaser</span>: Helping Programmers Narrow Down Causes of
Memory Leaks</a></b><span style='mso-fareast-font-family:"Times New Roman";
color:black'>,<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:.5in'><span style='mso-fareast-font-family:
"Times New Roman";color:black'>Guoqing (Harry) Xu, Michael D. Bond, Feng Qin,
and Atanas Rountev,<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><i style='mso-bidi-font-style:normal'><span
style='mso-fareast-font-family:"Times New Roman";color:black'>PLDI'11, </span>ACM
SIGPLAN Conference on Programming Language Design and Implementation</i><span
style='mso-fareast-font-family:"Times New Roman";color:black'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='mso-fareast-font-family:
"Times New Roman";color:black'>[<a
href="http://www.ics.uci.edu/~guoqingx/slides/pldi11.pptx">Slides</a>]<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='mso-fareast-font-family:
"Times New Roman";color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoListParagraph style='text-indent:-.25in;mso-list:l0 level1 lfo2'><![if !supportLists]><span
style='font-family:"Courier New";mso-fareast-font-family:"Courier New";
color:black'><span style='mso-list:Ignore'>o<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span></span><![endif]><b><a
href="https://www.ics.uci.edu/~guoqingx/papers/xu-pldi10a.pdf">Finding
Low-Utility Data Structures</a></b><span style='mso-fareast-font-family:"Times New Roman";
color:black'>,<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:.5in'><span style='mso-fareast-font-family:
"Times New Roman";color:black'>Guoqing (Harry) Xu, Nick Mitchell, Matthew
Arnold, Atanas Rountev, Gary <span class=SpellE>Sevitsky</span>, and Edith
Schonberg,<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><i style='mso-bidi-font-style:normal'><span
style='mso-fareast-font-family:"Times New Roman";color:black'>PLDI'10, </span>ACM
SIGPLAN Conference on Programming Language Design and Implementation</i><span
style='mso-fareast-font-family:"Times New Roman";color:black'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='mso-fareast-font-family:
"Times New Roman";color:black'>[<a
href="http://www.ics.uci.edu/~guoqingx/slides/pldi10a.pptx">Slides</a>]<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='mso-fareast-font-family:
"Times New Roman";color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoListParagraph style='text-indent:-.25in;mso-list:l0 level1 lfo2'><![if !supportLists]><span
style='font-family:"Courier New";mso-fareast-font-family:"Courier New";
color:black'><span style='mso-list:Ignore'>o<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span></span><![endif]><b><a
href="https://www.ics.uci.edu/~guoqingx/papers/xu-pldi10b.pdf">Detecting
Inefficiently-Used Containers to Avoid Bloat</a></b><span style='mso-fareast-font-family:
"Times New Roman";color:black'>,<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:.5in'><span style='mso-fareast-font-family:
"Times New Roman";color:black'>Guoqing (Harry) Xu and Atanas Rountev, <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><i style='mso-bidi-font-style:normal'><span
style='mso-fareast-font-family:"Times New Roman";color:black'>PLDI'10, </span>ACM
SIGPLAN Conference on Programming Language Design and Implementation</i><span
style='mso-fareast-font-family:"Times New Roman";color:black'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='mso-fareast-font-family:
"Times New Roman";color:black'>[<a
href="http://www.ics.uci.edu/~guoqingx/slides/pldi10b.pptx">Slides</a>]<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='mso-fareast-font-family:
"Times New Roman";color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoListParagraph style='text-indent:-.25in;mso-list:l0 level1 lfo2'><![if !supportLists]><span
style='font-family:"Courier New";mso-fareast-font-family:"Courier New";
color:black'><span style='mso-list:Ignore'>o<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span></span><![endif]><b><a
href="https://www.ics.uci.edu/~guoqingx/papers/xu-pldi09.pdf">Go with the Flow:
Profiling Copies To Find Runtime Bloat</a></b><span style='mso-fareast-font-family:
"Times New Roman";color:black'>,<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:.5in'><span style='mso-fareast-font-family:
"Times New Roman";color:black'>Guoqing (Harry) Xu, Matthew Arnold, Nick
Mitchell, Atanas Rountev, and Gary <span class=SpellE>Sevitsky</span>,<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><i style='mso-bidi-font-style:normal'><span
style='mso-fareast-font-family:"Times New Roman";color:black'>PLDI'09, </span>ACM
SIGPLAN Conference on Programming Language Design and Implementation</i><span
style='mso-fareast-font-family:"Times New Roman";color:black'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='mso-fareast-font-family:
"Times New Roman";color:black'>[<a
href="http://www.ics.uci.edu/~guoqingx/slides/pldi09.pptx">Slides</a>]<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='mso-fareast-font-family:
"Times New Roman";color:black'><o:p>&nbsp;</o:p></span></p>

<div class=MsoNormal align=center style='text-align:center'><span
style='mso-fareast-font-family:"Times New Roman";color:black'>

<hr size=2 width="100%" align=center>

</span></div>

<p class=MsoNormal><b><span style='font-size:24.0pt;mso-fareast-font-family:
"Times New Roman";color:black;mso-font-kerning:18.0pt'>People<o:p></o:p></span></b></p>

<p class=MsoNormal><b><span style='mso-fareast-font-family:"Times New Roman";
color:black;mso-font-kerning:18.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoListParagraphCxSpFirst style='text-indent:-.25in;mso-list:l0 level1 lfo2'><![if !supportLists]><span
style='font-family:"Courier New";mso-fareast-font-family:"Courier New";
color:black'><span style='mso-list:Ignore'>o<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span></span><![endif]><span style='mso-fareast-font-family:"Times New Roman";
color:black'><a href="http://www.ics.uci.edu/~lfang3/">Lu Fang</a><o:p></o:p></span></p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-.25in;mso-list:l0 level1 lfo2'><![if !supportLists]><span
style='font-family:"Courier New";mso-fareast-font-family:"Courier New";
color:black'><span style='mso-list:Ignore'>o<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span></span><![endif]><span style='mso-fareast-font-family:"Times New Roman";
color:black'><a href="http://www.ics.uci.edu/~khanhtn1/">Khanh Nguyen</a><o:p></o:p></span></p>

<p class=MsoListParagraphCxSpLast style='text-indent:-.25in;mso-list:l0 level1 lfo2'><![if !supportLists]><span
style='font-family:"Courier New";mso-fareast-font-family:"Courier New";
color:black'><span style='mso-list:Ignore'>o<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span></span><![endif]><span style='mso-fareast-font-family:"Times New Roman";
color:black'><a href="http://www.ics.uci.edu/~guoqingx">Harry Xu</a><o:p></o:p></span></p>

<div class=MsoNormal align=center style='text-align:center'><span
style='mso-fareast-font-family:"Times New Roman";color:black'>

<hr size=2 width="100%" align=center>

</span></div>

<p class=MsoNormal><b><span style='font-size:24.0pt;mso-fareast-font-family:
"Times New Roman";color:black;mso-font-kerning:18.0pt'>Software<o:p></o:p></span></b></p>

<p class=MsoNormal><b><span style='mso-fareast-font-family:"Times New Roman";
color:black;mso-font-kerning:18.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoListParagraphCxSpFirst style='text-indent:-.25in;mso-list:l0 level1 lfo2'><![if !supportLists]><span
style='font-family:"Courier New";mso-fareast-font-family:"Courier New";
color:black'><span style='mso-list:Ignore'>o<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span></span><![endif]><span style='mso-fareast-font-family:"Times New Roman";
color:black'><a href="https://bitbucket.org/fanglu/perfblower-public"><span
class=SpellE>PerfBlower</span></a>, a performance problem amplification tool<o:p></o:p></span></p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-.25in;mso-list:l0 level1 lfo2'><![if !supportLists]><span
style='font-family:"Courier New";mso-fareast-font-family:"Courier New";
color:black'><span style='mso-list:Ignore'>o<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span></span><![endif]><span style='mso-fareast-font-family:"Times New Roman";
color:black'><a href="http://sourceforge.net/p/jikesrvm/research-archive/37/"><span
class=SpellE>LeakChaser</span></a>, a specification-based memory leak detector
for Java<o:p></o:p></span></p>

<p class=MsoListParagraphCxSpLast style='text-indent:-.25in;mso-list:l0 level1 lfo2'><![if !supportLists]><span
style='font-family:"Courier New";mso-fareast-font-family:"Courier New";
color:black'><span style='mso-list:Ignore'>o<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span></span><![endif]><span style='mso-fareast-font-family:"Times New Roman";
color:black'><a href="https://sourceforge.net/p/jikesrvm/research-archive/42/">Resurrector</a>:
a tunable object lifetime profiling tool based on Jikes RVM<o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman";
color:black'><o:p>&nbsp;</o:p></span></p>

<div class=MsoNormal align=center style='text-align:center'><span
style='mso-fareast-font-family:"Times New Roman";color:black'>

<hr size=2 width="100%" align=center>

</span></div>

<p class=MsoNormal><b><span style='font-size:24.0pt;mso-fareast-font-family:
"Times New Roman";color:black;mso-font-kerning:18.0pt'>Support</span></b><span
style='mso-fareast-font-family:"Times New Roman";color:black'><o:p></o:p></span></p>

<p class=MsoNormal><b><span style='mso-fareast-font-family:"Times New Roman";
color:black;mso-font-kerning:18.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman";
color:black'>This research is funded in part by NSF under grants CNS-1321179,
CCF-140982, and CNS-1613023, and by ONR under grants </span>N00014-14-1-0549
and N00014-16-1-2913.<span style='mso-fareast-font-family:"Times New Roman";
color:black'><o:p></o:p></span></p>

<div class=MsoNormal align=center style='text-align:center'><span
style='mso-fareast-font-family:"Times New Roman";color:black'>

<hr size=2 width="100%" align=center>

</span></div>

<p class=MsoNormal><b><span style='mso-fareast-font-family:"Times New Roman";
color:black'><a href="../../index.html"><span class=GramE>main</span> page<span
style='font-weight:normal'> </span></a></span></b><span style='mso-fareast-font-family:
"Times New Roman"'><o:p></o:p></span></p>

</div>

</body>

</html>
