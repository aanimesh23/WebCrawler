<!DOCTYPE html PUBLIC "-//IETF//DTD HTML 2.0//EN">
<html>
<head>
<title>Theory Seminar, March 1, 2012</title>
</head>
<body>
<a href="/~theory/"><img src="http://www.ics.uci.edu/~theory/logo/CATOC2.jpg"></a>
<h2><a href="/~theory/269/">CS 269S, Winter 2012: Theory Seminar</a><br>
Bren Hall, Room 1423, 1pm

<hr>
March 1, 2013:</h2>
<h1>
Max flows in <i>O</i>(<i>nm</i>) time, or better
</h1>
<h2>
Will Devanny
</h2>

<p>
We present improved polynomial time algorithms for the max flow problem
defined on a network with <i>n</i> nodes and <i>m</i> arcs. We show how
to solve the max flow problem in <i>O</i>(<i>nm</i>) time, improving upon the
best previous algorithm due to King, Rao, and Tarjan, who
solved the max flow problem in
<nobr><i>O</i>(<i>nm</i> log<sub><i>m</i>/(<i>n</i> log <i>n</i>)</sub> <i>n</i>)</nobr>
time. In the case that <nobr><i>m</i> = <i>O</i>(<i>n</i>),</nobr> we
improve the running time to <nobr><i>O</i>(<i>n</i><sup>2</sup>/log <i>n</i>).</nobr>
We further improve the running time in the case that
<nobr><i>U</i><sup>*</sup> = <i>U</i><sub>max</sub>/<i>U</i><sub>min</sub></nobr>
is not too large, where <i>U</i><sub>max</sub> denotes the largest
finite capacity and <i>U</i><sub>min</sub> denotes the smallest non-zero
capacity. If
<nobr>log(<i>U</i><sup>*</sup>) = <i>O</i>(n<sup>1/3</sup> log<sup>&minus;3</sup> <i>n</i>),</nobr>
we show how to solve the max flow problem in
<nobr><i>O</i>(<i>nm</i>/log <i>n</i>)</nobr> steps.
In the case that
<nobr>log(<i>U</i><sup>*</sup>) = <i>O</i>(log<sup><i>k</i></sup> <i>n</i>)</nobr>
for some fixed positive integer <i>k</i>, we show how to solve the
max flow problem in <i>&#213;</i>(n<sup>8/3</sup>) time. This latter
algorithm relies on a subroutine for fast matrix multiplication.
</p>

<p>(Based
on <a href="http://jorlin.scripts.mit.edu/docs/papersfolder/O(nm)MaxFlow.pdf">a
preprint</a> by James B. Orlin.)</p>

</body>
</html>

