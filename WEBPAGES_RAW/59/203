<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<head>
  <title>CLion IDE: Downloading, Installing, and Testing</title>
</head>

<body BGCOLOR="white">

<center>
<h1>CLion IDE: Downloading, Installing, and Testing</h1>
<p>a
</center>
<hr align="left" width="100%">
<p>
<b>Download/Install/Test the CLion IDE</b>
<p>
<b>CLion</b> is an Integrated Development Environment (IDE) that uses the
  <b>Cygwin</b> toolset to develop/test C++ programs.
 It occupies about .6 GB on disk.
<p>
Before installing CLion in this handout, you should have already downloaded and
  installed the <a href="cygwin.html" targe="_new">Cygwin</a> toolset
  (if you haven't, go back and do so).
<p>
You may want to print these instructions before proceeding, so that you can
  refer to them while downloading and installing CLion.
Or, just keep this document in your browser.
You should read each step completely, before performing the action that it
  describes.
<p>
This document shows the installation of CLion version 2016.1.3; I installed
  this version originally, but I am now using verson 2016.3.1.
You should install the latest version to be compatible with how CLion is
  used in this document.
<p>
<hr align="left" width="100%">


<h2>JetBrain's CLion: Version 2016.1.3</h2>
<p>
<h3>Section 0) Registering For a Free Copy of CLion</h3>
<p>
In this section you will register for a free copy of CLion online.
<p>
<ol>
<li>Click
    <a href="https://www.jetbrains.com/shop/eform/students" target="_new">
      Student License</a>.<p>
    When run, the following <b>JetBrains Products for Learning</b>
      screen should appear.
    Fill it in as shown, but with <b>your Name and Email address</b> (not mine).
    <p>
    <img src="images/clion/CLion License.jpg">
    <p>
    Click the <b>APPLY FOR FREE PRODUCTS</b> button.
    <p>

    The following screen <b>may</b> appear.
    <p>
    <img src="images/clion/CLion Not Robot.jpg">
    <p>
    If it appears, click the checkbox.
    <p>
     A <b>Thank You!</b> screen will appear, indicating that
      <b>Jet Brains</b> is sending you a <b>Confirm Request</b> email.
    <p>

<li>You should receive an email from JetBrains (likely within 5-10 minues)
      containing the following text:
     <blockquote><b>
Hi,
<p>
You've received this email because your email address was<br>
used for registering/updating a JetBrains Educational Pack.
<p>
Please follow this link to confirm your intention:
<p>
<u><font color="#0000FF">Confirm Request</font></u>
<p>
Yours truly,<br>
JetBrains Team<br>
<u><font color="#0000FF">https://www.jetbrains.com</font></u><br>
The Drive to Develop</b></blockquote>
<p>

<li>Click the <b>Confirm Request</b> link.
    A <b>Congrats! You've been approved!</b> screen will appear,
      indicating that <b>Jet Brains</b> is sending you an
      <b>Activate Educational License</b> email.
<p>

<li>You should receive an email from JetBrains (likely within 5-10 minues)
      containing the following text:
     <blockquote><b>
Dear &lt;Your first name&gt;
<p>
Congratulations! Your JetBrains Student License is confirmed.
<p>
To activate your license, use the following link:<br>
<u><font color="#0000FF">Activate Educational License</font></u>
<p>
After accepting the License Agreement, you will be asked<br>
to sign up for a Student JetBrains Account. You will use<br>
this account to sign in to JetBrains product(s) whenever<br>
you use them.
<p>
Happy coding!
<p>
Yours truly,<br>
JetBrains Sales Team<br>
<u><font color="#0000FF">https://www.jetbrains.com</font></u>
</b></blockquote>
<p>

<li>Click the <b>Activate Educational License</b> link.
    A <b>TOOLBOX SUBSCRIPTION LICENSE AGREEMENT FOR EDUCATION</b> screen will
      appear.

<li>Click the <b>I Accept</b> button.
    <p>
    The following <b>JetBrains Products for Learning</b> screen should appear.
    <p>
    <img src="images/clion/CLion Name Password.jpg">
    <p>

<li>Enter your <b>User Name</b> and <b>Password</b>
      (and <b>Repeat Password</b>), click the <b>I have read...</b> checkbox,
      and click the <b>Submit</b> button.
    Write this information in a location for future reference.
    <p>

    The following <b>JetBrains Product Pack for Students</b> screen should
      appear (I have blacked-out my <b>License ID</b>).
    <p>
    <img src="images/clion/CLion License ID.jpg">
    <p>
    Write down the <b>License ID</b> for future reference.
    <p>    

<li>Note that anyone (even without a university email address) can download a
      <a href="https://www.jetbrains.com/clion/" target="_new">
      Free 30 Day Trial</a> version of CLion.

<p>
</ol>

<h3>Section 1) Downloading/Installing CLion</h3>
<p>
In this section you will download and begin installing CLion for use with the
   Cygwin toolset.
<p>
<ol>
<li>Click
    <a href="https://www.jetbrains.com/clion/download/#section=windows-version" target="_new">
      CLion</a>.<p>
    When run, the following <b>Download CLion</b>
      screen should appear (ensure the Oval surrounds
      the operating system you are on).
    <p>
    <img src="images/clion/CLion Download.jpg">
    <p>
    Click the <b>Download</b> button to 
    download the executable file named <b>CLion-2016.1.3.exe</b>, which when run
      will install the 64-bit version of CLion.
    Its icon will appear on your screen as follows. 
       <p>
       <img src="images/clion/Executable.jpg">
       <p>
    Save this file for future use, in case you need to reinstall it:
      on my system I stored this file as
      <b>C:\ZData\Installed Software\CLion-2016.1.3.exe</b>
<p>

<li>Double-click the <b>CLion-2016.1.3.exe</b> file.
    <p>
    When run, the following <b>Open File - Security</b>
      pop-up window should appear on your screen.
    <p>
    <img src="images/clion/CLion Open File - Security Warning.jpg">
    <p>

<li>Click the <b>Run</b> button on this window.
    <p>
    When run, the following <b>User Account Control</b>
      pop-up window should appear on your screen.
    <p>
    <img src="images/clion/CLion User Account Control.jpg">
    <p>

<li>Click the <b>Yes</b> button on this window.
    <p>
    When run, the following <b>CLion Setup</b>
      pop-up window should appear on your screen.
    <p>
    <img src="images/clion/CLion Setup.jpg">
    <p>

<li>Click the <b>Next&gt;</b> button on this window.
    <p>
    The following <b>CLion Setup: Choose Install Location</b>
      pop-up window should appear on your screen.
    <p>
    <img src="images/clion/CLion Setup Choose Install Location.jpg">
    <p>
    For simplicity and consistency, ensure the <b>Destination Folder</b> is
       <b>C:\Program Files (x86)\Jetbrains\CLion 2016.1.3</b> (the default).
<p>

<li>Click the <b>Next&gt;</b> button on this window.
    <p>
    The following <b>CLion Setup: Choose Installation Options</b>
      pop-up window should appear on your screen.
    <p>
    <img src="images/clion/CLion Setup Choose Installation Options.jpg">
    <p>
    Check all checkboxes (the default is none are checked).
<p>

<li>Click the <b>Next&gt;</b> button on this window.
    <p>
    The following <b>CLion Setup: Choose Start Menu Folder</b>
      pop-up window should appear on your screen.
    <p>
    <img src="images/clion/CLion Setup Choose Start Menu Folder.jpg">
    <p>
    For simplicity and consistency, ensure the textbox contains
       <b>JetBrains</b> (the default).
<p>

<li>Click the <b>Next&gt;</b> button on this window.
    <p>
    The following <b>CLion Setup: Installing</b> progress
      pop-up window should appear on your screen.
    <p>
    <img src="images/clion/CLion Setup Installing Progress.jpg">
    <p>
    It might take (a few) minutes (depending on your connection speed)
      for CLion to be downloaded and installed.
    Eventually this window will be replaced by the following
      <b>Cygwin Setup - Installation Status and Create Icons</b> 
      window on your screen.
    <p>
    <img src="images/clion/CLion Setup Completing the CLion Setup Wizard.jpg">
    <p>

<li>Click the <b>Finish</b> button on this window (leaving unchecked the
       <b>Run CLion</b> checkbox.
    <p>
    Create a shortcut icon (named just <b>CLion</b>) on your desktop to the file
       <b>C:/Program Files (x86)/JetBrains/CLion 2016.1.3/bin</b>
    <p>
    You will double-click this icon to start CLion (see the next section).
</ol>
<p>

<hr align="left" width="33%">
<h3>Section 2) Initializing/Testing CLion with the Cygwin Toolset and Clang</h3>
<p>
In this section you will finish installing CLion and then create, build, and
   run a trivial CLion project/program (including editing it and seeing how
   syntax errors are reported).
It will also discuss some useful features in the CLion IDE.
<p>
<ol>
<li>Double-click the shortcut to the CLion icon that you created above.
    <p>
    The following <b>Complete Installation</b>
      pop-up window should appear on your screen.
    <p>
    <img src="images/clion/CLion Startup Complete Installation.jpg">
    <p>

<li>Click the <b>OK</b> button on this window.
    <p>
    If a <b>CLion Privacy Policy Agreement</b> appears, click <b>Accept</b>.
    <p>
    The following <b>CLion License Activation</b>
      pop-up window should appear on your screen.
    <p>
    <img src="images/clion/CLion License Activation.jpg">
    <p>

<!---
<li>Click the <b>OK</b> button on this window.
    The following <b>License Agreement for CLion 206.1.3</b>
      pop-up window should appear on your screen.
    <p>
    <img src="images/clion/License Agreement for CLion 206.1.3.jpg">
    <p>

<li>Click the <b>Accept</b> button on this window.
    <p>
    The following <b>CLion Privacy Policy Agreement</b>
      pop-up window should appear on your screen.
    <p>
    <img src="images/clion/CLion Startup Privacy Policy Agreement.jpg">
    <p>

<li>Click the <b>Accept</b> button on this window.
    <p>
    The following <b>CLion License Activation</b>
      pop-up window should appear on your screen.
    <p>
    <img src="images/clion/CLion Startup License Activation.jpg">
    <p>
--->
<li>Enter your <b>Username or email</b> and <b>Password</b>, and then click
      <b>Activate</b> button.
    <p>
    The following <b>Customize CLion UI Themes</b>
      pop-up window should appear on your screen.
    <p>
    <img src="images/clion/CLion Customize UI Theme.jpg">
    <p>
    Ensure the <b>IntelliJ</b> radio button is pressed (the default).
<p>    

<li>Click the <b>Next: Toolchains</b> button on this window.
    <p>
    The following <b>Customize CLion Toolchains</b>
      pop-up window should appear on your screen.
    <p>
    <img src="images/clion/CLion Customize Toolchain.jpg">
    <p>
    Press the <b>Use Cygwin home</b> radio button and ensure <b>C:\cygwin64</b>
      is in its textbox (the default).
    Press the <b>Use bundled CMake 3.5.1</b> radio button (the default).
<p>    

<li>Click the <b>Next: Default plugins</b> button on this window.
    <p>
    The following <b>Customize CLion Default plugins</b>
      pop-up window should appear on your screen.
    <p>
    <img src="images/clion/CLion Customize Default plugins.jpg">
<p>

<li>Click the <b>Next: Featured plugins</b> button on this window.
    <p>
    The following <b>Customize CLion Featured plugins</b>
      pop-up window should appear on your screen.
    <p>
    <img src="images/clion/CLion Customize Featured plugins.jpg">
    <p>

<li>Click the <b>Start using CLion</b> button on this window.
    <p>
    The following splash should appear on your screen.
    <p>
    <img src="images/clion/CLion Splash.jpg">
    <p>
    Eventually CLion loads and the following <b>Welcome to CLion</b>
       pop-up window should appear on your screen.
    <p>
    <img src="images/clion/CLion Welcome.jpg">
    <p>

<li>Click the <b>New Project</b> button on this window.
    <p>
    The following <b>New Project</b>
      pop-up window should appear on your screen.
    <p>
    <img src="images/clion/CLion New CMake Project.jpg">
    <p>
    In the <b>Location</b> textbox, at the end of the path, replace
      <b>untititled</b> by <b>trivialtest</b>; leave the <b>C++ Executable</b>
      and <b>C++11</b> selected.
<p>

<li>Click the <b>OK</b> button on this window.
    <p>
    If a <b>Tip of the Day</b> pop-up window appears, click it <b>Close</b>
      button.
    <p>
    The following <b>CLion</b>
      project window should appear on your screen.
    <p>
    <img src="images/clion/CLion Trivialtest.jpg">
    <p>
    Note that the right pane lists the tabs <b>CMakeLists.txt</b>
      (which contains the project's <b>make</b> code) and <b>main.cpp</b>
      (which is shown and contains a trivial C++ program).
    <p>
    In this window, I right-clicked in the gray area between the project and
      the <b>driver.cpp</b> panes and selected <b>Show Line Numbers</b>.
    <p>
    <img src="images/clion/CLion ShowLineNumbers.jpg">
    <p>

    It useful to click the triangle to the left of <b>trivialtest</b> in the
      Project/left pane.
    <p>
    <img src="images/clion/CLion Trivialtest disclosed.jpg">
    <p>
    Every project will contain a <b>cmake-build-debug</b> folder, which will
      ultimately contain the compiled code (executable) for the project.
    Later, we will see how to put data files in that folder; the executable
      uses that folder by default for reading/writing files.
    <p>
    

<li>Depress the <b>File</b> tab and select <b>Settings</b> as shown in the
       following illustraton.
    <p>
    <img src="images/clion/CLion Get to settings.jpg">
    <p>
    The following <b>Settings</b>
      window should appear on your screen.
    <p>
    <img src="images/clion/CLion Settings.jpg">
    <p>

<li>Undisclose the <b>Appearance & Behavior</b> item, disclose
      the <b>Build, Execution, Deployment</b> item, and select
      <b>CMake</b>.
    <p>
    The following <b>Settings</b>
      window should appear on your screen (see below for filling in the
      <b>CMake options</b> textbox).
    <p>
    <img src="images/clion/CLion Settings CMake.jpg">
    <p>
    Copy and paste the text<br><br>
      <b>-D CMAKE_CXX_COMPILER=/cygdrive/c/cygwin64/bin/clang++ -D CMAKE_C_COMPILER=/cygdrive/c/cygwin64/bin/clang</b><br><br>
      into the <b>CMake Options</b> textbox.
    These CMake switches tells CLion that we will be using the Clang C++/C
      compilers.
    Doing so never will be wrong, but it might be unnecessary if you have
      only one C++/C compiler on your system.
    <p>
    Another way to fix this problem is to ensure the following lines start
      your <b>CMakeLists.txt</b> file (see part 12 below, which shows the
      last line). 
<b><pre>  cmake_minimum_required(VERSION 3.3.2)

  set(CMAKE_CXX_COMPILER "/cygdrive/c/cygwin64/bin/clang++")
  set(CMAKE_C_COMPILER "/cygdrive/c/cygwin64/bin/clang")

  project(test_all_data_types)

  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")</pre></b>
    <p>
    If you do have multiple compilers on your machine and forget to specify
       these <b>CMake</b> switches or <b>CMakeLists.txt</b> options (or
       enter the wrong information) you will might encounter compliation
       problems.
    You will setup all projects in the same way, so once you do a few, all the
      rest will be setup similarly.
<p>

<li>Click the <b>OK</b> button on this window.
    <p>
    The following <b>CLion</b>
      project window should appear on your screen.
    <p>
    <img src="images/clion/CLion reCMaking.jpg">
    <p>
    It shows CLion checking whether the CMake switches you entered are legal,
      and updating the <b>cmake-build-debug</b> folder; it may take a few
      minutes.
    You can scroll through the <b>CMake</b> pane at the bottom, to see what
      happened.
    <p>
    If you want to examine the <b>CMakeLists.txt</b> file, click on it (in
      the right pane).
    It will update the right pane to
    <p>
    <img src="images/clion/CLion CMakeLists.jpg">
    <p>
    If you do this, click on <b>main.cpp</b> (in the right pane), to return to
      the C++ program.
<p>

<li>Click the <img src="images/clion/buildicon.jpg"> (Build icon) on this
      window.
    <p>
    The following <b>CLion</b>
      project window should appear on your screen.
    <p>
    <img src="images/clion/CLion Built.jpg">
    <p>
    The results of the build appear in the <b>Message Build</b> pane.
    This <b>trivialtest</b> C++ program has now been compiled and linked
      successfully;
      either could have dispayed errors in the <b>Message Build</b> pane, which
      would have to be corrected before the program could be run.
    <p>
    <!--
    Because building was successful, the Run icon (
      <img src="images/clion/buildicon.jpg">) turned from Gray to Green
    -->
<p>
   
<li>Click the <img src="images/clion/runicon.jpg"> (Run icon) on this
      window.
    <p>
    The following <b>Edit Configuration</b>
      pop-up window should appear on your screen.
    <p>
    <img src="images/clion/CLion Configuration.jpg">
    <p>
    For the <b>Target</b> dropdown, select <b>trivialtest</b> as shown.
    The <b>Executable</b> dropdown will change to <b>trivialtest</b> 
      automatically.

<li>Click the <img src="images/clion/CLion Run Button.jpg"> (<b>Run</b> button)
      on this window.
    <p>
    The following <b>CLion</b>
      project window should appear on your screen.
    <p>
    <img src="images/clion/CLion Run.jpg">
    <p>
    The results of running the program print in the <b>Run</b> pane.
<p>

<li>To edit rebuild, and rerun the program, change the output string to
      <b>"Goodbye, World!"</b> and then click the
      <img src="images/clion/runicon.jpg"> (Run icon) again.
    CLion will rebuild the project (which contains no errors; you will briefly
      see the Message Build pane as shown above), and then rerun it.
    <p>
    The following <b>CLion</b>
      project window should appear on your screen.
    <p>
    <img src="images/clion/CLion reRun.jpg">
    <p>
    The results of rerunning the program appear in the <b>Run</b> pane.
<p>

<li>If we create a syntax error (remove the <b>;</b> at the
      end of the <b>cout</b> line), CLion will highlight <b>endl</b> (the last
      token before the error), show a red squiggle under the error, and put a
      purple an underline at the right end of that column in the
      <b>main.cpp</b> pane (by hovering over it, an error message appears);
      CLion will also put a white <b>!</b> surrounded by a red circle at the
      end of the top line in the <b>main.cpp</b> pane.
    <p>
    The following <b>CLion</b>
      project window should appear on your screen.
    <p>
    <img src="images/clion/CLion reRun syntax error 1.jpg">
    <p>
    To try to rebuild and rerun this code (it will fail), click the
      <img src="images/clion/runicon.jpg"> (Run icon) again.
    <p>
    The following <b>CLion</b>
      project window should appear on your screen.
    <p>
    <img src="images/clion/CLion reRun syntax error 2.jpg">
    <p>
    The failed results of attempting to rebuild the program appear in the
      <b>Messages Build</b> pane; here I have repositioned the
      separation between the <b>mail.cpp</b> and <b>Message Build</b> panes
      to show the entire program and all the errors allow all errors to appear.
</ol>
We will now continue by learning how to download a CLion project and run it.
During the quarter, you will be asked to do this for all programming
  assignments and many quizzes.
<p>

<hr align="left" width="33%">
<h3>Section 3) Testing Downloadable CLion Projects with the Course Libraries</h3>
<p>
In this section you will learn more about CLion, by downloading the course
  libraries and then downloading/building/running a CLion project that contains
  various programs that use these libraries.
<p>
<ol>
<li>Create a new shortcut named <b>ClionProjects</b>
      (to the folder <b>C:\Users\yourname\ClionProjects</b>,
       which CLion should have creatred, now containing only
       the <b>trivialtest</b> folder) 
      and place it on your desktop near the shortcut that
      you use to start CLion.
<p>

<li>Download and unzip the file <a href="libraries.zip">template</a>;
    Copy its three folders (<b>courselib</b>, <b>gtestlib</b>, and
      <b>test_all_data_types</b>) into the folder <b>ClionProjects</b>
      shortcuts; it should already contain the <b>trivialtest</b> folder,
      created by the operations above.
    <p>
    Generally, whenever you download CLion projects, you will unzip them and 
      then copy their folders into the folder that <b>ClionProjects</b>
      shortcuts.
<p>

<li>Click the <b>File</b> tab near the upper-left corner of the CLion window;
      then click the <b>Open</b> option in the pull-down menu.
    <p>
    The following  pop-up window should appear on your screen.
    <p>
    <img src="images/clion/CLion Open.jpg">
    <p>
    You may need to scroll this window and disclose/undisclose various folders
      to make it appear as shown above.
    The <b>Users</b> folder should contain a folder with your name
      (<b>Pattis</b> for me); it should contain a folder with the
      <b>ClionProjects</b> foler; it should contain the three folders
      <b>courselib</b>, <b>gtestlib</b>, <b>test_all_data_types</b>,
      and <b>trivialtest</b>.
    <p>
    Click on the <b>test_all_data_types</b> folder, so that it is highlighted.
<p>

<li>Click the <b>OK</b> button on this window.
    <p>
    The following <b>Open Project</b> window should appear on your screen.
    <p>
    <img src="images/clion/CLion This Window.jpg">
    <p>

<li>Click the <b>This Window</b> button on this window.
    (clicking <b>New Window</b> creates a second project window, which
      is sometimes useful)
    <p>
    The following <b>CLion</b>
      project window should appear on your screen.
    <p>
    <img src="images/clion/CLion TADT.jpg">
    <p>

<li>Scroll downward, select lines 30-35, and press <b>ctrl-/</b>,
      which uncomments the chosen lines.
    <p>
    The following <b>CLion</b>
      project window should appear on your screen.
    <p>
    <img src="images/clion/CLion driver_set.jpg">
    <p>
    If you press <b>ctrl-/</b></b> again, it will comment the lines; so
      this command really means <b>toggle-comment</b> on the selected lines.
    Before continuing ensure lines 30-35 are uncommented.
<p>

<li>Click the <img src="images/clion/runicon.jpg"> (Run icon) on this
      window.
    <p>
    The following <b>CLion</b>
      project window should appear on your screen.
    <p>
    <img src="images/clion/CLion driver_set run.jpg">
    <p>
    First it will show the <b>Message Build</b> pane; it should be successful,
      so it should next show the <b>Run</b> pane.
    <p>
    Experiment with this driver by entering commands (and their arguments, when
      prompted) to better understand the <b>set</b> data type.
    You can enter the <b>q</b> command to terminate the driver, or you can
      click the <img src="images/clion/stopicon.jpg"> (Stop icon) on the
      left of the <b>Run</b> pane to terminate the driver.
    After terminating the driver, click the
      <img src="images/clion/closeicon.jpg"> (Close icon) left of the
      <b>Run</b> pane to close/remove the Run pane.
    <p>
    I suggest that you try terminating the driver with a <b>q</b> command; then,
      rerun the program and terminate it with the Stop icon.
<p>

<li>We briefly noted the <b>cmake-build-debug</b> folder; now we will examine
      it in more detail, but via an Explorer window, not via CLion.
    Click on the <b>ClionProjects</b> shortcut to open an Explorer window,
      then double-click its <b>test_all_data_types</b> folder, and finally
      double-click its <b>cmake-build-debug</b> folder.
    <p>
    The following Explorer window should appear on your screen.
    <p>
    <img src="images/clion/CLion Explorer cmake-build-debug.jpg">
    <p>
    Whenever you create a project, a <b>cmake-build-debug</b> folder will
      appear in its project folder.
    We have built two projects in this handout: <b>test_all_data_types</b>
      and <b>trivialtest</b>; each has its own <b>cmake-build-debug</b> folder.
    <p>

<li>Double-click the file <b>test_all_data_types.exe</b> in this folder to run
      this program in Windows, outside of CLion.
    The following MS-DOS window should appear on your screen.
    <p>
    <img src="images/clion/CLion MSDOSRun.jpg">
    <p>
    <blockquote>
    If the error pop-window
    <p>
    <img src="images/clion/CLion patherror.jpg">
    <p>
    appears, you must also add <b>C:\cygwin64\bin</b> to the
      user variable <b>PATH</b>, briefly illustrated below
      (also see step 15 in the <a href="cygwin.html" target="_new">Cygwin</a> handout).
    <p>
    <img src="images/clion/CLion patherrorfix.jpg">
    <p>
    </blockquote>
    Experiment with this driver by entering commands (and their arguments, when
      prompted); it runs as it did in the CLion Run Pane.
    Note that when you enter the <b>q</b> command the program terminates and the
      MS-DOS window <b>immediately</b> disappears.
    <p>
    So, when a program we run under CLion terminates, its Run Pane retains the
      information printed (by <b>cout</b>) after the run terminates, but when we
      run it directly in an MS-DOS window, the window disappears after the run
      terminates.
    For example, if you find the <b>trivialtest.exe</b> file and run it by
      double-clicking this file, its MS-DOS window will run and then immediately
      disappear.
    <p>
    For a program that <b>produces lots of output</b> and
       <b>does not terminate</b> (we can always put an input statement at the
        end, so it doesn't terminate until the user enters something) it is 
        often faster to run the program in an MS-DOS window, rather than in
        CLion.
<p>

<li>Find the <b>input files</b> folder in the <b>test_all_data_types</b> folder
      and copy all of its <b>.txt</b> data files into the
      <b>cmake-build-debug</b> folder that contains the
      <b>test_all_data_types.exe</b> file.
    Copy these files using an Explorer window or the Project pane in the CLion
      window (after disclosing the <b>cmake-build-debug</b> and 
      <b>input files</b> folders).
    <p>
    Then, run the program (either in the CLion Run pane or a MS-DOS window; try
      doing it from both places) and
      issue the <b>lf</b> command (load from file); when prompted for the file
      name, just press the <b>Enter</b> key to choose the default
      (<b>loadset.txt</b>).
    <p>
    When running using the CLion Run pane, the following <b>CLion</b>
      project window should appear on your screen.
    <p>
    <img src="images/clion/CLion lf command.jpg">
    <p>
    <b>IMPORTANT</b>: If a program reads data files, the root folder for the
         specifying the files is the folder in which the <b>.exe</b> file
         appears.
       It is simplest to copy all the data files into this folder.
       An alternative would be to leave the files in the <b>input files</b>
         folder, copy the entire folder, and then refer to these file names like
         <b>input files\loadset.txt</b>.
<p>

<li>A typical project folder may have more than one <b>.cpp</b> file with a
     main function (as <b>test_all_data_types</b> has).
    Only one of these <b>.cpp</b> files can have its main function uncommented,
      otherwise the build will fail.
    When working on project, it is typical to 
    <p>
    <ol type="a">
      <li>Comment-out code in one <b>.cpp</b> file.
      <li>Uncomment code in another <b>.cpp</b> file.
      <li>Rebuild/Rerun the newly uncommented <b>.cpp</b> file.
    </ol>
    <p>
    In the <b>test_all_data_types</b> project folder, the <b>driver.cpp</b>
      file has many main functions: we uncommented one (in step 6 above) to
      allow us to run the Set driver.
    If more than one main function is uncommented, attempting to build the code
      will result in the compiler specifying a <b>redefinition of 'main'</b>
      error.
    <p>
    The <b>test_all_data_types</b> project folder also contains many <b>.cpp</b>
      files (their names all start with <b>test</b>) that each contain one main
      function (each is a <b>Googletest</b> for one data type).
    If more than one file contains a main function, attempting to build the
      code will result in the linker specifying a
      <b>multiple definition of 'main'</b> error.
    <p>
    To switch this project from running the Set driver to the Set Googletest
    <ol type="a">
      <li>Comment-out lines 30-35 in the <b>driver.cpp</b> file: select them
            and type the <b>ctrl-/</b> command to toggle the commenting
            on the selected lines (comment them).
      <li>Scroll down the Project Pane (on the left) and double-click the
            <b>test_set.cpp</b> file so that it appears as an editor tab.
      <li>Type the <b>ctrl-a</b> command to select <b>all</b> the lines in this
            file.
      <li>Type the <b>ctrl-/</b> command to toggle the commenting on the
            selected lines (uncomment them).
    </ol>
    <p>
    Click the <img src="images/clion/runicon.jpg"> (Run icon).
    When prompted enter the three lines of information shown.
    <p>
    The following <b>CLion</b>
      project window should appear on your screen.
    <p>
    <img src="images/clion/CLion test_set run.jpg">
    <p>
</ol>
<p>
We are now at the end of this handout.
You will not need to repeat the first two sections during the course, but you
  will frequently download project folders and use them as demonstrated in
  section 3.

</body>
</html>

