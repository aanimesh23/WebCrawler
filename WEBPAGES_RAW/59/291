<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<!--NewPage-->
<html>
<head>
<!-- Generated by javadoc on Thu Aug 31 15:31:12 PDT 2000 -->
<title>
  Class TheSimulator
</title>
</head>
<body>
<a name="_top_"></a>
<h1>
  Class TheSimulator
</h1>
<pre>
java.lang.Object
   |
   +----<a href="Simulator.html#_top_">Simulator</a>
           |
           +----TheSimulator
</pre>
<hr>
<dl>
  <dt> public class <b>TheSimulator</b>
  <dt> extends <a href="Simulator.html#_top_">Simulator</a>
  <dt> implements EventDestination
</dl>
A subclass of Simulator
<p>
<dl>
    <dt> <b>See Also:</b>
    <dd> <a href="Simulator.html#_top_">Simulator</a>
</dl>
<hr>
<a name="index"></a>
<h2>
  <img src="images/constructor-index.gif" width=275 height=38 alt="Constructor Index">
</h2>
<dl>
  <dt> <img src="images/yellow-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#TheSimulator(java.lang.String[])"><b>TheSimulator</b></a>(String[])
  <dd> 
 Constructor.
</dl>
<h2>
  <img src="images/method-index.gif" width=207 height=38 alt="Method Index">
</h2>
<dl>
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#allIdleProcessors()"><b>allIdleProcessors</b></a>()
  <dd> 
 Return an array with id's for the currently idle processors

 
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#callJobArrival(float, int)"><b>callJobArrival</b></a>(float, int)
  <dd>  Calls the SchedulerInterface routine JobArrival in the scheduler

 
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#callTaskStateChange(float, long)"><b>callTaskStateChange</b></a>(float, long)
  <dd>  Calls the SchedulerInterface routine TaskStateChange in the scheduler

 
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#getJobId(long)"><b>getJobId</b></a>(long)
  <dd> 
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#getJobTypeId(int)"><b>getJobTypeId</b></a>(int)
  <dd> 
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#getNeighbours(int)"><b>getNeighbours</b></a>(int)
  <dd>  Returns the neighbours of a processor

 
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#getNetwork()"><b>getNetwork</b></a>()
  <dd>  Return the object Network.
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#getPEId(long)"><b>getPEId</b></a>(long)
  <dd>  Returns the id of the processor on which task with taskId resides

 
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#getTask(long)"><b>getTask</b></a>(long)
  <dd>  Return the object task corresponding to a given id.
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#handleEvent(SimEvent)"><b>handleEvent</b></a>(SimEvent)
  <dd> 
 Overrides handleEvent in Simulator.
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#jobClass(int)"><b>jobClass</b></a>(int)
  <dd> 
 Returns user defined job class

 
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#jobs()"><b>jobs</b></a>()
  <dd> 
 Returns an array with global job identifiers for all jobs managed by this object

 
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#jobsWithLeastTasks()"><b>jobsWithLeastTasks</b></a>()
  <dd> 
Returns an array with global job identifiers for jobs, managed by this object, with least number of tasks

 
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#jobsWithLeastTasks(int)"><b>jobsWithLeastTasks</b></a>(int)
  <dd> 
 Returns an array with global job identifiers for jobs, managed by this object, with least number of tasks in the given state

 
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#jobsWithMostTasks()"><b>jobsWithMostTasks</b></a>()
  <dd> 
 Returns an array with global job identifiers for jobs, managed by this object, with most number of tasks

 
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#jobsWithMostTasks(int)"><b>jobsWithMostTasks</b></a>(int)
  <dd> 
 Returns an array with global job identifiers for jobs, managed by this object, with most number of tasks in the given state

 
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#nrIdleProcessors()"><b>nrIdleProcessors</b></a>()
  <dd> 
 Return the number of idle processors in the current network

 
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#nrProcessors()"><b>nrProcessors</b></a>()
  <dd> 
 Return the number of processors in the current network

 
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#numberOfJobs()"><b>numberOfJobs</b></a>()
  <dd> 
 Returns the number of jobs managed by this object

 
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#numberOfTasks()"><b>numberOfTasks</b></a>()
  <dd> 
 Returns the total number of tasks, contained by jobs managed by this object
 
 
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#numberOfTasks(int)"><b>numberOfTasks</b></a>(int)
  <dd> 
 Returns the number of tasks in the given state, contained by jobs managed by this object

 
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#numberOfTasksInJob(int)"><b>numberOfTasksInJob</b></a>(int)
  <dd> 
 Returns the number of tasks contained by the given job

 
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#numberOfTasksInJob(int, int)"><b>numberOfTasksInJob</b></a>(int, int)
  <dd> 
 Returns the number of tasks in the given state, contained by the given job

 
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#numberOfTasksInJobOnPE(int, int)"><b>numberOfTasksInJobOnPE</b></a>(int, int)
  <dd>  Returns the number of tasks on the given processing element, contained by the given job.
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#numberOfTasksInJobOnPE(int, int, int)"><b>numberOfTasksInJobOnPE</b></a>(int, int, int)
  <dd>  Returns the number of tasks on the given processing element
 in the given state, contained by the given job.
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#PreemptStatistics(int, float)"><b>PreemptStatistics</b></a>(int, float)
  <dd> 
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#printStatistics()"><b>printStatistics</b></a>()
  <dd> 
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#processEvent(SimEvent)"><b>processEvent</b></a>(SimEvent)
  <dd>  Overrides method in Simulator.
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#regScheduler(SchedulerInterface)"><b>regScheduler</b></a>(SchedulerInterface)
  <dd>  Registers an instance of the Scheduler class in the simulator

 
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#removeEventsToTask(long)"><b>removeEventsToTask</b></a>(long)
  <dd> 
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#scheduleTask(int, long, float, float)"><b>scheduleTask</b></a>(int, long, float, float)
  <dd>  Schedules a task at a processor at a certain time

 
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#start()"><b>start</b></a>()
  <dd> 
 Starts the simulation


  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#stateOfTask(long)"><b>stateOfTask</b></a>(long)
  <dd>  Return the state of a task

 
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#stop()"><b>stop</b></a>()
  <dd>  Overrides stop method in Simulator.
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#tasks()"><b>tasks</b></a>()
  <dd> 
 Returns an array with global task identifiers for tasks, contained by jobs managed by this object.
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#tasks(int)"><b>tasks</b></a>(int)
  <dd> 
Returns an array with global task identifiers for tasks in the given state, contained by jobs managed by this object.
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#tasksInJob(int)"><b>tasksInJob</b></a>(int)
  <dd> 
 Returns an array with global task identifiers for tasks contained by the given job.
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#tasksInJob(int, int)"><b>tasksInJob</b></a>(int, int)
  <dd> 
 Returns an array with global task identifiers for tasks in the given state contained by the given job.
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#tasksInJobOnPE(int, int)"><b>tasksInJobOnPE</b></a>(int, int)
  <dd>  Returns an array with global task identifiers for all tasks
 on the given processing element, contained by the given job.
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#tasksInJobOnPE(int, int, int)"><b>tasksInJobOnPE</b></a>(int, int, int)
  <dd>  Returns an array with global task identifiers for all tasks
 on the given processing element in the given state, contained
 by the given job.
</dl>
<a name="constructors"></a>
<h2>
  <img src="images/constructors.gif" width=231 height=38 alt="Constructors">
</h2>
<a name="TheSimulator"></a>
<a name="TheSimulator(java.lang.String[])"><img src="images/yellow-ball.gif" width=12 height=12 alt=" o "></a>
<b>TheSimulator</b>
<pre>
 public TheSimulator(String args[])
</pre>
<dl>
  <dd> Constructor.
<p>
  <dd><dl>
    <dt> <b>Parameters:</b>
    <dd> arguments - Runtime arguments supplied
    <dt> <b>See Also:</b>
    <dd> <a href="Network.html#_top_">Network</a>, Job1
  </dl></dd>
</dl>
<a name="methods"></a>
<h2>
  <img src="images/methods.gif" width=151 height=38 alt="Methods">
</h2>
<a name="regScheduler(SchedulerInterface)"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="regScheduler"><b>regScheduler</b></a>
<pre>
 public void regScheduler(<a href="SchedulerInterface.html#_top_">SchedulerInterface</a> sched)
</pre>
<dl>
  <dd> Registers an instance of the Scheduler class in the simulator
<p>
  <dd><dl>
    <dt> <b>Parameters:</b>
    <dd> sched - An instance of the Scheduler class
    <dt> <b>See Also:</b>
    <dd> Scheduler
  </dl></dd>
</dl>
<a name="start()"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="start"><b>start</b></a>
<pre>
 public void start()
</pre>
<dl>
  <dd> Starts the simulation
<p>
  <dd><dl>
    <dt> <b>Overrides:</b>
    <dd> <a href="Simulator.html#start()">start</a> in class <a href="Simulator.html#_top_">Simulator</a>
  </dl></dd>
</dl>
<a name="stop()"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="stop"><b>stop</b></a>
<pre>
 public void stop()
</pre>
<dl>
  <dd> Overrides stop method in Simulator. Called when the simulation has ended i.e no
 more events to process
<p>
  <dd><dl>
    <dt> <b>Overrides:</b>
    <dd> <a href="Simulator.html#stop()">stop</a> in class <a href="Simulator.html#_top_">Simulator</a>
    <dt> <b>See Also:</b>
    <dd> <a href="Simulator.html#_top_">Simulator</a>
  </dl></dd>
</dl>
<a name="printStatistics()"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="printStatistics"><b>printStatistics</b></a>
<pre>
 public void printStatistics()
</pre>
<a name="processEvent(SimEvent)"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="processEvent"><b>processEvent</b></a>
<pre>
 public void processEvent(<a href="SimEvent.html#_top_">SimEvent</a> e)
</pre>
<dl>
  <dd> Overrides method in Simulator. Forwards End Of Timeslice events to the registered
 scheduler by calling EndOfTimeSlice method in the Scheduler class. Also prints out
 event information using the event's toString-method.
<p>
  <dd><dl>
    <dt> <b>Parameters:</b>
    <dd> e - An instance of the SimEvent class
    <dt> <b>Overrides:</b>
    <dd> <a href="Simulator.html#processEvent(SimEvent)">processEvent</a> in class <a href="Simulator.html#_top_">Simulator</a>
    <dt> <b>See Also:</b>
    <dd> <a href="SimEvent.html#_top_">SimEvent</a>, Scheduler
  </dl></dd>
</dl>
<a name="PreemptStatistics(int, float)"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="PreemptStatistics"><b>PreemptStatistics</b></a>
<pre>
 public void PreemptStatistics(int PeId,
                               float time)
</pre>
<a name="handleEvent(SimEvent)"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="handleEvent"><b>handleEvent</b></a>
<pre>
 public void handleEvent(<a href="SimEvent.html#_top_">SimEvent</a> e)
</pre>
<dl>
  <dd> Overrides handleEvent in Simulator.
<p>
  <dd><dl>
    <dt> <b>Parameters:</b>
    <dd> e - An instance of SimEvent
    <dt> <b>See Also:</b>
    <dd> <a href="Simulator.html#_top_">Simulator</a>, <a href="SimEvent.html#_top_">SimEvent</a>
  </dl></dd>
</dl>
<a name="removeEventsToTask(long)"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="removeEventsToTask"><b>removeEventsToTask</b></a>
<pre>
 protected void removeEventsToTask(long taskId)
</pre>
<a name="scheduleTask(int, long, float, float)"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="scheduleTask"><b>scheduleTask</b></a>
<pre>
 public void scheduleTask(int PeId,
                          long taskId,
                          float time,
                          float period)
</pre>
<dl>
  <dd> Schedules a task at a processor at a certain time
<p>
  <dd><dl>
    <dt> <b>Parameters:</b>
    <dd> PeId - Processor ID
    <dd> taskId - Task ID
    <dd> time - Time to schedule task
  </dl></dd>
</dl>
<a name="numberOfJobs()"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="numberOfJobs"><b>numberOfJobs</b></a>
<pre>
 public int numberOfJobs()
</pre>
<dl>
  <dd> Returns the number of jobs managed by this object
<p>
  <dd><dl>
    <dt> <b>Returns:</b>
    <dd> the number of jobs managed by this object
  </dl></dd>
</dl>
<a name="numberOfTasks()"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="numberOfTasks"><b>numberOfTasks</b></a>
<pre>
 public int numberOfTasks()
</pre>
<dl>
  <dd> Returns the total number of tasks, contained by jobs managed by this object
<p>
  <dd><dl>
    <dt> <b>Returns:</b>
    <dd> the total number of tasks, contained by jobs managed by this objec
  </dl></dd>
</dl>
<a name="numberOfTasks(int)"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="numberOfTasks"><b>numberOfTasks</b></a>
<pre>
 public int numberOfTasks(int state)
</pre>
<dl>
  <dd> Returns the number of tasks in the given state, contained by jobs managed by this object
<p>
  <dd><dl>
    <dt> <b>Parameters:</b>
    <dd> taskState - a task state.
    <dt> <b>Returns:</b>
    <dd> the number of tasks in the given state, contained by jobs managed by this object
  </dl></dd>
</dl>
<a name="numberOfTasksInJob(int)"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="numberOfTasksInJob"><b>numberOfTasksInJob</b></a>
<pre>
 public int numberOfTasksInJob(int jobId)
</pre>
<dl>
  <dd> Returns the number of tasks contained by the given job
<p>
  <dd><dl>
    <dt> <b>Parameters:</b>
    <dd> jobId - a global job identifier
    <dt> <b>Returns:</b>
    <dd> the number of tasks contained by the given job
    <dt> <b>Throws:</b> IllegalArgumentException
    <dd> if the given job is not managed by this object
  </dl></dd>
</dl>
<a name="jobClass(int)"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="jobClass"><b>jobClass</b></a>
<pre>
 public String jobClass(int jobId)
</pre>
<dl>
  <dd> Returns user defined job class
<p>
  <dd><dl>
    <dt> <b>Parameters:</b>
    <dd> jobId - a global job identifier
    <dt> <b>Returns:</b>
    <dd> the string describing job
    <dt> <b>Throws:</b> IllegalArgumentException
    <dd> if the given job is not managed by this object
  </dl></dd>
</dl>
<a name="numberOfTasksInJob(int, int)"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="numberOfTasksInJob"><b>numberOfTasksInJob</b></a>
<pre>
 public int numberOfTasksInJob(int jobId,
                               int taskState)
</pre>
<dl>
  <dd> Returns the number of tasks in the given state, contained by the given job
<p>
  <dd><dl>
    <dt> <b>Parameters:</b>
    <dd> jobId - a global job identifier
    <dd> taskState - a task state
    <dt> <b>Returns:</b>
    <dd> the number of tasks in the given state, contained by the given job
    <dt> <b>Throws:</b> IllegalArgumentException
    <dd> if the given job is not managed by this object
  </dl></dd>
</dl>
<a name="tasksInJob(int)"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="tasksInJob"><b>tasksInJob</b></a>
<pre>
 public long[] tasksInJob(int jobId)
</pre>
<dl>
  <dd> Returns an array with global task identifiers for tasks contained by the given job.
<p>
  <dd><dl>
    <dt> <b>Parameters:</b>
    <dd> jobId - a global job identifier.
    <dt> <b>Returns:</b>
    <dd> an array with global task identifiers for tasks contained by the given job.
    <dt> <b>Throws:</b> IllegalArgumentException
    <dd> if the given job is not managed by this object.
  </dl></dd>
</dl>
<a name="tasksInJob(int, int)"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="tasksInJob"><b>tasksInJob</b></a>
<pre>
 public long[] tasksInJob(int jobId,
                          int taskState)
</pre>
<dl>
  <dd> Returns an array with global task identifiers for tasks in the given state contained by the given job.
<p>
  <dd><dl>
    <dt> <b>Parameters:</b>
    <dd> jobId - a global job identifier.
    <dt> <b>Returns:</b>
    <dd> an array with global task identifiers for tasks in the given statecontained by the given job.
    <dt> <b>Throws:</b> IllegalArgumentException
    <dd> if the given job is not managed by this object.
  </dl></dd>
</dl>
<a name="tasks()"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="tasks"><b>tasks</b></a>
<pre>
 public long[] tasks()
</pre>
<dl>
  <dd> Returns an array with global task identifiers for tasks, contained by jobs managed by this object.
<p>
  <dd><dl>
    <dt> <b>Returns:</b>
    <dd> an array with global task identifiers for tasks, contained by jobs managed by this object
  </dl></dd>
</dl>
<a name="tasks(int)"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="tasks"><b>tasks</b></a>
<pre>
 public long[] tasks(int state)
</pre>
<dl>
  <dd> Returns an array with global task identifiers for tasks in the given state, contained by jobs managed by this object.
<p>
  <dd><dl>
    <dt> <b>Parameters:</b>
    <dd> state - a task state
    <dt> <b>Returns:</b>
    <dd> an array with global task identifiers for tasks in the given state, contained by jobs managed by this object
  </dl></dd>
</dl>
<a name="jobs()"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="jobs"><b>jobs</b></a>
<pre>
 public int[] jobs()
</pre>
<dl>
  <dd> Returns an array with global job identifiers for all jobs managed by this object
<p>
  <dd><dl>
    <dt> <b>Returns:</b>
    <dd> an array with global job identifiers for all jobs managed by this object
  </dl></dd>
</dl>
<a name="jobsWithLeastTasks()"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="jobsWithLeastTasks"><b>jobsWithLeastTasks</b></a>
<pre>
 public int[] jobsWithLeastTasks()
</pre>
<dl>
  <dd> Returns an array with global job identifiers for jobs, managed by this object, with least number of tasks
<p>
  <dd><dl>
    <dt> <b>Returns:</b>
    <dd> an array with global job identifiers for jobs, managed by this object, with least number of tasks
  </dl></dd>
</dl>
<a name="jobsWithMostTasks()"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="jobsWithMostTasks"><b>jobsWithMostTasks</b></a>
<pre>
 public int[] jobsWithMostTasks()
</pre>
<dl>
  <dd> Returns an array with global job identifiers for jobs, managed by this object, with most number of tasks
<p>
  <dd><dl>
    <dt> <b>Returns:</b>
    <dd> an array with global job identifiers for jobs, managed by this object, with most number of tasks
  </dl></dd>
</dl>
<a name="jobsWithLeastTasks(int)"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="jobsWithLeastTasks"><b>jobsWithLeastTasks</b></a>
<pre>
 public int[] jobsWithLeastTasks(int state)
</pre>
<dl>
  <dd> Returns an array with global job identifiers for jobs, managed by this object, with least number of tasks in the given state
<p>
  <dd><dl>
    <dt> <b>Parameters:</b>
    <dd> state - - a task state
    <dt> <b>Returns:</b>
    <dd> an array with global job identifiers for jobs, managed by this object, with least number of tasks in the given state
  </dl></dd>
</dl>
<a name="jobsWithMostTasks(int)"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="jobsWithMostTasks"><b>jobsWithMostTasks</b></a>
<pre>
 public int[] jobsWithMostTasks(int state)
</pre>
<dl>
  <dd> Returns an array with global job identifiers for jobs, managed by this object, with most number of tasks in the given state
<p>
  <dd><dl>
    <dt> <b>Parameters:</b>
    <dd> state - - a task state
    <dt> <b>Returns:</b>
    <dd> an array with global job identifiers for jobs, managed by this object, with most number of tasks in the given state
  </dl></dd>
</dl>
<a name="nrProcessors()"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="nrProcessors"><b>nrProcessors</b></a>
<pre>
 public int nrProcessors()
</pre>
<dl>
  <dd> Return the number of processors in the current network
<p>
  <dd><dl>
    <dt> <b>Returns:</b>
    <dd> the number of processors in the current network
  </dl></dd>
</dl>
<a name="nrIdleProcessors()"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="nrIdleProcessors"><b>nrIdleProcessors</b></a>
<pre>
 public int nrIdleProcessors()
</pre>
<dl>
  <dd> Return the number of idle processors in the current network
<p>
  <dd><dl>
    <dt> <b>Returns:</b>
    <dd> the number of idle processors in the current network
  </dl></dd>
</dl>
<a name="allIdleProcessors()"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="allIdleProcessors"><b>allIdleProcessors</b></a>
<pre>
 public int[] allIdleProcessors()
</pre>
<dl>
  <dd> Return an array with id's for the currently idle processors
<p>
  <dd><dl>
    <dt> <b>Returns:</b>
    <dd> an array with id's for the currently idle processors
  </dl></dd>
</dl>
<a name="getPEId(long)"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="getPEId"><b>getPEId</b></a>
<pre>
 public int getPEId(long taskId)
</pre>
<dl>
  <dd> Returns the id of the processor on which task with taskId resides
<p>
  <dd><dl>
    <dt> <b>Parameters:</b>
    <dd> taskId - Task identifier
    <dt> <b>Returns:</b>
    <dd> Processor identifier
  </dl></dd>
</dl>
<a name="numberOfTasksInJobOnPE(int, int)"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="numberOfTasksInJobOnPE"><b>numberOfTasksInJobOnPE</b></a>
<pre>
 public int numberOfTasksInJobOnPE(int jobId,
                                   int peId)
</pre>
<dl>
  <dd> Returns the number of tasks on the given processing element, contained by the given job.
<p>
  <dd><dl>
    <dt> <b>Parameters:</b>
    <dd> jobId - a global job identifier.
    <dd> peId - a processing element identifier.
    <dt> <b>Returns:</b>
    <dd> the number of tasks on the given processing element, contained by the given job.
    <dt> <b>Throws:</b> IllegalArgumentException
    <dd> if the given job is not managed by this object.
    <dt> <b>See Also:</b>
    <dd> <a href="Job.html#_top_">Job</a>, <a href="Task.html#_top_">Task</a>
  </dl></dd>
</dl>
<a name="tasksInJobOnPE(int, int)"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="tasksInJobOnPE"><b>tasksInJobOnPE</b></a>
<pre>
 public long[] tasksInJobOnPE(int jobId,
                              int peId)
</pre>
<dl>
  <dd> Returns an array with global task identifiers for all tasks
 on the given processing element, contained by the given job.
<p>
  <dd><dl>
    <dt> <b>Parameters:</b>
    <dd> jobId - a global job identifier.
    <dd> peId - a processing element identifier.
    <dt> <b>Returns:</b>
    <dd> an array with global task identifiers for all tasks
 on the given processing element, contained by the given job.
    <dt> <b>Throws:</b> IllegalArgumentException
    <dd> if the given job is not
 managed by this object.
    <dt> <b>See Also:</b>
    <dd> <a href="Task.html#_top_">Task</a>
  </dl></dd>
</dl>
<a name="tasksInJobOnPE(int, int, int)"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="tasksInJobOnPE"><b>tasksInJobOnPE</b></a>
<pre>
 public long[] tasksInJobOnPE(int jobId,
                              int peId,
                              int taskState)
</pre>
<dl>
  <dd> Returns an array with global task identifiers for all tasks
 on the given processing element in the given state, contained
 by the given job.
<p>
  <dd><dl>
    <dt> <b>Parameters:</b>
    <dd> jobId - a global job identifier.
    <dd> peId - a processing element identifier.
    <dd> taskState - a task state.
    <dt> <b>Returns:</b>
    <dd> an array with global task identifiers for all tasks
 on the given processing element in the given state, contained
 by the given job.
    <dt> <b>Throws:</b> IllegalArgumentException
    <dd> if the given job is not
 managed by this object.
    <dt> <b>See Also:</b>
    <dd> <a href="Task.html#_top_">Task</a>
  </dl></dd>
</dl>
<a name="numberOfTasksInJobOnPE(int, int, int)"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="numberOfTasksInJobOnPE"><b>numberOfTasksInJobOnPE</b></a>
<pre>
 public int numberOfTasksInJobOnPE(int jobId,
                                   int peId,
                                   int taskState)
</pre>
<dl>
  <dd> Returns the number of tasks on the given processing element
 in the given state, contained by the given job.
<p>
  <dd><dl>
    <dt> <b>Parameters:</b>
    <dd> jobId - a global job identifier.
    <dd> peId - a processing element identifier.
    <dd> taskState - a task state.
    <dt> <b>Returns:</b>
    <dd> the number of tasks on the given processing element
 in the given state, contained by the given job.
    <dt> <b>Throws:</b> IllegalArgumentException
    <dd> if the given job is not
 managed by this object.
    <dt> <b>See Also:</b>
    <dd> <a href="Job.html#_top_">Job</a>, <a href="Task.html#_top_">Task</a>
  </dl></dd>
</dl>
<a name="getNeighbours(int)"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="getNeighbours"><b>getNeighbours</b></a>
<pre>
 public int[] getNeighbours(int PeId)
</pre>
<dl>
  <dd> Returns the neighbours of a processor
<p>
  <dd><dl>
    <dt> <b>Parameters:</b>
    <dd> PeId - The id of the processor
    <dt> <b>Returns:</b>
    <dd> An array with the id's of the neighbour processors
  </dl></dd>
</dl>
<a name="stateOfTask(long)"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="stateOfTask"><b>stateOfTask</b></a>
<pre>
 public int stateOfTask(long taskId)
</pre>
<dl>
  <dd> Return the state of a task
<p>
  <dd><dl>
    <dt> <b>Parameters:</b>
    <dd> The - task id
    <dt> <b>Returns:</b>
    <dd> The state of the task
  </dl></dd>
</dl>
<a name="getJobId(long)"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="getJobId"><b>getJobId</b></a>
<pre>
 public int getJobId(long taskId)
</pre>
<a name="getJobTypeId(int)"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="getJobTypeId"><b>getJobTypeId</b></a>
<pre>
 public int getJobTypeId(int jobId)
</pre>
<a name="getNetwork()"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="getNetwork"><b>getNetwork</b></a>
<pre>
 public <a href="Network.html#_top_">Network</a> getNetwork()
</pre>
<dl>
  <dd> Return the object Network.
 Overrides method in Simulator.java
<p>
  <dd><dl>
    <dt> <b>Returns:</b>
    <dd> the Task
    <dt> <b>Overrides:</b>
    <dd> <a href="Simulator.html#getNetwork()">getNetwork</a> in class <a href="Simulator.html#_top_">Simulator</a>
    <dt> <b>See Also:</b>
    <dd> <a href="Task.html#_top_">Task</a>
  </dl></dd>
</dl>
<a name="getTask(long)"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="getTask"><b>getTask</b></a>
<pre>
 public <a href="Task.html#_top_">Task</a> getTask(long taskId)
</pre>
<dl>
  <dd> Return the object task corresponding to a given id.
<p>
  <dd><dl>
    <dt> <b>Parameters:</b>
    <dd> Task - Id
    <dt> <b>Returns:</b>
    <dd> the Task
    <dt> <b>See Also:</b>
    <dd> <a href="Task.html#_top_">Task</a>
  </dl></dd>
</dl>
<a name="callJobArrival(float, int)"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="callJobArrival"><b>callJobArrival</b></a>
<pre>
 public void callJobArrival(float time,
                            int jobID)
</pre>
<dl>
  <dd> Calls the SchedulerInterface routine JobArrival in the scheduler
<p>
  <dd><dl>
    <dt> <b>Parameters:</b>
    <dd> time - Arrival time of the new job
    <dd> jobID - the id of the new job
    <dt> <b>See Also:</b>
    <dd> <a href="JobManager.html#_top_">JobManager</a>
  </dl></dd>
</dl>
<a name="callTaskStateChange(float, long)"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="callTaskStateChange"><b>callTaskStateChange</b></a>
<pre>
 public void callTaskStateChange(float time,
                                 long taskID)
</pre>
<dl>
  <dd> Calls the SchedulerInterface routine TaskStateChange in the scheduler
<p>
  <dd><dl>
    <dt> <b>Parameters:</b>
    <dd> time - time when the change of state occurred
    <dd> taskID - id of the task
    <dt> <b>See Also:</b>
    <dd> <a href="Task.html#_top_">Task</a>
  </dl></dd>
</dl>
</body>
</html>
