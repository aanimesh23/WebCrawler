//    Processing educational code
//    Copyright (C) 2013  Lee Martie
//
//    This program is free software: you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation, either version 3 of the License, or
//    (at your option) any later version.
//
//    This program is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License
//    along with this program.  If not, see <http://www.gnu.org/licenses/>.

public class Particle {

  float lifeSpan = 255;
  PVector location;
  PVector acceleration;
  PVector velocity;

  float mass = 1;

  public Particle(float x, float y) {
    location = new PVector(x, y);
    //play with velocity for different strength
    velocity = new PVector(random(.01, .01), random(.05, .05));
    acceleration = new PVector(0, 0);
  } 

  //update acceleraction by applying a force
  void applyForce(PVector force) {
    PVector f = PVector.div(force, mass);
    acceleration.add(f);
  }



  //update pebble location with forces :D
  public void step() {

    velocity.add(acceleration);
    location.add(velocity);   

    //important  step!
    acceleration.mult(0);

    if (!isDead())
      lifeSpan = lifeSpan-2;
  }

  //determines when we no longer want to see this partical
  boolean isDead() { 
    return lifeSpan <=0;
  }


  //display where this partical is now
  public void display() {
    //lifespace affects the alpha to make it disappear
    stroke(0, 0, 255, lifeSpan);
    fill(0, 0, 255, lifeSpan);
    pushMatrix();
    translate(location.x, location.y);
    ellipseMode(CENTER);
    ellipse(0, 0, 1, 10);
    popMatrix();
  }
}

