<html> 
<HEAD> 
<TITLE>Fast similarity join for multi-dimensional data (Information Systems Journal, 2007)</TITLE>  
<META NAME="description" CONTENT = "efficient similarity join, 
epsilon join, 
multi-dimensional join, 
spatial join, 
high-dimensional join, 
selectivity, 
grid join, 
main memory join, 
fast join"> 
<META NAME="keywords"    CONTENT = "efficient similarity join, 
epsilon join, 
multi-dimensional join, 
spatial join, 
high-dimensional join, 
selectivity, 
grid join, 
main memory join, 
fast join"> 
</HEAD> 

<BODY	text=#000000   
		vLink=#4f4f4f   
		aLink=#818501   
		link=#818501   
		bgColor=#ffffff   
		leftMargin=0   
		topMargin=0   
		rightMargin=2   
		VSPACE="0"   
		MARGINWIDTH="1"   
		MARGINHEIGHT="0"> 
		
<p align="center">
<TABLE width="800" border="0" ID="Table1">
<TBODY>
<TR>
<TD>
		
<H2 align=center>Fast similarity join for multi-dimensional data.</H2>
<H3 align=center>Information Systems Journal, 32(1), March 2007.</H3> 
<BR> 
<FONT style="FONT-SIZE: 10pt">

<p align =center> 
<B>Dmitri V.  Kalashnikov</B> and Sunil Prabhakar
</p> 
 
<p align="center">
	Department of Computer Sciences<BR>
	Purdue University<BR>
</p>
 
<H3 align = center>Abstract</H3>
 
<p align = justify> 
The efficient processing of multi-dimensional similarity joins is important for a large
class of applications. The dimensionality of the data for these applications ranges
from low to high. Most existing methods have focused on the execution of high-dimensional
joins over large amounts of disk-based data. The increasing sizes of
main memory available on current computers, and the need for efficient processing
of spatial joins suggest that spatial joins for a large class of problems can be processed
in main memory. In this paper, we develop two new in-memory spatial join
algorithms, the Grid-join and EGO*-join, and study their performance. Through
evaluation, we explore the domain of applicability of each approach and provide
recommendations for the choice of a join algorithm depending upon the dimensionality
of the data as well as the expected selectivity of the join. We show that the
two new proposed join techniques substantially outperform the state of the art join
algorithm, the EGO-join.  
</p> 
<BR>

<p> <H3>Keywords:</H3>  
efficient similarity join, 
epsilon join, 
multi-dimensional join, 
spatial join, 
high-dimensional join, 
selectivity, 
grid join, 
main memory join, 
fast join
</p>
<BR>

<p> <H3>Remarks:</H3>
One of the algorithms covered in the paper, called EGO*-join,
is so <B>simple</B>, that it can be implemented from scratch
literally in one day. The paper demonstrates that that algorithm
also outperforms the state of the art, when applied to high-dimensional data. 
Thus, EGO*-join is a good choice for an in-memory join algorithm in general, 
and, due to its simplicity, it is also a good choice for a <B>baseline</B> 
join algorithm.  
</p>
<BR>


			
<p>
<H3>Downloadable files:</H3> 

Paper: <A href="http://www.ics.uci.edu/~dvk/pub/IS07_dvk_join.pdf">IS07_dvk_join.pdf</A><BR>
<IMG SRC="https://students.ics.uci.edu/~dvk/fig.cgi?IS07_dvk_join" width=1 height=1> 
</p>
<BR>
			
<H3>BibTeX entry:</H3>
<pre>@article{IS07::dvkJ,
   author    = {Dmitri V.\ Kalashnikov and Sunil Prabhakar},
   title     = {Fast similarity join for multi-dimensional data},
   journal   = IS,
   volume    = 32,
   number    = 1,
   pages     = {160--177},
   month     = mar,    
   year      = 2007
}

</pre>
<A href="http://www.ics.uci.edu/~dvk/index.html">Back to Kalashnikov's homepage</A>
<BR>
<BR>
<BR>
<BR>
<BR> 
</html>