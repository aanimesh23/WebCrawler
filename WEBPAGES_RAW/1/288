<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
  
  


  <head>
    <title>
      cs122b-2017-winter-project3 – Public
    </title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <!--[if IE]><script type="text/javascript">
      if (/^#__msie303:/.test(window.location.hash))
        window.location.replace(window.location.hash.replace(/^#__msie303:/, '#'));
    </script><![endif]-->
        <link rel="search" href="/wiki/public/search" />
        <link rel="help" href="/wiki/public/wiki/TracGuide" />
        <link rel="alternate" href="/wiki/public/wiki/cs122b-2017-winter-project3?format=txt" type="text/x-trac-wiki" title="Plain Text" />
        <link rel="tracwysiwyg.base" href="/wiki/public" />
        <link rel="start" href="/wiki/public/wiki" />
        <link rel="stylesheet" href="/wiki/public/chrome/common/css/trac.css" type="text/css" /><link rel="stylesheet" href="/wiki/public/chrome/common/css/wiki.css" type="text/css" /><link rel="stylesheet" href="/wiki/public/chrome/tracwysiwyg/wysiwyg.css" type="text/css" />
        <link rel="tracwysiwyg.stylesheet" href="/wiki/public/chrome/common/css/trac.css" /><link rel="tracwysiwyg.stylesheet" href="/wiki/public/chrome/tracwysiwyg/editor.css" />
        <link rel="shortcut icon" href="/wiki/public/chrome/site/favicon.ico" type="image/x-icon" />
        <link rel="icon" href="/wiki/public/chrome/site/favicon.ico" type="image/x-icon" />
    <script type="text/javascript" src="/wiki/public/chrome/common/js/jquery.js"></script><script type="text/javascript" src="/wiki/public/chrome/common/js/babel.js"></script><script type="text/javascript" src="/wiki/public/chrome/common/js/messages/en_US.js"></script><script type="text/javascript" src="/wiki/public/chrome/common/js/trac.js"></script><script type="text/javascript" src="/wiki/public/chrome/common/js/search.js"></script><script type="text/javascript" src="/wiki/public/chrome/common/js/folding.js"></script><script type="text/javascript" src="/wiki/public/chrome/tracwysiwyg/wysiwyg.js"></script><script type="text/javascript" src="/wiki/public/chrome/tracwysiwyg/wysiwyg-load.js"></script>
    <!--[if lt IE 7]>
    <script type="text/javascript" src="/wiki/public/chrome/common/js/ie_pre7_hacks.js"></script>
    <![endif]-->
    <script type="text/javascript">
      jQuery(document).ready(function($) {
        $("#content").find("h1,h2,h3,h4,h5,h6").addAnchor(_("Link to this section"));
        $("#content").find(".wikianchor").each(function() {
          $(this).addAnchor(babel.format(_("Link to #%(id)s"), {id: $(this).attr('id')}));
        });
        $(".foldable").enableFolding(true, true);
      });
    </script>
  </head>
  <body>
    <div id="banner">
      <div id="header">
        <a id="logo" href="http://www.ics.uci.edu/"><img src="/wiki/public/chrome/site/ics.jpg" alt="ICS Logo" height="67" width="128" /></a>
      </div>
      <form id="search" action="/wiki/public/search" method="get">
      </form>
      <div id="metanav" class="nav">
    <ul>
      <li class="first"><a href="/wiki/public/login">Login</a></li><li><a href="/wiki/public/prefs">Preferences</a></li><li class="last"><a href="/wiki/public/about">About Trac</a></li>
    </ul>
  </div>
    </div>
    <div id="mainnav" class="nav">
  </div>
    <div id="main">
      <div id="pagepath" class="noprint">
  <a class="pathentry first" title="View WikiStart" href="/wiki/public/wiki">wiki:</a><a class="pathentry" href="/wiki/public/wiki/cs122b-2017-winter-project3" title="View cs122b-2017-winter-project3">cs122b-2017-winter-project3</a>
</div>
      <div id="ctxtnav" class="nav">
        <h2>Context Navigation</h2>
          <ul>
              <li class="first"><a href="/wiki/public/wiki/WikiStart">Start Page</a></li><li><a href="/wiki/public/wiki/TitleIndex">Index</a></li><li class="last"><a href="/wiki/public/wiki/cs122b-2017-winter-project3?action=history">History</a></li>
          </ul>
        <hr />
      </div>
    <div id="content" class="wiki">
      <div class="wikipage searchable">
        
          
          <div class="trac-modifiedby">
            <span><a href="/wiki/public/wiki/cs122b-2017-winter-project3?action=diff&amp;version=10" title="Version 10 by chenli">Last modified</a> <a class="timeline" href="/wiki/public/timeline?from=2017-02-08T23%3A34%3A08-08%3A00&amp;precision=second" title="2017-02-08T23:34:08-08:00 in Timeline">4 days</a> ago</span>
            <span class="trac-print">Last modified on 02/08/17 23:34:08</span>
          </div>
          <div id="wikipage"><p>
</p><div class="wiki-toc">
<ol>
  <li>
    <a href="#CS122BProject3:reCaptchaHTTPSStoredProcedureXMLParsing">CS122B Project 3: reCaptcha, HTTPS, Stored Procedure, XML Parsing</a>
  </li>
  <li>
    <a href="#Tasks">Tasks</a>
    <ol>
      <li>
        <a href="#Task1Optional:RegisteradomainnameforFabflix">Task 1 (Optional): Register a domain name for Fabflix</a>
      </li>
      <li>
        <a href="#Task2:AddingreCAPTHAtoProject2">Task 2: Adding reCAPTHA to Project 2</a>
      </li>
      <li>
        <a href="#Task3:AddingHTTPStoProject2">Task 3: Adding HTTPS to Project 2</a>
      </li>
      <li>
        <a href="#Task4:ImplementingaDashboardusingStoredProcedure">Task 4: Implementing a Dashboard using Stored Procedure</a>
      </li>
      <li>
        <a href="#Task5:ImportinglargeXMLdatafilesintotheFabflixdatabase">Task 5: Importing large XML data files into the Fabflix database</a>
        <ol>
          <li>
            <a href="#Requirements:">Requirements:</a>
          </li>
          <li>
            <a href="#Remarks:">Remarks:</a>
          </li>
        </ol>
      </li>
    </ol>
  </li>
  <li>
    <a href="#Deliverables">Deliverables</a>
  </li>
  <li>
    <a href="#DemonstrationandGradingCriteria">Demonstration and Grading Criteria</a>
  </li>
</ol>
</div><p>
</p>
<h1 id="CS122BProject3:reCaptchaHTTPSStoredProcedureXMLParsing">CS122B Project 3: reCaptcha, HTTPS, Stored Procedure, XML Parsing</h1>
<p>
<strong>Due: 2/20/2017, Monday, 11:45 pm. Submit on EEE.</strong><br /> Notice that we use 1 day after the official deadline as the submission cut-off time on EEE to allow you to use the 24-hour grace period if you chose so. After that, EEE will no longer accept submissions.
</p>
<h1 id="Tasks">Tasks</h1>
<ol><li>(Optional) <a class="wiki" href="/wiki/public/wiki/cs122b-2017-winter-project3#RegisterDomain">Register a domain name for Fabflix</a>
</li><li><a class="wiki" href="/wiki/public/wiki/cs122b-2017-winter-project3#reCAPTCHA">Adding reCAPTCHA to Project 2</a>
</li><li><a class="wiki" href="/wiki/public/wiki/cs122b-2017-winter-project3#HTTPS">Adding HTTPS to Project 2</a>
</li><li><a class="wiki" href="/wiki/public/wiki/cs122b-2017-winter-project3#Dashboard">Implementing a Dashboard using Stored Procedure</a>
</li><li><a class="wiki" href="/wiki/public/wiki/cs122b-2017-winter-project3#XMLParsing">Importing large XML data files into the Fabflix database</a>
</li></ol><hr />
<p>
<span id="RegisterDomain"></span>
</p>
<h2 id="Task1Optional:RegisteradomainnameforFabflix">Task 1 (Optional): Register a domain name for Fabflix</h2>
<p>
If you are tired of using an IP address to visit your AWS instance and want to make it "real," you can register a domain name from a registrar company such as <a class="ext-link" href="http://godaddy.com"><span class="icon">​</span>Godaddy</a>. Then use the AWS instance to do the hosting.  Now we are open for real business!
</p>
<hr />
<p>
<span id="reCAPTCHA"></span>
</p>
<h2 id="Task2:AddingreCAPTHAtoProject2">Task 2: Adding reCAPTHA to Project 2</h2>
<p>
Improve the user-authentication process of project 2 by adding a module that verifies real users and blocks bots.
</p>
<ol><li>Download and deploy <a class="attachment" href="/wiki/public/attachment/wiki/cs122b-2017-winter-project3/TomcatFormReCaptcha.war" title="Attachment 'TomcatFormReCaptcha.war' in cs122b-2017-winter-project3">TomcatFormReCaptcha.war</a><a class="trac-rawlink" href="/wiki/public/raw-attachment/wiki/cs122b-2017-winter-project3/TomcatFormReCaptcha.war" title="Download">​</a>.
</li><li>Get a <a class="ext-link" href="https://www.google.com/recaptcha/intro/index.html"><span class="icon">​</span>reCAPTCHA</a> from Google. Use the public IP of your AWS instance as the domain.  You will get a <em>secret key</em> and a <em>site key</em>.
</li><li>Follow the instructions on the page shown in step 2 to modify the file "webapps/TomcatFormReCaptcha/index.html". In particular, use your own "site key" to replace the "data-sitekey" value.
</li><li>Test the page <a class="ext-link" href="http://YOUR_IP:8080/TomcatFormReCaptcha"><span class="icon">​</span>http://YOUR_IP:8080/TomcatFormReCaptcha</a> to see if reCAPTHA works for the front end (You should get an error saying "Recaptcha WRONG!!!!" if you followed the instructions properly)
</li><li>Read and understand the file "sources/TomcatFormReCaptcha.java", especially the logic related to verifying "g-recaptcha-response".  Also modify the file "MyConstants.java" to use your own "SITE_KEY" and "SECRET_KEY" values.
</li><li>Recompile the Java files and reload the app using the Tomcat console.  Test if the backend of reCAPTHA is working properly.
</li><li>Apply the same logic to your project 2 by making the necessary changes on the login frontend and backend logic.
</li></ol><p>
<span id="HTTPS"></span>
</p>
<h2 id="Task3:AddingHTTPStoProject2">Task 3: Adding HTTPS to Project 2</h2>
<p>
See this <a class="ext-link" href="http://tecadmin.net/configure-ssl-certificate-in-tomcat/"><span class="icon">​</span>reference</a> on how to configure Tomcat to enable HTTPS connections.
</p>
<p>
Step 1: On your AWS instance, use the following command to create a keystore to be used by Tomcat. Remember what password you use for the keystore. Our example uses "changeit".
</p>
<pre class="wiki">sudo keytool -genkey -alias fabflix -keyalg RSA -keystore /etc/tomcat8.5/keystore
</pre><p>
Step 2: Uncomment the <tt>Connector</tt> tag in <tt>/etc/tomcat8.5/server.xml</tt>, which has port="8443" and defines an SSL HTTP/1.1 connector. Modify it and use the following configuration:
</p>
<pre class="wiki">&lt;Connector port="8443" 
 protocol="HTTP/1.1"
 connectionTimeout="20000"
 redirectPort="8443"
 SSLEnabled="true"
 scheme="https"
 secure="true"
 sslProtocol="TLS"
 keystoreFile="/etc/tomcat8.5/keystore"
 keystorePass="changeit" /&gt;
</pre><p>
Step 3: Restart tomcat:
</p>
<pre class="wiki">sudo service tomcat restart
</pre><p>
At this point, <a class="ext-link" href="https://[YOUR_IP]:8443/manager/html"><span class="icon">​</span>https://[YOUR_IP]:8443/manager/html</a> should also an entry point to Tomcat.  Note that it uses the secure kind of http (https) and a different port, which is 8443 by default.  Make sure to open the port 8443 on your AWS instance.
</p>
<p>
Step 4: Limit a Tomcat application to HTTPS only.  Currently <a class="ext-link" href="http://YOUR_IP:8080/manager/html"><span class="icon">​</span>http://YOUR_IP:8080/manager/html</a> entry (which uses HTTP) is still open. In order to disable HTTP and enable HTTPS only, change your TomcatFormReCaptcha application's web.xml by adding the following code before the "&lt;/web-app&gt;" tag:
</p>
<pre class="wiki">&lt;security-constraint&gt;
 &lt;web-resource-collection&gt;
    &lt;web-resource-name&gt;HTTPSOnly&lt;/web-resource-name&gt;
    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
 &lt;/web-resource-collection&gt;
 &lt;user-data-constraint&gt;
    &lt;transport-guarantee&gt;CONFIDENTIAL&lt;/transport-guarantee&gt;
 &lt;/user-data-constraint&gt;
&lt;/security-constraint&gt;
</pre><p>
This setting will force all  HTTP requests to this application to get redirected to the corresponding HTTPS URL.  Reload the application to see if the redirection works for the URL <a class="ext-link" href="http://YOUR_IP:8080/TomcatFormReCaptcha/"><span class="icon">​</span>http://YOUR_IP:8080/TomcatFormReCaptcha/</a>.  Read this <a class="ext-link" href="http://www.itworld.com/article/2769041/development/how-to-configure-tomcat-to-always-require-https.html"><span class="icon">​</span>reference</a> on more details about how to configure Tomcat to always require HTTPS.
</p>
<p>
Step 5: Make necessary changes to your project 2 to use HTTPS always with HTTP disabled.
</p>
<p>
<span id="Dashboard"></span>
</p>
<h2 id="Task4:ImplementingaDashboardusingStoredProcedure">Task 4: Implementing a Dashboard using Stored Procedure</h2>
<p>
Step 1: To store information about Fabflix's employees, create a new table called <strong>  employees</strong>   with the following attributes:
</p>
<pre class="wiki">email varchar(50) primary key
password varchar(20) not null
fullname varchar(100)
</pre><p>
Step 2: Setup an entry point <a class="ext-link" href="https://YOUR_IP:8443/fabflix/_dashboard"><span class="icon">​</span>https://YOUR_IP:8443/fabflix/_dashboard</a>   that uses HTTPS. It allows employees to login with a valid email and password to access a dashboard.
</p>
<p>
Step 3: Allow a logged-in employee to do the following operations using this dashboard.  (You can reuse part of your code in Project 1.)
</p>
<ul><li>Inserting a new star into the database. If the star has a single name, add it as his last_name and assign an empty string ("") to first_name.
</li><li>Providing the metadata of the database; in particular, show the name of each table and, for each table, each attribute and its type.
</li></ul><p>
Step 4: Write a stored procedure called <em>  add_movie</em>  .  Its arguments include all the required fields of the movie, a <em>  single</em>   star and a <em>  single</em>   genre. (The reason we don't want to pass multiple stars and genres is  that the current MySQL implementation doesn't allow stored procedures to  take an array argument.)  If a record corresponding to the star or genre exists, it is linked to the movie; if not, it is created and then linked to the movie. Insert a movie only if it does not exist.  All necessary stars_in_movies and genres_in_movies records are also created.  The procedure should output informative status messages to the user as it performs the task. If a movie's record set cannot be correctly made, the procedure needs to output a corresponding message, and no changes to the database are made.
</p>
<p>
Step 5: In the dashboard implemented in Step 3, add one more feature that allows an employee to add information related to a movie, including a single star and a single genre.  The UI should allow the employee to provide the information, and the backend should call the stored procedure <em> add_movie</em>  created above.
</p>
<hr />
<p>
<span id="XMLParsing"></span>
</p>
<h2 id="Task5:ImportinglargeXMLdatafilesintotheFabflixdatabase">Task 5: Importing large XML data files into the Fabflix database</h2>
<p>
The goal of this task is to use a new source of data to increase the content size of the Fabflix movie database.
</p>
<p>
You can find the raw version of this new data source in <a class="attachment" href="/wiki/public/attachment/wiki/cs122b-2017-winter-project3/stanford-movies.tar.gz" title="Attachment 'stanford-movies.tar.gz' in cs122b-2017-winter-project3">this package</a><a class="trac-rawlink" href="/wiki/public/raw-attachment/wiki/cs122b-2017-winter-project3/stanford-movies.tar.gz" title="Download">​</a>. The main source of these files is <a class="ext-link" href="http://infolab.stanford.edu/pub/movies/dtd.html"><span class="icon">​</span>here</a>. Before starting to use these files, it is highly recommended to check the main source and read <a class="ext-link" href="http://infolab.stanford.edu/pub/movies/doc.html"><span class="icon">​</span>its documentation</a> to get a better understanding of this dataset.
</p>
<p>
Particularly, you are required to parse the files <tt>mains243.xml</tt> and <tt>casts124.xml</tt> to add new <tt>movies</tt>, <tt>stars</tt>, and <tt>genres</tt> to the Fabflix database (i.e., on top of what you already have in the database). If needed, the <tt>stars_in_movies</tt> and <tt>genres_in_movies</tt> tables should also be updated accordingly. Also, for each XML file in this package, there is a DTD file to be used to understand/validate the structure of that XML file.
</p>
<p>
Please note that in this project it is expected that, if needed, you make reasonable decisions on how to use this new data source. The files are not clean and you may find inconsistencies in them. In such cases, do not be surprised. Make reasonable decisions. Such issues are very common in many real applications.  You can use the following high-level description regarding the mapping of the XML tag attributes to the Fabflix database schema that was given in <a href="https://grape.ics.uci.edu/wiki/public/wiki/cs122b-2017-winter-project1">project 1</a>.
</p>
<p>
As shown in Figure 1, the root tag in the file <tt>mains243.xml</tt> is <tt>&lt;movies&gt;</tt>, which consists of several instances of the tag <tt>&lt;directorfilms&gt;</tt>. Each <tt>&lt;directorfilms&gt;</tt> contains the information of a director, along with his/her movies, each movie being an instance of the tag <tt>&lt;film&gt;</tt>. It is clear where to find the values of all the columns of the movies table, except for the <tt>banner_url</tt> and <tt>trailer_url</tt> values that should be left NULL. Furthermore, each &lt;film&gt; has a list of <em>assigned categories </em>in a <tt>&lt;cats&gt;</tt> tag (i.e., each category as a <tt>&lt;cat&gt;</tt> tag). The value of the <tt>&lt;cat&gt;</tt> tag corresponds to the genre name in the <tt>genres</tt> table of the Fabflix database. If a <tt>&lt;cat&gt;</tt> does not exist in the <tt>genres</tt> table, a new genre must be added, and the <tt>genres_in_movies</tt> table must be updated accordingly.
</p>
<p>
<a style="padding:0; border:none" href="/wiki/public/attachment/wiki/cs122b-2017-winter-project3/films_structure.png"><img src="/wiki/public/raw-attachment/wiki/cs122b-2017-winter-project3/films_structure.png" /></a>  <strong>Figure 1.</strong>
</p>
<p>
For updating the <tt>stars</tt> and <tt>stars_in_movies</tt> tables, you should use the content of the file <tt>casts124.xml</tt>, which is shown in a high-level view in Figure 2.
</p>
<p>
<a style="padding:0; border:none" href="/wiki/public/attachment/wiki/cs122b-2017-winter-project3/casts_structure.png"><img src="/wiki/public/raw-attachment/wiki/cs122b-2017-winter-project3/casts_structure.png" /></a> <strong>Figure 2.</strong>
</p>
<p>
Similar to the <tt>&lt;movies&gt;</tt> tag, the content of the <tt>&lt;casts&gt;</tt> tag, which is the root of the file <tt>casts124.xml</tt>, is also grouped by the movie directors. You can find the information of the star-movie connections in the instances of the <tt>&lt;m&gt;</tt> tag. In this tag, the film is identified using the <tt>&lt;f&gt;</tt> tag, which links to the <tt>&lt;fid&gt; </tt>tag of the <tt>&lt;film&gt;</tt> tag in the main file. Tag <tt>&lt;m&gt;</tt> also gives you the <tt>stagename</tt> of the actor of this relation in a tag called <tt>&lt;a&gt;</tt>. The <tt>stagename</tt> helps you connect this <tt>stars_in_movies</tt> record to the right star record. The stars to be added to the <tt>stars</tt> table are parsed out of the file <tt>actors63.xml</tt>. Except for the <tt>photo_url</tt> column of the <tt>stars</tt> table that should be left NULL, it is clear how to use the actors file to populate this table.
</p>
<p>
Although there are many libraries for parsing XML, there are two main approaches towards this problem: (1) SAX: event-based XML parsing and (2) DOM: using a tree-based object model for parsing XML. In SAX, the library <strong>moves</strong> through the XML tags and makes calls to <em>event-handler functions</em> that are implemented by the developer. In DOM, the developer is free to move on <em>a tree of objects</em> that is made available by the library, each object corresponding an <em>entity</em> in the XML tree (e.g., a tag). You are free to choose between either of SAX or DOM approaches to parse the document. For examples, look <a class="ext-link" href="http://totheriver.com/learn/xml/code/SAXParserExample.java"><span class="icon">​</span>here for SAX</a> and <a class="ext-link" href="http://totheriver.com/learn/xml/code/DomParserExample.java"><span class="icon">​</span>here for DOM</a>. You can find <a class="ext-link" href="http://totheriver.com/learn/xml/xmltutorial.html#7"><span class="icon">​</span>here</a>, the instructions and files needed to run these examples.
</p>
<h3 id="Requirements:">Requirements:</h3>
<ul><li><strong>XML parsing</strong>: You should write a Java program to parse the XML files and populate the database.
</li><li><strong>Performance Tuning</strong>: A naive implementation of your program is expected to be slow. Come up with at least two optimization techniques to reduce the running time of your program. Write an itemized, brief report accessible to describe your optimizations, and the corresponding time reductions.<br />
</li></ul><h3 id="Remarks:">Remarks:</h3>
<ul><li>In case of inconsistencies between the provided data with respect to the relational schema, make sure your program does not crash. The inconsistent data must be reported to the user (print the element name and node value) and your program should resume processing.
</li><li>Use NULL for missing values when inserting records into the database.
</li><li>For inconsistent values with the schema (like non-integer values for volume or roman numbers ) you can treat them as NULL.
</li><li>For entries with multiple ISBN/publishers/etc, only use one of them.
</li><li>Keep track of duplicate entries like multiple occurrences of an author and insert them only once.
</li><li>Make sure the encoding of your parser is ISO-8859-1. You can ignore any special character that cannot be handled with this encoding.
</li></ul><hr />
<h1 id="Deliverables">Deliverables</h1>
<p>
Please submit all the required files (*.class, *.jar, *.jsp, *.html etc) to run your program as WAR. In addition, include any  source files (*.java) under WEB-INF/sources.  Read the following   <a class="ext-link" href="http://help.eclipse.org/luna/index.jsp?topic=%2Forg.eclipse.wst.webtools.doc.user%2Ftopics%2Ftwcrewar.html"><span class="icon">​</span>page</a>  to get information about how to create a WAR file.
</p>
<ul><li>Your submission "war" file should be named  "project3_[groupID].war".
</li><li>You should have the database name set to "moviedb", DB user name "testuser" and password  "testpass" in the program and compile again  before you submit.
</li><li>In the WEB-INF/sources include a README file detailing how to  compile your java sources (if any) and how to install the generated  class files.
</li></ul><p>
If your project does not compile/run, it will get a very low score.
</p>
<hr />
<h1 id="DemonstrationandGradingCriteria">Demonstration and Grading Criteria</h1>
<p>
<strong>You are required to demonstrate  this project</strong>. Create a running system from your ZIP file–quickly. Show the correctness, completeness, functionality and performance of your database during your demonstration by using the employee interface developed here. Your task is to convince us <strong>(in 15 minutes)</strong> that your work is correctly and completely carried out and the course project is ready to move to phase 4. 
</p>
</div>
        
        
      </div>
      
    <div id="attachments">
        <h3 class="foldable">Attachments</h3>
        <ul>
            <li>
    <a href="/wiki/public/attachment/wiki/cs122b-2017-winter-project3/casts_structure.png" title="View attachment">casts_structure.png</a><a href="/wiki/public/raw-attachment/wiki/cs122b-2017-winter-project3/casts_structure.png" class="trac-rawlink" title="Download">​</a>
       (<span title="4391 bytes">4.3 KB</span>) -
      added by <em>cluo8</em> <a class="timeline" href="/wiki/public/timeline?from=2017-02-01T21%3A09%3A20-08%3A00&amp;precision=second" title="2017-02-01T21:09:20-08:00 in Timeline">11 days</a> ago.
            </li>
            <li>
    <a href="/wiki/public/attachment/wiki/cs122b-2017-winter-project3/films_structure.png" title="View attachment">films_structure.png</a><a href="/wiki/public/raw-attachment/wiki/cs122b-2017-winter-project3/films_structure.png" class="trac-rawlink" title="Download">​</a>
       (<span title="5224 bytes">5.1 KB</span>) -
      added by <em>cluo8</em> <a class="timeline" href="/wiki/public/timeline?from=2017-02-01T21%3A09%3A26-08%3A00&amp;precision=second" title="2017-02-01T21:09:26-08:00 in Timeline">11 days</a> ago.
            </li>
            <li>
    <a href="/wiki/public/attachment/wiki/cs122b-2017-winter-project3/stanford-movies.tar.gz" title="View attachment">stanford-movies.tar.gz</a><a href="/wiki/public/raw-attachment/wiki/cs122b-2017-winter-project3/stanford-movies.tar.gz" class="trac-rawlink" title="Download">​</a>
       (<span title="1911579 bytes">1.8 MB</span>) -
      added by <em>cluo8</em> <a class="timeline" href="/wiki/public/timeline?from=2017-02-01T21%3A09%3A40-08%3A00&amp;precision=second" title="2017-02-01T21:09:40-08:00 in Timeline">11 days</a> ago.
            </li>
            <li>
    <a href="/wiki/public/attachment/wiki/cs122b-2017-winter-project3/TomcatFormReCaptcha.war" title="View attachment">TomcatFormReCaptcha.war</a><a href="/wiki/public/raw-attachment/wiki/cs122b-2017-winter-project3/TomcatFormReCaptcha.war" class="trac-rawlink" title="Download">​</a>
       (<span title="701769 bytes">685.3 KB</span>) -
      added by <em>cluo8</em> <a class="timeline" href="/wiki/public/timeline?from=2017-02-01T21%3A37%3A29-08%3A00&amp;precision=second" title="2017-02-01T21:37:29-08:00 in Timeline">11 days</a> ago.
            </li>
            <li>
    <a href="/wiki/public/attachment/wiki/cs122b-2017-winter-project3/Employee.java" title="View attachment">Employee.java</a><a href="/wiki/public/raw-attachment/wiki/cs122b-2017-winter-project3/Employee.java" class="trac-rawlink" title="Download">​</a>
       (<span title="1094 bytes">1.1 KB</span>) -
      added by <em>chenli</em> <a class="timeline" href="/wiki/public/timeline?from=2017-02-08T23%3A39%3A27-08%3A00&amp;precision=second" title="2017-02-08T23:39:27-08:00 in Timeline">4 days</a> ago.
            </li>
            <li>
    <a href="/wiki/public/attachment/wiki/cs122b-2017-winter-project3/employees.xml" title="View attachment">employees.xml</a><a href="/wiki/public/raw-attachment/wiki/cs122b-2017-winter-project3/employees.xml" class="trac-rawlink" title="Download">​</a>
       (<span title="450 bytes">450 bytes</span>) -
      added by <em>chenli</em> <a class="timeline" href="/wiki/public/timeline?from=2017-02-08T23%3A39%3A36-08%3A00&amp;precision=second" title="2017-02-08T23:39:36-08:00 in Timeline">4 days</a> ago.
            </li>
            <li>
    <a href="/wiki/public/attachment/wiki/cs122b-2017-winter-project3/DomParserExample.java" title="View attachment">DomParserExample.java</a><a href="/wiki/public/raw-attachment/wiki/cs122b-2017-winter-project3/DomParserExample.java" class="trac-rawlink" title="Download">​</a>
       (<span title="4471 bytes">4.4 KB</span>) -
      added by <em>cluo8</em> <a class="timeline" href="/wiki/public/timeline?from=2017-02-09T09%3A04%3A40-08%3A00&amp;precision=second" title="2017-02-09T09:04:40-08:00 in Timeline">4 days</a> ago.
            </li>
            <li>
    <a href="/wiki/public/attachment/wiki/cs122b-2017-winter-project3/SAXParserExample.java" title="View attachment">SAXParserExample.java</a><a href="/wiki/public/raw-attachment/wiki/cs122b-2017-winter-project3/SAXParserExample.java" class="trac-rawlink" title="Download">​</a>
       (<span title="2921 bytes">2.9 KB</span>) -
      added by <em>cluo8</em> <a class="timeline" href="/wiki/public/timeline?from=2017-02-09T09%3A04%3A52-08%3A00&amp;precision=second" title="2017-02-09T09:04:52-08:00 in Timeline">4 days</a> ago.
            </li>
        </ul>
    </div>

    </div>
    <div id="altlinks">
      <h3>Download in other formats:</h3>
      <ul>
        <li class="last first">
          <a rel="nofollow" href="/wiki/public/wiki/cs122b-2017-winter-project3?format=txt">Plain Text</a>
        </li>
      </ul>
    </div>
    </div>
    <div id="footer" lang="en" xml:lang="en"><hr />
      <a id="tracpowered" href="http://trac.edgewall.org/"><img src="/wiki/public/chrome/common/trac_logo_mini.png" height="30" width="107" alt="Trac Powered" /></a>
      <p class="left">Powered by <a href="/wiki/public/about"><strong>Trac 0.12.5</strong></a><br />
        By <a href="http://www.edgewall.org/">Edgewall Software</a>.</p>
      <p class="right">Visit the Trac open source project at<br /><a href="http://trac.edgewall.org/">http://trac.edgewall.org/</a></p>
    </div>
  </body>
</html>