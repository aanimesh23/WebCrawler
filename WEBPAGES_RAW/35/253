<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<!-- Page automatically generated from latex_to_html converter. -->
<!-- by cc_extract_html, $Revision: 3.19 $ -->
<!-- LaTeX source file: './Box_intersection_d_ref/Box_d.tex' -->
<html> <head>  
<title>Box_intersection_d::Box_d&lt;NT,int D,IdPolicy&gt;</title>
</head>  
<link href="../latex_to_html.css" rel="STYLESHEET">
<body bgcolor="white">
<!-- ------------------------------------------------------------------- -->


<!-- Top Navigation ---------------------------------------------------- -->
<div class="NavTop">
<hr>
  <strong>Navigation:</strong>
<a href="Chapter_intro.html">Up</a>, 
  <a href="../contents.html">Table of Contents</A>,
  <a href="../biblio.html">Bibliography</a>,
  <a href="../manual_index.html">Index</a>,
  <a href="../title.html">Title Page</a>
<hr><!-- End of Top Navigation ----------------------------------------- -->
</div>


<A NAME="Cross_link_anchor_1243"></A>

<A NAME="Cross_link_anchor_1244"></A>

      
     
     
     
<A NAME="Index_anchor_1319"></A> 

   
<TABLE ALIGN=RIGHT><TR><TD><IMG ALIGN=TOP SRC="cc_Class.gif"></TD></TR></TABLE>


    <A NAME="ccRef_CGAL::Box_intersection_d::Box_d<NT,int D,IdPolicy>"></A>
<h2><I>CGAL::Box_intersection_d::Box_d&lt;NT,int D,IdPolicy&gt;</I></h2>


<H3>Definition</H3>
<P>

<I><A HREF="Class_Box_intersection_d--Box_d.html#Cross_link_anchor_1244">Box_intersection_d::Box_d</A>&lt;NT,int D,IdPolicy&gt;</I> is a generic iso-oriented bounding box in dimension <MATH><I>D</I></MATH>.
It provides in each dimension an interval with lower and upper
endpoints represented with the number type <I>NT</I>.  This class is
designed to work smoothly with the algorithms for intersecting
sequences of iso-oriented boxes. For degeneracy handling, the boxes
need to provide a unique <I>id</I>-number. The policy parameter
<I>IdPolicy</I> offers several choices. The template parameters have to
comply with the following requirements:
<P>

<UL>
  <LI><I>NT</I>: number type for the box boundaries, needs to be a model
    of the <I>Assignable</I> and the <I>LessThanComparable</I> concept.
  <LI><I>int D</I>: the dimension of the box.
  <LI><I>IdPolicy</I>: specifies how the <I>id</I>-number will be
    provided. Can be one of the following types, where
    <I>ID_EXPLICIT</I> is the default for this parameter:
    <UL>
      <LI><I>ID_NONE</I>: no <I>id</I>-number is provided. Can be useful
        if <I>Box_d</I> is used as a base class for a different
        implementation of <I>id</I>-numbers than the ones provided
        here.
      <LI><I>ID_EXPLICIT</I>: the <I>id</I>-number is stored explicitly in
        the box and automatically created and assigned at construction
        time of the box. Note that copying a box (copy-constructor and
        assignment) does not create a new <I>id</I>-number but keeps
        the old one, which is the behavior needed by the
        <I>CGAL::box_self_intersection</I> algorithm. This is therefore
        the safe default implementation. 
      <LI><I>ID_FROM_BOX_ADDRESS</I>: casts the address of the box into a
        <I>std::ptrdiff_t</I> to create the <I>id</I>-number. Works fine 
        if the <A HREF="../Kernel_23_ref/Function_intersection.html#Cross_link_anchor_221">intersection</A> algorithms work effectively with pointers
        to boxes, but not in the case where the algorithms work with
        box values, because the algorithms modify the order of the
        boxes, and the <I>CGAL::box_self_intersection</I> algorithm
        creates copies of the boxes that would not have identical
        <I>id</I>-numbers.  
    </UL>
</UL>
<P>

<I>#include &lt;<A HREF="../../../include/CGAL/Box_intersection_d/Box_d.h">CGAL/Box_intersection_d/Box_d.h</A>&gt;</I>
<P>

<BR>

and also automatically with<BR>

<I>#include &lt;<A HREF="../../../include/CGAL/box_intersection_d.h">CGAL/box_intersection_d.h</A>&gt;</I>
<P>

<H3>Is Model for the Concept</H3>
<P>

<I><A HREF="Concept_BoxIntersectionBox_d.html#Cross_link_anchor_1241">BoxIntersectionBox_d</A></I>
<P>

<H3>Types</H3>
<P>

<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>
        <I><NOBR>
    <A HREF="Class_Box_intersection_d--Box_d.html#Cross_link_anchor_1244">Box_intersection_d::Box_d</A>&lt;NT,int D,IdPolicy&gt;::NT
        </I></NOBR>
        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>
    number type to represent the box
  boundaries. Allowed  are the builtin types <I>int</I>, <I>unsigned   int</I>, <I>float</I>, and <I>double</I>.
<P>

</TD></TR>
        </TABLE>
<P>

        <TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>
        <I><NOBR>
    <A NAME="Function_ID"></A>
<A NAME="Typedef_ID"></A>
typedef std::size_t
        </I></NOBR>
        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    ID;
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    type for the box <I>id</I>-number.
        </TD></TR>
        </TABLE>
<P>

<H3>Creation</H3>
<P>

<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>
        <I><NOBR>
    <A HREF="Class_Box_intersection_d--Box_d.html#Cross_link_anchor_1244">Box_intersection_d::Box_d</A>&lt;NT,int D,IdPolicy&gt; box;
        </I></NOBR>
        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>
    Default constructor. No particular initialization.
<P>

</TD></TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>
        <I><NOBR>
    <A HREF="Class_Box_intersection_d--Box_d.html#Cross_link_anchor_1244">Box_intersection_d::Box_d</A>&lt;NT,int D,IdPolicy&gt; box ( bool complete);
        </I></NOBR>
        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>
    initializes to the complete or 
  the empty space. If empty, all interval starting(end) points will be
  set to positive(negative) infinity.
<P>

</TD></TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>
        <I><NOBR>
    <A HREF="Class_Box_intersection_d--Box_d.html#Cross_link_anchor_1244">Box_intersection_d::Box_d</A>&lt;NT,int D,IdPolicy&gt; box ( NT lo[D],  NT hi[D]);
        </I></NOBR>
        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>
    initializes the box
  intervals to [<I>lo[i]</I>,<I>hi[i]</I>], <MATH><I>0  <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC="cc_leq.gif"> i &lt; D</I></MATH>.<BR>

<EM>Precondition: </EM><I>lo[i]</I> <MATH><I>&lt;</I></MATH> <I>hi[i]</I> for <MATH><I>0  <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC="cc_leq.gif"> i &lt; D</I></MATH>.
<P>

</TD></TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>
        <I><NOBR>
    <A HREF="Class_Box_intersection_d--Box_d.html#Cross_link_anchor_1244">Box_intersection_d::Box_d</A>&lt;NT,int D,IdPolicy&gt; box (  <A HREF="../Kernel_23_ref/Class_Bbox_2.html#Cross_link_anchor_42">Bbox_2</A> bbox);
        </I></NOBR>
        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>
    constructs from bbox,
  exists iff <MATH><I>D=2</I></MATH> and <I>NT</I><MATH><I>  <IMG BORDER=0 WIDTH=11 HEIGHT=9 ALIGN=BOTTOM SRC="cc_equiv.gif"> </I></MATH><I>double</I>.
<P>

</TD></TR>
        
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>
        <I><NOBR>
    <A HREF="Class_Box_intersection_d--Box_d.html#Cross_link_anchor_1244">Box_intersection_d::Box_d</A>&lt;NT,int D,IdPolicy&gt; box (  <A HREF="../Kernel_23_ref/Class_Bbox_3.html#Cross_link_anchor_62">Bbox_3</A> bbox);
        </I></NOBR>
        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>
    constructs from bbox,
  exists iff <MATH><I>D=3</I></MATH> and <I>NT</I><MATH><I>  <IMG BORDER=0 WIDTH=11 HEIGHT=9 ALIGN=BOTTOM SRC="cc_equiv.gif"> </I></MATH><I>double</I>.
<P>

</TD></TR>
        </TABLE>
<P>

<H3>Modifiers</H3>
<P>

<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_void_init6_bool_complete_=_false9;"></A>
void
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    box.init ( bool complete = false)
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    initializes to the complete or 
  the empty space. If empty, all interval starting(end) points will be
  set to positive(negative) infinity.
        </TD></TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_void_extend6NT_point6D99;"></A>
void
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    box.extend ( NT point[D])
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    extend <I>box</I> to contain the
  old <I>box</I> and <I>point</I>.
        </TD></TR>
        </TABLE>
<P>

<H3>Access Functions</H3>
<P>

<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_int_Box_d::dimension69;"></A>
int
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    Box_d::dimension ()
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    returns <MATH><I>D</I></MATH>, the dimension of the box.
        </TD></TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_std::size_t_id69;"></A>
std::size_t
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    box.id ()
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    returns a unique box id, see the
  <I>IdPolicy</I> template parameter above for the different
  choices. Does not exist if <I>ID_NONE</I> has been chosen for the
  <I>IdPolicy</I>.
        </TD></TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_NT_min_coord6_int_d9_const;"></A>
NT
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    box.min_coord ( int d)
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    returns the lower boundary in dimension <I>d</I>, <MATH><I>0  <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC="cc_leq.gif"> </I></MATH><I>d</I><MATH><I> &lt; D</I></MATH>.
        </TD></TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_NT_max_coord6_int_d9_const;"></A>
NT
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    box.max_coord ( int d)
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    returns the upper boundary in dimension <I>d</I>, <MATH><I>0  <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC="cc_leq.gif"> </I></MATH><I>d</I><MATH><I> &lt; D</I></MATH>.
        </TD></TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_const_Bbox_2__bbox69_const;"></A>
 <A HREF="../Kernel_23_ref/Class_Bbox_2.html#Cross_link_anchor_42">Bbox_2</A>
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    box.bbox ()
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    returns the bounding box iff
  <MATH><I>D=2</I></MATH> and <I>NT</I><MATH><I>  <IMG BORDER=0 WIDTH=11 HEIGHT=9 ALIGN=BOTTOM SRC="cc_equiv.gif"> </I></MATH><I>double</I>.
        </TD></TR>
        
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_const_Bbox_3__bbox69_const;"></A>
 <A HREF="../Kernel_23_ref/Class_Bbox_3.html#Cross_link_anchor_62">Bbox_3</A>
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    box.bbox ()
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    returns the bounding box iff
  <MATH><I>D=3</I></MATH> and <I>NT</I><MATH><I>  <IMG BORDER=0 WIDTH=11 HEIGHT=9 ALIGN=BOTTOM SRC="cc_equiv.gif"> </I></MATH><I>double</I>.
        </TD></TR>
        </TABLE>
<P>

<H3>See Also</H3>
<P>

<I><A HREF="Function_box_intersection_d.html#Cross_link_anchor_1233">CGAL::box_intersection_d</A></I><BR>

<I><A HREF="Function_box_self_intersection_d.html#Cross_link_anchor_1237">CGAL::box_self_intersection_d</A></I><BR>

<I><A HREF="Function_box_intersection_all_pairs_d.html#Cross_link_anchor_1235">CGAL::box_intersection_all_pairs_d</A></I><BR>

<I><A HREF="Function_box_self_intersection_all_pairs_d.html#Cross_link_anchor_1239">CGAL::box_self_intersection_all_pairs_d</A></I>
<P>

<I><A HREF="Class_Box_intersection_d--Box_with_handle_d.html#Cross_link_anchor_1247">CGAL::Box_intersection_d::Box_with_handle_d</A>&lt;NT, int D, <A HREF="../Handle_ref/Concept_Handle.html#Cross_link_anchor_1663">Handle</A>, IdPolicy&gt;</I>
<P>

<I><A HREF="Class_Box_intersection_d--Box_traits_d.html#Cross_link_anchor_1245">CGAL::Box_intersection_d::Box_traits_d</A>&lt;BoxHandle&gt;</I><BR>

<I><A HREF="Concept_BoxIntersectionTraits_d.html#Cross_link_anchor_1242">BoxIntersectionTraits_d</A></I>
<P>

<div class="NavNext"><hr> <b>Next:</b> <a href="Class_Box_intersection_d--Box_traits_d.html"><I>Box_intersection_d::Box_traits_d&lt;BoxHandle&gt;</I></a> 


    
<div class="NavBottom">
<hr><!-- Bottom Navigation --------------------------------------------- -->
  <strong>Navigation:</strong>
<!Up_chapter_link_58!>
  <a href="../contents.html">Table of Contents</A>,
  <a href="../biblio.html">Bibliography</a>,
  <a href="../manual_index.html">Index</a>,
  <a href="../title.html">Title Page</a>
<!-- End of Bottom Navigation ------------------------------------------ -->


<hr><!-- --------------------------------------------------------------- -->
<div class="NavAddress">

The <A HREF=http://www.cgal.org>CGAL Project</A> .

Tue, December 21, 2004 .
<hr></div>
</body>  </html>  
