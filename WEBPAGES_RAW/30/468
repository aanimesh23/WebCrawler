<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 3.2//EN">
<html><head>
<title>David Eppstein - Publications</title>
<meta name="viewport" content="width=device-width, initial-scale=1">
</head>
<body bgcolor="#ffffff" text="#000000">
<h1>David Eppstein - Publications</h1>
<hr><p>
<h2>
Matching
</h2>
<ul>
<li><b>Fast optimal parallel algorithms for maximal matching in sparse graphs</b>.<br>
H. Asuri, <a href="/~dillenco/">M. Dillencourt</a>, D. Eppstein, 
<a href="//www.ics.uci.edu/~lueker/">
G. Lueker</a>, and M. Molodowitch.<br>
Tech. Rep. 92-01, ICS, UCI, 1992.
<p>
We later discovered that the same results were published
in a SPAA paper by Greg Shannon.
<p>(<a href="/~eppstein/bibs/eppstein.html#Fast optimal parallel algorithms for maximal matching in sparse graphs">BibTeX</a>)
<p>
<li><b>Worst-case bounds for subadditive geometric graphs</b>.<br>
<a href="//www.parc.xerox.com/csl/members/bern/">M. Bern</a>
and D. Eppstein.<br>
<a href="//portal.acm.org/citation.cfm?id=161018"><i>9th ACM Symp. Comp. Geom.,</i> San Diego, 1993, pp. 183&ndash;188.</a>
<p>
For many geometric graph problems for points in the unit square,
such as <a href="mst.html">minimum spanning trees</a>,
<a href="graph-match.html">matching</a>, and
<a href="tsp.html">traveling salesmen</a>,
the sum of edge lengths is O(sqrt <i>n</i>) and the sum of
<i>d</i>th powers of edge lengths is O(log <i>n</i>).
We provide a "gap theorem" showing that if these bounds do not hold
for a class of graphs, both sums will instead be Omega(<i>n</i>).
For traveling salesmen the O(log <i>n</i>) bound is tight
but for some other graphs the sum of
<i>d</i>th powers of edge lengths is O(1).
<p>(<a href="/~eppstein/bibs/eppstein.html#Worst-case bounds for subadditive geometric graphs">BibTeX</a> --
<a href="//fano.ics.uci.edu/cites/Document/Worst-case-bounds-for-subadditive-geometric-graphs.html">Citations</a> --
<a href="BerEpp-SCG-93.pdf">Preprint of SCG version</a> --
<a href="//citeseer.ist.psu.edu/bern93worstcase.html">CiteSeer</a>)
<p>
<li><b>Representing all minimum spanning trees with applications to
counting and generation</b>.<br>
D. Eppstein.<br>
<a href="Epp-TR-95-50.pdf">Tech. Rep. 95-50</a>, ICS, UCI, 1995.
<p>
Shows how to find for any edge weighted graph G an equivalent
graph EG such that the <a href="mst.html">minimum spanning trees</a>
of G correspond one-for-one with the spanning trees of EG.
The equivalent graph can be
constructed in time O(m+n log n) given a single minimum spanning tree of
G.  As a consequence one can find fast algorithms for counting, listing,
and randomly generating MSTs.
Also discusses similar
equivalent graph constructions for
<a href="graph-path.html">shortest paths</a>, minimum cost flows,
and <a href="graph-match.html">bipartite matching</a>.
<p>(<a href="/~eppstein/bibs/eppstein.html#Representing all minimum spanning trees with applications to counting and generation">BibTeX</a> --
<a href="//fano.ics.uci.edu/cites/Document/Representing-all-minimum-spanning-trees-with-applications-to-counting-and-generation.html">Citations</a>)
<p>
<li><b>Fast hierarchical
clustering and other applications of dynamic closest pairs</b>.<br>
D. Eppstein.<br>
<a href="//portal.acm.org/citation.cfm?id=315030">
<i>9th ACM-SIAM Symp. Discrete Algorithms,</i>
San Francisco, 1998, pp. 619&ndash;628</a>.<br>
<a href="//arXiv.org/abs/cs.DS/9912014">arXiv:cs.DS/9912014</a>.<br>
<a href="//doi.org/10.1145/351827.351829"><i>J. Experimental
Algorithmics</i> 5 (1): 1&ndash;23, 2000</a>.
<p>
This paper shows how to use my dynamic closest pair data structure
from "<a href="p-dynmst.html">Dynamic Euclidean minimum
spanning trees</a>" for some non-geometric problems including
hierarchical clustering,
<a href="graph-match.html">greedy matching</a>,
and <a href="tsp.html">TSP heuristics</a>.
Experiments show variants of my data structures to be faster than
previously used heuristics.
<p>(<a href="../projects/pairs/">Source code and experimental data</a> -- 
<a href="/~eppstein/bibs/eppstein.html#Fast hierarchical clustering and other applications of dynamic closest pairs">BibTeX</a> --
<a href="/~eppstein/projects/pairs/Papers/Epp-SODA-98.pdf">SODA paper</a> --
<a href="//fano.ics.uci.edu/cites/Document/Fast-hierarchical-clustering-and-other-applications-of-dynamic-closest-pairs.html">Citations</a> --
<a href="//citeseer.ist.psu.edu/eppstein98fast.html">CiteSeer</a> --
<a href="//portal.acm.org/citation.cfm?id=351829">ACM DL</a> --
<a href="//www.jea.acm.org/2000/EppsteinDynamic/">JEA home page</a>)
<p>
<li><b>Single-strip triangulation of manifolds with arbitrary topology.</b><br>
D. Eppstein and
<a href="//www.ics.uci.edu/~gopi/">M. Gopi</a>.<br>
<a href="//videos.compgeom.org/">13th Video Review of
Computational Geometry, 2004</a>.<br>
<i>20th ACM Symp. Comp. Geom.,</i> Brooklyn, 2004, pp. 455&ndash;456 (abstract
for video).<br>
<i>25th Conf. Eur. Assoc. for Computer Graphics (EuroGraphics '04)</i>,
Grenoble, 2004 (2nd best paper award).<br>
<i>Eurographics Forum</i> 23 (3): 371&ndash;379, 2004.<br>
<a href="//arxiv.org/abs/cs.CG/0405036">arXiv:cs.CG/0405036</a>.
<p>
We describe a new algorithm, based on
<a href="graph-match.html">graph matching</a>,
for subdividing a
<a href="geom-tri.html">triangle mesh</a> (without boundary)
so that it has a
<a href="tsp.html">Hamiltonian cycle</a> of triangles, and prove that
this subdivision process increases the total number of triangles
in the mesh by at most a factor of 3/2.  We also prove lower bounds
on the increase needed for meshes with and without boundary.
<p>
(<a href="//www.graphics.ics.uci.edu/publications/GE04">Graphics
lab pubs page</a> --
<a href="//fano.ics.uci.edu/cites/Document/Single-strip-triangulation-of-manifolds-with-arbitrary-topology.html">Citations</a>)
<p>
<li><b>The lattice dimension of a graph.</b><br>
D. Eppstein.<br>
<a href="//arxiv.org/abs/cs.DS/0402028">arXiv:cs.DS/0402028</a>.<br>
<a href="//doi.org/10.1016/j.ejc.2004.05.001"><i>Eur. J. Combinatorics</i> 26 (6): 585&ndash;592, 2005</a>.
<p>
Describes a polynomial time algorithm for isometrically embedding graphs
into an integer lattice of the smallest
possible dimension.  The technique involves
<a href="graph-match.html">maximum matching</a>
in an auxiliary graph derived from a
<a href="graph-cube.html">partial cube</a> representation of the input.
<p>
(<a href="//www.ics.uci.edu/~eppstein/bibs/eppstein.html#The lattice dimension of a graph">BibTeX</a> --
<a href="//fano.ics.uci.edu/cites/Document/The-lattice-dimension-of-a-graph.html">Citations</a>)
<p>
<li><b>Single triangle strip and loop on manifolds with boundaries.</b><br>
<a href="//www.ics.uci.edu/~anusheel/">A. Bushan</a>,
<a href="//www.ics.uci.edu/~pablo/">P. Diaz-Gutierrez</a>,
D. Eppstein, and
<a href="//www.ics.uci.edu/~gopi/">M. Gopi</a>.<br>
Tech. Rep. 05-11, UC Irvine, School of Information and Computer Science,
2005.<br>
Proc. 19th Brazilian Symp. Computer Graphics and Image Processing
(SIBGRAPI 2006), pp. 221&ndash;228.
<p>
This follows on to our previous paper on
<a href="p-singlestrip.html">using graph matching to cover a
triangulated polyhedral model with a single triangle strip</a> by
extending the algorithms to models
with boundaries. We provide two methods: one is based on using an algorithm
for the Chinese Postman problem to find a small set of triangles to
split in order to find a perfect matching in the dual mesh, while the
other augments the model with virtual triangles to remove the boundaries
and merges the strips formed by our previous algorithm on this augmented
model. We implement the algorithms and report some preliminary
experimental results.
<p>
(<a href="//www.graphics.ics.uci.edu/publications/BDEG05">Graphics
lab pubs page</a>)
<p>
</ul>

<hr><p>
<a href="graph.html">Graph Theory</a> --
<a href="/~eppstein/pubs/">Publications</a> --
<a href="/~eppstein/">David Eppstein</a> --
<a href="/~theory/">Theory Group</a> --
<a href="/">Inf. &amp; Comp. Sci.</a> --
<a href="//www.uci.edu/">UC Irvine</a>
<p>
<small>Semi-automatically <a href="filter.html">filtered</a>
from a common source file.</small>
</body></html>
