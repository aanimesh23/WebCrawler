<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1" />
<title>INF 133 Fall 2010: User Interaction Software</title>
<link href="../styleSheet.css" rel="stylesheet" type="text/css" />
</head>
<body>
<p class="style2 style6 style7">Informatics 133: User Interaction Software </p>
<p class="style6">Fall 2010-2011</p>
<p class="style6">Department of Informatics</p>
<p class="style6">Donald Bren School of Information and Computer Sciences </p>
<div class="container"> 
  <p><a href="../index.html">Home</a> | <a href="../admin.html">Administrative Policies </a> | <a href="../structure.html">Course Structure</a> |<a href="../materials.html"> Materials</a> | <a href="../assignmentSchedule.html#CurrentWeek">Assignment Schedule </a></p>
</div>
<div class="container">
  <p><span class="style5">Assignment 02 </span>: </p>
  <p><strong>Goal: Gain experience with the real-time web</strong></p>
  <div class="indentRight">
        <ul>
          <li>This is a solo assignment
            <ul>
              <li>Identify 5 JSON/XML data sources (URLs) that have geo-data in them.</li>
              <li> Create a web-page that loads one of the 5 data-sources using AJAX, parses it and presents the data as a table on the webpage.
                <ul>
                  <li> You must deal with cross-site data requests,</li>
                  <li>You must pick a library to parse and manipulate the data</li>
                  <li>You must insert/modify a javascript structure into a web-page</li>
                  <li>For the table
                    <ul>
                      <li>It must have one row for every entry in the feed</li>
                      <li>Each row must have a description of the feed entry and the associated geo-data (at least) </li>
                      <li>The number of rows must *not* be hardcoded into the HTML </li>
                    </ul>
                  </li>
                </ul>
              </li>
              <li>Turn in a link to your web-page using the EEE Quiz Mechanism
                <ul>
                  <li>The web-page should list the  5 data sources (by URL) and a hand written description of what they are</li>
                  <li>Also on the web page should be a description of how you accomplished your data-parsing</li>
                  <li>Also on the web page is the  table that is the result of your parsing (it should generate itself from a live AJAX call)</li>
                </ul>
              </li>
            </ul>
          </li>
          <li>Resources:
            <ul>
              <li>a proxy program which will get around the cross-site data restrictions:
                <ul>
                  <li>Please note that this file must be on a machine that has both php and curl installed (students.ics.uci.edu is one such machine). The myProxy.php file must be on the same domain as the one that is executing the javascript. That's the whole point of why you need it.                  </li>
                  <li>When it is called with a url like this:
                    <ul>
                      <li>http://www.mydomain.com/myProxy.php?http://www.yourdomain.com/file.xml</li>
                    </ul>
                  </li>
                  <li>It will use php and curl to load www.yourdomain.com/file.xml and send it back as if it were on the local machine </li>
                  <li>For those who were working with me to debug this for XML the problem was that the mime/type wasn't being set correctly and jQuery was confused. The copy below does the right thing </li>
                  <ul>
                    <li><a href="Assignment02/myProxy.php">myProxy.php</a> (right-click to download) </li>
                  </ul>
                </ul>
              </li>
              <li>an example of a webpage which loads 3 AJAX data sources, one by XML , one by JSON and one by JSONP.
              Please note the following:
                <ul>
                  <li>It won't run where it is stored because www.ics.uci.edu won't run php</li>
                  <li>Notice how the proxy is only used on XML and JSON fetching. JSONP fetches data as a remote script and that isn't blocked.</li>
                  <li>Notice that when you get xml back you access the data structure differently than when you access json and all three are accessed differently based on which data you are working with. 
                    <ul>
                      <li><a href="Assignment02/Step14.html">Step14.html</a></li>
                      <li><a href="Assignment02/Step14.js">Step14.js</a></li>
                    </ul>
                  </li>
                  <li>To see it run live, click <a href="http://djp3-pc2.ics.uci.edu/class/Step13.html">here</a> </li>
                </ul>
              </li>
            </ul>
          </li>
          <li>This is all due Tuesday morning at midnight (10/19 12:00am) right right as it becomes Tuesday. </li>
        </ul>
  </div>
</div>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript">
try {
var pageTracker = _gat._getTracker("UA-15170336-1");
pageTracker._trackPageview();
} catch(err) {}</script>

</body>
</html>
