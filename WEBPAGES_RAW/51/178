<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 3.2//EN">
<html>
<head>
<title>Theory Seminar, 24 Jan 1997</title>
</head>
<body>
<a href="/~theory/"><img src="/~theory/logo/shortTheory.gif" width= 
"521" height="82" border="0" alt="ICS Theory Group"></a> 

<h1>ICS 269, Winter 1997: Theory Seminar</h1>

<hr>
<h2>24 Jan 1997:<br>
Online Multiprocessor Scheduling<br>
<a href="http://www.ics.uci.edu/~sseiden/">Steve Seiden</a>, ICS,
UC Irvine</h2>

The problem of scheduling independent jobs on <i>m</i> machines in
an online fashion was first studied by Graham in 1966. While the
deterministic case of this problem has been studied extensively,
little work has been done on the randomized case. For <i>
m</i>&nbsp;=&nbsp;2 a randomized 4/3-competitive algorithm was
found by Bartal, Fiat, Karloff and Vohra. I have recently developed
two algorithms for <i>m</i>&nbsp;<u>&gt;</u>&nbsp;3. The first is
1.55871-competitive for <i>m</i>&nbsp;=&nbsp;3. The second achieves
competitive ratios of 1.67517, 1.74114, 1.78810 and 1.82082, for
<i>m</i>&nbsp;=&nbsp;4,5,6,7 respectively. These competitive ratios
are less than the best deterministic lower bound for <i>
m</i>&nbsp;=&nbsp;3,4,5 and less than the best known deterministic
competitive ratio for <i>m</i>&nbsp;=&nbsp;3,4,5,6,7. In this talk,
I explain the first algorithm, and outline a proof of its
competitiveness. 

<p>I shall also talk about two models of multiprocessor scheduling
with rejection. The first is the model of Bartal, Leonardi,
Marchetti-Spaccamela, Sgall and Stougie. I have developed two
randomized algorithms for this model. The first algorithm performs
well for small <i>m</i>, achieving competitive ratios of 3/2,
1.83579, 2.05441 for <i>m</i>&nbsp;=&nbsp;2,3,4, respectively. The
second algorithm outperforms the first for <i>m</i>&nbsp;<u>
&gt;</u>&nbsp;5. It beats the deterministic algorithm of Bartal <i>
et al.</i> for all <i>m</i>&nbsp;=&nbsp;5,&nbsp;...&nbsp;1000. I am
currently developing a proof that this is true for all <i>m</i>.
The second model differs in that preemption is allowed. For this
model, I have developed a deterministic algorithm which is
2.38743-competitive for all <i>m</i>. I have also developed
randomized algorithms which outperform the best deterministic
algorithms for small <i>m</i>. In this talk, I shall explain my
non-preemptive algorithm for small <i>m</i>, and outline its
analysis.</p>

<p>(Practice job interview talk.)</p>
</body>
</html>

