<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 3.2//EN">
<html>
<head>
<title>Data Structures</title>
</head>
<body bgcolor="#ffffff" text="#000000">
<h1>CS 261, Fall 2011: Data Structures</h1>

<p>This course meets Monday, Wednesday, and Friday,
10:00 - 10:50 in MSTB 118. I will also have office hours Mondays and
Tuesdays from 2:00 - 3:00 in my office, Bren 4214. Coursework will
consist of weekly homeworks,
one midterm and a comprehensive final exam. Grading will be based 20% on
homework, 35% for the midterm, and 45% for the final.
The reader assigned to the course is Leila Jalali
<leila.jli@gmail.com>.</p>

<p>There is no
required textbook; however, much of the course material will be drawn
from the Wikipedia articles collected together in
the Wikipedia "book"
<i><a href="http://en.wikipedia.org/wiki/Book:Fundamental_Data_Structures">Fundamental Data Structures</a></i>.
Additionally, suggested internet readings for the
topics covered here will be linked from the schedule of topics.</p>

<p>This course may be used as part of the comprehensive exam in the
  computer science masters program. To pass the comprehensive exam,
  students must score at least 66% of the possible points on the final
  examination for the course. Students who wish to take the
  comprehensive exam but are not enrolled in the
  course should contact me by email before the end of week 8 of the
  quarter to reserve a place in the exam.</p>

<ul>
<li>Friday, September 23: No lecture.</li>
<li>Week 1 (Sept. 26-28-30):
<ul>
<li>Introduction: <a
href="http://en.wikipedia.org/wiki/Priority_queue">priority queues</a>
in <a href="http://en.wikipedia.org/wiki/Selection_sort">selection
sort</a>; <a href="http://en.wikipedia.org/wiki/Dynamic_array">dynamic
arrays</a> and the <a href="http://en.wikipedia.org/wiki/Potential_method">potential method of amortized analysis</a>.
<li><a
href="http://en.wikipedia.org/wiki/Dijkstra%27s_algorithm">Dijkstra's
algorithm</a>, <a href="http://en.wikipedia.org/wiki/Binary_heap">binary heaps</a>, <a
href="http://en.wikipedia.org/wiki/D-ary_heap">D-ary heaps</a>
<li><a href="http://en.wikipedia.org/wiki/Fibonacci_heap">Fibonacci heaps</a>.</li>
<li><a href="f11-hw1.txt">Homework 1</a>, due Wednesday, Oct. 5 -- <a href="f11-hw1-soln.txt">Solutions</a></li>
</ul></li>
<li>Week 2 (Oct. 3-5-7):
<ul>
<li><a href="http://11011110.livejournal.com/189071.html">Integer priority queues</a>.</li>
<li><a href="http://en.wikipedia.org/wiki/Hash_table">Hashing</a>: <a
href="http://en.wikipedia.org/wiki/Hash_table#Separate_chaining">hash
chaining</a>, <a
href="http://en.wikipedia.org/wiki/Hash_table#Open_addressing">open
addressing</a> (<a href="http://en.wikipedia.org/wiki/Double_hashing">double
hashing</a>, <a
href="http://en.wikipedia.org/wiki/Linear_probing">linear
probing</a>, <a href="http://11011110.livejournal.com/232567.html">linear probing analysis</a>). See also <a
href="http://infoweekly.blogspot.com/2010/01/basic-hashtables.html">this
blog post</a>.</li>
<li><a href="http://en.wikipedia.org/wiki/Cuckoo_hashing">Cuckoo
hashing</a> (see also: <a
href="http://mybiasedcoin.blogspot.com/2008/05/more-robust-cuckoo-hashing-esa-paper.html">cuckoo
hashing with a stash</a>).</li>
<li><a href="f11-hw2.txt">Homework 2</a>, due Wednesday, Oct. 12 -- <a href="f11-hw2-soln.txt">Solutions</a></li>
</ul></li>
<li>Week 3 (Oct. 10-12-14):
<ul>
<li><a href="http://en.wikipedia.org/wiki/Bloom_filter">Bloom filters</a>,
and <a href="http://arxiv.org/abs/0704.3313">invertible Bloom filters</a>.</li>
<li><a
href="http://en.wikipedia.org/wiki/MinHash">Min-wise hashing</a></li>
<li><a href="http://en.wikipedia.org/wiki/Hash_function">Hash
functions</a>: <a
href="http://en.wikipedia.org/wiki/Cryptographic_hash_function">cryptographic
hashing</a>, <a
href="http://en.wikipedia.org/wiki/Universal_hashing">universal
hashing</a>, <a
href="http://11011110.livejournal.com/209336.html">tabulation hashing</a>.</li>
<li><a href="f11-hw3.txt">Homework 3</a>, due Wednesday, Oct. 19 -- <a href="f11-hw3-soln.txt">Solutions</a></li>
</ul></li>
<li>Week 4 (Oct. 17-19-21):
<ul>
<li>Overview of <a href="http://en.wikipedia.org/wiki/Self-balancing_binary_search_tree">balanced binary search trees</a>.</li>
<li><a href="http://en.wikipedia.org/wiki/B-tree">B-trees</a> and <a href="http://en.wikipedia.org/wiki/Cache-oblivious_algorithm">cache-oblivious</a> B-trees.
<li><a href="http://en.wikipedia.org/wiki/Splay_tree">Splay trees</a>.</li>
<li>The <a
href="http://en.wikipedia.org/wiki/Splay_tree#Dynamic_optimality_conjecture">dynamic
optimality conjecture</a>. (<a href="http://people.csail.mit.edu/mip/papers/arboral/paper.pdf">Additional reading</a> on non-splay-tree approaches to dynamic optimality.)</li>
<li><a href="f11-hw4.txt">Homework 4</a>, due Wednesday, Oct. 26 -- <a href="f11-hw4-soln.txt">Solutions</a></li>
</ul></li>
<li>Week 5 (Oct. 24-26-28):
<ul>
<li><a href="http://portal.acm.org/citation.cfm?id=782121">Range sums</a>, <a href="http://en.wikipedia.org/wiki/Prefix_sum">prefix
sums</a>, and <a href="http://dx.doi.org/10.1016/0196-6774(80)90015-2">decomposable searching problems</a>.</li>
<li><a href="http://infoweekly.blogspot.com/2009/11/simple-encoding-proof.html">Logarithmic lower bounds for dynamic prefix sums</a>.</li>
<li><a href="http://en.wikipedia.org/wiki/Binary_search_tree">Binary
search trees</a>; augmented binary search trees and <a
href="http://en.wikipedia.org/wiki/Range_searching">range
searching</a>.</li>
</ul></li>
<li>Week 6 (Oct. 31, Nov 2-4):
<ul>
<li>Midterm, Monday, October 31 -- <a href="f11-mt-soln.txt">Solutions</a>.</li>
<li><a href="http://www.itu.dk/courses/AVA/E2006/SDS-slides.pdf">Succinct representation of trees</a> and fast navigation in succinct
trees. <a href="http://www.cs.sunysb.edu/~bender/pub/latin02-level.ps">Level ancestors</a>.</li>
<li><a href="http://en.wikipedia.org/wiki/Lowest_common_ancestor">Lowest
common ancestors</a>, <a
href="http://en.wikipedia.org/wiki/Range_Minimum_Query">range
minima</a>, and the <a
href="http://www.cs.sunysb.edu/~bender/pub/lca.ps">Bender-Farach algorithm</a>.</li>
<li><a href="f11-hw5.txt">Homework 5</a>, due Wednesday, Nov. 9 -- <a href="f11-hw5-soln.txt">Solutions</a></li>
</ul></li>
<li>Week 7 (Nov. 7-9-11):
<ul>
<li>Veteran's day holiday, November 11.</li>
<li><a href="http://en.wikipedia.org/wiki/Persistent_data_structure">Persistence</a>. <a href="http://en.wikipedia.org/wiki/Closure_(computer_science)">Closures</a> and fully-persistent stacks.</li>
<li><a href="http://dx.doi.org/10.1145%2F6138.6151">Persistent search trees</a>, <a href="http://en.wikipedia.org/wiki/Point_location">point location</a>, <a href="http://en.wikipedia.org/wiki/Voronoi_diagram">Voronoi diagrams</a>, and the <a href="http://en.wikipedia.org/wiki/Nearest_neighbor_search">post office problem</a>.</li>
<li>The node-copying and fat node techniques for making data structures persistent.</li>
<li><a href="f11-hw6.txt">Homework 6</a>, due Friday, Nov. 18 -- <a href="f11-hw6-soln.txt">Solutions</a></li>
</ul></li>
<li>Week 8 (Nov. 14-16-18):
<ul>
<li><a href="http://en.wikipedia.org/wiki/Fractional_cascading">Fractional cascading</a> and halfspace range reporting.
<li><a href="http://en.wikipedia.org/wiki/Range_tree">Range trees</a> and <a href="http://en.wikipedia.org/wiki/Kd-tree">kD-trees</a>.</li>
<li><a href="http://en.wikipedia.org/wiki/Quadtree">Quadtrees</a> and <a
href="http://arxiv.org/abs/cs.CG/0507049">approximate nearest neighbors</a>.</li>
<li><a href="f11-hw7.txt">Homework 7</a>, due Wednesday, Nov. 23 -- <a href="f11-hw7-soln.txt">Solutions</a></li>
</ul></li>
<li>Week 9 (Nov. 21-23-25):
<ul>
<li><a href="http://en.wikipedia.org/wiki/Segment_tree">Segment
trees</a> and <a href="http://en.wikipedia.org/wiki/Interval_tree#Centered_interval_tree">interval trees</a></li>
<li><a href="http://arxiv.org/abs/cs.DS/9912014">Dynamic closest pairs</a>.
<li>Thanksgiving holiday, November 25.</li>
</ul></li>
<li>Week 10 (Nov. 28-30, Dec. 2):
<ul>
<li><a href="f11-hw8.txt">Homework 8</a>, due Friday, Dec. 2</li>
<li><a href="http://en.wikipedia.org/wiki/Trie">Tries</a>, <a
href="http://en.wikipedia.org/wiki/Radix_tree">compressed tries</a>, and
<a href="http://en.wikipedia.org/wiki/Suffix_tree">suffix trees</a></li>
<li><a
href="http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.43.8372">Dynamic
graph algorithms</a> and <a
href="http://arxiv.org/abs/0904.3741">dynamic subgraph statistics</a></li>
<li><a href="http://en.wikipedia.org/wiki/Disjoint-set_data_structure">Union-find</a></li>
</ul></li>
</ul>

<p>See also: <a href="w11.html">the Winter 2011 syllabus</a> including
sample homeworks and exams with their solutions, and additional
information linked from that page.</p>

<hr>
<p><a href="/~eppstein/">David Eppstein</a>, 
<a href="/">ICS</a>, <a href="http://www.uci.edu/">UC Irvine</a>.<br>
</body>
</html>
