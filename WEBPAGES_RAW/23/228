<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>Pregelix</title>
<meta property="og:image" content="images/pregelix.png"/>
<link rel="stylesheet" href="css/styles.css" type="text/css" />
<script src="js/jquery.min.js"></script>
<script>
$(document).ready(function(){
    $("#index").addClass("selected");
});
</script>

</head>

<body>
<div id="container">
    <script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-50915345-1', 'uci.edu');
  ga('send', 'pageview');

</script>

<!-- Facebook Like button script -->
<div id="fb-root"></div>
<script>(function(d, s, id) {
  var js, fjs = d.getElementsByTagName(s)[0];
  if (d.getElementById(id)) return;
  js = d.createElement(s); js.id = id;
  js.src = "//connect.facebook.net/en_US/all.js#xfbml=1";
  fjs.parentNode.insertBefore(js, fjs);
}(document, 'script', 'facebook-jssdk'));</script>

<div id="header">
    <table>
        <tr>
            <td align="left">
                <a href=""><img src="logo.svg" width="300"></img></a>
            </td>
	    <td align="left">
                <a href=""><img src="images/lead.png" width="300"></img></a>
            </td>
            <td align="right" valign="bottom">
				<table style="text-align:right;">
				<tr>
					<td style="padding-bottom:5px;">
						<div style="float: right">
							<g:plusone size="medium" align="right" href="http://pregelix.ics.uci.edu/"></g:plusone>
						</div>
					</td>
				</tr>
				<!--<tr>
					<td>
						<div class="fb-like" data-href="http://pregelix.ics.uci.edu" data-send="false" data-layout="button_count" data-width="450" data-show-faces="false" data-font="arial"></div>
					</td>
				</tr>
				<tr style="float:right;">
					<td>
						<a target="_blank" href="https://twitter.com/ASTERIXUCI"><img src="images/twitter.png" title="AsterixDB Twitter"></img></a>
					</td>
					<td>
						<a target="_blank" href="https://www.facebook.com/AsterixDB"><img src="images/facebook.png" title="AsterixDB Facebook"></img></a>
					</td>
				</tr>
				-->
				</table>
            </td>
	<td>
	</td>
        </tr>   
    </table>
</div>  

<!-- Google+ +1 button script -->
<script type="text/javascript">
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
</script>

<div id="navigation">
    <ul>
        <li id="index"><a href="index.html">Overview</a></li>
        <!--<li id="ecosystem"><a href="ecosystem.html">Ecosystem</a></li> -->
        <li id="download"><a href="download.html">Download</a></li>
	<li id="pubs"><a href="performance.html">Performance</a></li>
        <!--<li><a href="./documentation/index.html" target="_blank">Documentation</a></li>-->
        <li id="news"><a href="news.html">News</a></li>
        <li id="pubs"><a href="publications.html">Publications</a></li>
	<li id="talks"><a href="talks.html">Talks</a></li>     
        <li id="team"><a href="team.html">Team</a></li>
        <li id="sponsors"><a href="sponsors.html">Sponsors</a></li>
        <li id="contact"><a href="contact.html">Contact</a></li>
    </ul>
</div>

    <div id="body">
        <div id="content">

<p>Here are our steps to run GraphX:
</p>

<p>
1. Get the Spark from the official <a href="http://spark.apache.org/downloads.html">site</a>.
   </br>
   We are using the Spark 0.9.1.
</p>

<p>
2. Configure the Spark cluster</br>
   The configuration step is very simple. The slave file is the same as the Hadoop's conf/slaves. </br>
   The conf/spark-env.sh is as below.

   <pre class="prettyprint lang-sh">   
   SPARK_WORKER_DIR=/scratch/jianfenj/spark
   SPARK_MASTER_IP=sensorium-1
   </pre>
   </br>

   The other part is left empty to use the all the resources by default. </br> 
   Start the spark cluster use the sbin/start-all.sh
</p>   

<p>
3. Write the GraphX code</br>
   All the code actually reuses the existed GraphX functions. It can be found <a href="https://github.com/JavierJia/graph-system-comparison/blob/master/compare-graphx/src/main/scala/edu/uci/ics/pregelix/compare/graphx/Driver.scala">here</a>.</br>
   For example, the pagerank task will load the graph and call the existed graph.staticPageRank function.

   <pre class="prettyprint lang-scala">
  def loadWebmap[VD: ClassTag, ED: ClassTag](sc: SparkContext, path: String, defaultEdgeAttr: 
                  ED, defaultVetexAttr: VD): Graph[VD, ED] =
  {
     val startTime = System.currentTimeMillis
     var textRDD = sc.textFile(path);
     var edge = textRDD.flatMap(
     line => {
          var numbers = line.split(" ");
          var srcId: VertexId = numbers(0).trim.toLong;
          numbers.slice(2, numbers.size).map(num => Edge(srcId, num.trim.toLong, defaultEdgeAttr))
        })
     Graph.fromEdges[VD, ED](edge, defaultVetexAttr);
    }
    
   def pageRank(sc: SparkContext, inputPath: String, maxIterations: Int): Graph[Double, Double] = {
      var graph = loadWebmap(sc, inputPath, 1.0, 1.0)
      graph.staticPageRank(maxIterations)
  }
  </pre>
  </br>
</p>

<p>4. Compile</br>
   We use SBT to build and run the scala code. SBT version 0.13.1. Scala Version 2.10.4.</br>
   The build config file is <a href="https://github.com/JavierJia/graph-system-comparison/blob/master/compare-graphx/build.sbt">here</a>
</p>
    
<p>  
5. Run</br>
   We still use SBT to run the jar file. The script is <a href="https://github.com/JavierJia/graph-system-comparison/blob/master/compare-graphx/run.sh">here</a> </br>
   Take the pagerank task for example, the cmd will be like this:

   <pre class="prettyprint lang-sh">
   fullcmd="$sbt_path/sbt 'run $sparkserver jar $jar -c $core -m $mem
         	cmd PageRank $input ${output_folder}' "         
   eval $fullcmd 2>&1 | tee $logfile
   core=$(( $slaves * 4 ))  # each machine have 4 cores.
   mem="6800m"    # for one worker!
   </pre>   
   </br>

   These arguments will be process by SparkContext inside the Driver.scala:
   </br>
   <pre class="prettyprint" lang-sh> 
    conf.setJars(jars)
    conf.set("spark.executor.memory", memory)   # == $mem
    conf.set("spark.cores.max", cores.toString) # == $core
   </pre>
</p>
 
</div>

        <div class="clear"></div> </div> <div id="footer">
    <table>
    <tr>
    <td align="left" width="220">
        <a href="http://www.isg.ics.uci.edu" target="_blank"><img src="images/isg.png" height="75" width="75" align="left" style="background-color : #fff;"></img></a>
    </td>
    <td align="center">
        <p>&copy; pregelix.ics.uci.edu 2014.</br><font style="font-size:xx-small;">Design by <a href="http://www.spyka.net">Free CSS Templates</a></font></p>
    </td>
    <td align="right" width="220">
        <a href="http://www.uci.edu" target="_blank"><img src="images/uci_white.png" height="75" width="75"></img></a>
        <a href="http://www.ucla.edu" target="_blank"><img src="images/ucla_black.gif" height="75" width="75"></img></a>
    </td>
    </tr>
    </table>
</div>


</div>
</body>
</html>
