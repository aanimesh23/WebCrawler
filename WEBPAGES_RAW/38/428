<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<!-- Page automatically generated from latex_to_html converter. -->
<!-- by cc_extract_html, $Revision: 3.19 $ -->
<!-- LaTeX source file: './Optimisation_ref/Min_annulus_d.tex' -->
<html> <head>  
<title>Min_annulus_d&lt;Traits&gt;</title>
</head>  
<link href="../latex_to_html.css" rel="STYLESHEET">
<body bgcolor="white">
<!-- ------------------------------------------------------------------- -->


<!-- Top Navigation ---------------------------------------------------- -->
<div class="NavTop">
<hr>
  <strong>Navigation:</strong>
<a href="Chapter_intro.html">Up</a>, 
  <a href="../contents.html">Table of Contents</A>,
  <a href="../biblio.html">Bibliography</a>,
  <a href="../manual_index.html">Index</a>,
  <a href="../title.html">Title Page</a>
<hr><!-- End of Top Navigation ----------------------------------------- -->
</div>


<A NAME="Cross_link_anchor_1164"></A>

<A NAME="Cross_link_anchor_1165"></A>

      
     
     
     
<A NAME="Index_anchor_1153"></A> 

   
<TABLE ALIGN=RIGHT><TR><TD><IMG ALIGN=TOP SRC="cc_Class.gif"></TD></TR></TABLE>


    <A NAME="ccRef_CGAL::Min_annulus_d<Traits>"></A>
<h2><I>CGAL::Min_annulus_d&lt;Traits&gt;</I></h2>
<P>

<A NAME="Index_anchor_1154"></A> 

   


   
   
     
     
<A NAME="Index_anchor_1155"></A> 

   

   


   
     
     
<A NAME="Index_anchor_1156"></A> 

   


   
     
     
<A NAME="Index_anchor_1157"></A>
<P>

<H3>Definition</H3>
<P>

An object of the class <I><A HREF="Class_Min_annulus_d.html#Cross_link_anchor_1165">Min_annulus_d</A>&lt;Traits&gt;</I> is the unique annulus (region between
two concentric spheres with radii <MATH><I>r</I></MATH> and <MATH><I>R</I></MATH>, <MATH><I>r  <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC="cc_leq.gif"> R</I></MATH>) enclosing a
finite set of points in <MATH><I>d</I></MATH>-dimensional Euclidean space <MATH><I> <IMG BORDER=0 WIDTH=12 HEIGHT=12 ALIGN=BOTTOM SRC="cc_mathbb_E.gif"> <SUB>d</SUB></I></MATH>, where the
difference <MATH><I>R<SUP>2</SUP>-r<SUP>2</SUP></I></MATH> is minimal. For a point set <MATH><I>P</I></MATH> we denote by <MATH><I>ma(P)</I></MATH>
the smallest annulus that contains all points of <MATH><I>P</I></MATH>.  Note that <MATH><I>ma(P)</I></MATH>
can be degenerate,
i.e.&nbsp;<MATH><I>ma(P)=</I></MATH>&Oslash;<MATH><I></I></MATH> if
<MATH><I>P=</I></MATH>&Oslash;<MATH><I></I></MATH> and <MATH><I>ma(P)={p}</I></MATH> if
<MATH><I>P={p}</I></MATH>.
<P>

An inclusion-minimal subset <MATH><I>S</I></MATH> of <MATH><I>P</I></MATH> with <MATH><I>ma(S)=ma(P)</I></MATH> is called a
<I>support set</I>,
the points in <MATH><I>S</I></MATH> are the <I>support points</I>.  A support set has size at
most <MATH><I>d+2</I></MATH>, and all its points lie on the boundary of <MATH><I>ma(P)</I></MATH>. In general,
the support set is not necessarily unique.
<P>

The underlying algorithm can cope with all kinds of input, e.g.&nbsp;<MATH><I>P</I></MATH> may be
empty or points may occur more than once. The algorithm computes a support
set <MATH><I>S</I></MATH> which remains fixed until the next set, insert, or clear operation.
<P>

<I>#include &lt;<A HREF="../../../include/CGAL/Min_annulus_d.h">CGAL/Min_annulus_d.h</A>&gt;</I>
<P>

<H3>Requirements</H3>   
     
     
<A NAME="Index_anchor_1158"></A>
<P>

The template parameter <I>Traits</I> is a model for <I><A HREF="Concept_OptimisationDTraits.html#Cross_link_anchor_1181">OptimisationDTraits</A></I>.
<P>

We provide the models <I><A HREF="Class_Optimisation_d_traits_2.html#Cross_link_anchor_1176">Optimisation_d_traits_2</A></I>,
<I><A HREF="Class_Optimisation_d_traits_3.html#Cross_link_anchor_1178">Optimisation_d_traits_3</A></I>, and <I><A HREF="Class_Optimisation_d_traits_d.html#Cross_link_anchor_1180">Optimisation_d_traits_d</A></I> using the
two-, three-, and <MATH><I>d</I></MATH>-dimensional C<SMALL>GAL</SMALL>&nbsp;kernel, respectively.
<P>

<H3>Types</H3>   
     
     
<A NAME="Index_anchor_1159"></A>
<P>

<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>
        <I><NOBR>
    <A HREF="Class_Min_annulus_d.html#Cross_link_anchor_1165">Min_annulus_d</A>&lt;Traits&gt;::Point
        </I></NOBR>
        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>
    typedef to <I>Traits::<A HREF="../Kernel_d_ref/Class_Point_d.html#Cross_link_anchor_487">Point_d</A></I>.
        Point type used to represent the input points.
<P>

</TD></TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>
        <I><NOBR>
    <A HREF="Class_Min_annulus_d.html#Cross_link_anchor_1165">Min_annulus_d</A>&lt;Traits&gt;::FT
        </I></NOBR>
        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>
    typedef to <I>Traits::FT</I>.
        Number type used to return the squared radii of the smallest
        enclosing annulus.
<P>

</TD></TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>
        <I><NOBR>
    <A HREF="Class_Min_annulus_d.html#Cross_link_anchor_1165">Min_annulus_d</A>&lt;Traits&gt;::ET
        </I></NOBR>
        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>
    typedef to <I>Traits::ET</I>.
        Number type used to do the exact computations in the underlying
        solver for quadratic programs (cf.&nbsp;<B>Implementation</B>).
<P>

</TD></TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>
        <I><NOBR>
    <A HREF="Class_Min_annulus_d.html#Cross_link_anchor_1165">Min_annulus_d</A>&lt;Traits&gt;::Point_iterator
        </I></NOBR>
        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>
    non-mutable model of the STL concept <I>RandomAccessIterator</I>
        with value type <I>Point</I>. Used to access the points
        of the smallest enclosing annulus.
<P>

</TD></TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>
        <I><NOBR>
    <A HREF="Class_Min_annulus_d.html#Cross_link_anchor_1165">Min_annulus_d</A>&lt;Traits&gt;::Support_point_iterator
        </I></NOBR>
        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>
    non-mutable model of the STL concept <I>RandomAccessIterator</I>
        with value type <I>Point</I>. Used to access the support points
        of the smallest enclosing annulus.
<P>

</TD></TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>
        <I><NOBR>
    <A HREF="Class_Min_annulus_d.html#Cross_link_anchor_1165">Min_annulus_d</A>&lt;Traits&gt;::Inner_support_point_iterator
        </I></NOBR>
        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>
    non-mutable model of the STL concept <I>RandomAccessIterator</I>
        with value type <I>Point</I>. Used to access the inner support points
        of the smallest enclosing annulus.
<P>

</TD></TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>
        <I><NOBR>
    <A HREF="Class_Min_annulus_d.html#Cross_link_anchor_1165">Min_annulus_d</A>&lt;Traits&gt;::Outer_support_point_iterator
        </I></NOBR>
        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>
    non-mutable model of the STL concept <I>RandomAccessIterator</I>
        with value type <I>Point</I>. Used to access the outer support points
        of the smallest enclosing annulus.
<P>

</TD></TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>
        <I><NOBR>
    <A HREF="Class_Min_annulus_d.html#Cross_link_anchor_1165">Min_annulus_d</A>&lt;Traits&gt;::Coordinate_iterator
        </I></NOBR>
        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>
    non-mutable model of the STL concept <I>RandomAccessIterator</I>
        with value type <I>ET</I>. Used to access the coordinates of
        the center of the smallest enclosing annulus.
<P>

</TD></TR>
        </TABLE>
<P>

<H3>Creation</H3>   
     
     
<A NAME="Index_anchor_1160"></A>
<P>

<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>
        <I><NOBR>
    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>
    <A HREF="Class_Min_annulus_d.html#Cross_link_anchor_1165">Min_annulus_d</A>&lt;Traits&gt; min_annulus ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>
     Traits traits = Traits(),<BR>

int verbose = 0,<BR>

std::ostream&amp; stream = std::cout);</I></TD></TR></TABLE>
    
        </I></NOBR>
        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>
    initializes <I>min_annulus</I> to <MATH><I>ma(</I></MATH>&Oslash;<MATH><I>)</I></MATH>.
<P>

</TD></TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>
        <I><NOBR>
    template &lt; class InputIterator &gt;
        </I></NOBR>
        </TD></TR>
        
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>
        <I><NOBR>
    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>
    <A HREF="Class_Min_annulus_d.html#Cross_link_anchor_1165">Min_annulus_d</A>&lt;Traits&gt; min_annulus ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>
    InputIterator first,<BR>

InputIterator last,<BR>

Traits traits = Traits(),<BR>

int verbose = 0,<BR>

std::ostream&amp; stream = std::cout);</I></TD></TR></TABLE>
    
        </I></NOBR>
        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>
    initializes <I>min_annulus</I> to <MATH><I>ma(P)</I></MATH> with <MATH><I>P</I></MATH> being the set of points
        in the range [<I>first</I>,<I>last</I>).<BR>

<EM>Requirement: </EM>The value type of <I>InputIterator</I> is <I>Point</I>.<BR>

<EM>Precondition: </EM>All points have the same dimension.
<P>

</TD></TR>
        </TABLE>
<P>

<BR>

<div class="AdvancedBlock">
  <table><tr><td valign="top">
  <img border="0" src="cc_advanced_begin1.gif" alt="begin of advanced section">
  </td><td valign="top">
  <em class="AdvancedBlockLabel">&nbsp;advanced&nbsp;</em>
  </td><td valign="top">
  <img border="0" src="cc_advanced_begin2.gif" alt="begin of advanced section">
  </td></tr></table>

  If <I>verbose</I> is set to <MATH><I>1</I></MATH>, <MATH><I>2</I></MATH>, or <MATH><I>3</I></MATH> then some, more, or full
  verbose output of the underlying solver for linear programs is
  written to <I>stream</I>, resp.

<table><tr><td valign="bottom">
  <img border="0" src="cc_advanced_end1.gif" alt="end of advanced section">
  </td><td valign="bottom">
  <em class="AdvancedBlockLabel">&nbsp;advanced&nbsp;</em>
  </td><td valign="bottom">
  <img border="0" src="cc_advanced_end2.gif" alt="end of advanced section">
  </td></tr></table></div>
<P>

<H3>Access Functions</H3>   
     
     
<A NAME="Index_anchor_1161"></A> 

   


   
     
     
     
<A NAME="Index_anchor_1162"></A> 

   
   
     
     
<A NAME="Index_anchor_1163"></A>
<P>

<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_int_ambient_dimension6_9_const;"></A>
int
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    min_annulus.ambient_dimension ()
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    returns the dimension of the points in <MATH><I>P</I></MATH>.
        If <I>min_annulus</I> is empty, the ambient dimension is <MATH><I>-1</I></MATH>.
        </TD></TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_int_number_of_points6_9_const;"></A>
int
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    min_annulus.number_of_points ()
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    returns the number of points of <I>min_annulus</I>, i.e.&nbsp;<MATH><I>|P|</I></MATH>.
        </TD></TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_int_number_of_support_points6_9_const;"></A>
int
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    min_annulus.number_of_support_points ()
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    returns the number of support points of <I>min_annulus</I>, i.e.&nbsp;<MATH><I>|S|</I></MATH>.
        </TD></TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_int_number_of_inner_support_points6_9_const;"></A>
int
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    min_annulus.number_of_inner_support_points ()
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    returns the number of support points of <I>min_annulus</I>
        which lie on the inner sphere.
        </TD></TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_int_number_of_outer_support_points6_9_const;"></A>
int
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    min_annulus.number_of_outer_support_points ()
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    returns the number of support points of <I>min_annulus</I>
        which lie on the outer sphere.
        </TD></TR>
        </TABLE>
<P>

<BR>

<BR>

<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_Point_iterator_points_begin6_9_const;"></A>
Point_iterator
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    min_annulus.points_begin ()
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    returns an iterator referring to the first point of <I>min_annulus</I>.
        </TD></TR>
        
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_Point_iterator_points_end6_9_const;"></A>
Point_iterator
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    min_annulus.points_end ()
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    returns the corresponding past-the-end iterator.
        </TD></TR>
        </TABLE>
<P>

<BR>

<BR>

<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>
        <I><NOBR>
    <A NAME="Function_Support_point_iterator_support_points_begin6_9_const;"></A>
Support_point_iterator
        </I></NOBR>
        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    min_annulus.support_points_begin ()
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    returns an iterator referring to the first support point of <I>min_annulus</I>.
        </TD></TR>
        
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>
        <I><NOBR>
    <A NAME="Function_Support_point_iterator_support_points_end6_9_const;"></A>
Support_point_iterator
        </I></NOBR>
        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    min_annulus.support_points_end ()
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    returns the corresponding past-the-end iterator.
        </TD></TR>
        </TABLE>
<P>

<BR>

<BR>

<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>
        <I><NOBR>
    <A NAME="Function_Inner_support_point_iterator_inner_support_points_begin6_9_const;"></A>
Inner_support_point_iterator
        </I></NOBR>
        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    min_annulus.inner_support_points_begin ()
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    returns an iterator referring to the first inner support point
        of <I>min_annulus</I>.
        </TD></TR>
        
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>
        <I><NOBR>
    <A NAME="Function_Inner_support_point_iterator_inner_support_points_end6_9_const;"></A>
Inner_support_point_iterator
        </I></NOBR>
        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    min_annulus.inner_support_points_end ()
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    returns the corresponding past-the-end iterator.
        </TD></TR>
        </TABLE>
<P>

<BR>

<BR>

<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>
        <I><NOBR>
    <A NAME="Function_Outer_support_point_iterator_outer_support_points_begin6_9_const;"></A>
Outer_support_point_iterator
        </I></NOBR>
        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    min_annulus.outer_support_points_begin ()
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    returns an iterator referring to the first outer support point
        of <I>min_annulus</I>.
        </TD></TR>
        
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>
        <I><NOBR>
    <A NAME="Function_Outer_support_point_iterator_outer_support_points_end6_9_const;"></A>
Outer_support_point_iterator
        </I></NOBR>
        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    min_annulus.outer_support_points_end ()
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    returns the corresponding past-the-end iterator.
        </TD></TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_Point_center6_9_const;"></A>
Point
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    min_annulus.center ()
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    returns the center of <I>min_annulus</I>.<BR>

<EM>Requirement: </EM>An implicit conversion from <I>ET</I> to <I>RT</I> is
        available.<BR>

<EM>Precondition: </EM><I>min_annulus</I> is not empty.
        </TD></TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_FT_squared_inner_radius6_9_const;"></A>
FT
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    min_annulus.squared_inner_radius ()
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    returns the squared inner radius of <I>min_annulus</I>.<BR>

<EM>Requirement: </EM>An implicit conversion from <I>ET</I> to <I>RT</I> is
        available.<BR>

<EM>Precondition: </EM><I>min_annulus</I> is not empty.
        </TD></TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_FT_squared_outer_radius6_9_const;"></A>
FT
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    min_annulus.squared_outer_radius ()
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    returns the squared outer radius of <I>min_annulus</I>.<BR>

<EM>Requirement: </EM>An implicit conversion from <I>ET</I> to <I>RT</I> is
        available.<BR>

<EM>Precondition: </EM><I>min_annulus</I> is not empty.
        </TD></TR>
        </TABLE>
<P>

<BR>

<BR>

<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>
        <I><NOBR>
    <A NAME="Function_Coordinate_iterator_center_coordinates_begin69_const;"></A>
Coordinate_iterator
        </I></NOBR>
        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    min_annulus.center_coordinates_begin ()
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    returns an iterator referring to the first coordinate
        of the center of <I>min_annulus</I>.<BR>

<EM>Note: </EM> The coordinates have a rational
        representation, i.e.&nbsp;the first <MATH><I>d</I></MATH> elements of the iterator
        range are the numerators and the <MATH><I>(d+1)</I></MATH>-st element is the
        common denominator.
        </TD></TR>
        
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>
        <I><NOBR>
    <A NAME="Function_Coordinate_iterator_center_coordinates_end69_const;"></A>
Coordinate_iterator
        </I></NOBR>
        </TD></TR><TR><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    min_annulus.center_coordinates_end ()
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    returns the corresponding past-the-end iterator.
        </TD></TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_ET_squared_inner_radius_numerator6_9_const;"></A>
ET
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    min_annulus.squared_inner_radius_numerator ()
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    returns the numerator of the squared inner radius of <I>min_annulus</I>.
        </TD></TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_ET_squared_outer_radius_numerator6_9_const;"></A>
ET
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    min_annulus.squared_outer_radius_numerator ()
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    returns the numerator of the squared outer radius of <I>min_annulus</I>.
        </TD></TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_ET_squared_radii_denominator6_9_const;"></A>
ET
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    min_annulus.squared_radii_denominator ()
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    returns the denominator of the squared radii of <I>min_annulus</I>.
        </TD></TR>
        </TABLE>
<P>

<H3>Predicates</H3>   
     
     
     
<A NAME="Index_anchor_1164"></A> 

   
   
     
     
<A NAME="Index_anchor_1165"></A>
<P>

The bounded <A HREF="../Kernel_23_ref/Function_area.html#Cross_link_anchor_159">area</A> of the smallest enclosing annulus lies between the inner
and the outer sphere. The boundary is the union of both spheres. By
definition, an empty annulus has no boundary and no bounded side, i.e.&nbsp;its
unbounded side equals the whole space <MATH><I> <IMG BORDER=0 WIDTH=12 HEIGHT=12 ALIGN=BOTTOM SRC="cc_mathbb_E.gif"> <SUB>d</SUB></I></MATH>.
<P>

<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_CGAL::Bounded_side_bounded_side6_const_Point__p9_const;"></A>
<A HREF="../Kernel_23_ref/Enum_Bounded_side.html#Cross_link_anchor_98">CGAL::Bounded_side</A>
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    min_annulus.bounded_side (  Point p)
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    returns <I>CGAL::</I><I><A HREF="../Kernel_23_ref/Enum_Bounded_side#Enum_Bounded_side">ON_BOUNDED_SIDE</A></I>,
        <I>CGAL::</I><I><A HREF="../Kernel_23_ref/Enum_Bounded_side#Enum_Bounded_side">ON_BOUNDARY</A></I>, or
        <I>CGAL::</I><I><A HREF="../Kernel_23_ref/Enum_Bounded_side#Enum_Bounded_side">ON_UNBOUNDED_SIDE</A></I> iff <I>p</I> lies
        properly inside, on the boundary, or properly outside of
        <I>min_annulus</I>, resp.<BR>

<EM>Precondition: </EM>The dimension of <I>p</I> equals
        <I>min_annulus</I><I>.ambient_dimension()</I> if <I>min_annulus</I> is not empty.
        </TD></TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_bool_has_on_bounded_side6_const_Point__p9_const;"></A>
bool
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    min_annulus.has_on_bounded_side (  Point p)
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    returns <I>true</I>, iff <I>p</I> lies properly inside <I>min_annulus</I>.<BR>

<EM>Precondition: </EM>The dimension of <I>p</I> equals
        <I>min_annulus</I><I>.ambient_dimension()</I> if <I>min_annulus</I> is not empty.
        </TD></TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_bool_has_on_boundary6_const_Point__p9_const;"></A>
bool
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    min_annulus.has_on_boundary (  Point p)
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    returns <I>true</I>, iff <I>p</I> lies on the boundary of <I>min_annulus</I>.<BR>

<EM>Precondition: </EM>The dimension of <I>p</I> equals
        <I>min_annulus</I><I>.ambient_dimension()</I> if <I>min_annulus</I> is not empty.
        </TD></TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_bool_has_on_unbounded_side6_const_Point__p9_const;"></A>
bool
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    min_annulus.has_on_unbounded_side (  Point p)
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    returns <I>true</I>, iff <I>p</I> lies properly outside of <I>min_annulus</I>.<BR>

<EM>Precondition: </EM>The dimension of <I>p</I> equals
        <I>min_annulus</I><I>.ambient_dimension()</I> if <I>min_annulus</I> is not empty.
        </TD></TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_bool_is_empty6_9_const;"></A>
bool
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    min_annulus.is_empty ()
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    returns <I>true</I>, iff <I>min_annulus</I> is empty (this implies degeneracy).
        </TD></TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_bool_is_degenerate6_9_const;"></A>
bool
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    min_annulus.is_degenerate ()
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    returns <I>true</I>, iff <I>min_annulus</I> is degenerate, i.e.&nbsp;if <I>min_annulus</I>         is empty or equal to a single point.
        </TD></TR>
        </TABLE>
<P>

<H3>Modifiers</H3>   
     
     
     
<A NAME="Index_anchor_1166"></A> 

   
   
     
     
<A NAME="Index_anchor_1167"></A>
<P>

<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_void_clear6_9;"></A>
void
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    min_annulus.clear ()
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    resets <I>min_annulus</I> to <MATH><I>ma(</I></MATH>&Oslash;<MATH><I>)</I></MATH>.
        </TD></TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>
        <I><NOBR>
    template &lt; class InputIterator &gt;
        </I></NOBR>
        </TD></TR>
        
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_void_set6_InputIterator_first+_InputIterator_last_9;"></A>
void
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>
    min_annulus.set ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>
    InputIterator first,<BR>

InputIterator last)</I></TD></TR></TABLE>
    
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    sets <I>min_annulus</I> to <MATH><I>ma(P)</I></MATH>, where <MATH><I>P</I></MATH> is the set of points in
        the range [<I>first</I>,<I>last</I>).<BR>

<EM>Requirement: </EM>The value type of <I>InputIterator</I> is <I>Point</I>.<BR>

<EM>Precondition: </EM>All points have the same dimension.
        </TD></TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_void_insert6_const_Point__p9;"></A>
void
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    min_annulus.insert (  Point p)
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    inserts <I>p</I> into <I>min_annulus</I>.<BR>

<EM>Precondition: </EM>The dimension of <I>p</I> equals
        <I>min_annulus</I><I>.ambient_dimension()</I> if <I>min_annulus</I> is not empty.
        </TD></TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% COLSPAN=3>
        <I><NOBR>
    template &lt; class InputIterator &gt;
        </I></NOBR>
        </TD></TR>
        
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_void_insert6_InputIterator_first+_InputIterator_last_9;"></A>
void
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>
    min_annulus.insert ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>
    InputIterator first,<BR>

InputIterator last)</I></TD></TR></TABLE>
    
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    inserts the points in the range [<I>first</I>,<I>last</I>) into
        <I>min_annulus</I> and recomputes the smallest enclosing annulus.<BR>

<EM>Requirement: </EM>The value type of <I>InputIterator</I> is <I>Point</I>.<BR>

<EM>Precondition: </EM>All points have the same dimension.
        If <I>min_annulus</I> is not empty, this dimension must be equal to
        <I>min_annulus</I><I>.ambient_dimension()</I>.
        </TD></TR>
        </TABLE>
<P>

<H3>Validity Check</H3>
   
     
     
     
<A NAME="Index_anchor_1168"></A> 

   
   
     
     
<A NAME="Index_anchor_1169"></A>
<P>

An object <I>min_annulus</I> is valid, iff
<UL>
  <LI><I>min_annulus</I> contains all points of its defining set <MATH><I>P</I></MATH>,
  <LI><I>min_annulus</I> is the smallest annulus containing its support set <MATH><I>S</I></MATH>, and
  <LI><MATH><I>S</I></MATH> is minimal, i.e. no support point is redundant.
</UL>
<I>Note:</I> In this release only the first item is considered by the
validity check.
<P>

<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_bool_is_valid6_bool_verbose_=_false+_int_level_=_0_9_const;"></A>
bool
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>
    min_annulus.is_valid ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>
    bool verbose = false,<BR>

int level = 0)</I></TD></TR></TABLE>
    
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    returns <I>true</I>, iff <I>min_annulus</I> is valid. If <I>verbose</I> is
      <I>true</I>, some messages concerning the performed checks are
      written to standard error stream. The second parameter
      <I>level</I> is not used, we provide it only for consistency
      with interfaces of other classes.
        </TD></TR>
        </TABLE>
<P>

<H3>Miscellaneous</H3>
   
     
     
     
<A NAME="Index_anchor_1170"></A> 

   
   
     
     
<A NAME="Index_anchor_1171"></A>
<P>

<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_const_Traits__traits6_9_const;"></A>
const Traits&amp;
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    min_annulus.traits ()
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    returns a const reference to the traits class object.
        </TD></TR>
        </TABLE>
<P>

<H3>I/O</H3>
   
     
     
<A NAME="Index_anchor_1172"></A>
<P>

<A NAME="Index_anchor_1173"></A> 

   
   
     
     
<A NAME="Index_anchor_1174"></A> 

   
  
      


        <TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    std::ostream&amp;
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
     std::ostream&amp; os &lt;&lt;  min_annulus<A NAME="Function_std::ostream__operator_66_6_std::ostream__os+_const_Min_annulus_d6Traits9__min_annulus9;"></A>

        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    writes <I>min_annulus</I> to output stream <I>os</I>.<BR>

<EM>Requirement: </EM>The output operator is defined for <I>Point</I>.
        </TD></TR>
        </TABLE>
<P>

<A NAME="Index_anchor_1175"></A> 

   
   
     
     
<A NAME="Index_anchor_1176"></A> 

   
  
      


        <TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    std::istream&amp;
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
     std::istream&amp; is &gt;&gt;  min_annulus&amp;<A NAME="Function_std::istream__operator_99_6_std::istream__is+_Min_annulus_d6Traits9_min_annulus_9;"></A>

        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    reads <I>min_annulus</I> from input stream <I>is</I>.<BR>

<EM>Requirement: </EM>The input operator is defined for <I>Point</I>.
        </TD></TR>
        </TABLE>
<P>

<H3>See Also</H3>
<P>

<I><A HREF="Class_Min_sphere_d.html#Cross_link_anchor_1162">CGAL::Min_sphere_d</A>&lt;Traits&gt;</I><BR>

<I><A HREF="Class_Optimisation_d_traits_2.html#Cross_link_anchor_1175">CGAL::Optimisation_d_traits_2</A>&lt;K,ET,NT&gt;</I><BR>

<I><A HREF="Class_Optimisation_d_traits_3.html#Cross_link_anchor_1177">CGAL::Optimisation_d_traits_3</A>&lt;K,ET,NT&gt;</I><BR>

<I><A HREF="Class_Optimisation_d_traits_d.html#Cross_link_anchor_1179">CGAL::Optimisation_d_traits_d</A>&lt;K,ET,NT&gt;</I><BR>

<I><A HREF="Concept_OptimisationDTraits.html#Cross_link_anchor_1181">OptimisationDTraits</A></I>
<P>

<H3>Implementation</H3>   
     
     
<A NAME="Index_anchor_1177"></A>
<P>

The problem of finding the smallest enclosing annulus of a finite point set
can be formulated as an optimization problem with linear constraints and a
linear objective
function.
The solution is obtained using our exact
solver for linear and quadratic programs&nbsp;[<A HREF="../biblio.html#Biblio_gs-eegqp-00">GS00</A>].
<P>

The creation time is almost always linear in the number of points.  Access
functions and predicates take constant time, inserting a point takes almost
always linear time. The clear operation and the check for validity each
take linear time.
<P>

<div class="NavNext"><hr> <b>Next:</b> <a href="Class_Min_sphere_of_spheres_d.html"><I>Min_sphere_of_spheres_d&lt;Traits&gt;</I></a> 


    
<div class="NavBottom">
<hr><!-- Bottom Navigation --------------------------------------------- -->
  <strong>Navigation:</strong>
<!Up_chapter_link_52!>
  <a href="../contents.html">Table of Contents</A>,
  <a href="../biblio.html">Bibliography</a>,
  <a href="../manual_index.html">Index</a>,
  <a href="../title.html">Title Page</a>
<!-- End of Bottom Navigation ------------------------------------------ -->


<hr><!-- --------------------------------------------------------------- -->
<div class="NavAddress">

The <A HREF=http://www.cgal.org>CGAL Project</A> .

Tue, December 21, 2004 .
<hr></div>
</body>  </html>  
