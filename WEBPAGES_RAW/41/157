<!-- received="Thu Jun 06 10:46:00 1996 PDT" -->
<!-- sent="Thu, 6 Jun 1996 13:45:36 -0400" -->
<!-- name="David G. Durand" -->
<!-- email="dgd@cs.bu.edu" -->
<!-- subject="Re: Versioning Thoughts (in HTML)" -->
<!-- id="ade26372320210049910@[128.195.21.209]" -->
<!-- inreplyto="Versioning Thoughts (in HTML)" -->
<title>Archive of Working Group on Versioning and Configuration Management of World Wide Web Content: Re: Versioning Thoughts (in HTML)</title>
<h1>Re: Versioning Thoughts (in HTML)</h1>
<b>David G. Durand</b> (<a href="mailto:dgd@cs.bu.edu"><i>dgd@cs.bu.edu</i></a>)<br>
<i>Thu, 6 Jun 1996 13:45:36 -0400</i>
<p>
<ul>
<li> <b>Messages sorted by:</b> <a href="index.html#45">[ date ]</a><a href="thread.html#45">[ thread ]</a><a href="subject.html#45">[ subject ]</a><a href="author.html#45">[ author ]</a>
<!-- next="start" -->
<li> <b>Next message:</b> <a href="0046.html">David G. Durand: "Re: More versioning thoughts."</a>
<li> <b>Previous message:</b> <a href="0044.html">David J. Fiander: "Re: Versioning Thoughts (in HTML)"</a>
<li> <b>Maybe in reply to:</b> <a href="0040.html">David G. Durand: "Versioning Thoughts (in HTML)"</a>
<!-- nextthread="start" -->
<li> <b>Next in thread:</b> <a href="0050.html">Larry Masinter: "Re: Versioning Thoughts (in HTML)"</a>
<!-- reply="end" -->
</ul>
<hr>
<!-- body="start" -->
<pre>
&gt;&gt; &lt;p&gt;Use of versioning operation should not depend on operations such as
&gt;&gt;LOCK and
&gt;&gt; UNLOCK. I at least, am taking great pains to avoid the logical or
&gt;&gt; practical necessity for such operations by making the free creation of
&gt;&gt; variant versions (and their later merging, if desired) as easy as possible.
&gt;&gt; I'd like it if we can find a specification for lock and Unlock such that a
&gt;&gt; server like the one I am implementing will be able to work with editors
&gt;&gt; that expect LOCK and UNLOCK.
&gt;
&gt;I sort of agree and disagree.  I feel that we need to define LOCK
&gt;and UNLOCK methods, but state that it's up to the server to
&gt;decide whether or not they're required before editting, or
&gt;PUTing.  This allows for a strict locking protocol for those
&gt;sites that feel it's necessary while leaving things open for
&gt;looser policy.

I think we actually just agree. I don't want to force a policy, but hope
that we can define a way for policy assumptions to painlessly vary between
server and client. For instance, as long as it's permissible for LOCK to be
an always-succeed NOP, then a "locking client" will work with an
"non-locking" server. If a client does not lock when it should, then the
error return can indicate that a lock is required.

&gt;
&gt;&gt; &lt;p&gt;It should be a server decision as to what version identifier should be
&gt;&gt; assigned to a document revision when it is submitted.  This follows from
&gt;&gt; the opaqueness of version parameters in URLs.  It should be a server
&gt;&gt; decision (not mandated by the protocol) whether to accept a new revision.
&gt;
&gt;I agree on both points, but reserve the right to change my mind.
&gt;The protocol will certainly not specify that the server MUST
&gt;accept a new revision.  I can think of at least a dozen reasons,
&gt;all policy-based, why a server might refuse a "check-in"
&gt;operation.

Certainly, it ought to be a server policy decision whether or not to accept
any change. I just don't want a protocol that says you must have taken a
lock to submit a change. On the other hand there probably should be
standard not-updated reasons like "file not locked", "conflicting update
pending", "not authorized", etc. This list should include common results
that might reasonably be implemented by popular policies (like LOCK/UNLOCK
or CHECKOUT/CHECKIN).

&gt;
&gt;&gt; &lt;p&gt;I'd like to discuss notions such as VTML as part of the overall
&gt;&gt; approach to versioning on the web, thus creating a tripartite front for
&gt;&gt; proper support: &lt;tt&gt;Content-type:&lt;/tt&gt;, HTTP protocol, and URL format.
&gt;&gt; These correspond to the fundamental versioning notions of naming, access
&gt;&gt; control, and differencing.
&gt;
&gt;I've looked at the VTML paper, but can't say, right now, any more
&gt;than that.  I will certainly not accept any attempt to specify
&gt;VTML as the storage format.  The server may accept VTML as a
&gt;format for updating pages, and it may serve VTML to
&gt;versioning-aware clients, for display purposes, but how the
&gt;server stores things is private.

   Definitely. I think that VTML is useful as a way to send information
between versioning aware editors and servers, but it shouldn't be a
requirement on versioning aware servers. I also think it would be an
unreasonable and unpopular requirement for implementation technology. Not
all versioning systems will even have the information to implement VTML
(for instance a server that used the VMS file system as a version
"repository").

   -- David

----------------------------------------------+----------------------------
  David Durand                 <a href="mailto:dgd@cs.bu.edu">dgd@cs.bu.edu</a>  | david@dynamicDiagrams.com
  Boston University Computer Science          | Dynamic Diagrams
  <a href="http://cs-www.bu.edu:80/students/grads/dgd/">http://cs-www.bu.edu:80/students/grads/dgd/</a> | http://dynamicDiagrams.com/
</pre>
<!-- body="end" -->
<hr>
<p>
<ul>
<!-- next="start" -->
<li> <b>Next message:</b> <a href="0046.html">David G. Durand: "Re: More versioning thoughts."</a>
<li> <b>Previous message:</b> <a href="0044.html">David J. Fiander: "Re: Versioning Thoughts (in HTML)"</a>
<li> <b>Maybe in reply to:</b> <a href="0040.html">David G. Durand: "Versioning Thoughts (in HTML)"</a>
<!-- nextthread="start" -->
<li> <b>Next in thread:</b> <a href="0050.html">Larry Masinter: "Re: Versioning Thoughts (in HTML)"</a>
<!-- reply="end" -->
</ul>
