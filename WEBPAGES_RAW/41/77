<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<!-- Page automatically generated from latex_to_html converter. -->
<!-- by cc_extract_html, $Revision: 3.19 $ -->
<!-- LaTeX source file: './Nef_2_ref/Explorer.tex' -->
<html> <head>  
<title>Explorer</title>
</head>  
<link href="../latex_to_html.css" rel="STYLESHEET">
<body bgcolor="white">
<!-- ------------------------------------------------------------------- -->


<!-- Top Navigation ---------------------------------------------------- -->
<div class="NavTop">
<hr>
  <strong>Navigation:</strong>
<a href="Chapter_intro.html">Up</a>, 
  <a href="../contents.html">Table of Contents</A>,
  <a href="../biblio.html">Bibliography</a>,
  <a href="../manual_index.html">Index</a>,
  <a href="../title.html">Title Page</a>
<hr><!-- End of Top Navigation ----------------------------------------- -->
</div>


<A NAME="Cross_link_anchor_717"></A>

<A NAME="Cross_link_anchor_718"></A>

      
     
     
     
<A NAME="Index_anchor_743"></A> 

   
<TABLE ALIGN=RIGHT><TR><TD><IMG ALIGN=TOP SRC="cc_Class.gif"></TD></TR></TABLE>


    <A NAME="ccRef_CGAL::Explorer"></A>
<h2><I>CGAL::Explorer</I></h2>
<P>

<H3>Definition</H3>
<P>

An instance <I>E</I> of the data type <I><A HREF="Class_Explorer.html#Cross_link_anchor_718">Explorer</A></I> is a decorator to
explore the structure of the plane map underlying the Nef
polyhedron. It inherits all topological adjacency exploration
operations from <I><A HREF="Class_Topological_explorer.html#Cross_link_anchor_716">Topological_explorer</A></I>. <I><A HREF="Class_Explorer.html#Cross_link_anchor_718">Explorer</A></I>
additionally allows one to explore the geometric embedding.
<P>

The position of each vertex is given by a so-called extended point,
which is either a standard affine point or the tip of a ray touching
an infinimaximal <A HREF="../NumberTypeSupport_ref/Function_square.html#Cross_link_anchor_1418">square</A> frame centered at the origin. A vertex <I>v</I>
is called a <I>standard</I> vertex if its embedding is a
<I>standard</I> point and <I>non-standard</I> if its embedding is a
<I>non-standard</I> point. By the straightline embedding of their
source and target vertices, edges correspond to either affine
segments, rays or lines or are part of the bounding frame.
<P>

<B>Figure:&nbsp;&nbsp;</B>Extended geometry: standard vertices are marked
by S, non-standard vertices are marked by N. <B>A</B>: The possible
embeddings of edges: an affine segment s1, an affine ray s2, an affine
line s3. <B>B</B>: A plane map embedded by extended geometry: note
that the frame is arbitrarily large, the 6 vertices on the frame are
at infinity, the two faces represent a geometrically unbounded <A HREF="../Kernel_23_ref/Function_area.html#Cross_link_anchor_159">area</A>,
however they are topologically closed by the frame edges. No standard
point can be placed outside the frame.<A NAME="extsegs"></A>

<CENTER>
<IMG BORDER=0 SRC="./extsegs.gif" ALIGN=center
ALT="Extended geometry">
</CENTER>
<P>

<H3>Inherits From</H3><A HREF="Class_Topological_explorer.html#Cross_link_anchor_716">Topological_explorer</A>
<P>

<H3>Types</H3>
<P>

<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>
        <I><NOBR>
    <A HREF="Class_Explorer.html#Cross_link_anchor_718">Explorer</A>::Point
        </I></NOBR>
        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>
    the point type of finite vertices.
<P>

</TD></TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>
        <I><NOBR>
    <A HREF="Class_Explorer.html#Cross_link_anchor_718">Explorer</A>::Ray
        </I></NOBR>
        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>
    the ray type of vertices on the frame.
<P>

</TD></TR>
        </TABLE>
<P>

Iterators, handles, and circulators are inherited from
<I><A HREF="Class_Topological_explorer.html#Cross_link_anchor_716">Topological_explorer</A></I>.
<P>

<H3>Creation</H3>
<P>

<I><A HREF="Class_Explorer.html#Cross_link_anchor_718">Explorer</A></I> is copy constructable and assignable. An object can be
obtained via the <I><A HREF="Class_Nef_polyhedron_2.html#Cross_link_anchor_714">Nef_polyhedron_2</A>::explorer()</I> method of
<I><A HREF="Class_Nef_polyhedron_2.html#Cross_link_anchor_714">Nef_polyhedron_2</A></I>.
<P>

<H3>Operations</H3>
<P>

<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_bool_is_standard6Vertex_const_handle_v9_;"></A>
bool
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    E.is_standard ( Vertex_const_handle v)
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    returns true iff
<I>v</I>'s position is a standard point.
        </TD></TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_Point_point6Vertex_const_handle_v9_;"></A>
Point
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    E.point ( Vertex_const_handle v)
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    returns the standard
point that is the embedding of <I>v</I>.<BR>

<EM>Precondition: </EM><I>E.is_standard(v)</I>.
        </TD></TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_Ray_ray6Vertex_const_handle_v9_;"></A>
Ray
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    E.ray ( Vertex_const_handle v)
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    returns the ray defining
the non-standard point on the frame.<BR>

<EM>Precondition: </EM><I>!E.is_standard(v)</I>.
        </TD></TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_bool_is_frame_edge6Halfedge_const_handle_e9_;"></A>
bool
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    E.is_frame_edge ( Halfedge_const_handle e)
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    returns true
iff <I>e</I> is part of the infinimaximal frame.
        </TD></TR>
        </TABLE>
<P>

<div class="NavNext"><hr> <b>Next:</b> <a href="Concept_ExtendedKernelTraits_2.html"><I>ExtendedKernelTraits_2</I></a> 


    
<div class="NavBottom">
<hr><!-- Bottom Navigation --------------------------------------------- -->
  <strong>Navigation:</strong>
<!Up_chapter_link_12!>
  <a href="../contents.html">Table of Contents</A>,
  <a href="../biblio.html">Bibliography</a>,
  <a href="../manual_index.html">Index</a>,
  <a href="../title.html">Title Page</a>
<!-- End of Bottom Navigation ------------------------------------------ -->


<hr><!-- --------------------------------------------------------------- -->
<div class="NavAddress">

The <A HREF=http://www.cgal.org>CGAL Project</A> .

Tue, December 21, 2004 .
<hr></div>
</body>  </html>  
