<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"><HTML><HEAD>   <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">   <META NAME="GENERATOR" CONTENT="Mozilla/4.07 (Macintosh; I; PPC) [Netscape]">   <TITLE>Deliverable 2: Requirements</TITLE></HEAD><BODY BGCOLOR="#FFFFF0"><CENTER><H2> Informatics 117:Project in Software System Design</H2></CENTER><CENTER><H3>Winter Quarter 2009</H3></CENTER><CENTER><H1>Requirements</H1></CENTER><H3>Due Date: January 27th (Thursday)</H3><P><B>This document must be signed by your customer.&nbsp; </B>This willhelp ensure that he or she has agreed that you have met all his or her needs.&nbsp;This is, after all, a contract with your customer.<HR><h3> Assignment Overview </h3><P>Develop a softwarerequirements document that satisfies the needs of your customer.  Thisdocument  consists of three primary components: (1) a requirementsspecification, (2) a system test plan, and (3) an update to your project plan.   Your design may also need to include a glossary defining  key terms used that are specific to your application. Other  accompanying documentation may be included as well.<P>The system test plan must cover all basic software capabilitiesto be provided by the system by applying functional test heuristics (blackbox) to each capability described in the requirements specification anddeveloping a test case for each interaction between capabilities.<P>You have substantial flexibility inchoosing the specific form for the various sections of your deliverables.  &quot;Modeldocuments", drawn from previous classes such as ICS 52 or from numerous Web sources,may be  drawn upon, to help you determine how to structure this statement.<P>A list of the standard items that must be turned in with <em> each </em> assignment and posted on the team's web site are in the course syllabus.Required sections of this document are described below.<HR><H3>Deliverable Objectives/Requirements Qualities</H3>Keep in mind that key objectives of a requirements document are to:<UL><LI> Document the customer's needs</LI><LI> Identify functional capabilities to be provided</LI><LI> Identify non-functional and environmental constraints that must be satisfied</LI><LI> Provide a definitive basis for testing and verification</LI><LI> Identify lifecycle considerations such as incremental sub-system development</LI><LI> Provide a reference tool readable by and <strong>useful</strong> to customer, developer,  and maintainer</LI><LI> Serve as a contract between customer and developer</LI></UL>In addition, keep in mind that a requirements document should possess thefollowing qualities:<UL><LI> Complete: everything that is essential is described</LI><LI> Understandable:  the "customer" can read it and be convinced that all hisobjectives and needs are adequately and accurately described</LI><LI> Utility: the information in the document can be used effectively  as the  design progresses</LI><LI> Unambiguous: every reader will come away with the same understanding</LI><LI> Consistent: no contradictions</LI><LI> Feasible: the requirements can be satisfied within resource constraints</LI><LI> Concise and appropriate: no extraneous details and not more than required</LI><LI> Verifiable and testable: you can tell when you've met the requirements</LI></UL><HR><H3> Required Document Contents</H3><H4> Introduction (Required)</H4>Provide an introduction that discusses the scope and purpose of this documentas well as your specific approaches related to the requirements of thesystem. This introduction should also discuss the organization ofthis document and guide the reader.(In other words, this section not about the substance of your project, but ratherthe choices you made in describing the requirements.) Probably a very short section.<H4> Project Summary (Required, but short!)</H4> This section need <em>not</em> be different from that included in yourprospectus if your understanding hasn't changed.<H4> Requirements Specification (Required)</H4>Use diagrams to help give appropriate overviews and understanding.Note that pictures may well be an <I>essential </I> element of thecomplete description of any graphical interface.Some <strong><em>suggested</em></strong> contents follow.<UL><LI> <strong>Overview of System Requirements</strong>: Provides a brief discussion of basic needs  and proposed usage.</LI><LI> <strong>Environment Characteristics</strong>: Describes hardware environment,  overview of the software package to be developed (e.g. will it be a desktop  app distributed via DVD? a web site? a downloadable app for an iPhone? etc.),  and users of the system.</LI><LI> <strong>Fixed Interfaces</strong>: Documents any interfaces to the environment  -- hardware or software -- that are fixed and hence not part of your design  of the system (e.g. an external database).</LI><LI> <strong>Software Capabilities</strong>: Specifies functionality in groups of related capabilities.A diagram is helpful to show the relationship between capability groups.  <BR>  For each capability, at least the following should bespecified:  Description (functionality of the capability group), Input, Output, Persistent Data (that lasts from one invocation of the system to thenext). Considerations specific to the application domain and other relevantfields may be provided too.</LI><LI> Sample I/O or <strong>Scenario</strong>: Provides a sample input/output  stream describing user interaction with the system, or similar usage scenario.  NOTE: if useful, the streams can be grouped with the capability groupto which they apply.</LI><LI><strong>Non-functional properties</strong>: including safety and securityconstraints, timing and precision, ....</LI><LI> <strong>Goals</strong>: Documents any guidance for evaluating alternatives  as the design progresses.</LI></UL><h4> Lifecycle Considerations (Required)</h4>Prioritized capability subsets  for the purposes ofguiding incremental development.(Don't repeat content; use references to items in the preceding section).<h4> Acceptance Requirements (Required)</h4>Describes minimal requirements for system acceptance by the client, suchas the minimum capabilities that must be provided in the delivered system.This should logically tie in closely with the preceding section (Lifecycle considerations).(Don't repeat content.)<h4> System Test Plan (Required)</h4><P>A test plan capable of demonstrating minimal functionalityof all system elements:test cases or strategies should be specified for each software capability specified.  If desired, the test cases can be grouped with the capability group to which  they apply, otherwise a cross reference listing of some sort should be provided.<UL><LI> Each test case could be described as follows:</LI>   <UL>   <LI> Test Case ID</LI>   <LI> Purpose of test case</LI>   <LI> Item(s) being tested</LI>   <LI> Input specification</LI>   <LI> Output specification (Expected Results or Test Oracle Mechanism)</LI>      <LI> Test environmental needs or special test procedures</LI>   </UL></UL><h4> Glossary (Optional)</h4>Defines all non-obvious terms used in the specifications.May include a detailed data dictionary.<h4> Project Plan (Required)</h4>Expand yourproject plan to represent how you have accomplished the work so far. Reassessthe project risks. Expand your task network or work breakdown structure to includethe effort expended to complete this task. Based on the work you have done, reviseyour estimates on how much your team can accomplish and deliver. Provide a rationalefor any significant changes to the original plan.<h4>Auxillary Documentation (Optional)</h4>This section is reserved for any documentation you may have developed duringthis phase of the project. Specifically, if during the course of developingthe your understanding of the various technologies involved in the project,you discovered items that were not documented, but which were important,then you should include that here. Additionally you should list here the majorbackground sources of information that you used during this phase or any thatyou plan to use during the remainder of the project. This would include referencesto similar systems and/or procedures.<hr><h3>Requirements Presentations/Reviews.</h3>January 27 or 29 (at your discretion).<P>Each team should prepare a 15 minute Powerpoint presentation, after which  we will allow for questions. Your customer should be present.&nbsp;<p>Prepare your presentation appropriately. Your presentation should includethe following:<UL><LI> Overview of your system;</LI><LI>Highlights of your requirements specification</LI><LI> System test plan </LI><LI>Current state of your project plan; highlight items that  have changed since the initial project plan;</LI></UL><p>  Be <em> sure </em> to focus your presentation on the key issues.  Don'tspend time with the obvious things.  If there's something in your presentationthat you find boring, so will your audience.  Don't gloss over problems. Yourcustomer wants you to succeed, your instructors want you to succeed.   They can'thelp you unless you tell them where you think the problems are, or are likely tobe.<p>You should also ask your customer what they would like to see presented.</BODY></HTML>