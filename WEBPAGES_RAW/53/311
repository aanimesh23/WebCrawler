
<!--  Presentation generated by Internet Assistant for Microsoft PowerPoint 97 -->

<HTML>
<HEAD>

<meta name="GENERATOR" content="Microsoft Internet Assistant for Microsoft PowerPoint 97">
 <TITLE>Compiler-Directed Aggressive Prefetching</TITLE> 
</HEAD>

<BODY     >

<CENTER>
<TABLE WIDTH=100%> 
     <TR> <TD WIDTH=100% ALIGN=CENTER>
         <IMG SRC="img016.gif" usemap="#Objmap" WIDTH=640 HEIGHT=480 BORDER=0>
     </TD> </TR>
     <TR> <TD WIDTH=100% ALIGN=CENTER>
         <A HREF="sld001.htm"><IMG SRC="first.gif" BORDER=0 ALT="First"></A>
         <A HREF="sld015.htm"><IMG SRC="prev.gif" BORDER=0 ALT="Previous"></A>
         <A HREF="sld017.htm"><IMG SRC="next.gif" BORDER=0 ALT="Next"></A>
         <A HREF="sld024.htm"><IMG SRC="last.gif" BORDER=0 ALT="Last"></A>
         <IMG SRC="space.gif" BORDER=0>
         <A HREF="index.htm"><IMG SRC="info.gif" BORDER=0 ALT="Index"></A>
         <A HREF="http://www.ics.uci.edu/~nicolau"><IMG SRC="home.gif" BORDER=0 ALT="Home"></A>
         <A HREF="tsld016.htm"><IMG SRC="text.gif" BORDER=0 ALT="Text"></A>
     </TD> </TR>
</TABLE>
<P>Slide 16 of 24</P>
</CENTER>
<!-- <UL>
<H2>Compiler-Directed Aggressive Prefetching</H2>
</UL></P>
<P><UL>
<LI><H2>The compiler can facilitate prefetching  (e.g., by ensuring that data is prefetched well ahead of its use - possibly several iterations early). 
</H2>
</UL><UL>
<LI><H2>
</H2>
</UL><UL>
<LI><H2>The compiler can also attempt to establish data-fetch patterns (e.g., stride regularity/size) and use it to generate either certain or speculative prefetches. 
</H2>
</UL><UL>
<LI><H2>
</H2>
</UL><UL>
<LI><H2>To minimize memory bandwidth requirements, the compiler can prioritize prefetching in order of importance, based on global analysis of the code.
</H2>
</UL><UL>
<LI><H2>
</H2>
</UL><UL>
<LI><H2>This essentially requires the same information as ILP exploitation. </H2>
</UL></P>
<P>  -->
</Body>
</HTML>
