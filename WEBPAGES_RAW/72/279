<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.5.0_16) on Sat Apr 25 22:55:01 EDT 2009 -->
<TITLE>
Index (formula package)
</TITLE>


<LINK REL ="stylesheet" TYPE="text/css" HREF="./stylesheet.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    parent.document.title="Index (formula package)";
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="./overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Package</FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Class</FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Use</FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="./overview-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="./deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Index</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="./help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;PREV&nbsp;
&nbsp;NEXT</FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="./index.html?index-all.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="index-all.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="./allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="./allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<A HREF="#_A_">A</A> <A HREF="#_B_">B</A> <A HREF="#_C_">C</A> <A HREF="#_D_">D</A> <A HREF="#_E_">E</A> <A HREF="#_F_">F</A> <A HREF="#_G_">G</A> <A HREF="#_L_">L</A> <A HREF="#_N_">N</A> <A HREF="#_O_">O</A> <A HREF="#_V_">V</A> <A HREF="#_Z_">Z</A> <HR>
<A NAME="_A_"><!-- --></A><H2>
<B>A</B></H2>
<DL>
<DT><A HREF="./formulaVisited/Conjunction.html#accept(formulaVisited.Visitor)"><B>accept(Visitor)</B></A> - 
Method in class formulaVisited.<A HREF="./formulaVisited/Conjunction.html" title="class in formulaVisited">Conjunction</A>
<DD>&nbsp;
<DT><A HREF="./formulaVisited/Disjunction.html#accept(formulaVisited.Visitor)"><B>accept(Visitor)</B></A> - 
Method in class formulaVisited.<A HREF="./formulaVisited/Disjunction.html" title="class in formulaVisited">Disjunction</A>
<DD>&nbsp;
<DT><A HREF="./formulaVisited/Formula.html#accept(formulaVisited.Visitor)"><B>accept(Visitor)</B></A> - 
Method in interface formulaVisited.<A HREF="./formulaVisited/Formula.html" title="interface in formulaVisited">Formula</A>
<DD>Accepts a visitor.
<DT><A HREF="./formulaVisited/LogicalConstant.html#accept(formulaVisited.Visitor)"><B>accept(Visitor)</B></A> - 
Method in class formulaVisited.<A HREF="./formulaVisited/LogicalConstant.html" title="class in formulaVisited">LogicalConstant</A>
<DD>&nbsp;
<DT><A HREF="./formulaVisited/LogicalVariable.html#accept(formulaVisited.Visitor)"><B>accept(Visitor)</B></A> - 
Method in class formulaVisited.<A HREF="./formulaVisited/LogicalVariable.html" title="class in formulaVisited">LogicalVariable</A>
<DD>&nbsp;
<DT><A HREF="./formulaVisited/Negation.html#accept(formulaVisited.Visitor)"><B>accept(Visitor)</B></A> - 
Method in class formulaVisited.<A HREF="./formulaVisited/Negation.html" title="class in formulaVisited">Negation</A>
<DD>&nbsp;
</DL>
<HR>
<A NAME="_B_"><!-- --></A><H2>
<B>B</B></H2>
<DL>
<DT><A HREF="./formula/Environment.html#bind(formula.LogicalVariable, boolean)"><B>bind(LogicalVariable, boolean)</B></A> - 
Method in class formula.<A HREF="./formula/Environment.html" title="class in formula">Environment</A>
<DD>Binds a logical variable to a boolean value.
<DT><A HREF="./formulaVisited/Environment.html#bind(formulaVisited.LogicalVariable, boolean)"><B>bind(LogicalVariable, boolean)</B></A> - 
Method in class formulaVisited.<A HREF="./formulaVisited/Environment.html" title="class in formulaVisited">Environment</A>
<DD>Binds a logical variable to a boolean value.
</DL>
<HR>
<A NAME="_C_"><!-- --></A><H2>
<B>C</B></H2>
<DL>
<DT><A HREF="./formula/Named.html#compareTo(java.lang.Object)"><B>compareTo(Object)</B></A> - 
Method in class formula.<A HREF="./formula/Named.html" title="class in formula">Named</A>
<DD>Compares two named objects for order, by name.
<DT><A HREF="./formulaVisited/Named.html#compareTo(java.lang.Object)"><B>compareTo(Object)</B></A> - 
Method in class formulaVisited.<A HREF="./formulaVisited/Named.html" title="class in formulaVisited">Named</A>
<DD>Compares two named objects for order, by name.
<DT><A HREF="./formula/Conjunction.html" title="class in formula"><B>Conjunction</B></A> - Class in <A HREF="./formula/package-summary.html">formula</A><DD>The conjunction ("and") of two subformulas.<DT><A HREF="./formula/Conjunction.html#Conjunction(formula.Formula, formula.Formula)"><B>Conjunction(Formula, Formula)</B></A> - 
Constructor for class formula.<A HREF="./formula/Conjunction.html" title="class in formula">Conjunction</A>
<DD>Constructs the conjunction of two subformulas.
<DT><A HREF="./formulaVisited/Conjunction.html" title="class in formulaVisited"><B>Conjunction</B></A> - Class in <A HREF="./formulaVisited/package-summary.html">formulaVisited</A><DD>The conjunction ("and") of two subformulas.<DT><A HREF="./formulaVisited/Conjunction.html#Conjunction(formulaVisited.Formula, formulaVisited.Formula)"><B>Conjunction(Formula, Formula)</B></A> - 
Constructor for class formulaVisited.<A HREF="./formulaVisited/Conjunction.html" title="class in formulaVisited">Conjunction</A>
<DD>Constructs the conjunction of two subformulas.
</DL>
<HR>
<A NAME="_D_"><!-- --></A><H2>
<B>D</B></H2>
<DL>
<DT><A HREF="./formula/Disjunction.html" title="class in formula"><B>Disjunction</B></A> - Class in <A HREF="./formula/package-summary.html">formula</A><DD>The disjunction ("and") of two subformulas.<DT><A HREF="./formula/Disjunction.html#Disjunction(formula.Formula, formula.Formula)"><B>Disjunction(Formula, Formula)</B></A> - 
Constructor for class formula.<A HREF="./formula/Disjunction.html" title="class in formula">Disjunction</A>
<DD>Constructs the disjunction of two subformulas.
<DT><A HREF="./formulaVisited/Disjunction.html" title="class in formulaVisited"><B>Disjunction</B></A> - Class in <A HREF="./formulaVisited/package-summary.html">formulaVisited</A><DD>The disjunction ("and") of two subformulas.<DT><A HREF="./formulaVisited/Disjunction.html#Disjunction(formulaVisited.Formula, formulaVisited.Formula)"><B>Disjunction(Formula, Formula)</B></A> - 
Constructor for class formulaVisited.<A HREF="./formulaVisited/Disjunction.html" title="class in formulaVisited">Disjunction</A>
<DD>Constructs the disjunction of two subformulas.
</DL>
<HR>
<A NAME="_E_"><!-- --></A><H2>
<B>E</B></H2>
<DL>
<DT><A HREF="./formula/Environment.html" title="class in formula"><B>Environment</B></A> - Class in <A HREF="./formula/package-summary.html">formula</A><DD>An environment in which to evaluate a formula.<DT><A HREF="./formula/Environment.html#Environment()"><B>Environment()</B></A> - 
Constructor for class formula.<A HREF="./formula/Environment.html" title="class in formula">Environment</A>
<DD>Constructs a new, empty environment.
<DT><A HREF="./formulaVisited/Environment.html" title="class in formulaVisited"><B>Environment</B></A> - Class in <A HREF="./formulaVisited/package-summary.html">formulaVisited</A><DD>An environment in which to evaluate a formula.<DT><A HREF="./formulaVisited/Environment.html#Environment()"><B>Environment()</B></A> - 
Constructor for class formulaVisited.<A HREF="./formulaVisited/Environment.html" title="class in formulaVisited">Environment</A>
<DD>Constructs a new, empty environment.
<DT><A HREF="./formula/Named.html#equals(java.lang.Object)"><B>equals(Object)</B></A> - 
Method in class formula.<A HREF="./formula/Named.html" title="class in formula">Named</A>
<DD>Compares two named objects for equality, by name.
<DT><A HREF="./formulaVisited/Named.html#equals(java.lang.Object)"><B>equals(Object)</B></A> - 
Method in class formulaVisited.<A HREF="./formulaVisited/Named.html" title="class in formulaVisited">Named</A>
<DD>Compares two named objects for equality, by name.
</DL>
<HR>
<A NAME="_F_"><!-- --></A><H2>
<B>F</B></H2>
<DL>
<DT><A HREF="./formulaVisited/Factory.html" title="class in formulaVisited"><B>Factory</B></A> - Class in <A HREF="./formulaVisited/package-summary.html">formulaVisited</A><DD>A factory for creating formulas from a reader.<DT><A HREF="./formulaVisited/Factory.html#Factory()"><B>Factory()</B></A> - 
Constructor for class formulaVisited.<A HREF="./formulaVisited/Factory.html" title="class in formulaVisited">Factory</A>
<DD>&nbsp;
<DT><A HREF="./formulaVisited/Factory.html#factory(java.io.PushbackReader)"><B>factory(PushbackReader)</B></A> - 
Static method in class formulaVisited.<A HREF="./formulaVisited/Factory.html" title="class in formulaVisited">Factory</A>
<DD>Reads a character stream and returns
    the formula corresponding to it, if any.
<DT><A HREF="./formula/package-summary.html"><B>formula</B></A> - package formula<DD>
Basic classes implementing propositional and first-order logic formulas.<DT><A HREF="./formula/Formula.html" title="interface in formula"><B>Formula</B></A> - Interface in <A HREF="./formula/package-summary.html">formula</A><DD>The type of all logic formulas.<DT><A HREF="./formulaVisited/Formula.html" title="interface in formulaVisited"><B>Formula</B></A> - Interface in <A HREF="./formulaVisited/package-summary.html">formulaVisited</A><DD>The type of all logic formulas that accept visitors.<DT><A HREF="./formulaVisited/package-summary.html"><B>formulaVisited</B></A> - package formulaVisited<DD>
Propositional and first-order logic with visitors, singletons, 
and other patterns used.</DL>
<HR>
<A NAME="_G_"><!-- --></A><H2>
<B>G</B></H2>
<DL>
<DT><A HREF="./formula/Environment.html#get(formula.LogicalVariable)"><B>get(LogicalVariable)</B></A> - 
Method in class formula.<A HREF="./formula/Environment.html" title="class in formula">Environment</A>
<DD>Get the binding of a logical variable.
<DT><A HREF="./formulaVisited/Environment.html#get(formulaVisited.LogicalVariable)"><B>get(LogicalVariable)</B></A> - 
Method in class formulaVisited.<A HREF="./formulaVisited/Environment.html" title="class in formulaVisited">Environment</A>
<DD>Get the binding of a logical variable.
</DL>
<HR>
<A NAME="_L_"><!-- --></A><H2>
<B>L</B></H2>
<DL>
<DT><A HREF="./formula/LogicalConstant.html" title="class in formula"><B>LogicalConstant</B></A> - Class in <A HREF="./formula/package-summary.html">formula</A><DD>A logical constant, representing true or false.<DT><A HREF="./formula/LogicalConstant.html#LogicalConstant(boolean)"><B>LogicalConstant(boolean)</B></A> - 
Constructor for class formula.<A HREF="./formula/LogicalConstant.html" title="class in formula">LogicalConstant</A>
<DD>Constructs a logical constant.
<DT><A HREF="./formulaVisited/LogicalConstant.html" title="class in formulaVisited"><B>LogicalConstant</B></A> - Class in <A HREF="./formulaVisited/package-summary.html">formulaVisited</A><DD>A logical constant, representing true or false.<DT><A HREF="./formula/LogicalVariable.html" title="class in formula"><B>LogicalVariable</B></A> - Class in <A HREF="./formula/package-summary.html">formula</A><DD>A logical variable, representing true or false
  (but we may not know which).<DT><A HREF="./formula/LogicalVariable.html#LogicalVariable(java.lang.String)"><B>LogicalVariable(String)</B></A> - 
Constructor for class formula.<A HREF="./formula/LogicalVariable.html" title="class in formula">LogicalVariable</A>
<DD>Constructs a logical variable.
<DT><A HREF="./formulaVisited/LogicalVariable.html" title="class in formulaVisited"><B>LogicalVariable</B></A> - Class in <A HREF="./formulaVisited/package-summary.html">formulaVisited</A><DD>A logical variable, representing true or false
  (but we may not know which).<DT><A HREF="./formulaVisited/LogicalVariable.html#LogicalVariable(java.lang.String)"><B>LogicalVariable(String)</B></A> - 
Constructor for class formulaVisited.<A HREF="./formulaVisited/LogicalVariable.html" title="class in formulaVisited">LogicalVariable</A>
<DD>Constructs a logical variable.
</DL>
<HR>
<A NAME="_N_"><!-- --></A><H2>
<B>N</B></H2>
<DL>
<DT><A HREF="./formula/Named.html" title="class in formula"><B>Named</B></A> - Class in <A HREF="./formula/package-summary.html">formula</A><DD>The superclass of all named objects in the package.<DT><A HREF="./formula/Named.html#Named(java.lang.String)"><B>Named(String)</B></A> - 
Constructor for class formula.<A HREF="./formula/Named.html" title="class in formula">Named</A>
<DD>&nbsp;
<DT><A HREF="./formulaVisited/Named.html" title="class in formulaVisited"><B>Named</B></A> - Class in <A HREF="./formulaVisited/package-summary.html">formulaVisited</A><DD>The superclass of all named objects in the package.<DT><A HREF="./formulaVisited/Named.html#Named(java.lang.String)"><B>Named(String)</B></A> - 
Constructor for class formulaVisited.<A HREF="./formulaVisited/Named.html" title="class in formulaVisited">Named</A>
<DD>&nbsp;
<DT><A HREF="./formula/Negation.html" title="class in formula"><B>Negation</B></A> - Class in <A HREF="./formula/package-summary.html">formula</A><DD>The negation of a formula.<DT><A HREF="./formula/Negation.html#Negation(formula.Formula)"><B>Negation(Formula)</B></A> - 
Constructor for class formula.<A HREF="./formula/Negation.html" title="class in formula">Negation</A>
<DD>Constructs the negation of a formula
<DT><A HREF="./formulaVisited/Negation.html" title="class in formulaVisited"><B>Negation</B></A> - Class in <A HREF="./formulaVisited/package-summary.html">formulaVisited</A><DD>The negation of a formula.<DT><A HREF="./formulaVisited/Negation.html#Negation(formulaVisited.Formula)"><B>Negation(Formula)</B></A> - 
Constructor for class formulaVisited.<A HREF="./formulaVisited/Negation.html" title="class in formulaVisited">Negation</A>
<DD>Constructs the negation of a formula
</DL>
<HR>
<A NAME="_O_"><!-- --></A><H2>
<B>O</B></H2>
<DL>
<DT><A HREF="./formulaVisited/LogicalConstant.html#one()"><B>one()</B></A> - 
Static method in class formulaVisited.<A HREF="./formulaVisited/LogicalConstant.html" title="class in formulaVisited">LogicalConstant</A>
<DD>Returns a logical constant for 1 (true).
</DL>
<HR>
<A NAME="_V_"><!-- --></A><H2>
<B>V</B></H2>
<DL>
<DT><A HREF="./formulaVisited/Visitor.html#visit(formulaVisited.Conjunction)"><B>visit(Conjunction)</B></A> - 
Method in interface formulaVisited.<A HREF="./formulaVisited/Visitor.html" title="interface in formulaVisited">Visitor</A>
<DD>Calculates the result for a Conjunction.
<DT><A HREF="./formulaVisited/Visitor.html#visit(formulaVisited.Disjunction)"><B>visit(Disjunction)</B></A> - 
Method in interface formulaVisited.<A HREF="./formulaVisited/Visitor.html" title="interface in formulaVisited">Visitor</A>
<DD>Calculates the result for a Disjunction.
<DT><A HREF="./formulaVisited/Visitor.html#visit(formulaVisited.LogicalConstant)"><B>visit(LogicalConstant)</B></A> - 
Method in interface formulaVisited.<A HREF="./formulaVisited/Visitor.html" title="interface in formulaVisited">Visitor</A>
<DD>Calculates the result for a LogicalConstant.
<DT><A HREF="./formulaVisited/Visitor.html#visit(formulaVisited.LogicalVariable)"><B>visit(LogicalVariable)</B></A> - 
Method in interface formulaVisited.<A HREF="./formulaVisited/Visitor.html" title="interface in formulaVisited">Visitor</A>
<DD>Calculates the result for a LogicalVariable.
<DT><A HREF="./formulaVisited/Visitor.html#visit(formulaVisited.Negation)"><B>visit(Negation)</B></A> - 
Method in interface formulaVisited.<A HREF="./formulaVisited/Visitor.html" title="interface in formulaVisited">Visitor</A>
<DD>Calculates the result for a Negation.
<DT><A HREF="./formulaVisited/VisitorEvaluate.html#visit(formulaVisited.Conjunction)"><B>visit(Conjunction)</B></A> - 
Method in class formulaVisited.<A HREF="./formulaVisited/VisitorEvaluate.html" title="class in formulaVisited">VisitorEvaluate</A>
<DD>Calculates the result for a Conjunction.
    A conjunction is true if both its subformulas are true,
    false if either of its subformulas is false,
    and unknown otherwise.
<DT><A HREF="./formulaVisited/VisitorEvaluate.html#visit(formulaVisited.Disjunction)"><B>visit(Disjunction)</B></A> - 
Method in class formulaVisited.<A HREF="./formulaVisited/VisitorEvaluate.html" title="class in formulaVisited">VisitorEvaluate</A>
<DD>Calculates the result for a Disjunction.
    A disjunction is false if both its subformulas are false,
    true if either of its subformulas is true,
    and unknown otherwise.
<DT><A HREF="./formulaVisited/VisitorEvaluate.html#visit(formulaVisited.LogicalConstant)"><B>visit(LogicalConstant)</B></A> - 
Method in class formulaVisited.<A HREF="./formulaVisited/VisitorEvaluate.html" title="class in formulaVisited">VisitorEvaluate</A>
<DD>Calculates the result for a LogicalConstant.
    The value of <A HREF="./formulaVisited/LogicalConstant.html#one"><CODE>LogicalConstant.one() </CODE></A> is true, and
    the value of <A HREF="./formulaVisited/LogicalConstant.html#zero"><CODE>LogicalConstant.zero()</CODE></A> is false.
<DT><A HREF="./formulaVisited/VisitorEvaluate.html#visit(formulaVisited.LogicalVariable)"><B>visit(LogicalVariable)</B></A> - 
Method in class formulaVisited.<A HREF="./formulaVisited/VisitorEvaluate.html" title="class in formulaVisited">VisitorEvaluate</A>
<DD>Calculates the result for a LogicalVariable.
    The value of a logical variable is
    the value the variable is bound to in the environment,
    and unknown if the variable is bound to no value.
<DT><A HREF="./formulaVisited/VisitorEvaluate.html#visit(formulaVisited.Negation)"><B>visit(Negation)</B></A> - 
Method in class formulaVisited.<A HREF="./formulaVisited/VisitorEvaluate.html" title="class in formulaVisited">VisitorEvaluate</A>
<DD>Calculates the result for a Negation.
    A negation is false if its subformula is true,
    false if its subformula is true,
    and unknown if its subformula's value is unknown.
<DT><A HREF="./formulaVisited/VisitorToString.html#visit(formulaVisited.Conjunction)"><B>visit(Conjunction)</B></A> - 
Method in class formulaVisited.<A HREF="./formulaVisited/VisitorToString.html" title="class in formulaVisited">VisitorToString</A>
<DD>&nbsp;
<DT><A HREF="./formulaVisited/VisitorToString.html#visit(formulaVisited.Disjunction)"><B>visit(Disjunction)</B></A> - 
Method in class formulaVisited.<A HREF="./formulaVisited/VisitorToString.html" title="class in formulaVisited">VisitorToString</A>
<DD>&nbsp;
<DT><A HREF="./formulaVisited/VisitorToString.html#visit(formulaVisited.LogicalConstant)"><B>visit(LogicalConstant)</B></A> - 
Method in class formulaVisited.<A HREF="./formulaVisited/VisitorToString.html" title="class in formulaVisited">VisitorToString</A>
<DD>&nbsp;
<DT><A HREF="./formulaVisited/VisitorToString.html#visit(formulaVisited.LogicalVariable)"><B>visit(LogicalVariable)</B></A> - 
Method in class formulaVisited.<A HREF="./formulaVisited/VisitorToString.html" title="class in formulaVisited">VisitorToString</A>
<DD>&nbsp;
<DT><A HREF="./formulaVisited/VisitorToString.html#visit(formulaVisited.Negation)"><B>visit(Negation)</B></A> - 
Method in class formulaVisited.<A HREF="./formulaVisited/VisitorToString.html" title="class in formulaVisited">VisitorToString</A>
<DD>&nbsp;
<DT><A HREF="./formulaVisited/Visitor.html" title="interface in formulaVisited"><B>Visitor</B></A> - Interface in <A HREF="./formulaVisited/package-summary.html">formulaVisited</A><DD>A visitor to formulas.<DT><A HREF="./formulaVisited/VisitorEvaluate.html" title="class in formulaVisited"><B>VisitorEvaluate</B></A> - Class in <A HREF="./formulaVisited/package-summary.html">formulaVisited</A><DD>A visitor that evaluates each formula, returning
  Boolean.TRUE  if the formula is true,
  Boolean.FALSE if the formula is false, and
  null if its value cannot be determined.<DT><A HREF="./formulaVisited/VisitorEvaluate.html#VisitorEvaluate(formulaVisited.Environment)"><B>VisitorEvaluate(Environment)</B></A> - 
Constructor for class formulaVisited.<A HREF="./formulaVisited/VisitorEvaluate.html" title="class in formulaVisited">VisitorEvaluate</A>
<DD>Construct a VisitorEvaluate that evaluates formulas
    in the given environment.
<DT><A HREF="./formulaVisited/VisitorToString.html" title="class in formulaVisited"><B>VisitorToString</B></A> - Class in <A HREF="./formulaVisited/package-summary.html">formulaVisited</A><DD>A visitor that produces a string representation for each formula.<DT><A HREF="./formulaVisited/VisitorToString.html#VisitorToString()"><B>VisitorToString()</B></A> - 
Constructor for class formulaVisited.<A HREF="./formulaVisited/VisitorToString.html" title="class in formulaVisited">VisitorToString</A>
<DD>&nbsp;
</DL>
<HR>
<A NAME="_Z_"><!-- --></A><H2>
<B>Z</B></H2>
<DL>
<DT><A HREF="./formulaVisited/LogicalConstant.html#zero()"><B>zero()</B></A> - 
Static method in class formulaVisited.<A HREF="./formulaVisited/LogicalConstant.html" title="class in formulaVisited">LogicalConstant</A>
<DD>Returns a logical constant for 0 (false).
</DL>
<HR>
<A HREF="#_A_">A</A> <A HREF="#_B_">B</A> <A HREF="#_C_">C</A> <A HREF="#_D_">D</A> <A HREF="#_E_">E</A> <A HREF="#_F_">F</A> <A HREF="#_G_">G</A> <A HREF="#_L_">L</A> <A HREF="#_N_">N</A> <A HREF="#_O_">O</A> <A HREF="#_V_">V</A> <A HREF="#_Z_">Z</A> 

<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="./overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Package</FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Class</FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <FONT CLASS="NavBarFont1">Use</FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="./overview-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="./deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Index</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="./help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;PREV&nbsp;
&nbsp;NEXT</FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="./index.html?index-all.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="index-all.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="./allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="./allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>

</BODY>
</HTML>
