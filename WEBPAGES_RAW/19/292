<HTML>
<HEAD>
<!-- Created by AOLpress/1.2 -->
<TITLE>Dave Long's Slides for San Mateo Distributed Authoring Meeting</TITLE>
</HEAD>
<BODY>

<CENTER>
<H1>AOLpress/AOLserver</H1>

<H2>Dave Long<BR>
America Online, Santa Barbara</H2>

<H3>
<I>dave@sb.aol.com</I>
</H3>
</CENTER>

<P>
<B>AOLserver "webstore"</B>
<UL>
<LI>
current version of resource in filesystem <LI>
meta-data, indices, etc. in database
<LI>
DBMS not required; "stackable" with other servers </UL>
<P>
<B>HTML source</B>
<UL>
<LI>
With server-side includes and other dynamic content, how does one request the "original" page?<BR>
(Accept: text/x-html-ssi ?)
<LI>
How much canonicalizing should an authoring tool attempt?<BR> (more palatable when pretty-printed, line-break conventions preserved) </UL>
<P>
<B>Rewriting relative links...</B>
<UL>
<LI>
duck the issue - do nothing
<LI>
duck the issue - use collections
<LI>
user-specified (state space?)
<LI>
template specified
</UL>
<P>
<B>Rewriting relative links...</B>
<UL>
<LI>
user-specified: by type
<UL>
<LI>
convert { none, relative links, all }
<LI>
convert relative to absolute
</UL>
<LI>
template-specified: for &lt;APPLET&gt; specifies which <PARAM>&lt;PARAM&gt;s can be rewritten (as above) </UL>
<P>
<B>Lost Update</B>
<UL>
<LI>
do nothing (ostriching)
<LI>
detect lost updates (versioning)
<LI>
prevent lost updates\tab (locking)
<LI>
fairness issues (leasing)
</UL>
<P>
<B>Lost Update - versioning</B>
<UL>
<LI>
reads include "Content-Version:" headers <LI>
writes provide "Derived-From:" headers
<LI>
server prevents dirty writes
<LI>
solves the "CREATE" problem
<LI>
header syntax has changed for HTTP/1.1
</UL>
<P>
<B>Lost Update - locking</B>
<UL>
<LI>
LOCK/UNLOCK methods
<LI>
"Locked-By:" header
<LI>
use OPTIONS to detect server support
<LI>
runs on top of Content-Version scheme
<LI>
fair UNLOCK? collaborative groups hopefully share trust! </UL>
<P>
<B>Access Control</B>
<UL>
<LI>
users / groups (multiple membership)
<LI>
METHOD URL (specific/inherited)
<LI>
machine address (netmask)
</UL>
<P>
<B>Access Control List</B>
<UL>
<LI>
METHOD+aliases URL (+inheritance)
<LI>
allow/deny (user0 user1 ... userN)
<LI>
allow/deny (group0 group1 ... groupN)
<LI>
allow + deny (netmask0 netmask1 ... netmaskN) </UL>
<P>
<B>Versions</B>
<UL>
<LI>
resource revisions are timestamped and saved <LI>
accessed through prefixed URL, therefore <LI>
relative links, images, resolved as of that revision's timestamp <LI>
absolute links? version != snapshot?
</UL>
<P>
<B>PUT vs. POST to publish</B>
<UL>
<LI>
PUT method simplifies access control
<LI>
PUT method simplifies infrastructure<BR> caching proxies, gateways, etc...
<LI>
general-use servers starting to support PUT </UL>
<P>
<B>namespace methods</B>
<UL>
<LI>
DELETE
<LI>
MKDIR
<LI>
BROWSE
</UL>
<P>
<B>BROWSE sample</B>
<PRE>HTTP/1.0 200 OK
MIME-Version: 1.0
Date: Tuesday, 09-Jul-96 23:35:44 GMT
Server: NaviServer/2.0 AOLserver/2.033
Content-Type: application/x-navibrowse
Content-Length: 289

application/x-navidir .
text/html .odo.index.htm
application/x-navidir download
text/html download.html
text/html feedback.html
application/x-navidoc images
text/html index.html
application/x-navidoc press
text/html search.html
application/x-navidoc server
application/x-navimap tools.nvm
</PRE>
<P>
<B>URL mapping</B><BR>
magic URLs used for: <BR>
http://server/NS/operation/path... (or form data) <UL>
<LI>
page permissions
<LI>
page versions
<LI>
administer server
<LI>
PrimeHost Advanced Control Panel
<LI>
use methods instead?
</UL>
<P>
<B>PrimeHost Control Panel</B><BR>
linked to server administration page, provides <UL>
<LI>
log analysis, log rolling
<LI>
MIME type configuration
<LI>
FTP reporting, configuration
<LI>
email configuration: aliases/mailing lists </UL>
<P>
transparent extension!
<P>
<B>Server API's</B>
<UL>
<LI>
should we standardize?
<LI>
can "stack" servers for some functionality <LI>
ISAPI is a possibility
</UL>
<P>
<B>Editing variants</B>
<UL>
<LI>
editable variants have their own URLs
<LI>
does this apply to versioning, as well?
<LI>
assigning variants to resources similar to access control </UL>
<P>
<B>PICS, etc...</B>
<UL>
<LI>
data-driven support for metadata systems (such as PICs rating) <BR> raters provide form-driven well-known URLs to produce their encoding? <LI>
old NaviPress "Describe" functionality<BR> (forms-based association of metadata with resource) </UL>
<P>
<B>miscellanea</B>
<UL>
<LI>
cross-server searching (WAIS, MARC, ...) <LI>
cross-vendor AutoLinking?
<LI>
better support for link checking (spec'd, just needs to be implemented?) </UL>
<P>
</BODY></HTML>