<?xml version='1.1'?>
<!DOCTYPE html
     PUBLIC '-//W3C//DTD XHTML 1.0 Strict//EN'
     'http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd'>
<html xmlns='http://www.w3.org/1999/xhtml' xml:lang='en' lang='en'>
<head>
  <title>Message Sequence Charts and their Ilk</title>
  <meta name='Author' content='Thomas A. Alspaugh'/>
  <meta name='Description' content="Message Sequence Charts and their Ilk"/>
  <meta http-equiv='content-type' content='text/html; charset=ISO-8859-1'/>
  <meta http-equiv='Content-Style-Type' content='text/css'/>
  <link href='../../alspaugh-uci.css' rel='stylesheet' type='text/css'/>
  <!-- <link href='../alspaugh-uci-cls.css' rel='stylesheet' type='text/css'/> -->
  <style type='text/css'>
    @media screen {
      body     {  background: url("img/bg-msc.png") repeat-y;  }
      #TMain   {  margin-left: 10.00em;  }
    }
  </style>
</head>
<body>

<div id='TBg'>

<div id='THeader'>
Message Sequence Charts and their Ilk
</div>

<div id='TLinks1' class='Links'> <!-- - - - - - - - - - - - - - - - - - - - -->
<p>  <a class='sc' href='../../index.html'>Home</a>
</p>
<div class='hr'> </div>
<p>  <a href='index.html'>Foundations home</a>
</p>
<div class='hr'> </div>
<p>
<a href='set.html'>Sets</a><br/>
<a href='relation.html'>Relations</a><br/>
<a href='correspondence.html'>Correspondences</a><br/>
<a href='orderedSet.html'>Ordered Sets</a><br/>
<a href='lattice.html'>Lattices</a><br/>
<a href='graph.html'>Graphs</a><br/>
<a href='powerset.html'>Powersets</a><br/>
<a href='binaryString.html'>Binary Strings</a><br/>
<a href='logicConcepts.html'>Logic</a><br/>
<a href='allen.html'>AIA</a><br/><!-- -spell AIA -->
<a href='greek.html'>Greek</a><br/>
</p>
<div class='hr'> </div>
<p>
<a href='glossaryExternal.html'>Glossary</a><br/>
<a href='goodAbstract.html'>Abstracts</a><br/>
<a href='argument.html'>Argument</a><br/>
<a href='ontology.html'>Glossaries</a><br/>
<a href='inquiryCycle.html'>Inquiry Cycle</a><br/>
<a href='hohfeld.html'>Legal Relations</a><br/>
<a href='goodPresentation.html'>Presentations</a><br/>
</p>
<div class='hr'> </div>
<p>
<a href='quickStart.html'>Elicitation</a><br/>
<a href='ontology.html'>Glossaries</a><br/>
<a href='goal.html'>Goals</a><br/>
<a href='istar.html'>i*</a><br/>
<a href='SCR.html'>SCR</a><br/>
<a href='tracing.html'>Tracing</a><br/>
</p>
<div class='hr2'> </div>
<p>
<a href='alloy.html'>Alloy</a><br/>
<a href='msc.html'>MSCs</a><br/>
<a href='regularExpression.html'>Regular Exprs.</a><br/>
</p><!-- -spell MSCs Exprs -->
<div class='hr2'> </div>
<p>
<a href='java-designPattern.html'>Design Patterns</a><br/>
<a href='javadoc.html'>Javadoc</a><br/>
<a href='java-package.html'>Java Packages</a><br/>
<a href='java-type.html'>Java Types</a><br/>
</p>
<div class='hr2'> </div>
<p>
<a href='html.html'>(X)HTML</a><br/>
<a href='xmlSchema.html'>XML Schemas</a><br/>
<a href='xslt.html'>XSLT</a><br/>
</p><!-- -spell XSLT -->
</div>


<!-- No right column -->
<div id='TMain'><!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->


<!--spell ITU Letier MSC Magee UML analyse behaviours coregion doi -->
<!--spell hMSC hMSCs mcsb msc proc recognises timeline timelines -->



<h1>MSCs</h1>

<div id='Figure-1' class='figure'>
  <img style='width:8cm;' alt='MSC event ordering'
    src='img/ITU1999-msc.msc-event_ordering.png'/>
  <p>Figure 1.&nbsp; An MSC &nbsp;[from <a href='#ITU1999-msc'>ITU1999-msc</a> p.21]
  </p>
</div>

<p>
A (basic) <dfn>message sequence chart</dfn> or <dfn>MSC</dfn>
is a diagram that shows communications between system components
(also called instances).&nbsp;
Each vertical line in an MSC represents a system components,
and horizontal arrows represent
messages from one component to another.&nbsp;
</p>

<p>
It is a design-level notation,
intended for and best suited for
system design involving two or more subsystems;
it is not particularly appropriate for system requirements.&nbsp;
</p>

<p>
There is also the <dfn>high-level message sequence chart</dfn> or
<a class='dfn' href='#hMSC'>hMSC</a>,
which gives the order in which some MSCs can occur.&nbsp;
</p>


<h2>Interpreting an MSC</h2>

<p>
An MSC shows the sequence in which
some <dfn>messages</dfn> are sent among some <dfn>components</dfn>
(sometimes called <dfn>instances</dfn>).&nbsp;
The vertical line for each component/instance is its <dfn>axis</dfn>.&nbsp;
The messages and components have to be defined elsewhere.&nbsp;
Each message <i>m</i> has two instants in time:
when it is sent by one component (<i>out(m)</i>)
and when it is received by another (<i>in(m)</i>).&nbsp;
The sequence is as follows:&nbsp;
</p>

<ol>
  <li> Each message is sent before it is received
    (<i>out(m)</i> precedes <i>in(m)</i>).&nbsp;
  </li>
  <li> For each component,
    messages higher on the vertical line
    precede messages lower down.&nbsp;
  </li>
  <li> <span class='it sc'>But</span>
    there is no other guarantee
    about the sequence of messages on different vertical lines.&nbsp;
    For two messages that don't share a component,
    it doesn't matter which is higher or lower
    in the diagram.&nbsp;
    For people who like MSCs, this is their greatest charm and power;
    for everyone else,
    it is a confusing annoyance.&nbsp;
  </li>
  <li> <span class='it sc'>Also</span>
    an MSC may describe an implementation
    that is inconsistent,
    in that the components may not have enough information
    to enforce the message ordering the MSC defines.&nbsp;
    Although one might see this as a defect in the notation
    and its semantics,
    MSC enthusiasts view this as an opportunity for analysis instead.&nbsp;
  </li>
</ol>

<div id='Figure-2' class='figure'>
  <img style='width:4cm;' alt='MSC event ordering'
    src='img/msc-event_ordering.po.png'/>
  <p>Figure 2.&nbsp; Partial order of outs and ins in
  <a href='#Figure-1'>Figure 1</a>
  </p>
</div>

<p>
For example,
in <a href='#Figure-1'>Figure 1</a>
</p>

<ul>
  <li> the arrival of m1 <i>in(m1)</i>
    is followed by the sending of m2 <i>out(m2)</i> (rule 2),
  </li>
  <li> which is followed by
    the arrival of m2 <i>in(m2)</i> (rule 1).&nbsp;
  </li>
  <li> But although m3 is higher in the diagram than m4,
    we don't know whether or not
    m3 arrives before m4 is either sent or arrives,
    because the three instants happen at different components (rule 3).&nbsp;
    It could be that
    m3 arrives <em>after</em> m4 (<i>in(m3) &gt; in(m4)</i>),
    even though m3 is higher in the diagram &mdash;
    higher in the diagram makes no difference except for
    messages at the same vertical line (component).&nbsp;
  </li>
  <li> It is also the case that although the MSC demands
    that <i>out(m3)</i> precede <i>in(m4)</i>,
    in fact there is no way to enforce this (rule 4).&nbsp;
    Component proc_b can't tell when proc_a sends m3,
    so it can't make sure that m4 doesn't arrive until later.&nbsp;
  </li>
</ul>

<p>
<a href='#Figure-2'>Figure 2</a> gives
the <a href='orderedSet.html'>partial order</a>
of message ins and outs in
<a href='#Figure-1'>Figure 1</a>.&nbsp;
</p>

<p>
<a href='#Figure-1'>Figure 1</a> also shows:
</p>

<ul>
  <li> the instance head
    <img class='sym' alt='instance-head' src='img/msc-instanceHead.png'/>
    and instance end
    <img class='sym' alt='instance-end' src='img/msc-instanceEnd.png'/>
    symbols,
    which mark the beginning and end of a description
    (<em>not</em> the creation and destruction of the component described).&nbsp;
    The instance's axis runs from the instance head to the instance end.&nbsp;
  </li>
  <li> a message (m1) that originates
    from outside the frame (the rectangle surrounding the MSC),
    coming from some other component not described in the MSC.&nbsp;
    Such a message is called a <dfn>gate</dfn>.&nbsp;
  </li>
</ul>


<h2>Other MSC possibilities</h2>
<ul>
  <li> Messages can be "lost" (indicated by
    <img class='sym'  alt='lostMessage' src='img/msc-lostMessage.png'/>),
    meaning that their input is unknown.
  </li>
  <li> Messages can be "found" (indicated by
    <img class='sym' alt='foundMessage' src='img/msc-foundMessage.png'/>),
    meaning that their output is unknown.
  </li>
  <li> An instance (component) may be described with a
    named unit of behavior, called a <dfn>method</dfn>.&nbsp;
    A method is shown as a filled rectangle on the instance's axis.&nbsp;
    I believe a method is called by a message.&nbsp;
    The result of a method is returned by a <dfn>reply</dfn>
    (indicated by
    <img class='sym' alt='reply' src='img/msc-reply.png'/>).&nbsp;
  </li>
  <li> If the calling instance is suspended (waiting, inactive)
    until the reply arrives,
    this is denoted by an open rectangle on the calling instance's axis.&nbsp;
  </li>
  <li> A <dfn>condition</dfn>
    (indicated by
    <img class='sym' alt='condition' src='img/msc-condition.png'/>
    blocking one or more instance axes)
    must be true for its axis or axes to proceed.&nbsp;
    The condition that must be true is named in the lozenge shape.&nbsp;
    A <dfn>guarding condition</dfn> is identified by the keywords
    "condition when"'&nbsp;
    such a condition must be true in order for its axes to proceed.&nbsp;
    A <dfn>setting condition</dfn>,
    identified by the keyword "condition",
    is guaranteed to be true when its axes pass it.&nbsp;
  </li>
  <li> A <dfn>timer</dfn>
    (indicated by
    <img class='sym' alt='timer' src='img/msc-timer.png'/>)
    is used to show timeouts or delays.&nbsp;
  </li>
  <li> A <dfn>coregion</dfn> ... <!-- p69 -->
    <span class='FW'>under construction</span>
  </li>
  <li> An <dfn>inline expression</dfn> ... <!-- p71 -->
    <span class='FW'>under construction</span>
  </li>
  <li> An <dfn>MSC reference</dfn> (a call of another MSC) ... <!-- p75 -->
    <span class='FW'>under construction</span>
  </li>
</ul>


<div id='Figure-3' class='figure'>
  <img style='width:6cm;' alt='ATM'
  src='img/Letier+Kramer+2005-mcsb.PrefixOfATMScenario.png'/>
  <p>Figure 3.&nbsp; ATM
  &nbsp;[from <a href='#Letier_Kramer_2005-mcsb'>Letier+Kramer+2005-mcsb</a> p.387]
  </p>
</div>


<h2>Some example MSCs</h2>

<p>
<a href='#Figure-3'>Figure 3</a>
shows a user going through the beginning of an ATM withdrawal transaction.&nbsp;
The diagram assumes that we have
definitions of the components and messages,
and simply gives the sequence of the messages.&nbsp;
"User" is the user, "ATM" is the ATM,
and "Bank" is the bank's database system with which the ATM communicates.&nbsp;
The user inserts an ATM card,
the ATM requests a PIN,
the user enters a PIN;
the ATM verifies the PIN with the bank's database.&nbsp;
The "processing" message
stands for the ATM showing a message saying it is processing the PIN.&nbsp;
After the bank says the PIN is valid,
the ATM presents the transaction choices ("option")
and the user selects withdrawal.&nbsp;
The ATM then asks for the amount to withdraw.&nbsp;
</p>

<p>
Although this MSC states that
the ATM shows the "processing" message
before the bank responds with "valid",
in fact the implementation that the MSC describes
cannot ensure this
because the ATM doesn't control how quickly
the bank responds.&nbsp;
Granted,
this is a fairly insignificant problem
but is an example of how an MSC can state a property
that the implementation it describes cannot guarantee.&nbsp;
</p>


<div id='Figure-4' class='figure'>
  <img style='width:5cm;' alt='hMSC' src='img/Letier+Kramer+2005-mcsb.BoilerControlSystem.hMSC.png'/>
  <p>Figure 4.&nbsp; hMSC relating four basic MSCs
  </p>
</div>


<h2 id='hMSC'>hMSCs</h2>

<p>
A <dfn>high-level message sequence chart</dfn> or <dfn>hMSC</dfn>
gives the sequence in which some basic MSCs can occur.&nbsp;
An example is shown in <a href='#Figure-4'>Figure 4</a>.&nbsp;
</p>


<h1 style='clear:both;'>UML sequence diagrams
  <span class='FW'>under construction</span></h1>

<div id='Figure-5' class='figure'>
  <img style='width:5cm;' alt='sequenceDiagram' src='img/sequenceDiagram.png'/>
  <p>Figure 5.&nbsp; Sequence diagram
  </p>
</div>

<p>
A UML <dfn>sequence diagram</dfn> or <dfn>SD</dfn>
is similar to an MSC but written with a different notation.&nbsp;
Presumably the same semantic issues arise,
but possibly not since UML semantics are not well-defined.&nbsp;
An example is shown in <a href='#Figure-5'>Figure 5</a>.&nbsp;
</p>

<p>
The timelines are dotted rather than solid,
and the name of the component is inside a box at the head of each timeline.&nbsp;
The narrow rectangles apparently show
when a component is active (unsure precisely what "active" means).&nbsp;
An X on a timeline
indicates that the component ceases to exist in some sense
(unsure precisely how this is meant also).&nbsp;
In the example,
the Bank timeline has an X simply as an example
(presumably the Bank does continue to exist).&nbsp;
</p>


<h1 style='clear:both;'>References</h1>

<dl>

  <dt class='bib' id='ITU1999-msc' title='ITU1999-msc'>ITU1999-msc</dt>
  <dd class='bibEntry'>
  Message Sequence Chart (MSC).&nbsp;
  ITU-T Recommendation Z.120.&nbsp;
  International Telecommunications Union.&nbsp;
  Nov., 1999.&nbsp;
  <div class='bibEntryAux'>
  </div>
  </dd>

  <dt class='bib' id='Letier_Kramer_2005-mcsb' title='Letier_Kramer_2005-mcsb'>Letier+Kramer+2005-mcsb</dt>
  <dd class='bibEntry'>
  Emmanuel Letier, Jeff Kramer, Jeff Magee, and Sebastian Uchitel.&nbsp;
  Monitoring and control in scenario-based requirements analysis.&nbsp;
  In   <i>27th International Conference on Software Engineering (ICSE &rsquo;05)</i>, pages 382&ndash;391, 
  15&ndash;21 May 2005.&nbsp;
  <div class='bibEntryAux'>
  <div class='abstract' style='display:inline;'><span class='abstractHeader'
onclick='if ("none"==nextSibling.style.display){nextSibling.style.display="inline";parentNode.style.display="block"}else{nextSibling.style.display="none";parentNode.style.display="inline"}'
>Abstract</span><div class='abstractBody toggledBlock' style='display:none;'
> Scenarios are an effective means for eliciting, validating and documenting requirements. At the requirements level, scenarios describe sequences of interactions between the software-to-be and agents in the environment. Interactions correspond to the occurrence of an event that is controlled by one agent and monitored by another. <p> This paper presents a technique to analyse requirements-level scenarios for unforeseen, potentially harmful, consequences. Our aim is to perform analysis early in system development, where it is highly cost-effective. The approach recognises the importance of monitoring and control issues and extends existing work on implied scenarios accordingly. These so-called input-output implied scenarios expose problematic behaviours in scenario descriptions that cannot be detected using standard implied scenarios. Validation of these implied scenarios supports requirements elaboration. We demonstrate the relevance of input-output implied scenarios using a number of examples.</p></div></div>
  <span class='doi'><span class='doiHeader'>doi:</span><a class='doiBody' href='http://dx.doi.org/10.1145/1062455.1062527'>10.1145/1062455.1062527</a></span>
  </div>
  </dd>

</dl>


</div>

</div><!-- #TBg -->

<div id='TFooter'>
<div class='W3C'>
  <a href='http://validator.w3.org/check?uri=referer'><img class='W3C'
    src='../../img/valid-xhtml10-blue.png'
    alt='Valid XHTML 1.0 Strict'/></a>
  <br/>
  <a href='http://jigsaw.w3.org/css-validator/check/referer'><img class='W3C'
    src='../../img/vcss-blue.png'
    alt='Valid CSS!'/></a>
</div>
<div class='timestamp'>2010May16Su21:42</div>
<div style='padding-top:1px;'>
<a class='plain' href='./index.html' style='font-variant:small-caps;'
>Thomas A. Alspaugh</a>
<span style='padding-left:1em;'><span class='email ss sm'>alspaugh&nbsp;
    <span class='ss sc sm'>at</span> &middot; ics &middot; uci &middot; edu</span>
    <!-- -spell alspaugh uci edu --> </span>
</div>
</div>

<!-- Google Analytics code -->
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol)
  ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost +
  "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript">
try {
var pageTracker = _gat._getTracker("UA-15281497-1");
pageTracker._trackPageview();
} catch(err) {}
</script>

</body>
</html>

