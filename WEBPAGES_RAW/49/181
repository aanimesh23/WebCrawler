<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns:m="http://schemas.microsoft.com/office/2004/12/omml"
xmlns:css="http://macVmlSchemaUri" xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta name=Title content="CS 154 Lab 3: Register File">
<meta name=Keywords content="">
<meta http-equiv=Content-Type content="text/html; charset=macintosh">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 2008">
<meta name=Originator content="Microsoft Word 2008">
<link rel=File-List href="lab3_files/filelist.xml">
<link rel=Edit-Time-Data href="lab3_files/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>CS 154 Lab 3: Register File</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Dang,Nga Thi Thanh</o:Author>
  <o:Template>Normal</o:Template>
  <o:LastAuthor>Alex Veidenbaum</o:LastAuthor>
  <o:Revision>5</o:Revision>
  <o:TotalTime>65</o:TotalTime>
  <o:Created>2015-04-22T19:22:00Z</o:Created>
  <o:LastSaved>2016-04-13T19:05:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>713</o:Words>
  <o:Characters>4065</o:Characters>
  <o:Company>Bren School of Information and Computer Sciences</o:Company>
  <o:Lines>33</o:Lines>
  <o:Paragraphs>8</o:Paragraphs>
  <o:CharactersWithSpaces>4992</o:CharactersWithSpaces>
  <o:Version>12.0</o:Version>
 </o:DocumentProperties>
 <o:OfficeDocumentSettings>
  <o:AllowPNG/>
 </o:OfficeDocumentSettings>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:Zoom>125</w:Zoom>
  <w:SpellingState>Clean</w:SpellingState>
  <w:GrammarState>Clean</w:GrammarState>
  <w:TrackMoves>false</w:TrackMoves>
  <w:TrackFormatting/>
  <w:ValidateAgainstSchemas/>
  <w:SaveIfXMLInvalid>false</w:SaveIfXMLInvalid>
  <w:IgnoreMixedContent>false</w:IgnoreMixedContent>
  <w:AlwaysShowPlaceholderText>false</w:AlwaysShowPlaceholderText>
  <w:Compatibility>
   <w:BreakWrappedTables/>
   <w:SplitPgBreakAndParaMark/>
   <w:DontGrowAutofit/>
   <w:UseFELayout/>
  </w:Compatibility>
 </w:WordDocument>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:LatentStyles DefLockedState="false" LatentStyleCount="276">
 </w:LatentStyles>
</xml><![endif]-->
<style>
<!--p.MSONORMAL
	{mso-style-qformat:yes;
	mso-style-unhide:no;}
li.MSONORMAL
	{mso-style-qformat:yes;
	mso-style-unhide:no;}
div.MSONORMAL
	{mso-style-qformat:yes;
	mso-style-unhide:no;}
h1
	{mso-style-priority:9;
	mso-style-qformat:yes;
	mso-style-unhide:no;}
h2
	{mso-style-priority:9;
	mso-style-qformat:yes;
	mso-style-unhide:no;}
a:link
	{mso-style-priority:99;}
span.MSOHYPERLINK
	{mso-style-priority:99;}
a:visited
	{mso-style-priority:99;}
span.MSOHYPERLINKFOLLOWED
	{mso-style-priority:99;}
p
	{mso-style-priority:99;}
p.MSOACETATE
	{mso-style-priority:99;}
li.MSOACETATE
	{mso-style-priority:99;}
div.MSOACETATE
	{mso-style-priority:99;}
span.HEADING1CHAR
	{mso-bidi-font-size:14pt;
	mso-style-locked:yes;
	mso-style-priority:9;
	mso-style-unhide:no;
	mso-themecolor:accent1;
	mso-themeshade:191;}
span.HEADING2CHAR
	{mso-bidi-font-size:13pt;
	mso-style-locked:yes;
	mso-style-priority:9;
	mso-style-unhide:no;
	mso-themecolor:accent1;}
span.BALLOONTEXTCHAR
	{mso-bidi-font-size:8pt;
	mso-style-locked:yes;
	mso-style-priority:99;
	mso-style-unhide:no;}
.MSOCHPDEFAULT
	{mso-default-props:yes;
	mso-bidi-font-size:10pt;}
table.MSONORMALTABLE
	{mso-style-priority:99;}

 /* Font Definitions */
@font-face
	{font-family:Cambria;
	panose-1:2 4 5 3 5 4 6 3 2 4;
	mso-font-charset:0;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:3 0 0 0 1 0;}
@font-face
	{font-family:Tahoma;
	panose-1:2 11 6 4 3 5 4 4 2 4;
	mso-font-charset:0;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:-520082689 -1073717157 41 0 66047 0;}
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:"";
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:minor-bidi;}
h1
	{mso-style-link:"Heading 1 Char";
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	mso-outline-level:1;
	font-size:24.0pt;
	font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:minor-bidi;
	font-weight:bold;}
h2
	{mso-style-link:"Heading 2 Char";
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	mso-outline-level:2;
	font-size:18.0pt;
	font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:minor-bidi;
	font-weight:bold;}
a:link, span.MsoHyperlink
	{color:blue;
	text-decoration:underline;
	text-underline:single;}
a:visited, span.MsoHyperlinkFollowed
	{color:purple;
	text-decoration:underline;
	text-underline:single;}
p
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;
	mso-bidi-font-family:"Times New Roman";}
p.MsoAcetate, li.MsoAcetate, div.MsoAcetate
	{mso-style-link:"Balloon Text Char";
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:8.0pt;
	font-family:"Times New Roman";
	mso-ascii-font-family:Tahoma;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;
	mso-hansi-font-family:Tahoma;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:minor-bidi;}
span.Heading1Char
	{mso-style-name:"Heading 1 Char";
	mso-style-locked:yes;
	mso-style-link:"Heading 1";
	mso-ansi-font-size:14.0pt;
	font-family:Calibri;
	mso-ascii-font-family:Calibri;
	mso-ascii-theme-font:major-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:Calibri;
	mso-hansi-theme-font:major-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#365F91;
	font-weight:bold;}
span.Heading2Char
	{mso-style-name:"Heading 2 Char";
	mso-style-locked:yes;
	mso-style-link:"Heading 2";
	mso-ansi-font-size:13.0pt;
	font-family:Calibri;
	mso-ascii-font-family:Calibri;
	mso-ascii-theme-font:major-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:Calibri;
	mso-hansi-theme-font:major-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#4F81BD;
	font-weight:bold;}
span.BalloonTextChar
	{mso-style-name:"Balloon Text Char";
	mso-style-locked:yes;
	mso-style-link:"Balloon Text";
	mso-ansi-font-size:8.0pt;
	font-family:Tahoma;
	mso-ascii-font-family:Tahoma;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;
	mso-hansi-font-family:Tahoma;
	mso-bidi-font-family:Tahoma;}
span.style2
	{mso-style-name:style2;}
span.style1
	{mso-style-name:style1;}
span.SpellE
	{mso-style-name:"";
	mso-spl-e:yes;}
span.GramE
	{mso-style-name:"";
	mso-gram-e:yes;}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.0in 1.0in 1.0in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
 /* List Definitions */
@list l0
	{mso-list-id:252016447;
	mso-list-template-ids:-356104162;}
@list l0:level1
	{mso-level-tab-stop:.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level2
	{mso-level-tab-stop:1.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level3
	{mso-level-tab-stop:1.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level4
	{mso-level-tab-stop:2.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level5
	{mso-level-tab-stop:2.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level6
	{mso-level-tab-stop:3.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level7
	{mso-level-tab-stop:3.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level8
	{mso-level-tab-stop:4.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level9
	{mso-level-tab-stop:4.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l1
	{mso-list-id:904801868;
	mso-list-template-ids:-1670221728;}
@list l1:level1
	{mso-level-start-at:2;
	mso-level-tab-stop:.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l2
	{mso-list-id:1729180743;
	mso-list-template-ids:1441190498;}
@list l3
	{mso-list-id:2128037207;
	mso-list-template-ids:-838822640;}
@list l3:level1
	{mso-level-start-at:2;
	mso-level-tab-stop:.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l3:level2
	{mso-level-tab-stop:1.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l3:level3
	{mso-level-tab-stop:1.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l3:level4
	{mso-level-tab-stop:2.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l3:level5
	{mso-level-tab-stop:2.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l3:level6
	{mso-level-tab-stop:3.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l3:level7
	{mso-level-tab-stop:3.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l3:level8
	{mso-level-tab-stop:4.0in;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l3:level9
	{mso-level-tab-stop:4.5in;
	mso-level-number-position:left;
	text-indent:-.25in;}
ol
	{margin-bottom:0in;}
ul
	{margin-bottom:0in;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:"";
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-para-margin:0in;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-ascii-font-family:Cambria;
	mso-ascii-theme-font:minor-latin;
	mso-hansi-font-family:Cambria;
	mso-hansi-theme-font:minor-latin;}
</style>
<![endif]-->
<link rel=themeData href="file://localhost/Volumes/alexv/public_html/154/Labs/Lab3_files:themedata.xml">
<!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="1027"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
<link rel=themeData href="file://localhost/Volumes/alexv/public_html/154/Labs/Lab3_files:themedata.xml">
</head>

<body lang=EN-US link=blue vlink=purple style='tab-interval:.5in'>

<div class=Section1>

<div align=center>

<table class=MsoNormalTable border=0 cellspacing=0 cellpadding=0 width=573
 style='width:573.15pt;mso-cellspacing:0in;mso-yfti-tbllook:1184;mso-padding-alt:
 0in 0in 0in 0in'>
 <tr style='mso-yfti-irow:0;mso-yfti-firstrow:yes;mso-yfti-lastrow:yes'>
  <td width=570 style='width:570.3pt;padding:0in 0in 0in 0in'>
  <h1 align=center style='margin-top:.1pt;margin-right:0in;margin-bottom:.1pt;
  margin-left:0in;text-align:center'><span style='mso-fareast-font-family:"Times New Roman";
  mso-bidi-font-family:"Times New Roman"'>Lab3<o:p></o:p></span></h1>
  <h1 align=center style='margin-top:.1pt;margin-right:0in;margin-bottom:.1pt;
  margin-left:0in;text-align:center'><span style='mso-fareast-font-family:"Times New Roman";
  mso-bidi-font-family:"Times New Roman"'>Register File (RF)<o:p></o:p></span></h1>
  <p align=center style='margin-top:.1pt;margin-right:0in;margin-bottom:.1pt;
  margin-left:0in;text-align:center'><u><span style='font-size:18.0pt;
  mso-bidi-font-size:12.0pt'>Due dates: see Labs table<o:p></o:p></span></u></p>
  <p align=center style='margin-top:.1pt;margin-right:0in;margin-bottom:.1pt;
  margin-left:0in;text-align:center'><u><span style='font-size:18.0pt;
  mso-bidi-font-size:12.0pt'><o:p><span style='text-decoration:none'>&nbsp;</span></o:p></span></u></p>
  <p style='margin-top:.1pt;margin-right:0in;margin-bottom:.1pt;margin-left:
  0in'><o:p>&nbsp;</o:p></p>
  <p style='margin-top:.1pt;margin-right:0in;margin-bottom:.1pt;margin-left:
  0in'>The objective of this lab assignment is to design and implement a
  register file using D flip-flops.&nbsp;</p>
  <p style='margin-top:.1pt;margin-right:0in;margin-bottom:.1pt;margin-left:
  0in'><o:p>&nbsp;</o:p></p>
  <p style='margin-top:.1pt;margin-right:0in;margin-bottom:.1pt;margin-left:
  0in'>The MIPS register file implements 32 registers, each of which is 32 bits
  wide. Register number 0 is a zero register; its content is always 0 and
  cannot be changed. Registers 1 through 31 <span class=GramE>store</span> any
  value assigned to them. </p>
  <p style='margin-top:.1pt;margin-right:0in;margin-bottom:.1pt;margin-left:
  0in'><o:p>&nbsp;</o:p></p>
  <p style='margin-top:.1pt;margin-right:0in;margin-bottom:.1pt;margin-left:
  0in'>There are <i style='mso-bidi-font-style:normal'>data</i>, <i
  style='mso-bidi-font-style:normal'>address</i> and <i style='mso-bidi-font-style:
  normal'>control</i> ports to the register file. There should be 3 data ports:
  2 for reading and 1 for writing. During each clock cycle, values from 2 registers
  can be read through the 2 read ports (<b style='mso-bidi-font-weight:normal'><i
  style='mso-bidi-font-style:normal'><span style='color:#3333FF'>d_out_1</span></i></b>
  and <b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
  normal'><span style='color:#3333FF'>d_out_2</span></i></b>) and 1 can be
  written through the write port (<span class=SpellE><b style='mso-bidi-font-weight:
  normal'><i style='mso-bidi-font-style:normal'><span style='color:#3333FF'>d_in</span></i></b></span>).
  All 3 data ports are 32-bit wide.</p>
  <p style='margin-top:.1pt;margin-right:0in;margin-bottom:.1pt;margin-left:
  0in'><o:p>&nbsp;</o:p></p>
  <p style='margin-top:.1pt;margin-right:0in;margin-bottom:.1pt;margin-left:
  0in'>The address ports are <b style='mso-bidi-font-weight:normal'><i
  style='mso-bidi-font-style:normal'><span style='color:#3333FF'>rd_addr_1</span>,
  <span style='color:#3333FF'>rd_addr_2</span></i></b> and <span class=SpellE><b
  style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:normal'><span
  style='color:#3333FF'>wr_addr</span></i></b></span>. RF addresses are 5bits.</p>
  <p style='margin-top:.1pt;margin-right:0in;margin-bottom:.1pt;margin-left:
  0in'><o:p>&nbsp;</o:p></p>
  <p style='margin-top:.1pt;margin-right:0in;margin-bottom:.1pt;margin-left:
  0in'>A <span class=SpellE><b style='mso-bidi-font-weight:normal'><i
  style='mso-bidi-font-style:normal'><span style='color:#3333FF'>wr_en</span></i></b></span>
  control signal is used to write the value on port <span class=SpellE><i
  style='mso-bidi-font-style:normal'>d_in</i></span> to a register addressed by
  <span class=SpellE><i style='mso-bidi-font-style:normal'>wr_addr</i></span>.
  The register file also needs a clock signal (port <span class=SpellE><b
  style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:normal'><span
  style='color:#3333FF'>clk</span></i></b></span>). Write operations are
  synchronized with this clock.&nbsp;</p>
  <p style='margin-top:.1pt;margin-right:0in;margin-bottom:.1pt;margin-left:
  0in'><span class=style2><b style='mso-bidi-font-weight:normal'><u><o:p><span
   style='text-decoration:none'>&nbsp;</span></o:p></u></b></span></p>
  <p style='margin-top:.1pt;margin-right:0in;margin-bottom:.1pt;margin-left:
  0in'><span class=style2><b style='mso-bidi-font-weight:normal'><u><o:p><span
   style='text-decoration:none'>&nbsp;</span></o:p></u></b></span></p>
  <p style='margin-top:.1pt;margin-right:0in;margin-bottom:.1pt;margin-left:
  0in'><span class=style2><b style='mso-bidi-font-weight:normal'><u>Specification</u></b></span><span
  class=style1><u> </u></span><u><o:p></o:p></u></p>
  <p style='margin-top:.1pt;margin-right:0in;margin-bottom:.1pt;margin-left:
  0in'>Draw a block diagram of the register file described above. To make
  things easier, draw a register file with <b style='mso-bidi-font-weight:normal'><i
  style='mso-bidi-font-style:normal'><span style='color:#3333FF'>only 8
  registers</span></i></b>. You can show the middle four registers with �...�
  and show only register 0, 1, 2 ... and 7.</p>
  <p style='margin-top:.1pt;margin-right:0in;margin-bottom:.1pt;margin-left:
  0in'><o:p>&nbsp;</o:p></p>
  <p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman";
  mso-bidi-font-family:"Times New Roman"'>You may use the following building
  blocks in your block diagram: a <span class=GramE>32 bit</span> register
  (with a write enable), a 32 bit MUX, and 3-8 decoder. <o:p></o:p></span></p>
  <p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman";
  mso-bidi-font-family:"Times New Roman"'><o:p>&nbsp;</o:p></span></p>
  <p style='margin-top:.1pt;margin-right:0in;margin-bottom:.1pt;margin-left:
  0in'>Use the write enable signal to control the input to a register, either a
  new value or an old value. Label each input of a MUX with a control input
  value that selects the input.</p>
  <p style='margin-top:.1pt;margin-right:0in;margin-bottom:.1pt;margin-left:
  0in'><o:p>&nbsp;</o:p></p>
  <p style='margin-top:.1pt;margin-right:0in;margin-bottom:.1pt;margin-left:
  0in'>Pay attention to the wiring. Label the wires with proper signal names
  and mark the width.</p>
  <p style='margin-top:.1pt;margin-right:0in;margin-bottom:.1pt;margin-left:
  0in'><b style='mso-bidi-font-weight:normal'><u><o:p><span style='text-decoration:
   none'>&nbsp;</span></o:p></u></b></p>
  <p style='margin-top:.1pt;margin-right:0in;margin-bottom:.1pt;margin-left:
  0in'><b style='mso-bidi-font-weight:normal'><u><o:p><span style='text-decoration:
   none'>&nbsp;</span></o:p></u></b></p>
  <p style='margin-top:.1pt;margin-right:0in;margin-bottom:.1pt;margin-left:
  0in'><b style='mso-bidi-font-weight:normal'><u>Design</u></b><u> </u></p>
  <p style='margin-top:.1pt;margin-right:0in;margin-bottom:.1pt;margin-left:
  0in'><span style='mso-fareast-font-family:"Times New Roman"'>Your task is to
  design a&nbsp;register file module with 32 registers. </span>You will use an
  array of <span class=SpellE>std_logic_vector</span> to implement the register
  file.</p>
  <p style='margin-top:.1pt;margin-right:0in;margin-bottom:.1pt;margin-left:
  0in'>The <a href="lab3.zip">template VHDL files</a> have been provided to
  you. The interface (that is, ports) is already defined. You need to add code
  for functionality in both files to make them work. Do not make any changes to
  the interface.</p>
  <p style='margin-top:.1pt;margin-right:0in;margin-bottom:.1pt;margin-left:
  0in'>Since we are using an array to implement the register file, the decoder
  and the mux component is implemented automatically by the array reference.
  The implementation should be very straight-forward. Please refer to Prof. <span
  class=SpellE>Veidenbaum's</span> slides (<a
  href="http://www.ics.uci.edu/%7Ealexv/154/HTML/L5/L51_files/Slide0005.gif">Slide
  #5</a> and <a
  href="http://www.ics.uci.edu/%7Ealexv/154/HTML/L5/L51_files/Slide0006.gif">#6</a>
  of <a href="http://www.ics.uci.edu/%7Ealexv/154/HTML/L5/index.htm">Lecture 5</a>).
  Our register file should be something like:</p>
  <p style='margin-top:.1pt;margin-right:0in;margin-bottom:.1pt;margin-left:
  0in'><br>
  &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;
  &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span
  class=SpellE>RegFile</span>: <span style='color:#3333FF'>array</span> (0 to
  31) <span style='color:#3333FF'>of <span class=SpellE>std_logic_<span
  class=GramE>vector</span></span></span><span class=GramE>(</span>31 <span
  class=SpellE>downto</span> 0);</p>
  <p style='margin-top:.1pt;margin-right:0in;margin-bottom:.1pt;margin-left:
  0in'><br>
  The declaration in the slides has many named subtypes and constants. Some of
  them are useful, and it will be a good idea to keep the declarations in a
  separate <a
  href="http://www.ics.uci.edu/%7Ealexv/154/HTML/L5/L51_files/Slide0011.gif">package</a>
  for future labs.</p>
  <p style='margin-top:.1pt;margin-right:0in;margin-bottom:.1pt;margin-left:
  0in'><o:p>&nbsp;</o:p></p>
  <p style='margin-top:.1pt;margin-right:0in;margin-bottom:.1pt;margin-left:
  0in'>Index to array elements should be of type &quot;INTEGER&quot;. To
  convert a signal of type STD_LOGIC_VECTOR to integer, you should use the VHDL
  function &quot;<span style='color:#3333FF'>TO_INTEGER</span>&quot;. It is
  declared in &quot;<span style='color:#3333FF'>IEEE.NUMERIC_STD</span>&quot;
  package. The argument of this function should be either STD_LOGIC_UNSIGNED or
  STD_LOGIC_SIGNED. So you need to first cast the STD_LOGIC_VECTOR to STD_LOGIC_UNSIGNED,
  then pass it to TO_INTEGER.&nbsp;For example, to use <span class=SpellE>wr_addr</span>
  as array index, you should use: </p>
  <p style='margin-top:.1pt;margin-right:0in;margin-bottom:.1pt;margin-left:
  0in'><o:p>&nbsp;</o:p></p>
  <p align=center style='margin-top:.1pt;margin-right:0in;margin-bottom:.1pt;
  margin-left:0in;text-align:center'><span class=SpellE><span style='color:
  #3333FF'>RegFile</span></span><span class=GramE><span style='color:#3333FF'>(
  TO</span></span><span style='color:#3333FF'>_INTEGER( UNSIGNED(<span
  class=SpellE>wr_addr</span>) ) )</span>;</p>
  <p align=center style='margin-top:.1pt;margin-right:0in;margin-bottom:.1pt;
  margin-left:0in;text-align:center'><o:p>&nbsp;</o:p></p>
  <p style='margin-top:.1pt;margin-right:0in;margin-bottom:.1pt;margin-left:
  0in'>You should use a process to implement the writing operation. Think about
  which signals should be in&nbsp;the sensitivity list. Pay special attention
  to R0. When <span class=SpellE>wr_addr</span> = &quot;00000&quot;, an update
  should not happen.</p>
  <p style='margin-top:.1pt;margin-right:0in;margin-bottom:.1pt;margin-left:
  0in'><o:p>&nbsp;</o:p></p>
  <p style='margin-top:.1pt;margin-right:0in;margin-bottom:.1pt;margin-left:
  0in'><o:p>&nbsp;</o:p></p>
  <p style='margin-top:.1pt;margin-right:0in;margin-bottom:.1pt;margin-left:
  0in'><b style='mso-bidi-font-weight:normal'><u>Verification</u></b><u> - Due with
  the design.</u></p>
  <p style='margin-top:.1pt;margin-right:0in;margin-bottom:.1pt;margin-left:
  0in'>In your test bench, you need to test your register file module for:</p>
  <p style='margin-top:.1pt;margin-right:0in;margin-bottom:.1pt;margin-left:
  0in'><i style='mso-bidi-font-style:normal'>Addressing</i>: </p>
  <p style='margin-top:.1pt;margin-right:0in;margin-bottom:.1pt;margin-left:
  .2in'>You must make sure that you are reading from / writing to the specific
  register you want. All addresses and data ports need to be tested. This has
  to be done first, because the following tests will test each register and to
  do that you must make sure you are able to access each register. <br>
  You should write unique values to different registers, and read from them and
  see if what you read is what you have written.</p>
  <p style='margin-top:.1pt;margin-right:0in;margin-bottom:.1pt;margin-left:
  0in'>Content: </p>
  <p style='margin-top:.1pt;margin-right:0in;margin-bottom:.1pt;margin-left:
  .15in'>You must make sure that each register holds what was actually written.
  No &quot;stuck at&quot; errors exist. Each bit in each register must be
  tested. <br>
  You should write &quot;000...0&quot; and &quot;111...1&quot; to each register
  and read from them and see if what you read is what you have written.</p>
  <p style='margin-top:.1pt;margin-right:0in;margin-bottom:.1pt;margin-left:
  .15in'><o:p>&nbsp;</o:p></p>
  <p style='margin-top:.1pt;margin-right:0in;margin-bottom:.1pt;margin-left:
  0in'>All input signals in test bench should be 1 clock long and go high a
  short time after a rising clock edge. Use the assert statement and expected
  values to detect errors.</p>
  <p style='margin-top:.1pt;margin-right:0in;margin-bottom:.1pt;margin-left:
  0in'><o:p>&nbsp;</o:p></p>
  <div class=MsoNormal align=center style='text-align:center'><span
  style='mso-fareast-font-family:"Times New Roman";mso-bidi-font-family:"Times New Roman"'>
  <hr size=2 width="100%" align=center>
  </span></div>
  <p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
  style='mso-fareast-font-family:"Times New Roman";mso-bidi-font-family:"Times New Roman"'>What
  you should produce in this lab:</span></b><span style='mso-fareast-font-family:
  "Times New Roman";mso-bidi-font-family:"Times New Roman"'> <o:p></o:p></span></p>
  <p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman";
  mso-bidi-font-family:"Times New Roman"'><o:p>&nbsp;</o:p></span></p>
  <p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman";
  mso-bidi-font-family:"Times New Roman"'>Please submit for your specification <o:p></o:p></span></p>
  <ol style='margin-top:0in' start=1 type=1>
   <li class=MsoNormal style='margin-top:.1pt;margin-bottom:.1pt;mso-para-margin-top:
       .01gd;mso-para-margin-bottom:.01gd;mso-list:l0 level1 lfo3;tab-stops:
       list .5in'><span style='mso-fareast-font-family:"Times New Roman";
       mso-bidi-font-family:"Times New Roman"'>A block diagram of the register
       file you designed that has 8 registers.<o:p></o:p></span></li>
   <li class=MsoNormal style='margin-top:.1pt;margin-bottom:.1pt;mso-para-margin-top:
       .01gd;mso-para-margin-bottom:.01gd;mso-list:l0 level1 lfo3;tab-stops:
       list .5in'><span style='mso-fareast-font-family:"Times New Roman";
       mso-bidi-font-family:"Times New Roman"'><o:p>&nbsp;</o:p></span></li>
  </ol>
  <p class=MsoNormal style='margin-top:.1pt;margin-right:0in;margin-bottom:
  .1pt;margin-left:0in;mso-para-margin-top:.01gd;mso-para-margin-right:0in;
  mso-para-margin-bottom:.01gd;mso-para-margin-left:0in'><span
  style='mso-bidi-font-family:"Times New Roman"'>Please submit for your design
  and verification: </span><span style='mso-fareast-font-family:"Times New Roman";
  mso-bidi-font-family:"Times New Roman"'><o:p></o:p></span></p>
  <ol style='margin-top:0in' start=2 type=1>
   <li class=MsoNormal style='margin-top:.1pt;margin-bottom:.1pt;mso-para-margin-top:
       .01gd;mso-para-margin-bottom:.01gd;mso-list:l3 level1 lfo6;tab-stops:
       list .5in'><span style='mso-fareast-font-family:"Times New Roman";
       mso-bidi-font-family:"Times New Roman"'>Your VHDL design. <o:p></o:p></span></li>
   <li class=MsoNormal style='margin-top:.1pt;margin-bottom:.1pt;mso-para-margin-top:
       .01gd;mso-para-margin-bottom:.01gd;mso-list:l3 level1 lfo6;tab-stops:
       list .5in'><span style='mso-fareast-font-family:"Times New Roman";
       mso-bidi-font-family:"Times New Roman"'>Your VHDL test-bench. <o:p></o:p></span></li>
   <li class=MsoNormal style='margin-top:.1pt;margin-bottom:.1pt;mso-para-margin-top:
       .01gd;mso-para-margin-bottom:.01gd;mso-list:l3 level1 lfo6;tab-stops:
       list .5in'><span style='mso-fareast-font-family:"Times New Roman";
       mso-bidi-font-family:"Times New Roman"'>Screen shots of addressing and
       content tests. <o:p></o:p></span></li>
  </ol>
  <p style='margin-top:.1pt;margin-right:0in;margin-bottom:.1pt;margin-left:
  0in'>&nbsp;</p>
  </td>
 </tr>
</table>

</div>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman";
mso-bidi-font-family:"Times New Roman"'><o:p>&nbsp;</o:p></span></p>

</div>

</body>

</html>
