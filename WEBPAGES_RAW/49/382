<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<head>
  <title>GoogleTest Installation and Use in Eclipse/C++ Instructions</title>
</head>

<body BGCOLOR="white">

<center>
<h1>GoogleTest Installation for Eclipse/C++ Instructions</h1>
<p>
</center>
<hr align="left" width="100%">
<p>
These instructions review how to install the GoogleTest unit testing
  framework library folder (<b>googletestlib</b>) in Eclipse/C++.
Then they explain how to create a project that uses the library.
At various times during the quarter you will be supplied with unit tests to
  run on the code you are writing.
We often grade programs using these unit tests may be asked to replace various
  <b>.hpp</b> or <b>.cpp</b> files and recompile the library.
<p>
<hr align="left" width="100%">

<h3>Googletestlib Installation (Quick!)</h3>
<ol>
<li>Download and unzip the
      <a href="googletestlib.zip"><b>googletestlib.zip</b></a> file;
    the result is a <b>googletestlib</b> folder.
<p>
<li>Locate the workspace folder 
      (typically <b>C:\Users\<i>yourname</i>\workspace</b>)
      and put the <b>googletestlib</b> folder you downloaded and unzipped into
      this workspace folder.
    This folder contains <b>.a</b> files (groups of <b>.o</b> files) that allow
      us to perform unit tests easily on the code that we develop.
</ol>
<!--That's all there is to do!
If you are using the more general instructions, ultimately you need to have a
  folder with the correct files in the <b>include</b> and <b>make</b> folders
  for your system (which the above downloads supply).
-->
<p>

<hr align="left" width="100%">
<p>

<h3>Creating a Project that Uses the Googletestlib</h3>
<ol>
<li>Download and unzip the
      <a href="test_googletest.zip"><b>test_googletest.zip</b></a> file;
    the result is a <b>googletest</b> folder.
<p>

<li>Put the <b>googletest</b> folder you downloaded and unzipped into
     the workspace folder (mentioned above).

<p>
<li>Create a project from this folder.
Normally you will perform the steps needed to ensure this program uses the
  <b>courselib</b> correctly, but this simple test does not require these 
 steps, so they are not included in this document.
<p>

<li>Right-click the <b>test_googletest</b> icon in the <b>Project Explorer</b>
      tab.
    <br>
   Select <b>Properties</b> which appears at the bottom as follows.
<p>

<li>In the <b>Properties for test_googletest</b> popup window
  <ul>
<!--- KLUDGE: not needed any more (not in my libraries
    <li>Under <b>type filter text</b>, disclose <b>C/C++ Build</b> and
          select <b>Tool Chain Editor</b>.
    <li>In the <b>Current builder:</b> pull-down list, select
          <b>Gnu Make Builder</b>.
    <li>The <b>Properties for test_googletest</b> popup window should
           appear as shown below.
    <p>
    <img src="images/gnubuilder.jpg">
    <p>
    <li>Click <b>Apply</b>.
    <p>
--->
    <li>Under <b>type filter text</b>, disclose <b>C/C++ Build</b> and
          select <b>Settings</b>.
    <li>Under the <b>Tool Settings</b> tab, under <b>GCC C++ Compiler</b>
          select <b>Miscellaneous</b>.
    <li>In the <b>Other flags</b> textbox, type <b>-std=gnu++11</b> at the
          end.
    <li>Click <b>Apply</b>.
    <p>

    <li>Under the <b>Tool Settings</b> tab, under <b>GCC C++ Compiler</b>
          select <b>Includes</b>.
    <li>In the <b>Include paths (-I)</b> pane,
          click the <b>add</b> icon <img src="images/addicon.jpg">.
    <li>In the <b>Add directory path</b> popup window,
          click the <b>File system...</b> button.
    <li>In the <b>Browse For Folder</b> popup window,
          navigate to and select the <b>include</b> folder in the
          <b>googletestlib</b> folder in the Eclipse workspace.
    <li>Click <b>OK</b> in the <b>Browse For Folder</b> popup window.
    <li>Click <b>OK</b> in the <b>Add directory path</b> popup window.
    <li>The <b>Properties for test_googletest</b> popup window should
          appear as follows (your folder names may be a bit different).
         <p>
         <img src="images/includes3.jpg">
         <p>
    <li>Click <b>Apply</b>.
    <p>
    <li>Under the <b>Tool Settings</b> tab, under <b>MinGW C++ Linker</b>
          select <b>Libraries</b>.
    <li>In the <b>Libraries (-l)</b> pane,
          click the <b>add</b> icon <img src="images/addicon.jpg">.
    <li>In the <b>Enter Value</b> popup window,
          enter <b>gtest</b> in the textbox.
    <li>Click <b>OK</b> in the <b>Enter Value</b> popup window.
    <p>
    <li>In the <b>Library search path (-L)</b> pane,
          click the <b>add</b> icon <img src="images/addicon.jpg">.
    <li>In the <b>Add directory path</b> popup window,
         click the <b>File system...</b> button.
    <li>In the <b>Browse For Folder</b> popup window,
          navigate to and select the <b>make</b> folder in the
          <b>googletestlib</b> folder in the Eclipse workspace.
    <li>Click <b>OK</b> in the <b>Browse For Folder</b> popup window.
    <li>Click <b>OK</b> in the <b>Add directory path</b> popup window.
    <li>The <b>Properties for test_googletest</b> popup window should
          appear as follows (your folder names may be a bit different).
          <p>
          <img src="images/libraries3.jpg">
          <p>
        <li>Click <b>Apply</b>.
        
<!--- KLUDGE: not needed any more (not in my libraries
    <li>Elide <b>C/C++ Build</b> then select <b>C/C++ Build</b>.
    <li>In the Builder section, uncheck the "Use default build command".
    <li>In the Builder section, in the <b>Build command:</b> textbox
          enter <b>mingw32-make</b> (replacing <b>make</b>).
    <li>The <b>Properties for test_googletest</b> popup window should
          appear as follows.
        <p>
        <img src="images/nodefaultbuild.jpg">
        <p>
     <li>Click <b>Apply</b>.
--->
     <li>Click <b>OK</b>.
  </ul>
<p>

<li>Disclose the <b>test_googletest</b> icon in the <b>Project Explorer</b>.<br>
    Disclose the <b>src</b> icon in the <b>Project Explorer</b>,  which appears
       as follows.
    <p>
    <img src="images/testgoogletestdisclosed.jpg">
    <p>
    Examine the <b>counter</b> files (both <b>.hpp</b> and <b>.cpp</b>), which
      describe a trivial class.
    The <b>test_counter.cpp</b> is the code that is run by GoogleTest.

<li>Double-click the <b>test_counter.cpp</b> icon.
The <b>test_counter.cpp</b> editor tab appears as follows (ignore the errors).
    <p>
    <img src="images/testeditor.jpg">
    <p>


<li>Either click the <b>Hammer</b> icon <img src="images/hammer.jpg"> or 
      right-click in the <b>test_googletest</b> icon in the
      <b>Project Explorer</b>
      tabl and select <b>Build Project</b>.
    The Console window should show the following.
    <p>
    <img src="images/buildresultsprogram2.jpg">
    <p>

<li>Either click the <b>Run</b> icon <img src="images/run.jpg"> or 
      right-click in the <b>test_counter.cpp</b> editor tab and select
      select <b>Run As | 1 Local C/C++ Application</b> illustrated below.
    <br>
    <img src="images/runas.jpg">
    <p>
    The program should begin running and the Console window should show the
      following.
    <p>
    <img src="images/googletestrun.jpg">
    <p>
    The output shows passed and failed tests.
    Examine the <b>counter</b> files (both <b>.hpp</b> and <b>.cpp</b>), which
      describe a trivial class, and the <b>test_counter.cpp</b> which contains
      the code that is run by GoogleTest to see why the first test passed and
      the second one failed.
</ol>
<p>
<hr align="left" width="100%">
<p>

</body>
</html>

