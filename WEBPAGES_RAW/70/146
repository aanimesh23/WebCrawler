<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 3.2//EN">
<html><head>
<title>David Eppstein - Publications</title>
<meta name="viewport" content="width=device-width, initial-scale=1">
</head>
<body bgcolor="#ffffff" text="#000000">
<h1>David Eppstein - Publications</h1>
<hr><p>
<h2>
Straight skeletons
</h2>
<ul>
<li><b>Raising roofs, crashing cycles, and playing pool: applications of
a data structure for finding pairwise interactions</b>.<br>
D. Eppstein and 
<a href="//compgeom.cs.uiuc.edu/~jeffe/">J. Erickson</a>.<br>
<a href="//portal.acm.org/citation.cfm?id=276891">
<i>14th ACM Symp. Comp. Geom.,</i> Minneapolis, 1998, pp. 58&ndash;67</a>.<br>
<i>Disc. Comp. Geom.</i> 22 (4): 569&ndash;592, 1999 (special issue for SCG 1998).
<p>
We use my dynamic closest pair data structure
from "<a href="p-dynmst.html">Dynamic Euclidean minimum
spanning trees</a>" to detect collisions among a collection of moving
objects in sublinear time per collision.  As one application, we can
construct the <a href="geom-ss.html">straight skeleton</a> of Aichholzer et al (and the mitered
offset curves from which it is defined) in subquadratic time.
<p>(<a href="//compgeom.cs.uiuc.edu/~jeffe/pubs/cycles.html">Jeff's publications page and copy of the journal version</a> -- 
<a href="/~eppstein/bibs/eppstein.html#Raising roofs, crashing cycles, and playing pool: applications of a data structure for finding pairwise interactions">BibTeX</a> --
<a href="//fano.ics.uci.edu/cites/Document/Raising-roofs-crashing-cycles-and-playing-pool-applications-of-a-data-structure-for-finding-pairwise-interactions.html">Citations</a> --
<a href="//citeseer.ist.psu.edu/eppstein98raising.html">CiteSeer</a>)
<p>
<li><b>Motorcycle graphs: canonical quad mesh partitioning</b>.<br>
D. Eppstein,
<a href="//www.ics.uci.edu/~goodrich/">M. T. Goodrich</a>,
<a href="//www.cs.mcgill.ca/~ethan/">E. Kim</a>,
and R. Tamstorf.<br>
<a href="//www.ics.uci.edu/~goodrich/pubs/geomproc.pdf"><i>Proc. 6th Symp. Geometry Processing</i>, Copenhagen, Denmark, 2008</a>.<br>
<i>Computer Graphics Forum</i> <a
href="//doi.org/10.1111/j.1467-8659.2008.01288.x">27 (5): 1477&ndash;1486</a>, 2008.
<p>
We use a construction inspired by the motorcycle graphs previously used
in <a href="geom-ss.html">straight skeleton</a> construction, to partition quadrilateral meshes
into a small number of structured submeshes. Our construction is
canonical in that two copies of the same mesh will always be partitioned
in the same way, and can be used to speed up graph isomorphism
computations for geometric models in feature animation.
<p>
<li><b>Straight skeletons of three-dimensional polyhedra</b>.<br>
<a href="//www.cs.technion.ac.il/~barequet/">G. Barequet</a>,
D. Eppstein,
<a href="//www.ics.uci.edu/~goodrich/">M. T. Goodrich</a>, and
<a href="//www.cs.technion.ac.il/people/avaxman/">A. Vaxman</a>.<br>
<a href="//arxiv.org/abs/0805.0022">arXiv:0805.0022</a>.<br>
<i>Proc. 16th European Symp. Algorithms</i>, Karlsruhe, Germany,
2008.<br>
<a href="//doi.org/10.1007/978-3-540-87744-8_13">Springer, <i>Lecture Notes in Comp. Sci.</i> 5193, 2008, pp. 148&ndash;160.</a>
<p>
A <a href="geom-ss.html">straight skeleton</a> is defined by the locus of points crossed by the
edges and vertices of a polyhedron as it undergoes a continuous
shrinking process in which the faces move inwards at constant speed. We
resolve some ambiguities in the definition of these shapes, define
efficient algorithms for polyhedra with axis-parallel faces, show that
arbitrary polyhedra have strictly more complicated straight skeletons,
and report on results from an implementation of our algorithm for
arbitrary polyhedra.
<p>
</ul>

<hr><p>
<a href="geom.html">Geometry</a> --
<a href="/~eppstein/pubs/">Publications</a> --
<a href="/~eppstein/">David Eppstein</a> --
<a href="/~theory/">Theory Group</a> --
<a href="/">Inf. &amp; Comp. Sci.</a> --
<a href="//www.uci.edu/">UC Irvine</a>
<p>
<small>Semi-automatically <a href="filter.html">filtered</a>
from a common source file.</small>
</body></html>
