
<!-- saved from url=(0032)http://www.ics.uci.edu/~vpsaini/ -->
<html><head><meta charset='utf-8'>
<title>Code Clone Detection</title> 
<meta name="description" content="Yelp dataset challenge">
<meta name="keywords" content="Yelp, challenge, data mining">
<style>
code {background-color:#A9A9A9;}
A { COLOR: #62021; TEXT-DECORATION: none ;  }
a:visited{ color: blue }
A:hover { TEXT-DECORATION: underline }
.lowspace { min-height: 5}
.midspace { min-height: 10}
.highspace { min-height: 15}
.media {width:459;height:358;}
.left{float:left;}
.right{float:right;}
.photo{height: 309;
	width: 430;
	padding-left: 57;
	padding-bottom: 25;}
	table {
		padding-left: 20;
		padding-right: 20;
	}
	td {
		text-align: justify;
		font-size: 110%;
		line-height: 150%;
		margin-bottom: 48px;
		margin-top: -22px;
		font-family: Georgia;
	}
	divimg {
		text-align: center;
		font-size: 110%;
		line-height: 150%;
		margin-bottom: 48px;
		margin-top: -22px;
		font-family: Georgia;
	}
	.mondego{width:300px;
		height:110px;
		background: transparent url('http://mondego.ics.uci.edu/img/mondego-banner.png') -0px -0px no-repeat;}
		</style>

		<style type="text/css"></style><style type="text/css"></style></head>
		<body link="blue" alink="blue" vlink="violet">
			<script>
			  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
			  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
			  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
			  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

			  ga('create', 'UA-41064162-1', 'uci.edu');
			  ga('send', 'pageview');

			</script>
						

			<table>
				<tbody><tr>
                                 <td class="mondego"></td>
                                  <td width="20">
			</td><td><h2>Scaling Token-Based Code Clone Detection</h2>

			<i>
				The Team<br>
				<a href ="http://www.ics.uci.edu/~hsajnani/">Hitesh Sajnani</a>, <a href="http://www.linkedin.com/in/sainivaibhav">Vaibhav Saini</a>, <a href="http://www.ics.uci.edu/~lopes/">Cristina Lopes</a>  <br>
			</i>
		</div></div></td>
		</tr></tbody></table>
		<table>
			<tbody>
				<tr><td><div id=abstract><br><h3>Abstract</h3>
We propose a new token-based approach for large scale code  clone detection which is based on a filtering heuristic that reduces the number of token comparisons when the two code blocks are compared. We also present a MapReduce based parallel algorithm that uses the filtering heuristic and scales to thousands of projects. The filtering heuristic is generic and can also be used in conjunction with other token-based approaches. In that context, we demonstrate how it can increase the retrieval speed and decrease the memory usage of the index-based approaches.
<br>
In our experiments on 36 open source Java projects, we found that: (i) filtering reduces token comparisons by a factor of 10, and thus increasing
the speed of clone detection by a factor of 1.5; (ii) the speed-up and scale-up of the parallel approach using filtering is near-linear on a cluster of
2-32 nodes for 150-2800 projects; and (iii) filtering decreases the memory usage of index-based approach by half and the search time by a factor of 5.â</div>				
</tr>
<tr>
	<td><br><div id=repexp>
		<h3>Replicating the Experiment</h3>
		<h4>System Requirements</h4>
		You need a machine with at least 12GB ram running ubuntu or mac-osx, with Java-1.6 or higher installed. Please note that you need system with higher ram because the experiment involves very large subject systems. However, if you are running this on smaller systems (see Tools below), there is no such constraint.
		<h4>Steps to replicate the experiment:</h4>
		<ol>
		<li>
		Click<a href="files/dist/dist.zip"> here</a> to download the distribution (dist.zip). 
		</li>

		<li>
                unzip dist.zip. Navigate to dist/ using terminal
                </li>

		<li>
                execute the command <code style="background-color:#A9A9A9">./runexp.sh 1 </code>
		&nbsp&nbsp&nbsp Please Note: this will run the experiment 1 time. To run it <i>n</i> times, change the command to <code style="background-color:#A9A9A9">./runexp.sh n</code>
                </li>
		</ol>
	You can see the generated output in the ./output folder. Files with extension <i>.txt</i> will have computed clones and the files with <i>.csv</i> extension will have the performance analysis result. 
</div>
<div id=tool>		
<h3>Tools</h3>
In order to run the tool on any arbitrary project, please follow the steps below:
<br><br>
<Strong>A.</Strong> Generating the input file of the project for which you want to detect clones
<ol>
<li>Click <a href=files/tools/inputgen/ast.zip>here</a> to download input generator for the code clone detector (ast.zip).</li>
<li>Unzip ast.zip and import the project ast in your eclipse workspace.</li>
<li>Run it as an "Eclipse Application". This should open another eclipse instance where you will import the projects for which you want to generate the input file.</li> 
<li>After importing the project in the workspace of the new eclipse instance, click on the "Sample Menu" in the top menu bar and then click on the "Sample command" to run. This should generate the output (desired input file) in the path specified by variable "outputdirPath".</li>
<li>Please note that you will have to change the location of output directory on line 61 of SampleHandler.java.<code>this.outputdirPath = "/Users/vaibhavsaini/Documents/codetime/repo/ast/output/";</code> to your desired output directory.</li>
<li>The generated input file name will be of the format: &lt;ProjectName&gt;-clone-INPUT.txt. For example, if your project name is jython, then the generated input file name should be jython-clone-INPUT.txt</li>
</ol>
<br>
<strong>B</strong>. Running the clone detection tool on the generated input file
<ol>
<li>Click<a href="files/dist/tool.zip"> here</a> to download the CloneDetector (tool.zip).</li>
<li>Unzip tool.zip and navigate to tool/ using terminal</li>
<li>Copy the input file generated above (&lt;ProjectName&gt;-clone-INPUT.txt) into input/dataset directory.</li>
<li>Open cd.sh, and assign &lt;ProjectName&gt; as value to the variable <code> arrayname</code> (line #5). For example, If your generated input file is jython-clone-INPUT.txt, line #5 should be <code>arrayname=(jython)</code></li>
<li>Execute the command <code>./cd.sh</code></li>
</ol>
<br>
<strong>C.</strong> Generated output
<ol>
<li>The generated output will be in the ./output folder. </li>
<li>Files with extension <i>.txt</i> will have the computed clones and the files with <i>.csv</i> extension will have the time taken to detect clones</li>
</div>
		<h3>Data</h3>
The table below describes all the subject systems, and the corresponding output. This data was used to calculate and report numbers in the paper. 
Column 1 has links to the source code of each subject system. Column 2 is the input file that is generated by running INPUTGEN tool on the subject systems. 
This input file is in turn used by NCCF and FCCD to compute clones. Column 4 has links to the computed clones. Since both the tools produced exactly the same output, you will see only one file per subject system. Column 4 has the final analysis results - runtime for tool, and total token comparisons done. These numbers are different for both the tools, so you will see two analysis files per project - one produced by NCCF, and another by FCCD. 
<table border="1" bordercolor="#000000" style="background-color:#FAFAF8;padding-left:0;padding-right:0" width="51%" cellpadding="3" cellspacing="1">
	<tr>
		<th>Subject System
		<th>Generated Input for Tool
		<th>Clones Detected
		<th>Analysis
	</tr>
	<tr>
		<td><a href=http://supergsego.com/apache/ant/source/apache-ant-1.9.2-src.zip>Ant-1.9.2</a></td>
		<td><a href=files/input/ant.zip>ant.zip</a></td>
		<td><a href=files/output/ant-clones.zip>ant-clones.zip</a></td>
		<td><a href=files/output/ant-analysis.zip>ant-analysis.zip</a></td>
	<tr>
		<td><a href=http://www.apache.org/dyn/closer.cgi/cocoon/2.2/cocoon-2.2.0.zip>Cocoon-2.2.0</a></td>
		<td><a href=files/input/cocoon.zip>cocoon.zip</a></td>
		<td><a href=files/output/cocoon-clones.zip>cocoon-clones.zip</a></td>
		<td><a href=files/output/cocoon-analysis.zip>cocoon-analysis.zip</a></td>

	</tr>
	<tr>
		<td><a href=http://mirror.tcpdiag.net/apache/maven/maven-3/3.0.5/source/apache-maven-3.0.5-src.zip>Maven-3.0.5</a></td>
		<td><a href=files/input/maven.zip>maven.zip</a></td>
		<td><a href=files/output/maven-clones.zip>maven-clones.zip</a></td>
		<td><a href=files/output/maven-analysis.zip>maven-analysis.zip</a></td>
	</tr>
	<tr>
		<td><a href=http://archive.apache.org/dist/lucene/java/4.4.0/>Lucene-4.4.0</a></td>
		<td><a href=files/input/lucene.zip>lucene.zip</a></td>
		<td><a href=files/output/lucene-clones.zip>lucene-clones.zip</a></td>
		<td><a href=files/output/lucene-analysis.zip>lucene-analysis.zip</a></td>
	</tr>
	<tr>
		<td><a href=http://svn.apache.org/repos/asf/hadoop/common/trunk/>Hadoop-Rev:1531458</a></td>
		<td><a href=files/input/hadoop.zip>hadoop.zip</a></td>
		<td><a href=files/output/hadoop-clones.zip>hadoop-clones.zip</a></td>
		<td><a href=files/output/hadoop-analysis.zip>hadoop-analysis.zip</a></td>
	</tr>
</table>	
		<!--<h3>Validated Clones</h3>
		<a href=files/validation/validated-clones.txt.>validated-clones.txt</a>
!-->
</td>
</tr>
</tr>
</tbody>
</table>
</body></html>
