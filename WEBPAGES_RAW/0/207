
<HTML>

<HEAD>

<meta name="GENERATOR" content="Microsoft Internet Assistant for PowerPoint 97">
 <TITLE>Semantics Retention - Effect</TITLE> 
</HEAD>

<BODY     >

 <H1>Semantics Retention - Effect</H1> 
 <P><UL>
Source level semantics
</UL><UL>
eliminate red dependencies;
</UL><UL>
algorithm-level semantics
</UL><UL>
eliminate blue dependencies</UL></P>
<P><UL>
Best Schedules</UL></P>
<P><UL>
Neglecting semantics</UL></P>
<P><UL>
Retaining source-level
</UL><UL>
semantics alone</UL></P>
<P><UL>
Retaining source and algorithm level semantics</UL></P>
<P><UL>
iter(i)</UL></P>
<P><UL>
iter(i+1)</UL></P>
<P><UL>
iter(i+2)</UL></P>
<P><UL>
Semantics Hierarchy
</UL><UL>
		ROOT
</UL><UL>

</UL><UL>
	STACK		HEAP
</UL><UL>

</UL><UL>

</UL><UL>
struct_type1*  struct_type2*   int   struct_type1   struct_type2
</UL><UL>

</UL><UL>

</UL><UL>

</UL><UL>
    ctrl 	        node	      i    j 	*ctrl 	 *node
</UL><UL>
					
</UL><UL>
 			  vec       cnt     data   next			    		
</UL><UL>
		   	{5, 7}    {1,3}   {4}    {8}</UL></P>
<P><UL>
C source
</UL><UL>
list *node;
</UL><UL>
control *ctrl;
</UL><UL>
while (ï¿½){
</UL><UL>
 node-&#062cnt++;
</UL><UL>
 ctrl-&#062vec[i] += node-&#062data[j];
</UL><UL>
 node = node-&#062next;}</UL></P>
<P><UL>
N-addr code
</UL><UL>
1: cnt = M[node + cntoffset]
</UL><UL>
2: cnt = cnt + 1
</UL><UL>
3: M[node + cntoffset] = cnt
</UL><UL>
4: d = M[node + dataoffset]
</UL><UL>
5: c = M[ctrl + vecioffset]
</UL><UL>
6: d = d + c
</UL><UL>
7: M[ctrl + vecioffset] = d
</UL><UL>
8: node = M[node + nextoffset]</UL></P>
<P><UL>
GCC generates N-addr
</UL><UL>
code and Semantics
</UL><UL>
Hierarchy</UL></P>
<P></P> 
<P>
<TABLE>
  <TD HEIGHT=100 WIDTH=100> <A HREF="tsld009.htm">Previous slide</A> </TD>
  <TD HEIGHT=100 WIDTH=100> <A HREF="tsld011.htm">Next slide</A> </TD>
  <TD HEIGHT=100 WIDTH=150> <A HREF="tsld001.htm">Back to first slide</A> </TD>
  <TD HEIGHT=100 WIDTH=150> <A HREF="sld010.htm">View graphic version</A> </TD>
</TABLE>
<BR>
</P>



</Body>
</HTML>
