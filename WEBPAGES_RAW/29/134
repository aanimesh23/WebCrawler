<HTML>
<HEAD>
<TITLE>Cheapest insertion TSP heuristic in R^20</TITLE>
</HEAD>

<BODY>
<H1><A HREF="../">Test of Closest Pair Data Structures</A></H1>
<H2>Cheapest insertion heuristic in R<sup>20</sup></H2>

<TABLE BORDER=1>
<TR ALIGN=RIGHT><TD></TD>
    <TD>Brute&nbsp;Force</TD>
    <TD>Neighbors</TD>
    <TD>Quadtree</TD>
    <TD>Conga&nbsp;Line</TD>
    <TD>MultiConga</TD>
    <TD>FastPair</TD></TR>
<TR ALIGN=RIGHT><TD><I>n</I>&nbsp;=&nbsp;250</TD>
    <TD><A HREF="b250">18.31s</A></TD>
    <TD><A HREF="n250">1.57s</A></TD>
    <TD><A HREF="q250"><B>0.67s</B></A></TD>
    <TD><A HREF="c250">5.00s</A></TD>
    <TD><A HREF="m250">1.16s</A></TD>
    <TD><A HREF="f250">1.00s</A></TD></TR>
<TR ALIGN=RIGHT><TD>500</TD>
    <TD><A HREF="b500">156.96s</A></TD>
    <TD><A HREF="n500">6.83s</A></TD>
    <TD><A HREF="q500"><B>3.09s</B></A></TD>
    <TD><A HREF="c500">24.15s</A></TD>
    <TD><A HREF="m500">5.01s</A></TD>
    <TD><A HREF="f500">4.26s</A></TD></TR>
<TR ALIGN=RIGHT><TD>1000</TD>
    <TD><A HREF="b1000">1279.79s</A></TD>
    <TD><A HREF="n1000">29.72s</A></TD>
    <TD><A HREF="q1000"><B>13.60s</B></A></TD>
    <TD><A HREF="c1000">113.52s</A></TD>
    <TD><A HREF="m1000">21.34s</A></TD>
    <TD><A HREF="f1000">18.17s</A></TD></TR>
<TR ALIGN=RIGHT><TD>2000</TD>
    <TD>&nbsp;</TD>
    <TD><A HREF="n2000">129.61s</A></TD>
    <TD>&nbsp;</TD>
    <TD><A HREF="c2000">545.68s</A></TD>
    <TD><A HREF="m2000">94.75s</A></TD>
    <TD><A HREF="f2000"><B>78.52s</B></A></TD></TR>
<TR ALIGN=RIGHT><TD>4000</TD>
    <TD>&nbsp;</TD>
    <TD><A HREF="n4000">574.86s</A></TD>
    <TD>&nbsp;</TD>
    <TD><A HREF="c4000">2705.35s</A></TD>
    <TD><A HREF="m4000">412.70s</A></TD>
    <TD><A HREF="f4000"><B>343.53s</B></A></TD></TR>
<TR ALIGN=RIGHT><TD>8000</TD>
    <TD>&nbsp;</TD>
    <TD><A HREF="n8000">2403.71s</A></TD>
    <TD>&nbsp;</TD>
    <TD>&nbsp;</TD>
    <TD><A HREF="m8000">1808.10s</A></TD>
    <TD><A HREF="f8000"><B>1430.10s</B></A></TD></TR>
</TABLE>

<P>A traveling salesman tour was formed by repeatedly adding vertices, 
at each step making the resulting tour as short as possible. Points were placed 
uniformly at random in the unit hypercube.Times include only the 
construction of the closest pair data structure and algorithm execution 
(not the initial point placement) and are averages over ten runs.  The 
quadtree data structure was only run on data sets of 1000 or fewer points 
due to its high storage requirements.  Code was written in C++, compiled 
and optimized by Metrowerks Codewarrior 10, and run on a 200MHz PowerPC 
603e processor (Apple Powerbook 3400c).
</BODY>
</HTML>