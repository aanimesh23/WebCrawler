<!DOCTYPE html PUBLIC "-//IETF//DTD HTML 2.0//EN">
<html>
<head>
<title>Theory Seminar, 16 Feb 1996</title>
</head>
<body>
<a href="/~theory/"><img src="/~theory/logo/shortTheory.gif" align= 
"bottom" alt="ICS Theory Group"></a> 

<h1>ICS 269, Winter 1996: Theory Seminar</h1>

<hr>
<h2>16 February 1996:<br>
Randomized Paging Algorithms<br>
<a href="http://cs.ucr.edu/~marek/">Marek Chrobak</a>, Dept. of
Computer Science, UC Riverside</h2>

<p>The paging problem is defined as follows: We are given a
two-level memory system, in which one level is a fast memory,
called <i>cache</i>, capable of holding <i>k</i> items, and the
second level is an unbounded but slow memory. At each given time
step, a request to an item is issued. Given a request to an item
<i>p</i>, a <i>miss</i> occurs if <i>p</i> is not present in the
fast memory. In response to a miss, we need to choose an item <i>
q</i> in the cache and replace it by <i>p</i>. The choice of <i>
q</i> needs to be made <i>on-line</i>, without the knowledge of
future requests. Our goal is to design a replacement strategy with
a small number of misses.</p>

<p>We use the competitive analysis to study online randomized
algorithms for paging. Our goal is to show how the concept of work
functions, used previously mostly for the analysis of deterministic
algorithms, can also be applied, in a systematic fashion, to the
randomized case. We present two results: We first show that the
competitiveness of the marking algorithm is exactly 2H(<i>k</i>)-1.
Previously, it was known to be between H(<i>k</i>) and
2H(<i>k</i>). Our second result is a new, H(<i>k</i>)-competitive
algorithm for paging. Our algorithm, as well as its analysis, is
simpler than the known algorithm by McGeoch and Sleator. Another
advantage of our method is that it can be implemented with
complexity bounds independent of the number of past requests:
O(<i>k</i>^2 log <i>k</i>) memory and time O(<i>k</i>^2) per
request.</p>
</body>
</html>

