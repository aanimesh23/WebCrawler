//    Processing educational code
//    Copyright (C) 2013  Lee Martie
//
//    This program is free software: you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation, either version 3 of the License, or
//    (at your option) any later version.
//
//    This program is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License
//    along with this program.  If not, see <http://www.gnu.org/licenses/>.
class Web {
  float x;
  float y;
  float d;

  float targetX;
  float targetY;

  float count = 0;
  float oldY;
  float oldX;

  public Web(float x, float y, float d) {
    this.x = x;
    this.y = y;
    this.d = d;
    targetX = x;
    targetY = y;
  } 

  public void drawNextPart(float stepSize) {

    if ((targetY <= (y+d)) && count == 0) {
      line(x, y, x, targetY);  
      targetY = targetY+stepSize;
      oldY = targetY;
      noFill();
      ellipse(x, y, d/4, d/4);
    }
    else {

      if (count == 0) {
        count = 1;
        ellipse(x, targetY, d/4, d/4);
      }
    }
    if (targetX <= x+d && count == 1 ) {
      line(x, oldY, targetX, oldY); 
      targetX = targetX+stepSize;
      oldX = targetX;
    }
    else {
      if (count == 1) {
        count = 2;
        ellipse(targetX, oldY, d/4, d/4);
      }
    }
    if (targetY >= y && count == 2) {
      line(oldX, oldY, oldX, targetY);
      targetY = targetY-stepSize;
    }
    else {
      if (count ==2) {
        count = 3;
        oldY = targetY;
        ellipse(oldX, targetY, d/4, d/4);
      }
    }
    if (targetX >= x && count == 3) {


      line(oldX, oldY, targetX, oldY);
      targetX = targetX-stepSize;
    }
    else {
      if (count == 3)
        count = 4;
    }
  }
}

