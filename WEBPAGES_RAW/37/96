<!DOCTYPE html 
    PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" 
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>
<head>
  <title>SLI | Code / MxObjects </title>
  <meta http-equiv='Content-Style-Type' content='text/css' />
  <link rel='stylesheet' href='http://sli.ics.uci.edu/pmwiki/pub/skins/custom/pmwiki.css' type='text/css' />
  <!--HTMLHeader--><style type='text/css'><!--
  ul, ol, pre, dl, p { margin-top:0px; margin-bottom:0px; }
  code.escaped { white-space: nowrap; }
  .vspace { margin-top:1.33em; }
  .indent { margin-left:40px; }
  .outdent { margin-left:40px; text-indent:-40px; }
  a.createlinktext { text-decoration:none; border-bottom:1px dotted gray; }
  a.createlink { text-decoration:none; position:relative; top:-0.5em;
    font-weight:bold; font-size:smaller; border-bottom:none; }
  img { border:0px; }
  .editconflict { color:green; 
  font-style:italic; margin-top:1.33em; margin-bottom:1.33em; }

  table.markup { border:2px dotted #ccf; width:90%; }
  td.markup1, td.markup2 { padding-left:10px; padding-right:10px; }
  table.vert td.markup1 { border-bottom:1px solid #ccf; }
  table.horiz td.markup1 { width:23em; border-right:1px solid #ccf; }
  table.markup caption { text-align:left; }
  div.faq p, div.faq pre { margin-left:2em; }
  div.faq p.question { margin:1em 0 0.75em 0; font-weight:bold; }
  div.faqtoc div.faq * { display:none; }
  div.faqtoc div.faq p.question 
    { display:block; font-weight:normal; margin:0.5em 0 0.5em 20px; line-height:normal; }
  div.faqtoc div.faq p.question * { display:inline; }
   
    .frame 
      { border:1px solid #cccccc; padding:4px; background-color:#f9f9f9; }
    .lfloat { float:left; margin-right:0.5em; }
    .rfloat { float:right; margin-left:0.5em; }
a.varlink { text-decoration:none;}

--></style>  <meta name='robots' content='index,follow' />

</head>
<body>
<!--PageHeaderFmt-->
  <div id='wikilogo'><a href='http://sli.ics.uci.edu'><img src='/pmwiki/pub/skins/custom/SLI_white.png'
    alt='SLI' border='0' /></a></div>
  <div id='wikihead'>
  <form action='http://sli.ics.uci.edu'>
    <!-- <span class='headnav'><a href='http://sli.ics.uci.edu/Code/RecentChanges'
      accesskey='c'>Recent Changes</a> -</span> --> 
    <input type='hidden' name='n' value='Code.MxObjects' />
    <input type='hidden' name='action' value='search' />
    <!-- <a href='http://sli.ics.uci.edu/Site/Search'>Search</a>: -->
    <input type='text' name='q' value='' class='inputbox searchbox' />
    <input type='submit' class='inputbutton searchbutton'
      value='Search' />
    <a href='http://sli.ics.uci.edu/Site/Search'>(?)</a>
  </form></div>
<!--/PageHeaderFmt-->
  <table id='wikimid' width='100%' cellspacing='0' cellpadding='0'><tr>
<!--PageLeftFmt-->
      <td id='wikileft' valign='top'>
        <ul><li><a class='wikilink' href='http://sli.ics.uci.edu/Classes/Classes'>Classes</a>
</li><li><a class='wikilink' href='http://sli.ics.uci.edu/Group/Group'>Group</a>
</li><li><a class='wikilink' href='http://sli.ics.uci.edu/Projects/Projects'>Research</a>
</li><li><a class='urllink' href='http://www.ics.uci.edu/~ihler/pubs.html' rel='nofollow'>Publications</a>
</li><li><a class='wikilink' href='http://sli.ics.uci.edu/Code/Code'>Code</a>
</li></ul><div class='vspace'></div><hr />
<div class='vspace'></div>
</td>
<!--/PageLeftFmt-->
      <td id='wikibody' valign='top'>
<!--PageActionFmt-->
        <div id='wikicmds'><ul><li class='browse'><a class='wikilink' href='http://sli.ics.uci.edu/Code/MxObjects?action=login'>login</a>
</li></ul>
</div>
<!--PageTitleFmt-->
        <div id='wikititle'>
          <div class='pagegroup'><a href='http://sli.ics.uci.edu/Code'>Code</a> /</div>
          <h1 class='pagetitle'>MxObjects</h1></div>
<!--PageText-->
<div id='wikitext'>
<h2>Mex-enabled / Matlab-compatible C++ container objects </h2>
<ul><li>mex::vector
<ul><li>mex::list
</li><li>mex::set
</li><li>mex::dequeue
</li></ul></li><li>mex::cellvector
</li><li>mex::multimap
</li></ul><div class='vspace'></div><div class='Matlab' style='padding:5px; border:1px solid black; background-color:#dddddd' >
<pre> <span  style='color: blue;'>//All mex-able objects share this interface</span>
 void  mxInit();            <span  style='color: blue;'>// initialize any matlab-specific implementation</span>
 bool  mxAvail();           <span  style='color: blue;'>// true if we already represent a matlab object</span>
 bool mxCheckValid(const mpointer) = 0; <span  style='color: blue;'>// check validity of mxArray* for this c++ object type</span>
 void mxCopy(mpointer m);   <span  style='color: blue;'>// create a *copy* (deep copy) of the matlab data &amp; wrap it</span>
                            <span  style='color: blue;'>//   for a shallow copy use: mxSet(); mxRelease(); mxGet();</span>
 void mxSet(mpointer) = 0;  <span  style='color: blue;'>// wrap passed matlab data; assumes irrevocable, exclusive ownership </span>
 mpointer mxGet() = 0;      <span  style='color: blue;'>// Return a pointer to the wrapped object (created if required)</span>
 void mxRelease() = 0;      <span  style='color: blue;'>// Disassociate from matlab object, leaving memory to matlab garbage collection</span>
 void mxDestroy() = 0;      <span  style='color: blue;'>// Delete matlab object and revert *this to a clean T()</span>
                            <span  style='color: blue;'>//   to keep a copy use e.g. Obj2=Obj; Obj.mxDestroy(); Obj.mxSwap(Obj2);</span>
 mxObject&amp; operator=(const myType&amp;) = 0; <span  style='color: blue;'>// copy constructor (copy data contents)</span>
 void mxSwap(myType&amp;) = 0;  <span  style='color: blue;'>// exchange *matlab* identities of two objects (implement for each type)</span>
</pre></div>
<div class='vspace'></div><div class='Matlab' style='padding:5px; border:1px solid black; background-color:#dddddd' >
<pre> <span  style='color: blue;'>//For built-in data types; T = double, uint32_t, etc.</span>
 vector&lt;T&gt;(n,val)                      <span  style='color: blue;'>// length-n vector filled with val</span>

 reserve(n)                            <span  style='color: blue;'>// ensure enough memory for n data</span>
 resize(n,val)                         <span  style='color: blue;'>// extend/reduce length to n, filling extras with val</span>
 size()                                <span  style='color: blue;'>// current vector length</span>
 capacity()                            <span  style='color: blue;'>// current memory size</span>
 empty()                               <span  style='color: blue;'>// boolean empty check</span>
 max_size()                            <span  style='color: blue;'>// maximum possible length</span>
</pre><div class='vspace'></div></div>
</div>

      </td>
    </tr></table>
<!--PageFooterFmt-->
  <div id='wikifoot'>
    <div class='footnav' style='float:left'> Last modified March 19, 2011, at 10:36 PM</div>
    <div class='footnav' style='float:right; text-align:right'>
    <a href="http://www.ics.uci.edu">Bren School of Information and Computer Science</a><br>
    <a href="http://www.uci.edu">University of California, Irvine</a>
    </div>
  </div>
<!--HTMLFooter--><script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(["_setAccount", "UA-24148957-2"]);
	_gaq.push(["_trackPageview"]);
	(function() {
	  var ga = document.createElement("script"); ga.type = "text/javascript"; ga.async = true;
	  ga.src = ("https:" == document.location.protocol ? "https://ssl" : "http://www") + ".google-analytics.com/ga.js";
	  var s = document.getElementsByTagName("script")[0]; s.parentNode.insertBefore(ga, s);
	  })();
</script>
</body>
</html>
