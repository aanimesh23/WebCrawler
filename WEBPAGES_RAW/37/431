<!DOCTYPE html PUBLIC "-//IETF//DTD HTML 2.0//EN">
<html>
<head>
<title>Theory Seminar, 27 Jan 2012</title>
</head>
<body>
<a href="/~theory/"><img src="http://www.ics.uci.edu/~theory/logo/CATOC2.jpg"></a>
<h2><a href="/~theory/269/">CS 269S, Winter 2012: Theory Seminar</a><br>
Bren Hall, Room 1423

<hr>
13 Jan 2012:</h2>
<h1>
Certifying Algorithms
</h1>
<h2>Presenter: Joe Simons</h2>
<h2>Authors: R.M. McConnell, K. Mehlhorn, S. Naher, and P. Schweitzer </h2>

<p>
Abstract:
A certifying algorithm is an algorithm that produces, with each output, a certificate or witness
(easy-to-verify proof) that the particular output has not been compromised by a bug. A user of a
certifying algorithm inputs x, receives the output y and the certificate w, and then checks, either
manually or by use of a program, that w proves that y is a correct output for input x. In this way,
he/she can be sure of the correctness of the output without having to trust the algorithm.
We put forward the thesis that certifying algorithms are much superior to non-certifying algorithms,
and that for complex algorithmic tasks, only certifying algorithms are satisfactory.
Acceptance of this thesis would lead to a change of how algorithms are taught and how algorithms
are researched. The widespread use of certifying algorithms would greatly enhance the
reliability of algorithmic software.
We survey the state of the art in certifying algorithms and add to it. In particular, we start a
theory of certifying algorithms and prove that the concept is universal.
</p>


</body>
</html>

