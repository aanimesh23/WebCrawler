<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<!--NewPage-->
<html>
<head>
<!-- Generated by javadoc on Thu Aug 31 15:31:12 PDT 2000 -->
<title>
  Class Processor
</title>
</head>
<body>
<a name="_top_"></a>
<h1>
  Class Processor
</h1>
<pre>
java.lang.Object
   |
   +----Processor
</pre>
<hr>
<dl>
  <dt> public class <b>Processor</b>
  <dt> extends Object
</dl>
Represents a processor in the Network
<p>
<dl>
    <dt> <b>See Also:</b>
    <dd> <a href="Network.html#_top_">Network</a>
</dl>
<hr>
<a name="index"></a>
<h2>
  <img src="images/variable-index.gif" width=207 height=38 alt="Variable Index">
</h2>
<dl>
  <dt> <img src="images/magenta-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#id"><b>id</b></a>
  <dd> 
  <dt> <img src="images/blue-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#NO_PROCESSOR"><b>NO_PROCESSOR</b></a>
  <dd> 
</dl>
<h2>
  <img src="images/constructor-index.gif" width=275 height=38 alt="Constructor Index">
</h2>
<dl>
  <dt> <img src="images/yellow-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#Processor(int, Network, int, int, int, TheSimulator)"><b>Processor</b></a>(int, Network, int, int, int, TheSimulator)
  <dd> Create a new processor with the specified characteristics
  
  <dt> <img src="images/yellow-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#Processor(int, Network, int, int, int, TheSimulator, float, float, float)"><b>Processor</b></a>(int, Network, int, int, int, TheSimulator, float, float, float)
  <dd> Create a new processor with the specified characteristics for a LogP network

 

</dl>
<h2>
  <img src="images/method-index.gif" width=207 height=38 alt="Method Index">
</h2>
<dl>
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#addNeighbour(Processor, int)"><b>addNeighbour</b></a>(Processor, int)
  <dd> Add a new neighbour to this processor
  
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#addOneWayNeighbour(Processor, int)"><b>addOneWayNeighbour</b></a>(Processor, int)
  <dd> 
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#getNeighbours()"><b>getNeighbours</b></a>()
  <dd> 
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#getPeId()"><b>getPeId</b></a>()
  <dd> 
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#handleEvent(ProcessorEvent)"><b>handleEvent</b></a>(ProcessorEvent)
  <dd> Takes care of events arriving from the Network

  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#IOCompletionTime(float)"><b>IOCompletionTime</b></a>(float)
  <dd> Models contention in the disk associated with this processor 
	by serializing consecutive requests

 
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#isIdle()"><b>isIdle</b></a>()
  <dd>   
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#isNeighbour(Processor)"><b>isNeighbour</b></a>(Processor)
  <dd> 
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#toString()"><b>toString</b></a>()
  <dd> 
</dl>
<a name="variables"></a>
<h2>
  <img src="images/variables.gif" width=153 height=38 alt="Variables">
</h2>
<a name="NO_PROCESSOR"><img src="images/blue-ball.gif" width=12 height=12 alt=" o "></a>
<b>NO_PROCESSOR</b>
<pre>
 public static final int NO_PROCESSOR
</pre>
<a name="id"><img src="images/magenta-ball.gif" width=12 height=12 alt=" o "></a>
<b>id</b>
<pre>
 public int id
</pre>
<a name="constructors"></a>
<h2>
  <img src="images/constructors.gif" width=231 height=38 alt="Constructors">
</h2>
<a name="Processor"></a>
<a name="Processor(int, Network, int, int, int, TheSimulator)"><img src="images/yellow-ball.gif" width=12 height=12 alt=" o "></a>
<b>Processor</b>
<pre>
 public Processor(int i,
                  <a href="Network.html#_top_">Network</a> n,
                  int s,
                  int bs,
                  int tsl,
                  <a href="TheSimulator.html#_top_">TheSimulator</a> sim)
</pre>
<dl>
  <dd> Create a new processor with the specified characteristics
<p>
  <dd><dl>
    <dt> <b>Parameters:</b>
    <dd> i - The processor id
    <dd> n - The newtwork to which the processor belongs
    <dd> bs - The size of the processors communication buffer
    <dd> s - The speed of this processor in some unit
  </dl></dd>
</dl>
<a name="Processor(int, Network, int, int, int, TheSimulator, float, float, float)"><img src="images/yellow-ball.gif" width=12 height=12 alt=" o "></a>
<b>Processor</b>
<pre>
 public Processor(int i,
                  <a href="Network.html#_top_">Network</a> n,
                  int s,
                  int bs,
                  int tsl,
                  <a href="TheSimulator.html#_top_">TheSimulator</a> sim,
                  float _L,
                  float _o,
                  float _g)
</pre>
<dl>
  <dd> Create a new processor with the specified characteristics for a LogP network
<p>
</dl>
<a name="methods"></a>
<h2>
  <img src="images/methods.gif" width=151 height=38 alt="Methods">
</h2>
<a name="toString()"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="toString"><b>toString</b></a>
<pre>
 public String toString()
</pre>
<dl>
  <dd><dl>
    <dt> <b>Overrides:</b>
    <dd> <a href="java.lang.Object.html#toString()">toString</a> in class Object
  </dl></dd>
</dl>
<a name="getPeId()"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="getPeId"><b>getPeId</b></a>
<pre>
 public int getPeId()
</pre>
<a name="getNeighbours()"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="getNeighbours"><b>getNeighbours</b></a>
<pre>
 public int[] getNeighbours()
</pre>
<a name="IOCompletionTime(float)"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="IOCompletionTime"><b>IOCompletionTime</b></a>
<pre>
 public float IOCompletionTime(float dt)
</pre>
<dl>
  <dd> Models contention in the disk associated with this processor 
	by serializing consecutive requests
<p>
  <dd><dl>
    <dt> <b>Parameters:</b>
    <dd> dt - - Duration of current request
    <dt> <b>See Also:</b>
    <dd> <a href="Task.html#_top_">Task</a>
  </dl></dd>
</dl>
<a name="handleEvent(ProcessorEvent)"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="handleEvent"><b>handleEvent</b></a>
<pre>
 public void handleEvent(<a href="ProcessorEvent.html#_top_">ProcessorEvent</a> pe)
</pre>
<dl>
  <dd> Takes care of events arriving from the Network
<p>
</dl>
<a name="addNeighbour(Processor, int)"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="addNeighbour"><b>addNeighbour</b></a>
<pre>
 public void addNeighbour(<a href="#_top_">Processor</a> p,
                          int speed)
</pre>
<dl>
  <dd> Add a new neighbour to this processor
<p>
  <dd><dl>
    <dt> <b>Parameters:</b>
    <dd> p - the new neighbour
    <dd> speed - the speed of the communication link between the two processors
  </dl></dd>
</dl>
<a name="addOneWayNeighbour(Processor, int)"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="addOneWayNeighbour"><b>addOneWayNeighbour</b></a>
<pre>
 public void addOneWayNeighbour(<a href="#_top_">Processor</a> p,
                                int speed)
</pre>
<a name="isNeighbour(Processor)"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="isNeighbour"><b>isNeighbour</b></a>
<pre>
 public boolean isNeighbour(<a href="#_top_">Processor</a> p)
</pre>
<dl>
  <dd><dl>
    <dt> <b>Returns:</b>
    <dd> Wheter processor p is a neighbour of this processor
  </dl></dd>
</dl>
<a name="isIdle()"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="isIdle"><b>isIdle</b></a>
<pre>
 public boolean isIdle()
</pre>
<dl>
  <dd><dl>
    <dt> <b>Returns:</b>
    <dd> Wheter this processor is currently running a task
  </dl></dd>
</dl>
</body>
</html>
