<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN">
<html>
<head>
  <title>Algorithms</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
</head>
<body>
<h1>CS/CSE 161, Fall 2016:<br> Design and Analysis of Algorithms</h1>

<hr>

<h2>Instructors and office hours</h2>
<p>The course will be taught by <a href="/~eppstein/">David
Eppstein</a>, eppstein@uci.edu (office hours Tues 2:30 &ndash; 3:30 and
Weds 4:30 &ndash; 5:30 in Bren 4082). The teaching
assistants are Sid Gupta (office hours Thu 3:30 &ndash; 4:30 and Fri
12:00 &ndash; 1:00 in Bren 4032) and Nil Mamano (office hours Mon 12:30 &ndash;
1:30 and Weds 1:30 &ndash; 2:30 in Bren 4061). We also have four
readers, Nitin Agarwal, Disi Ji, Jordan Jorgensen, and Pedro Matias.</p>

<h2>Lectures and discussions</h2>
<p>The course meets for lectures Mondays, Wednesdays, and
Fridays, from 3:00 &ndash; 3:50, in <a href="http://www.classrooms.uci.edu/GAC/SSLH100.html">Social Science Lecture Hall, Room 100</a>. In addition there
are four discussion sections, Tuesdays and Thursdays at 5, 6, 7, and 8pm in <a href="http://www.classrooms.uci.edu/GAC/ICS174.html">ICS 174</a>.
Students are expected
to be enrolled in one of the discussion sections and to attend
discussions regularly. We will not be taking attendance, and it is ok to attend a different discussion than the one you are enrolled in as long as space permits. At the discussion sections, the teaching assistant will go over homework and midterm
solutions, give additional examples of topics covered in the lecture,
and be available to answer questions.</p>

<p>Additionally, the course has a Piazza page for online discussions and
answers to questions. You can sign up to this at <a href="http://piazza.com/uci/fall2016/cs161cse161">http://piazza.com/uci/fall2016/cs161cse161</a>.</p>

<p>Lecture materials will not be distributed to the class; instead, you are encouraged to attend the lecture yourself and take your own notes. Recording the lectures for your own personal use is allowed, but other uses of recorded lectures (including making them available online) is forbidden.</p>

<h2>Textbook</h2>
<p>The course text will be "Algorithm Design and Applications" by
Goodrich and Tamassia (Wiley, 2015).
Students are expected to own a copy and to read the relevant chapters
and sections. The official version of the textbook is the one sold in
the bookstore. Most homework problems will be assigned from this text.
If you are using a different version (e.g., an
international version, or the older text by the same authors), then it is your responsibility to make sure you
are doing the correct homework problems.</p>

<h2>Homework and grading policy</h2>
<p>Coursework will consist of weekly homeworks (typically due on Fridays and posted on this page before the start of class on Monday of the week it is due)
as well as two midterms and a comprehensive final exam. The overall
grade will be determined 10% from homework, 25% from each midterm, and
40% from the final.</p>

<p>Group work on homeworks is permitted; however, each student
should turn in his or her own copy of the homeworks. Some of the
homework problems will ask you to perform calculations or trace the
steps of an algorithm; you are welcome to use computer programs
to solve these problems rather than doing everything by hand.
Each week's
homework assignment will be given on this web page. Homework is due by
9:00pm on Fridays and must be turned in through dropbox
on eee. No late
homework will be accepted.
Handwritten homework or homeworks in other formats risk
graded. Students who add the class after the start of quarter will be
responsible for turning in all earlier homeworks by the following
Friday. The lowest homework score of the quarter will be dropped from
the course average.</p>

<p>Homework must be formatted as a
pdf file. We strongly recommend that homeworks be typed; we will also
accept homeworks in pdf
format generated by scanning a handwritten answer sheet,
but if your handwriting is not legible to the course readers you will be
penalized for it. If you need to include equations or formulas in your
answers, you might find it helpful to use
a <a href="https://www.latex-project.org/get/">LaTeX-based document
formatting system</a>. Exam answers may be written either by pencil or
pen, but regrade requests will only be accepted for answers that were
written in non-erasable ink.</p>

<p>For the UCI academic integrity policy, please see <a href="https://aisc.uci.edu/index">aisc.uci.edu</a>. Students who are caught cheating in this class (for instance by copying exam solutions or allowing other students to copy from them) risk getting an F in the class or other disciplinary action as allowed by this policy.</p>

<h2>Tentative Schedule</h2>

<dl>
<dt><b>Week 0:</b></dt>
<dd>Sep. 23: Intro/review [Goodrich & Tamassia, chapter 1]; Fibonacci numbers (Chapter 12)</dd>
<dd>&nbsp;</dd>
<dt><b>Week 1: Data structures</b></dt>
<dd>Homework 1, due 9:00pm on Friday, Sep. 30: R-1.3, R-1.4, R-1.7, R-1.10</dd>
<dd>Sep. 26: Priority queues and heapsort (Chapter 5)</dd>
<dd>Sep. 28: Hashing with linear probing (Chapter 6)</dd>
<dd>Sep. 30: Nearest neighbor searching with balanced WAVL trees (Chapter 4)</dd>
<dd>&nbsp;</dd>
<dt><b>Week 2: Comparison sorting</b></dt>
<dd>Homework 2, due 9:00pm on Friday, Oct. 7: R-4.17, R-5.11, C-6.1, A-6.8</dd>
<dd>Oct. 3: Merge sort, divide-and-conquer, and the master theorem
(Chapters 8 and 11)</dd>
<dd>Oct. 5: Comparison sorting lower bounds (Chapter 8)</dd>
<dd>Oct. 7: Quick sort (Chapter 8)</dd>
<dd>&nbsp;</dd>
<dt><b>Week 3: Selection and integer sorting</b></dt>
<dd>Homework 3, due 9:00pm on Friday, Oct. 14: R-8.5, C-8.10, R-9.5, C-9.1</dd>
<dd>Oct. 10: Quickselect (Chapter 9)</dd>
<dd>Oct. 12: Bucket sort and stability (Chapter 9)</dd>
<dd>Oct. 14: Radix sort (Chapter 9)</dd>
<dd>&nbsp;</dd>
<dt><b>Week 4: Midterm; integer arithmetic</b></dt>
<dd>Oct. 17: MIDTERM ONE</dd>
<dd>Oct. 19: <a href="http://www.ics.uci.edu/~guptasid/files/161/161_Oct19.pdf">Karatsuba multiplication</a> (Chapter 11)</dd>
<dd>Oct. 21: <a href="http://www.ics.uci.edu/~guptasid/files/161/161_Oct21.pdf">Modular exponentiation and RSA encryption</a> (Chapter 24)</dd>
<dd>&nbsp;</dd>
<dt><b>Week 5: Graph representation and traversal</b></dt>
<dd>Homework 4, due 9:00pm on Friday, Oct. 28: R-11.4, R-24.5, R-24.10, C-24.8</dd>
<dd>Oct. 24: Graph representation (Chapter 13)</dd>
<dd>Oct. 26: Depth first search and strong connectivity (Chapter 13)</dd>
<dd>Oct. 28: Directed acyclic graphs and topological ordering (Chapter 13)</dd>
<dd>&nbsp;</dd>
<dt><b>Week 6: Shortest paths and minimum spanning trees</b></dt>
<dd>Homework 5, due 9:00pm on Friday, Nov. 4: R-13.4, R-13.12, C-14.2, C-14.4</dd>
<dd>Oct. 31: DAG and Bellman&ndash;Ford shortest paths (Chapter 14)</dd>
<dd>Nov: 2: Dijkstra's algorithm (Chapter 14)</dd>
<dd>Nov. 4: Minimum spanning trees (Chapter 15)</dd>
<dd>&nbsp;</dd>
<dt><b>Week 7: Midterm; dynamic programming</b></dt>
<dd>Nov. 7: MIDTERM TWO</dd>
<dd>Nov. 9: Dynamic programming for computing solutions to recurrence relations (Chapter 12)</dd>
<dd>Nov. 11: VETERANS DAY HOLIDAY</dd>
<dd>&nbsp;</dd>
<dt><b>Week 8: Dynamic programming applications</b></dt>
<dd>Homework 6, due 9:00pm on Friday, Nov. 18: R-12.4, R-12.8, C-12.3,
A-12.9</dd>
<dd>Nov. 14: Finding optimal game strategies (Chapter 12)</dd>
<dd>Nov. 16: Longest common subsequences (Chapter 12)</dd>
<dd>Nov. 18: The knapsack problem (Chapters 10 and 12)</dd>
<dd>&nbsp;</dd>
<dt><b>Week 9: Computational geometry</b></dt>
<dd>Nov. 21: Convex hulls (Chapter 22)</dd>
<dd>Nov. 23: Closest pairs (Chapter 22)</dd>
<dd>Nov. 25: THANKSGIVING HOLIDAY</dd>
<dd>&nbsp;</dd>
<dt><b>Week 10:</b></dt>
<dd>Homework 7, due 9:00pm on Friday, Dec. 2: R-22.8, C-22.1, C-22.5, C-22.6</dd>
<dd>Nov. 28: Streaming algorithms (not in text;
see <a href="http://dmac.rutgers.edu/Workshops/WGUnifyingTheory/Slides/cormode.pdf">Graham
Cormode's slides on finding frequent items</a> and
the <a href="https://en.wikipedia.org/wiki/Reservoir_sampling">Wikipedia
article on reservoir sampling</a>)</dd>
<dd>Nov. 30: NP-completeness (Chapter 17)</dd>
<dd>Dec. 2: Approximation algorithms (Chapter 18)</dd>
<dd>&nbsp;</dd>
<dt><b>Final exam:</b></dt>
<dd>Dec. 5 (Monday), 4:00 - 6:00 (per <a href="https://www.reg.uci.edu/calendars/finals/schedule-201617.html">schedule</a>)
</dl>

<h2>Other Course-Related Information</h2>

<p>The following material is from previous years' offerings of ICS 161.
Some of these offerings were based on different texts (Baase and
Cormen-Leiserson-Rivest), and covered a somewhat different range of
topics.  You may find this material useful, but it is not required
reading.</p>

<ul><li><a href="syl.html">Lecture notes from Winter 1996</a></li>
<li><a href="exams/">Sample exams from Winter 1998, Spring
2005, and Fall 2015</a></li>
<li><a href="python/">Python
implementations of various algorithms</a>, <a
href="/~eppstein/PADS/">more Python algorithm implementations</a>, and
<a
href="http://aspn.activestate.com/ASPN/Cookbook/Python?kwd=Algorithms">
still more Python algorithms</a>.</li>
</ul>
</body>
