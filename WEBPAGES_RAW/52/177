<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><HEAD>   <TITLE>ICS 125 Project Opportunities</TITLE></HEAD><BODY><TABLE BORDER=2 CELLSPACING=2 CELLPADDING=2 WIDTH="100%" BGCOLOR="#CCCCCC" ><TR><TD><H1 align="center">UC Irvine  - ICS 125 </H1><H1 align="center">Project in Software System Design </H1><H1 align="center">FQ 2004 Project Opportunities </H1></TD></TR></TABLE><h2></h2><h2><a name="index"></a>Index</h2><p><a href="#WorkingSphere">1. Working Sphere</a></p><p><a href="#Palantir1">2. Integrating Palant&iacute;r with Subversion and Eclipse</a></p><p><a href="#Palantir2">3. Creating and Updating Palant&iacute;r Views</a></p><p><a href="#Palantir3">4. Robustifying Palant&iacute;r</a></p><p><a href="#Dashofy1">5. Integration of xlinkit with ArchStudio 3</a></p><p><a href="#Dashofy2">6. xArchScript: Scripting for xADL 2.0 documents in ArchStudio    3</a></p><p><a href="#unexceptional">7. unexceptional.net: PHASE II</a></p><p><a href="#filesharing">8. File-sharing - moving towards &quot;what you see    is what you get&quot;</a></p><p><a href="#gxl1">9. GXL Validator Plug-In</a></p><p><a href="#gxl2">10. GXL Visualization Plug-in</a></p><p><a href="#music">11. New Computer-based Choral Musical Score Display</a></p><p><a href="#blah">12. Blah Blah Blah: A Content Creation Infrastructure In SupportOf Speech-Based Location-Aware Mobile Phone Gaming</a></p><p><a href="#3d">13. New True 3-D Digital Display System</a></p><p><a href="#genome">14. Java-based Genome Browser for Mitochondrial DNA</a></p><p>Last modified:   <!-- #BeginDate format:Am1a -->September 27, 2004 12:15 PM<!-- #EndDate --></p><HR WIDTH="100%"></P><H4><a name="WorkingSphere"></a>Working Sphere </H4><UL>	<LI>offered by the ICT Group of the ICS Department at UC Irvine	<LI>Customer Contacts: <A HREF="http://www.ics.uci.edu/%7Egmark">Prof. Gloria Mark</A> and	  Victor Gonzalez</UL><p>I'd like the students to design a system whereby people could connect together  their separate &quot;events&quot; in their daily working lives that are related  by being part of a common project (what we call a working sphere). This means  that people would identify their projects at the outset (e.g. NSF ITR project,  135 course, JPL project, etc.). Then as people create Word docs, Excel spreadsheets,  send/receive emails, write notepads for phone messages, etc. they would assign  these to their separate working spheres. Thus, each working sphere would contain  a set of information related to it. In this way, people would access theirdata according to their working spheres.</p><p>But wait--it gets more complicated. I don't think a simple traditional file  hierarchy is the way to go. I'd like to see similarity indexes used to relate  the documents within each working sphere in terms of &quot;closeness&quot;.  This &quot;closeness&quot; measure could be determined e.g. as the time that  the artifact was created, by specifying the key person (or people) involved  in it, by its importance, or even some other measure. This means in effect  that people could have different visualizations of their information dependiing  on what dimension they would like to use to view their information. i envision  the interface as a visualization of the information within a working sphere.</p><p>The motivation for this system comes from real life data that shows that people  switch projects about every 12 minutes (and lower order events about every  3 minutes). The goal is that this system can help people maintain continuityin their working spheres.</p><p><a href="#index">Back to Index</a> </p><P><HR WIDTH="100%"><h4><a name="Palantir1"></a>Integrating Palant&iacute;r with Subversion and Eclipse</h4><UL>  <LI>offered by the Software Engineering Group of the ICS Department at UC Irvine  <LI>Customer Contacts: <a href="http://www.ics.uci.edu/%7Eandre/">Prof. Andre      van der Hoe</a>k  and  Anita Sarma </UL><p>Palant&iacute;r is a workspace awareness tool that informs developers about  the ongoing activities of other developers. Specifically, it informs them of  potential conflicts as they develop. Such conflicts may be direct (one developer,  working in their cubicle, starts editing a file that another developer, working  in their cubicle on the other side of the building, just started editing as  well) or indirect (one developer edits a file and makes significant changes  to the interface of the class defined in that file, while another developer  is reworking the program to make increased use of the -- now old -- interface).  Palant&iacute;r  is a tool that we have developed that helps in these situations. It operates  by sending out events regarding the changes that a developer makes, thereby  informing the other developers of these changes and allowing them to contact  each other if they notice their work overlaps. </p><p>To date, Palant&iacute;r has operated in a stand-alone fashion. Recently,  we completed an integration of Palant&iacute;r and CVS and Eclipse; now we  would like to create an integration between Palant&iacute;r, Subversion (another  CM system) and Eclipse. This project will involve understanding how Eclipse's  plug-in architecture works, intimate familiarity with a leading configuration  management system, and using a distributed, event-based infrastructure.</p><p>Features:</p><p> * Build a wrapper around Subversion / Subclipse (the Subversion Eclipse<br>  plug-in) that emits events to the Palant&iacute;r event server.</p><p> * Calculate the severity (size) of changes in this wrapper.</p><p> * Support easy configurability from Eclipse.</p><p> * (Special requirement): use Palant&iacute;r + CVS + Eclipse in the development<br>  of this tool, on a separate branch in our repository, and report on <br>  any issues with Palant&iacute;r and suggest improvements along the way (you<br>  will not have to implement those, however)</p><p>For more information:</p><p> * www.ics.uci.edu/~asarma/Palantir</p><p><a href="#index">Back to Index</a> </p><HR WIDTH="100%"><h4><a name="Palantir2"></a>Creating and Updating Palant&iacute;r Views</h4><UL>  <LI>offered by the Software Engineering Group of the ICS Department at UC Irvine  <LI>Customer Contacts: <a href="http://www.ics.uci.edu/%7Eandre/">Prof. Andre      van der Hoek</a> and Anita Sarma </UL><p>Palant&iacute;r is a workspace awareness tool that informs developers about  the<br>  ongoing activities of other developers. Specifically, it informs them of<br>  potential conflicts as they develop. Such conflicts may be direct (one<br>  developer, working in their cubicle, starts editing a file that another<br>  developer, working in their cubicle on the other side of the building, just<br>  started editing as well) or indirect (one developer edits a file and makes<br>  significant changes to the interface of the class defined in that file,<br>  while another developer is reworking the program to make increased use of<br>  the -- now old -- interface). Palant&iacute;r is a tool that we have developed<br>  that helps in these situations. It operates by sending out events regarding<br>  the changes that a developer makes, thereby informing the other developers<br>  of these changes and allowing them to contact each other if they notice<br>their work overlaps.</p><p>To date, we have built a number of different visualizations for Palantir.<br>  Most of these have been experimental, but since people are starting to use<br>  Palantir in a number of different settings, we need to (a) reexamine these<br>  views, (b) reimplement them properly so they are scalable and resistant<br>  against errors, and (c) investigate other ways of visualizing the<br>  information. This is not a mere reimplementation effort; we want to<br>  critically look at the visualizations with the team, decide upon features,<br>  and build the visualizations from scratch. In addition, the MS Windows<br>  Explorer view is brand-new. This project involves working with a state of<br>  the art configuration management approach, designing and implementing a MS<br>  Windows extension, working with Eclipse, and state-of-the-art visualizations<br>  to be designed.</p><p>Features:</p><p> * Create a new Eclipse perspective that informs developers of minimal,<br>  average, and maximum severity of changes.<br>  <br>  * Redesign and reimplement the grid view to properly scale and work.</p><p> * Build a MS Windows Explorer view that is similar to the Palant&iacute;r<br>  explorer view, but is actually an extension to the real Windows<br>  Explorer program.</p><p> * Update the Internet Palant&iacute;r explorer view.</p><p> * (Special requirement): use Palant&iacute;r + CVS + Eclipse in the development<br>  of this tool, on a separate branch in our repository, and report on <br>  any issues with Palant&iacute;r and suggest improvements along the way (you<br>  will not have to implement those, however)</p><p>For more information:</p><p> * www.ics.uci.edu/~asarma/Palantir</p><p><a href="#index">Back to Index</a> </p><HR WIDTH="100%"><h4><a name="Palantir3"></a>Robustifying Palant&iacute;r</h4><UL>  <LI>offered by the Software Engineering Group of the ICS Department at UC Irvine  <LI>Customer Contacts: <a href="http://www.ics.uci.edu/%7Eandre/">Prof. Andre      van der Hoek</a> and Anita Sarma </UL>Palant&iacute;r is a workspace awareness tool that informs developers about  the<br>ongoing activities of other developers. Specifically, it informs them of<br>potential conflicts as they develop. Such conflicts may be direct (one<br>developer, working in their cubicle, starts editing a file that another<br>developer, working in their cubicle on the other side of the building, just<br>started editing as well) or indirect (one developer edits a file and makes<br>significant changes to the interface of the class defined in that file,<br>while another developer is reworking the program to make increased use of<br>the -- now old -- interface). Palant&iacute;r is a tool that we have developed<br>that helps in these situations. It operates by sending out events regarding<br>the changes that a developer makes, thereby informing the other developers<br>of these changes and allowing them to contact each other if they notice<br>their work overlaps.<p>To date, we have an experimental version of Palant&iacute;r that we hav estarted  to<br>  use ourselves. A key aspect of the implementation of Palant&iacute;r is a<br>  centralized database to which the clients connect. The problem, currently,<br>  with Palant&iacute;r is that it does not allow (a) disconnected operation,  and (b)<br>  any issues with a connection &quot;going down&quot;. We want to extend Palant&iacute;r  so<br>  that someone can take a workspace on their laptop, disconnect from the net,<br>  and resync up when they connect back to the network. We also want to<br>  leverage this mechanism to &quot;resynchronize&quot; when a connection is accidently<br>  lost due to the server disappearing for some reason. This project involves<br>  dealing with advanced issues in distributed systems, a unique &quot;research  /<br>  testing&quot; slant, and an opportunity to design creative solutions.</p><p>Features:</p><p> * Support disconnection of Palant&iacute;r client, with &quot;saving&quot; of  events<br>  to send later.<br>  <br>  * Support reconnection of Palant&iacute;r client, with resynchronization<br>  of views, updating of the server, and getting informed of what<br>  happened in the rest of the project met anderen.</p><p> * Investigate how Palant&iacute;r may break down with network outages,<br>  server crashes/kills, etc, and propose and implement solutions.</p><p> * (Special requirement): use Palant&iacute;r + CVS + Eclipse in the development<br>  of this tool, on a separate branch in our repository, and report on <br>  any issues with Palant&iacute;r and suggest improvements along the way (you<br>  will not have to implement those, however)</p><p>For more information:</p><p> * www.ics.uci.edu/~asarma/Palantir</p><p><a href="#index">Back to Index</a> </p><HR WIDTH="100%"><h4><a name="Dashofy1"></a>Integration of xlinkit with ArchStudio 3</h4><UL>  <LI>offered by the Software Engineering Group of the ICS Department at UC Irvine  <LI>Customer Contact: <a href="http://www.ics.uci.edu/%7Eedashofy/">Eric Dashofy</a></UL><p>ArchStudio 3 is a research environment for software architectures. It<br>  is similar to code-based environments like Eclipse or Visual Studio in<br>  that it integrates many software engineering tools in a single, unified<br>  environment, but instead of focusing on the code as the primary<br>  development artifact, it focuses on an architectural model, specified<br>  in an XML-based language called xADL 2.0.</p><p>xlinkit is an off-the-shelf constraint analyzer for XML documents. It<br>  allows users to specify complex constraints among XML elements using<br>  a (relatively) simple constraint language, and then quickly checks XML<br>  documents to see if those constraints are met or not. If they are not<br>  met, then violations of those constraints are reported.</p><p>The goal for this project is to integrate xlinkit into ArchStudio 3<br>  to allow ArchStudio developers to rapidly create analysis tools for<br>  xADL 2.0 architectural descriptions. In its current form, xADL 2.0<br>  has many implied constraints among elements that are too complex to<br>  be checked by a regular XML syntax validator; however xlinkit should<br>  be able to check many/most of these constraints. Ideally, the output<br>  of this project would be a framework in which developers could write<br>  a constraint in the constraint language of xlinkit, and then have<br>  xlinkit check an open xADL 2.0 architecture for these constraints<br>  and report violations in a user-friendly way.</p><p>The challenges for this project include obtaining a copy of xlinkit<br>  for development (it's currently under commercial license but the <br>  original developers are friends of the software group here, and <br>  it should be possible to get a developer's license or use an older,<br>  open-source release), integrating xlinkit into the ArchStudio 3<br>  environment as a component (or set of components, or meta-component), <br>  writing constraints to check xADL 2.0 documents, and translating<br>  the results of the constraint check into data that is in the<br>  format used by ArchStudio 3.</p><p>This project is worth doing because it has the potential to improve<br>  the constraint analysis capabilities for software architecture models<br>  significantly. I believe that a properly done xlinkit-ArchStudio<br>  integration will make writing analysis tools for xADL 2.0 descriptions<br>  a full order of magnitude simpler than it is now, and likely more<br>  efficient as well. In the longer-term, I believe the xlinkit-ArchStudio<br>  integration will be critical to managing relationships among different<br>  views in a multi-viewed software architecture model.</p><p>&gt; Features: (a short bullet list of one-line descriptions of features or<br>&gt; requirements)</p><p> - xlinkit integrated into ArchStudio 3 as a component (or set of<br>  components, or meta-component)<br>  - Such that errors found when checking xADL 2.0 documents are<br>  displayed to the user in a friendly way<br>  - Such that errors found when checking xADL 2.0 documents are<br>  related back to individual elements in the document in a<br>  format that other ArchStudio 3 tools (e.g. editors like<br>  ArchEdit and Archipelago) can understand so they can help<br>  the user focus on and fix the errors.<br>  - A set of example constraint analyzers for the current version <br>  of xADL 2.0.<br>  - Includes some part/tool/well-defined-method that allows <br>  developers to easily create future xlinkit constraints for <br>  future xADL 2.0 features<br>  - Double Bonus: Obtaining/using an xlinkit license that allows <br>  us to redistribute the results of this work as a part of <br>  the ArchStudio 3 toolset.</p><p><a href="#index">Back to Index</a> </p><HR WIDTH="100%"><h4><a name="Dashofy2"></a>xArchScript: Scripting for xADL 2.0 documents in ArchStudio 3.</h4><UL>  <LI>offered by the Software Engineering Group of the ICS Department at UC Irvine  <LI>Customer Contact: <a href="http://www.ics.uci.edu/%7Eedashofy/">Eric Dashofy</a></UL><p>ArchStudio 3 is a research environment for software architectures. It<br>  is similar to code-based environments like Eclipse or Visual Studio in<br>  that it integrates many software engineering tools in a single, unified<br>  environment, but instead of focusing on the code as the primary<br>  development artifact, it focuses on an architectural model, specified<br>  in an XML-based language called xADL 2.0.</p><p>Currently, ArchStudio 3 provides a reasonable Java API for reading<br>  and writing xADL 2.0 documents element-by-element, but writing new<br>  components and classes that take advantage of this API for simple<br>  xADL maintenance tasks can be cumbersome. To augment this API, we<br>  would like to integrate a scripting framework into ArchStudio that<br>  allows users to write and execute scripts that can perform maintenance <br>  tasks on xADL 2.0 documents. For example:</p><p> - Find all elements in the document that do not have an ID (but<br>  should), and generate a random, unique ID for each one.<br>  - Replace all links in the architecture with two links and<br>  an instrumenting connector.<br>  - Create a component type for each component in an architecture<br>  that doesn't have one, based on the information in the component's<br>  description.</p><p>Because xADL 2.0 is a complex (and extensible) language, the scripting <br>  language should support simple functions, recursion, variables, string<br>  maniuplation and all the other trappings of a 'real' scripting language.<br>  As such, we recommend that an off-the-shelf scripting framework for Java<br>  be used--this should simplify your life greatly. Candidates include Jython<br>  (a Python implementation for Java) and Rhino (a Javascript implementation<br>  for Java). The outcome of this project should include at least one<br>  ArchStudio 3 component accessible via API that can execute scripts; bonus<br>  for including a separate script editor/debugger component.</p><p>This project is challenging because it involves integrating an <br>  off-the-shelf software tool (a scripting engine) with an existing<br>  environment. It will probably also entail the use of Java reflection<br>  to provide a full suite of capabilities. The reward is that the<br>  environment will be significantly enhanced for users that need to create<br>  and maintain real architecture descriptions, simplifying some maintenance<br>  tasks by up to an order of magnitude.</p><p>&gt; Features: (a short bullet list of one-line descriptions of features or<br>&gt; requirements)</p><p> - Integrate an off-the-shelf Java scripting engine into ArchStudio 3<br>  as a component exposing an API callable by other components<br>  - Allow users to write scripts that can traverse arbitrary xADL<br>  2.0 documents, read them, and make changes.<br>  - Demonstrate the effectiveness of the tool by writing scripts<br>  to:<br>  - Find all elements in the document that do not have an ID (but<br>  should), and generate a random, unique ID for each one.<br>  - Replace all links in the architecture with two links and<br>  an instrumenting connector.<br>  - Create a component type for each component in an architecture<br>  that doesn't have one, based on the information in the component's<br>  description.<br>  - Bonus: Create a separate script editing/debugging component.</p><p><a href="#index">Back to Index</a> </p><HR WIDTH="100%"><h4><a name="unexceptional"></a>unexceptional.net: PHASE II</h4><UL>  <LI>offered by the Game Culture and Technology Lab at UC Irvine  <LI>Customer Contact: Robert F. Nideffer</UL><p>unexceptional.net is a multimodal, pervasive, location-aware 'net-centric'<br>  game.</p><p>The game is quest-based, and revolves around a central character - Guy.<br>  Guy is a frustrated comic artist, game designer, hacker who's recently<br>  found out that his long-time partner is having an affair. This discovery<br>  launches him upon a series of quests, that you participate in, in effort<br>  to gain insight into the nature of his partner's relationship. In the<br>  process, due to his cheating partner's interests and influence, his<br>  experience is infused with an eastern philosophy and spirituality that<br>  dictates the nature of the quests, and the ultimate goal, Guy's search for<br>&quot;enlightenmnet.&quot;<br></p><p>PHASE I: Background</p><p>Phase I (begun in Redmiles' 125 class, and continued over the Summer)<br>  involved design and implementation of a server infrasturcture for storing<br>  and delivering game-sttte via both GPS enabled cell phone, and the Web.</p><p>On the Web side, a Blog (administered by the game's central character,<br>  Guy) is used as a vehicle for providing the player information about<br>  current game state, player locations, and quest progress. The Blog is also<br>  used as an administrative framework enabling the game designers to<br>  dynamically and flexibly customize the game and have it immediately<br>  reflected in the various interfaces - at this point Web and GPS cellphone.<br>  I refer to this as the 'World-Building Toolkit' component. The<br>  world-building is done through a series of user-friendly Web pages<br>  allowing customization of a wide-range of game-state data such as<br>  inventory, statistics, the main character, npc characters, and a number of<br>  location related services allowing specification of how things like<br>  region, terrain, and structure will be defined and treated during<br>  gameplay. All of this work was done using PHP, MySQL, HTML, DHTML, and<br>  Javascripting.</p><p>On the phone side we used Nextel's Motorola i730 GPS cellphones for<br>  prototyping. The phone client is written in J2ME using the MIDP 2.0<br>  specification. We also wrote a servlet that handles direct socket<br>  connections to the game server, and does the authentication and data<br>  uploading and downloading. The phone game is a 2D isometric style game<br>  where the main character Guy runs around the world on a series of<br>  location-based quests madly looking for his cheating partner and her<br>  lover. On startup of the phone game a number of things happen: 1)<br>  authentication; 2) notification and storage of the player's lat/lon<br>  location to the server; 3) pulling down the player's active quest<br>  information from the server to the phone; and 4) pulling down all relevant<br>  inventory, statistics, region, terrain, and structure data from the server<br>  to the phone. The phone has two modes of representing the player; 1) the<br>  'astral body' which is associated with the character representation that<br>  is controlled via key commands and can interface it with the gameworld<br>  (pick up items, bomb structures, interact with characters, etc); and 2)<br>  the 'physical body' which is controlled via the player's actual movement<br>  in physical space, updated via the GPS feed. As game play ensues,<br>  game-state is continually updated to the server. After quitting, when the<br>  player logs back in to the game via the Web interface, the impact of game<br>  play via the phone will be reflected in the Blog.</p><p>All this brings us to what I would love to get students from your class<br>  involved with as...</p><p>PHASE II: Next Steps</p><p>One of the core R&amp;D projects in the Game Culture and Technology Lab is  a<br>  'Game-Grid' infrastructure we have implemented in relationship with our<br>  partners, the San Diego Supercomputer Center, Sun Microsystems, and a<br>  third-party technology middleware provider, Butterfly.net. Among other<br>  things, the grid will enable massively multiuser game environments on a<br>  scale far greater than anything currently available. We have hooked<br>  several 3D game engines into the grid - Crystalspace, NDL and Torque. One<br>  of the goals is to enable a character that is instanciated in one<br>  environment to seamlessly move into a completely foreign environment<br>  running in another engine.</p><p>This brings me back to unexceptional.net. Phase II prototyping will<br>  involve specifying and implementing a real-time 3D massively multiuser<br>  interface (MMOG) to Guy's world that runs on the grid. Torque will be used<br>  as the primary engine. The goal will be to make the MMOG function<br>  analagous to the phone. In other words, to build in at the infrastructure<br>  and content creation level a far greater degree of modularity and<br>  flexibility than is common. For instance, the Torque client will need to<br>  communicate with the game server database to access stats, inventory, and<br>  location information, as well as update that information to the database<br>  during gameplay.</p><p>This team would be primarily responsible for helping to design and<br>  implement the Torque client in relation to what already exists on the Net<br>  and GPS phone side. Useful skills would include familiarity with 3D games<br>  and game engines, graphics programming, SQL database programming, PHP<br>  scripting, Torque's internal scripting language (similar to C++), and<br>  networking.</p><p><a href="#index">Back to Index</a> </p><HR WIDTH="100%"><h4><a name="filesharing"></a>File-sharing - moving towards &quot;what you see is what you get&quot;</h4><UL>  <LI>offered by the Software Engineering Group of the ICS Department at UC Irvine  <LI>Customer Contacts: <a href="http://www.ics.uci.edu/%7Esgirish/">Girish  Suryanarayana</a> and <a href="http://www.ics.uci.edu/%7Ejerenkra/">Justin Erenkrantz</a> </UL><p>Description:<br>  File-sharing applications such as Napster, Gnutella, Limewire etc. were all  really cool, but they suffered from a very significant problem. There was no  way to ensure that the resources (such as files) you were downloading were  actually the resources you thought you were downloading. Moreover, you could  in fact have downloaded viruses and spyware that could have harmed your computer.  What if there could be a way to ensure &quot;what you see is what you get!!&quot;<br>  <br>  XREP is one solution to this problem. It uses a reputation-based approach that  helps peers choose reliable resources in decentralized P2P applications. In  addition, the PACE architectural style provides guidance on how and where to  integrate trust and reputation models in the application architecture. PACE,  combined with XREP, can provide a promising approach to tackle the problem  of choosing reliable resources in file-sharing applications. PACE implementations  for other domains, such as auction and collaboration, have already demonstrated  its feasibility.<br>  <br>  The goal of the project will be to incorporate the XREP approach into PACE  for the document-sharing domain. In particular, each peer will be built using  the PACE architectural style and will utilize the XREP reputation model to  determine the trustworthiness and reliability of a resource and the provider  before it is actually downloaded.<br>  <br>  This project offers several benefits:<br>  1. An introduction to component-based software architectures and styles.<br>  2. An introduction to the effects of decentralization and P2P.<br>  3. An introduction to trust and reputation management.<br>  4. Study of a P2P resource-sharing application.<br>  <br>  Features:<br>  The document-sharing application should<br>  - Conform to the PACE architectural style<br>  - Utilize the PACE and C2 frameworks, and the ArchStudio environment<br>  - Incorporate the XREP reputation approach with PACE<br>  - Provide a proper user-interface for both the document-sharing application  and XREP.<br>  <br>  - Help draw conclusions about<br>(a) the feasibility of using PACE in a resource-sharing domain, and<br>(b) the ease of incorporating the XREP reputation model into PACE.</p><p><a href="#index">Back to Index</a> </p><HR WIDTH="100%"><h4><a name="gxl1"></a>GXL Validator Plug-In</h4><UL>  <LI>offered by the Software Engineering Group of the ICS Department at UC Irvine  <LI>Customer Contacts: <a href="http://www.ics.uci.edu/%7Eses/">Susan Elliott      Sim</a> and Sukanya Ratanotayanon</UL><p>This project will deliver an &lt;http://www.eclipse.org/&gt;Eclipse plug-in  that is capable of validating a &lt;http://www.gupro.de/GXL/&gt;GXL document  to ensure correct GXL syntax, and of assisting the user in reparing the incorrect  syntax.The validation and repair will be done according to the standard GXL  version 1.0.</p><p>Background</p><p>A number of software re-engineering tools have been created for aiding programmer  in gaining high-level knowledge of software systems from source code. These  tools are usually designed for a specific purpose, and will work the best in  different cases. Consequently, using a combination of tools can provide a better  result than using a single tool because tools can offset weaknesses among each  other. Therefore, an ability to share data between tools is desired in order  to reduce duplicate work, or to allow comparison of results. However, data  interoperability among these tools is a challenge, as the tools normally have  their own local format for results which is incompatible with the other tools.</p><p>In order to solve this issue, &lt;http://www.gupro.de/GXL/&gt;Graph eXchange  Language (GXL) was created as a standard exchange format between software tools.  GXL is an XML-based language that supports data interoperability among tools  by providing a standard notation to represent data and its meaning (schema).  A number of GXL converters are created by for converting a result file in a  tool's proprietary format to GXL format and vice versa, e.g. rsf2gxl, gxl2svg.  In summer of 2004, the MRS.G project developed a set of &lt;http://www.eclipse.org/&gt;Eclipse  plug-ins to facilitate working with GXL files and converters. The plug-ins  include a GXL editor, Converter Integration Framework, and a series of converter  plug-ins. Results from this project show that some converters do not produce  a result file that conform to the GXL standard. Also, the resulting files can  not be used as an input to another converters or other tools. Also, a errors  can creep in when a user modifies a GXL file in an editor. In order to solve  this problem, a plug-in that is able to detect errors and assist a user in  reparing the errors is needed.</p><p>Project Description</p><p>The GXL Validator Plug-in will build on the existing MRS. G plug-ins and source  code. It should be able to interoperate with an existing GXL editor. The new  plug-in should capable of validating an existing GXL file, or a file generated  by the converter plug-ins in order to check whether it conform to the GXL standard.  The plug-in should also assist a user in repairing the errors. For example,  the editor should be extended to inform users about the location of errors,  and provide some suggestion about correction that can be made. Where the solution  for the error is obvious, it should be able to repair the file automatically  or interactively.</p><p>Features</p><p>The plug-in shall be able to validate GXL syntax<br>  It should be able to detect simple XML syntax errors such as unclosed quotes<br>  It should be able to detect specific GXL syntax errors such as missing required  attribute, or the use of unspecified keywords<br>  The GXL editor should be able to inform the user about errors<br>  Underline or otherwise highlight the error item in the active page<br>  Providing a mark at the beginning of the line, or in the file icon on eclipse  views to show the location of the error (like the way Eclipse show errors in  a Java file)<br>  Providing help in correcting the errors<br>  Provide hints for an error that has multiple solutions<br>  Provide automatic correction for a simple and obvious mistake such as unclosed  quotes<br>  Some patterns of errors are common such as ones that created by a converter.  For a known error pattern, it should provide the user a choice of auto correction  of the entire file.<br>  Allow the user to choose whether to validate or repair the file for a specific  convertor. Some files may not have syntax errors, but are not suitable to be  used as input for a specific converter. For example, a file without the name  of nodes specified will be useless to use as an input for a gxl2svg converter  as the result will show only blank boxes. For these known issues, provide correction  hints or auto correction for those GXL files.</p><p>Constraints</p><p>The validator should be written in Java and should use an existing data binding  component created in MRS. G project. The source code for the component and  GXL editor will be made available.</p><p>Notes</p><p>The user interface of the validation should be like the similar to the Eclipse  JDT with syntax checking of Java file</p><p>Resources</p><p>&lt;http://www.gupro.de/GXL/&gt;GXL website<br>&lt;http://www.eclipse.org/&gt;Eclipse Website<br>&lt;http://eclipse-wiki.info/PDE&gt;Information on the Eclipse Plug-in DevelopmentEnvironment (PDE)<br>&lt;http://www.cs.umanitoba.ca/~eclipse/&gt;Eclipse tutorial website<br>&lt;http://calla.ics.uci.edu&gt;Galen Lab Home Page<br>&lt;http://mrsg.tigris.org&gt;MRS.G Development Site on tigris.org</p><p><a href="#index">Back to Index</a> </p><HR WIDTH="100%"><h4><a name="gxl2"></a>GXL Visualization Plug-in</h4><UL>  <LI>offered by the Software Engineering Group of the ICS Department at UC Irvine  <LI>Customer Contacts: <a href="http://www.ics.uci.edu/%7Eses/">Susan Elliott  Sim</a> and Sukanya Ratanotayanon  </UL><p>This project will deliver an &lt;http://www.eclipse.org/&gt;Eclipse plug-in  that is capable of visualizing a &lt;http://www.gupro.de/GXL/&gt;GXL document  that is currently open in MRS.G's GXL editor. The visualization shall depict  the diagram as a graph, i.e. a collection of nodes and edges. The visualization  should be editable and the changes made in the visualization should be reflect  in the source GXL document.</p><p>Background</p><p>A number of software re-engineering tools have been created for aiding programmers  in gaining high-level knowledge of software systems from source code. These  tools are usually designed for a specific purpose, and will work the best in  different cases. Consequently, using a combination of tools can provide a better  result than using a single tool because tools can offset weaknesses among each  other. Therefore, an ability to share data between tools is desired in order  to reduce duplicate work, or to allow comparison of results. However, data  interoperability among these tools is a challenge, as the tools normally have  their own local format for results which is incompatible with the other tools.</p><p>In order to solve this issue, &lt;http://www.gupro.de/GXL/&gt;Graph eXchange  Language (GXL) was created as a standard exchange format between software tools.  GXL is an XML-based language that supports data interoperability among tools  by providing a standard notation to represent data and its meaning (schema).  A number of GXL converters are created by for converting a result file in a  tool's proprietary format to GXL format and vice versa, e.g. rsf2gxl, gxl2svg.  In summer of 2004, the MRS.G project developed a set of &lt;http://www.eclipse.org/&gt;Eclipse  plug-ins to facilitate working with GXL files and converters. The plug-ins  include a GXL editor, Converter Integration Framework, and a series of converter  plug-ins. Results from this project show that some converters do not produce  a result file that conform to the GXL standard. Also, the resulting files cannot  be used as an input to another converters or other tools. Also, a errors can  creep in when a user modifies a GXL file in an editor. In order to solve this  problem, a plug-in that is able to detect errors and assist a user in reparing  the errors is needed.</p><p>Project Description</p><p>The project will extend an existing MRS.G project, and should be able to interoperate  with an existing GXL editor and XML Beans for handling GXL documents. The new  plug-in should capable of creating a graph visualization for an active GXL  document opened in the GXL editor. The visualization should be editable and  changes should be reflected in the source docuemnt.</p><p>Features</p><p>The plug-in shall be able to visualize the graph represented by the GXL document<br>  The visualization should be able to manage the layout of the graph in an understandable    fashion<br>  The user should be able to select to visualize a specific portion of the document  (For example, a GXL file may be very large, so the user should be able to select  to visualize only nodes and edges that have references to a selected node)<br>  It should allow the user to zoom in, zoom out or resize the graph in case that  the graph is too big or too small for the display<br>  The visualization should be able to show selected properties of nodes and edges<br>  The visualization should be editable<br>  The user should be able to edit properties of nodes and edges through the visualization  such as their names<br>  The user should be able to delete unwanted nodes or edges<br>  Changes in visualization should propergate to the souce document correctly,  e.g. when a node is deleted the references and its elements should also be  deleted</p><p>Constraints</p><p>The visualization should seamlessly integrated into Eclipse environment and  the existing MRS.G component<br>  The validator should be written in Java and should use an existing data binding  component created in MRS. G project. The source code for the component and  GXL editor will be made available.</p><p>Notes</p><p>There are a libraries that will perform graph layout available on the web.  These packages should be considered before implementing graph layout algorithms  from scratch.<br>  The most difficult portion of this assignment is like maintaining consistency  between the editor and the visualization. Ensuring that edits in the visualizer  are reflected in the text document, and vice versa, is a challenging problem.<br>  The cusomter will be able provide examples of good visualization tools to the  team. These examples can serve as a source for ideas. It's possible, although  not certain, that some of these can serve as a starting point for the GXL Visualization  plug-in.</p><p>Resources</p><p>&lt;http://www.gupro.de/GXL/&gt;GXL website<br>&lt;http://www.eclipse.org/&gt;Eclipse Website<br>&lt;http://eclipse-wiki.info/PDE&gt;Information on the Eclipse Plug-in DevelopmentEnvironment (PDE)<br>&lt;http://www.cs.umanitoba.ca/~eclipse/&gt;Eclipse tutorial website<br>&lt;http://calla.ics.uci.edu&gt;Galen Lab Home Page<br>&lt;http://mrsg.tigris.org&gt;MRS.G Development Site on tigris.org</p><p><a href="#index">Back to Index</a> </p><HR WIDTH="100%"><h4><a name="music" id="music"></a>New Computer-based Choral Musical Score Display</h4><UL>  <LI>offered by the Institute for Software Research at UC Irvine  <LI>Customer Contacts: Dr. Alex F.      Metherell  and    Professor Richard Taylor </UL><p>Objective: Develop a desktop application and server to present choral musical  scores in a completely new and vastly simplified method of displaying and communicatingmusical choral scores to a choir (and ultimately to different performers.)</p><p>Background</p><p>The method of presenting musical scores in the form of sheet music, with its  attendant complex and abstract notation, has remained relatively unchanged  for hundreds of years. Computers have mostly only been used to write music  using a computer so that a finished musical score can be printed out looking  the same way scores looked 150 years ago. No attempt has been made to use computers  to change the appearance and hence the method of communicating the composer&rsquo;s  intent to the performer. The page of music displayed on the computer screen  looks identical to the same page of music composed 150 years ago. To someone  not schooled and trained in music theory as a musician the notations written  on the page are very abstract; they are not intuitive; are incomprehensible  to a non-musician and are literally medieval.</p><p>The purpose of this project is to revolutionize the way a musical score is  communicated to the performer in an intuitive manner so that he or she will  have a much faster learning curve on a new piece of music at the same time  being able to significantly improve the quality of the performance.</p><p>Project Description</p><p>The project will produce a simplified feasibility demonstration of the computer-based  scoring and display system. The demonstration system will simulate what the  ultimate operational system will look like and how it will perform to convey  the musical information to the performer(s). One or more choral pieces for  at least 4 voices (Soprano, Alto, Tenor and Bass) will be displayed and &ldquo;played&rdquo; in  real time with each voice on a separate LCD notebook display.<br>  Time permitting, additional features will be added that will include the following:<br>  1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The computer will provide each voice with  a quiet pitch tone to the respective singer&rsquo;s ear one beat or one bar  before the singer voices the note so that they will get the right pitch.<br>  2.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The computer will play a louder note in real-time  in synchronization with the part the signer is performing.<br>  3.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; A throat microphone on the singer&rsquo;s  neck will allow the singer to phonate the tone (almost silently with mouth  closed) before coming in and during the singing so that a real-time &ldquo;pitch  meter&rdquo; on the screen can display an indication to the singer whether  they are under or over pitched.<br>  4.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Instead of musical notes, as used in conventional  scores, the notes will be displayed as lines that scroll across the screen  much like an old fashioned scroll in a player piano. Each note to be sung will  be on a horizontal line corresponding to one note on a piano keyboard (white  or black.)<br>  5.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The moving lines that represent the notes  will vary in width according to the loudness with which they are to be sung.<br>  6.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The tonal quality, whether bright or mellow,  will be designated by whether the line has a fuzzy or a smooth edge. (Change  of color of the line, e.g. red to blue could alternatively be used.)<br>  7.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The words of the choral piece will accompany  the moving lines as they scroll across the screen.<br>  8.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The exact timing of the entry and exit of  a note is designated by when the horizontally scrolling note line hit a stationary  vertical time marker on the screen.<br>  9.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The consonants in the words, which are important  to making a sung word intelligible to the listener, will be designated in the  score line by a narrow broadening of the line at the appropriate timing.<br>  10.&nbsp; A real-time TV image of the musical director (conductor) will appear  as a desktop image behind the musical display so the singer&rsquo;s eyes are  constantly seeing the conductor while reading the computer score.</p><p>Constraints</p><p>Must use standard off-the-shelf hardware consisting of a PC server connecting  to a number (at least 4) LCD displays or notebooks with displays that can be  exactly synchronized with server.</p><p>Notes</p><p>Contact the customer for additional information</p><p>Alex Metherell<br>  E-mail: Alex.Metherell@cox.net</p><p><a href="#index">Back to Index</a> </p><HR WIDTH="100%"><h4><a name="blah"></a>Blah Blah Blah: A Content Creation Infrastructure In Support Of Speech-BasedLocation-Aware Mobile Phone Gaming</h4><p>Clients:<br>  <a href="http://www.ics.uci.edu/%7Ewmt">Bill Tomlinson</a>, Assistant Professor of Informatics and Drama<br>  Robert Nideffer, Associate Professor of Studio Art and Informatics</p><p>In recent years mobile phones have become common in the US, and games for  these phones have flourished. Currently, mobile gaming is focused almost exclusively  around using the phone as a miniature computer, where buttons provide the primary  input mechanism and a tiny screen displays the output. This paradigm is at  odds with the core functionality of the telephone &ndash; voice input and output.  We are convinced that there could be a whole new generation of games better  utilizing voice technology.</p><p>The project involves prototyping an interactive adventure game using a voice-driven  interface on location-aware mobile phones. The ICS 125 team would work to design  back-end support for connecting a GPS-enabled mobile phone to both a speech  recognition system (e.g., Sphinx, http://cmusphinx.sourceforge.net/) and a  text-to-speech system (e.g., FreeTTS, http://freetts.sourceforge.net/). The  processing between these two systems would be based on the GPS data from the  phone.</p><p>A simple interaction might take the following form. A person calls a certain  phone number to begin the game. She then walks around campus. When she passes  a certain set of GPS coordinates (for example, the front of the Science Library),  her phone says 'You see a large book with an Anteater on the cover.' She replies,  'Get book.' The phone then tells her, 'You pick up the book.' She then says  'Inventory,' and the phone responds 'You have a large book with an Anteater  on the cover.'</p><p>While this interaction is very simple, a system that can perform in this way  will allow for the creation of much more complex mobile games and other interactive  experiences. Ideally the project will be designed to allow ease of content  creation so additional game modules can be relatively quickly built and deployed.</p><p>Features:<br>  Speech recognition<br>  Speech synthesis<br>  GPS data transfer from phone to base station<br>  Database of locations/objects and game state tracking<br>  System to generate the content that will be synthesized into speech</p><p><a href="#index">Back to Index</a> </p><HR WIDTH="100%"><h4><a name="3d"></a>New True 3-D Digital Display System</h4><UL>  <LI>offered by the Institute for Software Research at UC Irvine  <LI>Customer Contact: Dr. Alex F. Metherell  </UL><p>Objective: Develop software for a digital display system for use in digital  image displays (e.g. notebook screens, medical imaging displays, TVs, etc.)        that will allow the user to view a true stereoscopic pair of images withoutwearing any devices on the viewers head. </p><p>Background</p><p>Most computer and medical imaging displays that purport to show 3-D images  actually only show a 2-D projection of a 3-D object.&nbsp; A good example of  this is bar chart with 3 variable axes instead of 2 which is projected into  the 2 dimensional plane of the display.</p><p>Human vision perceives three dimensional space by presenting the brain with  a stereo-pair of images.&nbsp; This is how depth perception is obtained.&nbsp; To  view on a notebook screen or TV plasma display, etc. one eye must be able to  see one of the stereo-pair images and the other eye must see only the other  stereo-pair images with no cross-over between them.&nbsp; This has typically  been done by alternately displaying each image on the screen while alternately  shuttering a polarizing shutter over each eye of the viewer.</p><p>Project Description</p><p>This new approach that will not encumber the person viewing the screen with  any devices on their person will use a very fine lenticular screen superimposed  on the face of the display. The lenticular screen is made up of tiny cylindrical  lenses positioned vertically side-by-side with a pitch equal to one lens every  2 pixels (or multiples thereof) horizontally such that the left eye will see  only the even numbered pixels while the right eye sees only the odd numbered  pixels (or visa versa.) The cylindrical lenses of the lenticular screen spreads  the pixels out so that a complete but different image is seen by each eye.&nbsp; When  the person is positioned at the right distance from the screen and positioned  correctly in a horizontal position a full stereo pair of images will be viewed  with full depth perception.</p><p>The purpose of this project is to develop the software that controls the video  display card of the display that will take the input of a stereo-pair of images  and interdigitate them so that one of the images is on the horizontally odd-numbered  pixels and the other image is on the even-numbered pixels.</p><p>Constraints: Must use standard off-the-shelf hardware consisting of a PC  with an LCD or plasma display.</p><p>Notes: Contact the customer for additional information</p><p>Alex Metherell<br>  E-mail: <a href="mailto:alexm@ics.uci.edu">alexm@ics.uci.edu</a></p><p><a href="#index">Back to Index</a> </p><P><hr><h4><a name="genome"></a>Jave-based Genome Browser for Mitochondrial DNA.</h4><UL>  <LI>offered by the Institute for Genomics and Bioinformatics at UC Irvine  <LI>Customer Contact: Professors Pierre Baldi and  Wallace </UL><p>MItochondria are semi-autonomous organelles existing within each one of our  cells which are involved in energy production (the &quot;power plants&quot; of  the cell). They have relatively short genomes consisting of 16,500 letters  over the four-letter DNA alphabet. The genome contains 13 genes and several  hundred positions that are variable across the human population. The goal of  the project is to build a Jave-based browser of the mitochondrial genome that  would allow one to zoom in and out of any region along the genome and view  the corresponding annotations. Such a toold could be used by scientists in  different fields from biology, to medicine, to anthropology, and even to forensic  science. The project would be carried in close collaboration with the groups  of Dr. Baldi (ICS) and Dr. Wallace (College of Medicine).</p><p><a href="#index">Back to Index</a> </p><HR><A HREF="http://www.ics.uci.edu/%7Etaylor/ICS125_FQ04/syllabus.html">ICS125FQ04<BR></A><A HREF="http://www.ics.uci.edu/%7Etaylor/">Richard N. Taylor<BR></A><A HREF="http://www.ics.uci.edu/">School of Information and ComputerSciences<BR></A><A HREF="http://www.uci.edu/">University of California, Irvine CA 92697-3425</A></P></BODY></HTML>