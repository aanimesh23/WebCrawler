<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<!-- TemplateBeginEditable name="doctitle" -->
<title>ICS 10 Topics</title>
<!-- TemplateEndEditable -->
<!-- TemplateBeginEditable name="head" -->
<!-- TemplateEndEditable -->
<link href="/~kay/courses/10/mainstyle.css" rel="stylesheet" type="text/css" />
</head>

<body>
<h5>ICS 10 • David G. Kay • UC Irvine</h5>
<h1>Overview of Course Topics</h1>
<p>Below is a rough list of the topics
we covered this term.  </p>
<OL TYPE="I">
<LI>
Fundamental concepts<BR />
<OL TYPE="A">
  <LI>
    Hardware, software, data, algorithm, program<BR />
  </LI>
  <LI>
    Source code (human-prepared, e.g., Snap or
      HTML) vs. interpreted code (e.g., rendered web page) or object (executable,
      machine language) code; the idea of open-source software distribution vs. cloud distribution vs. conventional distribution of object code only<BR />
  </LI>
  <LI>Efficiency (of human time and of computational resources); algorithms for the same task can have vastly different efficiency<BR />
    <BR />
</LI>
  </OL>
</LI>
<LI>Programming in Snap<br />
  <ol type="A">
    <li> Using the Snap environment</li>
    <li>Categories of Snap blocks</li>
    <li>Defining new blocks (procedures/functions/subroutines) with parameters</li>
    <li>Defining and manipulating lists </li>
  </ol>
</LI>
    <BR />

<LI>
  Forms of information<BR />
  <OL TYPE="A">
    <LI>
      Models and abstraction: hiding unnecessary detail<BR />
      </LI>
    <LI>
      Representing information in computers<BR />
      <OL TYPE="1">
        <LI>
          Bits and bytes; ASCII; numbers as ASCII, binary
            numbers, BCD; size and scale (KB, MB, GB, TB, ...)<BR />
          </LI>
        <LI>
          Digitizing pictures (and other real-world information)<BR />
          <OL TYPE="a">
            <LI>
              Sampling, quantization, color; resolution and
                bit depth<BR />
              </LI>
            </OL>
          </LI>
        </OL>
      </LI>
    <LI>
      Compression and redundancy<BR />
      <OL TYPE="1">
        <LI>
          Lossless vs. lossy; syntactic vs. semantic<BR />
          </LI>
        <LI>
          Delta encoding, run-length encoding</LI></OL>
        <LI> Information visualization (Edward Tufte)<br />
          <ol type="1">
            <li>Accurate representation; multidimensional visualizations; focus on data rather than decoration or infrastructure </li>
            <li>Potential consequences of good or bad visualization (London cholera, space shuttle)</li>
          </ol>
        </LI>
        <LI> Typography</LI>
        <LI>Why natural language understanding is a hard problem to solve<br />
          <BR />
        </LI>
  </OL>
</LI>
<LI>
  The Internet<BR />
  <OL TYPE="A">
    <LI>
      Services:  World-Wide Web, Email, file transfer/ftp,
      telnet (remote login), chat/IM, VOIP<BR />
      </LI>
    <LI>
      Client machines, server machines, network backbone;
      what contributes to delays<BR />
      </LI>
    <LI>
      Decentralized design; packet switching vs.
      circuit switching<BR />
      </LI>
    <LI>
      The Web<BR />
      <OL TYPE="1">
        <LI>
          Web browsers, concept of HTML, URLs, domain
          names<!--, WYSIWYG web editors--></LI>
        <LI>Operation of search engines like Google<br />
          <BR />
        </LI>
        </OL>
      </LI>
    </OL>
</LI>
<LI>
Computer characteristics and organization (including
the Deus X)<BR />
<OL TYPE="A">
  <LI>
    Memory, registers, instruction format<BR />
  </LI>
  <LI>
    Sequential execution of instructions (instruction cycle: fetch,
      decode, execute)<BR />
  </LI>
  <LI>
    Storage hierarchy (registers, RAM, secondary
      storage, e.g., disks); relative capacity vs. access time of various media; direct
      or random access storage (e.g., RAM, disks or CDs) vs. sequential access (e.g.,
      tapes)<BR />
  </LI>
  <LI>
    Operating systems:  managing computational
      resources<BR />
      <OL TYPE="1">
            <LI>
                process control (multitasking/timesharing),
                  security/authentication (what you know/have/are), memory management (virtual
            memory), file management</LI>
            <LI>Backup schemes<BR />
            </LI>
        <LI>
              User interface:  GUI vs. command-line<BR />
          </LI>
        </OL>
  </LI>
  <LI>
    Machine-level vs. high-level programming languages:
      Going from a problem description to an executable program, how much is
      done automatically?  Procedural (how) vs. non-procedural (what)</LI>
  <LI>Parallelism (concurrency): Splitting tasks among multiple processors, the inherent sequentiality of some tasks (e.g., elephant gestation) that prevents parallelism<BR />
  </LI>
</OL>
<br />
<LI>
  Other areas of computer science<BR />
  <OL TYPE="A">
    <li>Human-computer interaction, user interfaces
      (ease of learning vs. ease of use, recognition vs. recall)<br />
    </li>
    <li> Pattern recognition and less-than-perfect matching; heuristics (e.g., weighted scoring of non-matching pixels in optical character recognition)</li>
<!--    <li>Artificial intelligence and the Turing Test<br />
</li>
-->
</OL><br />
<li> Social and legal impact of computing<br />
  <ol type="A">
    <li> Intellectual property law overview</li>
    <li>Fair information practices (privacy)</li>
    </ol>
  <br />
</li>
<LI>Maxims<BR />
    <OL TYPE="A">
      <LI> People time is more expensive than computer
        time<BR />
      </LI>
      <LI> Electronic components are faster, cheaper,
        smaller, and more reliable than mechanical ones</LI>
    </OL>
  </LI>
</OL>
</LI>
</OL><p>&nbsp;</p>
</body>
</html>
