<html><head><meta http-equiv="Content-Type"content="text/html; charset=iso-8859-1"><meta name="GENERATOR" content="Microsoft FrontPage 6.0"><title>Mechanism:</title></head><body bgcolor="#FFFFFF"><h2>Mechanism: Source Transformations</h2><h3>Intent</h3><blockquote>    <p>Source transformations, like <a    href="binary-transformations.html">binary transformations</a>,    rewrite portions of an application to introduce new    functionality. The difference is that source transformations    operate on the source code whereas binary transformations    operate at the object or machine code.</p></blockquote><h3>Also Known As</h3><blockquote>    <p>Source patch files.</p></blockquote><h3>Motivation</h3><blockquote>    <p><em>A scenario that illustrates a problem and how the    different elements of the mechanism solve the problem. The    scenario will help you understand the more abstract    description of the mechanism below. </em></p></blockquote><h3>Applicability</h3><blockquote>    <p><em>What are the situations in which the mechanism can be    applied? What are examples of poor designs that the mechansim    can address? How can you recognize these situations? </em></p>    <ul>        <li><em>An applicable situation </em></li>    </ul></blockquote><h3>Participants</h3><blockquote>    <p>The elements participating in the mechanism and their    responsibilities. </p>    <ul>        <li>Participant Name: Responsibility for what </li>    </ul></blockquote><h3>Collaborations</h3><blockquote>    <p>How the participants collaborate to carry out their    responsibilities. </p>    <ul>        <li>[Collaboration] </li>    </ul></blockquote><h3>Consequences</h3><blockquote>    <p>Source transformations have the following benefits:</p>    <ol>        <li>They are composable.</li>        <li>They act as application-level behavior mix-ins.</li>        <li>They simplify analysis.</li>    </ol>    <p>Source transformations have the following limitations:</p>    <ol>        <li>They require access to source code.</li>        <li>They confound debugging.</li>    </ol></blockquote><h3>Implementation</h3><blockquote>    <p><em>What pitfalls, hints, or techniques should you be    aware of when implementing the mechanism? Are there    language-specific issues? </em></p>    <ol>        <li><em>Description of Bullet </em></li>    </ol></blockquote><h3>Known Uses</h3><blockquote>    <p><a href="http://www-ccsl.cs.umass.edu/~jack/">Jack C.    Wileden</a>'s PolySpin and JavaSpin are examples of the    source transformation mechanism. Refine is a second example.</p></blockquote><h3>Related Mechanisms</h3><blockquote>    <p>?</p></blockquote><hr><p><a href="http://www.ics.uci.edu/~peymano/adaptation/"><em>Backto the Adaptation home page</em></a><em>. This page maintained byPeyman Oreizy </em>(<a href="mailto:peymano at ics.uci.edu">peymano at ics.uci.edu</a>).Last updated on <!--#flastmod virtual = "template.html" -->.</p></body></html>ï¿½