<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE html PUBLIC
 "-//W3C//DTD XHTML 1.1//EN"
 "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">

<head>
<meta http-equiv="content-type" content="text/html; charset=iso-8859-1" />
<link rel="stylesheet" href="../course2.css" type="text/css" />

<title>COSMOS Summer 2006, Lab Exercise 6: Finding Similar Sequences in Real Data</title>
</head>
<body>

<div class="navbar">

<p>
COSMOS Summer 2006 |
<a href="../index.html">Index</a> |
<a href="http://www.ics.uci.edu/~thornton/">About Alex</a>
</p>

<hr />

</div>

<div class="header">

<p>COSMOS Summer 2006<br />
   Lab Exercise #6: Finding Similar Sequences in Real Data</p>

</div>

<hr />

<div class="section">

<p class="title">Today's exercise</p>

<p>Recently, we've learned how to connect our Python programs to real-world data, by writing a function that reads DNA sequences from a FASTA file and returns a list of those sequences.  Today, we'll connect our sequence similarity algorithm from class to real data, running it on all pairs of DNA sequences in a FASTA file to find the pair of sequences that has the highest similarity score.</p>

<p>Alternatively, if you'd prefer to spend this time working on your project, you may choose to do that instead.  With the deadline approaching, there's no time for games and movies today, so please stay on task.</p>

</div>

<div class="section">

<hr />

<p class="title">Useful functions</p>

<p>Below are the functions we've written previously in lecture to read sequences from a FASTA file and to calculate sequence similarity for a pair of DNA sequences.</p>

<ul>
  <li><a href="ReadFASTAData.py">Function to read FASTA data</a></li>
  <li><a href="SequenceSimilarity.py">Function to calculate sequence similarity</a></li>
</ul>

<p>You may also find a use for other programs or functions you've written during previous lab sessions.</p>

</div>

<div class="section">

<hr />

<p class="title">Today's program</p>

<p>This morning, we'll just be building one program, which does the following:</p>

<ul>
  <li>First, it asks the user to supply the name of a FASTA file.</li>
  <li>Next, it reads the DNA sequences out of that file, storing them in a list.  (Note that our readSequencesFromFastaFile does this whole job, though you'll have to call it.)</li>
  <li>Then, it runs our sequence similarity algorithm on every <i>pair</i> of sequences.  (See below for some help on how to set that up.)</li>
  <li>Finally, print the sequence numbers of the pair with the highest similarity score.  For the purposes of reporting the result, count the sequences from 1, so that the first sequence is number 1, the second is number 2, and so on.</li>
</ul>

<p>Try to write the program step-by-step, as we've been doing in class, testing the steps as you go.  For testing purposes, it would be smart to create your own FASTA file with a few short sequences in it, so that you'll be able to work out the intended result by hand and verify that the program is working at each step.</p>

</div>

<div class="section">

<hr />

<p class="title">Looping through all pairs of sequences</p>

<p>A common pattern in programming is to iterate over all pairs of elements in some collection.  In our case, we want to iterate through the pairs of DNA sequences in a list of DNA sequences.  Recall how we used two "nested" loops (one inside the other) to iterate through the cells of our matrix in the sequence similarity algorithm; this allowed us to reach every cell, even though the matrix was two-dimensional.  Looping over pairs is similar, except that you don't want to handle pairs more than once each.  The following is an example of printing out each pair of numbers in a list of numbers:</p>

<pre>
    numbers = [10, 30, 20, 50, 40]

    for i in range(0, len(numbers)):
        for j in range(i+1, len(numbers)):
            print numbers[i], numbers[j]
</pre>

<p>Type this code into the Python interpreter and notice how all the pairs are shown, but no pair of numbers appears twice.  (For example, the pair "10 20" is shown, but "20 10" is not.)</p>

<p>You'll need to use a similar pattern when you loop through the pairs of sequences, calling the sequence similarity algorithm on each pair instead of printing them out.</p>

</div>

<div class="section">

<hr />

<p class="title">Finished early?</p>

<p>If you're done with the assignment, spend the remaining time working on your projects.</p>

</div>

<div class="history">

<hr />

<ul class="nomarker">
  <li>Originally written by Alex Thornton, Summer 2006.</li>
</ul>

</div>

</body>
</html>
