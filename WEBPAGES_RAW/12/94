<!DOCTYPE html PUBLIC "-//IETF//DTD HTML 2.0//EN">
<html>
<head>
<title>Workshop on Cloud Security, February 18, 2015</title>
<script type="text/x-mathjax-config">
MathJax.Hub.Config({
  tex2jax: {inlineMath: [['$','$'], ['\\(','\\)']]}
});
</script>
<script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML">
</script>
</head>
<body>
<a href="/~theory/"><img src="http://www.ics.uci.edu/~theory/logo/CATOC2.jpg"></a>
<h2><a href="/~theory/workshop/">Workshop on Cloud Security</a><br>
Donald Bren Hall, Room 4011

<hr />
2:15-3:00pm:</h2>
<h1>
Defending against Resource Depletion Attacks in Multi-tenant Distributed
Systems
</h1>
<h2>
Rodrigo Fonseca, Brown University
</h2>

<p>
In cloud systems shared by multiple tenants, effective
resource management is an important pre-requisite to providing
quality of service guarantees, and to defend against denial of
service attacks. Many systems deployed today lack
performance isolation and experience contention, slowdown, and
outages caused by aggressive workloads or by improperly throttled
maintenance tasks such as data replication.

<p>
In this talk we present Retro, a resource management framework for
shared distributed systems.  Retro monitors per-tenant resource
usage both within and across distributed systems, and exposes this
information to centralized resource management policies through a
high-level API.  A policy can shape the resources consumed by a
tenant using distributed control points, which enforce sharing and
rate-limiting decisions.

<p>
We demonstrate how it is feasible to cheaply compromise the performance
of target tenants, and how one can use Retro to write policies providing
fairness, and latency guarantees to high-priority tenants. We evaluate the
system on a Hadoop stack comprising HBase, Yarn, MapReduce, HDFS, and
Zookeeper.  Our
evaluation shows that Retro has low overhead, and achieves the
policies' goals, accurately detecting contended resources,
throttling tenants responsible for slowdown and overload, and fairly
distributing the remaining cluster capacity.

<p>
Bio:
Rodrigo Fonseca is an assistant professor at Brown University's Computer
Science Department. He holds a PhD from UC Berkeley, and prior to Brown was a
visiting researcher at Yahoo! Research. He is broadly interested in
networking,
distributed systems, and operating systems.  His research involves seeking
better ways to build, operate, and diagnose distributed systems, including
large-scale internet systems, cloud computing, and mobile computing. He is
currently working on dynamic tracing infrastructures for these systems, on
new ways
to leverage network programmability, and on better ways to manage energy
usage in mobile devices.
</body>
</html>

