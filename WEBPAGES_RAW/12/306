<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
<!--Converted with LaTeX2HTML 96.1 (Feb 5, 1996) by Nikos Drakos (nikos@cbl.leeds.ac.uk), CBLU, University of Leeds -->
<HTML>
<HEAD>
<TITLE>Summary of Contributions</TITLE>
<META NAME="description" CONTENT="Summary of Contributions">
<META NAME="keywords" CONTENT="conclusionpaper">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">
<LINK REL=STYLESHEET HREF="conclusionpaper.css">
</HEAD>
<BODY LANG="EN">
 <A NAME="tex2html40" HREF="node3.html"><IMG WIDTH=37 HEIGHT=24 ALIGN=BOTTOM ALT="next" SRC="http://www.ics.uci.edu/icons/next_motif.gif"></A> <A NAME="tex2html38" HREF="node1.html"><IMG WIDTH=26 HEIGHT=24 ALIGN=BOTTOM ALT="up" SRC="http://www.ics.uci.edu/icons/up_motif.gif"></A> <A NAME="tex2html32" HREF="node1.html"><IMG WIDTH=63 HEIGHT=24 ALIGN=BOTTOM ALT="previous" SRC="http://www.ics.uci.edu/icons/previous_motif.gif"></A>   <BR>
<B> Next:</B> <A NAME="tex2html41" HREF="node3.html">Future Work</A>
<B>Up:</B> <A NAME="tex2html39" HREF="node1.html">Conclusions and Future Work</A>
<B> Previous:</B> <A NAME="tex2html33" HREF="node1.html">Conclusions and Future Work</A>
<BR> <P>
<H1><A NAME="SECTION00110000000000000000">Summary of Contributions</A></H1>
<P>
This dissertation offers the following contributions:
<UL><LI>
<EM>Defining the Maxim of Uncertainty in Software
Engineering</EM>.  This maxim recognizes the abundance
of software uncertainties and their relations and
impacts on process decisions and risk management.
Also, as corollary, it is suggested that software
development include the search,
identification, modeling and management of software
uncertainties.<LI>
<EM>Defining an approach to explicitly model uncertainty
using software belief networks</EM>.  This approach
is anchored in a Bayesian interpretation of relationships
and dependencies among software artifacts.  It includes
notions of human judgment, confidence, belief, and evidence,
often ignored by software modeling techniques.<LI>
<EM>Implementing the SoftBayes Java applet</EM>.
This applet allows software systems to be defined
as graphs of related artifacts and to be annotated
with uncertainty information.
Once defined, software belief networks are subject to
Bayesian updating, using a core engine such as provided
by <EM>JavaBayes</EM>.<LI>
<EM>Conducting a case study to substantiate the maxim above and
to evaluate the applicability of Bayesian belief networks
to a real software project</EM>.  Results of the CEquencer study
indicate that explicit
modeling of software uncertainties improves developers'
ability to identify and track changes to levels of
confidence in software artifacts and relations.<LI>
<EM>Finally, several confidence factors were identified
as influencing expert's beliefs in software requirements</EM>.
Recording those confidence factors is deemed beneficial
to future similar projects where requirements uncertainty
is captured explicitly.
</UL>
<P>
Several impediments
and limitations of our approach were observed, including
the initial cost of obtaining prior belief values, the
need to ensure that software belief networks retain
causality and variable independence, and the assumption
that software developers, domain experts, and related
project information are available and accessible.
<P>
Our experience in using Bayesian networks for software
uncertainty modeling, specifically for the CEquencer
system, indicates that:
<UL><LI>
The conceptual view of both software systems and Bayesian networks
as interrelated ``webs'' of nodes and links seems to offer a
convenient metaphor that also maps well into subsequent design
and implementation.  Specifically, early depictions of CEquencer
artifact webs were developed as Java applets and placed on the
World Wide Web (see&nbsp;[<A HREF="node10.html#Zivapplets">Ziv97</A>]);  these applets were
then viewed and reviewed by Beckman developers for accuracy
and relevancy.<LI>
The CEquencer system, like most other software, proved to be
fraught with uncertainties, thereby confirming our suspicions
for at least one real-life system.  Specifically, CEquencer
software embodies many, often subtle, problem domain
uncertainties, including uncertainties stemming from
laws of physics and chemistry in the software's operational
environment as well as from vaguely defined boundaries
between software versus hardware components.<LI>
Our notion of <EM>software uncertainties</EM> was
well received by Beckman developers, offering convenient
means in which to describe their confidences and beliefs
regarding CEquencer software.  The CEquencer requirements
analyst has recently incorporated confidence levels into
her requirements capture process.<LI>
The questionnaire session at Beckman revealed that,
for the given set of questions, a significant
difference between the means of the subjects' scores was
identified.  This suggests that subjects' ability to
answer the questions increased with the addition of
confidence level information.  This confirms a
statistically significant relationship between the
availability of confidence level information and
developers' ability to trace and track software
artifacts and related confidences.
</UL><HR><A NAME="tex2html40" HREF="node3.html"><IMG WIDTH=37 HEIGHT=24 ALIGN=BOTTOM ALT="next" SRC="http://www.ics.uci.edu/icons/next_motif.gif"></A> <A NAME="tex2html38" HREF="node1.html"><IMG WIDTH=26 HEIGHT=24 ALIGN=BOTTOM ALT="up" SRC="http://www.ics.uci.edu/icons/up_motif.gif"></A> <A NAME="tex2html32" HREF="node1.html"><IMG WIDTH=63 HEIGHT=24 ALIGN=BOTTOM ALT="previous" SRC="http://www.ics.uci.edu/icons/previous_motif.gif"></A>   <BR>
<B> Next:</B> <A NAME="tex2html41" HREF="node3.html">Future Work</A>
<B>Up:</B> <A NAME="tex2html39" HREF="node1.html">Conclusions and Future Work</A>
<B> Previous:</B> <A NAME="tex2html33" HREF="node1.html">Conclusions and Future Work</A>
<P><ADDRESS>
<I>Hadar Ziv <BR>
Fri Jun 20 16:25:19 PDT 1997</I>
</ADDRESS>
</BODY>
</HTML>
