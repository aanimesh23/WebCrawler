<BASE HREF="http://hidden-agenda/design7.html"> 

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"> <HTML>
<HEAD>
<TITLE>Protocol Design Document</TITLE>
<META NAME="Author" CONTENT="Chris Fuchs"> <META NAME="GENERATOR" CONTENT="Mozilla/3.0Gold (WinNT; I) [Netscape]"> </HEAD>
<BODY TEXT="#000000" BGCOLOR="#FFFFFF" LINK="#0080C0" VLINK="#004080" ALINK="#00FF40"> 

<H1 ALIGN=CENTER>Distributed Authoring and Versioning Protocol</H1> 

<CENTER><P><TT>Version 0.1</TT></P></CENTER> 

<CENTER><P><TT>Jim Cunningham (jfc@netscape.com)</TT></P></CENTER> 

<CENTER><P><TT>Asad Faizi (asad@netscape.com)</TT></P></CENTER> 

<CENTER><P><TT>Netscape Corp.</TT><BR>

<HR WIDTH="100%"><BR>
</P></CENTER>

<P><TT>This documents intends to address some of the issues with adding new distributed authoring and versioning functionality by implementing new methods. This is by no means a complete DAV spec. It only attempts to answer some of the questions regarding new methods. Netscape welcomes and appreciates any feedback on this document.</TT></P> 

<P><TT>Please send any comments to </TT><A HREF="mailto:asad@netscape.com">Asad Faizi</A> .</P>

<P>Thank you</P>

<P>
<HR WIDTH="100%"></P>

<CENTER><P><B><FONT COLOR="#000000"><FONT SIZE=+2>MetaData</FONT></FONT></B></P></CENTER> 

<CENTER><P>
<HR WIDTH="100%"></P></CENTER>

<TABLE BORDER=1 WIDTH="100%" >
<TR>
<TD>Function</TD>

<TD><B><FONT COLOR="#0000FF">Get Attribute Sheet</FONT></B></TD> </TR>

<TR>
<TD>Functional Definition</TD>

<TD>Retrieves a file representing the full attribute sheet (i.e. all available attributes) for the resource named by URL.</TD> </TR>

<TR>
<TD>Request</TD>

<TD>The <I>Method</I> is <B>GETATTRIBUTES</B>. <I>The Protocol</I> is <B>HTTP/1.1</B>. The <I>Request-URI</I> must correspond to the resource whose property sheet is requested.
<P>The <I>Request Header Fields</I> must include the following header in addition to those usually supplied:</P>

<UL>
<P><B>Content-Attributes</B> specifies the property whose value is needed. The user may specify a comma separated list of attributes or &quot;*&quot; if all the attributes are needed.</P>
</UL>

<UL>
<P><TT>Content-Attributes: attribute1, attribute2, attribute3,... | *</TT></P> </UL>
</TD>
</TR>

<TR>
<TD>Response</TD>

<TD>If the request is successful, the server must return the following Status-Code in the Status-Line of its response: <UL>
<LI>200 OK. Request successfull. The resource's property sheet is attached with the response.</LI>
</UL>

<P>The header of the response contains Content-Attribute followed by a comma separated list of &lt;attribute-name&gt; &lt;attribute-value&gt; pairs.</P>

<UL>
<P><TT>Content-Attributes: </TT>&quot;&lt;&quot;attribute-name&quot;&gt;&quot; &quot;&lt;&quot;attribute-value&quot;&gt;&quot; </P> </UL>

<P>separated by comma (,).</P>

<P>If the checkout is not successful, the server must return one of the following Status-Codes in the Status-Line of its response:</P> 

<UL>
<LI>400 Bad Request. A required header is missing or invalid, or the request is invalid. </LI>

<LI>401 Unauthorized. The request is valid, but the proper credentials have not been provided by the client. The server and client are required to follow all rules pertaining to HTTP Basic Authorization in this case. The client may either send a new request with the required credentials, or abort the attempt. </LI>

<LI>403 Forbidden. The client is forbidden to checkout the specified resource, possibly because revsision control is not enabled for it. </LI> 

<LI>404 Not Found. The resource or version of the resource specified by Request-URI was not found by the server. </LI> 

<LI>500 Server Error. The server encountered an internal error which prevented it from carrying out the request, or the required functionality is not implemented and the server is unaware of its existence. </LI> 

<LI>501 Not Implemented. The server does not implement functionality required by the given operation, and is aware that it cannot do so. </LI> </UL>
</TD>
</TR>
</TABLE>

<P>.</P>

<TABLE BORDER=1 WIDTH="100%" >
<TR>
<TD>Function</TD>

<TD><B><FONT COLOR="#0000FF">Set Attribute Sheet</FONT></B></TD> </TR>

<TR>
<TD>Functional Definition</TD>

<TD>Uploads editable attributes from the property sheet for the resource named by URL.</TD>
</TR>

<TR>
<TD>Rquest</TD>

<TD>The <I>Method</I> is <B>SETATTRIBUTES</B>. <I>The Protocol</I> is <B>HTTP/1.1</B>. The <I>Request-URI</I> must correspond to the resource whose property sheet is requested.
<P>The <I>Request Header Fields</I> must include the following header in addition to those usually supplied:</P>

<UL>
<P><B>Content-Properties</B> The user provides a comma separated list of &lt;attribute-name&gt; &lt;attribute-value&gt; pairs as the value of this header.</P>
</UL>

<UL>
<P><TT>Content-Properties: </TT>&quot;&lt;&quot;property name&quot;&gt;&quot; &quot;&lt;&quot;property value&quot;&gt;&quot; </P> </UL>
</TD>
</TR>

<TR>
<TD>Response</TD>

<TD>If the request is successful, the server must return the following Status-Code in the Status-Line of its response: <UL>
<LI>200 OK. Request successfull. The resource's property sheet is attached with the response.</LI>
</UL>

<P>If the checkout is not successful, the server must return one of the following Status-Codes in the Status-Line of its response:</P> 

<UL>
<LI>400 Bad Request. A required header is missing or invalid, or the request is invalid. </LI>

<LI>401 Unauthorized. The request is valid, but the proper credentials have not been provided by the client. The server and client are required to follow all rules pertaining to HTTP Basic Authorization in this case. The client may either send a new request with the required credentials, or abort the attempt. </LI>

<LI>403 Forbidden. The client is forbidden to checkout the specified resource, possibly because revsision control is not enabled for it. </LI> 

<LI>404 Not Found. The resource or version of the resource specified by Request-URI was not found by the server. </LI> 

<LI>500 Server Error. The server encountered an internal error which prevented it from carrying out the request, or the required functionality is not implemented and the server is unaware of its existence. </LI> 

<P>501 Not Implemented. The server does not implement functionality required by the given operation, and is aware that it cannot do so. </P> </UL>
</TD>
</TR>
</TABLE>

<P>.</P>

<H3 ALIGN=CENTER>
<HR WIDTH="100%"></H3>

<H3 ALIGN=CENTER><B><FONT SIZE=+2>Revision Control</FONT></B></H3> 

<CENTER><P>
<HR WIDTH="100%"></P></CENTER>

<TABLE BORDER=1 >
<TR>
<TD>Function</TD>

<TD><B><FONT COLOR="#0000FF">Checkout</FONT></B></TD> </TR>

<TR>
<TD>Functional Description</TD>

<TD>Retrieves a specified version of the resource named by URL, and may lock it for editing.</TD>
</TR>

<TR>
<TD>Request</TD>

<TD>The <I>Method</I> is <B>CHECKOUT</B>. <I>The Protocol</I> is <B>HTTP/1.1</B>. The <I>Request-URI</I> must correspond to the resource to checkout. <P>The <I>Request Header Fields</I> must include the following header in addition to those usually supplied:</P>

<UL>
<P><B>Content-Lock</B> specifies the status of lock. The user may define the if the checked-out resource should be locked, in which case the value of Content-Lock is ON, otherwise Off.</P> </UL>

<UL>
<UL>
<P><TT>Content-Lock: &quot;On&quot; | &quot;Off&quot; </TT></P> </UL>
</UL>

<P>The <I>Request Header Fields</I> must include only one of<B> </B>the following headers in addition to those usually supplied:</P> 

<UL>
<P><B>Content-Version</B> specifies the version tag of the resource to checkout. The value &quot;head&quot; indicates the default-published version, as in the case:</P>
</UL>

<UL>
<UL>
<P><TT>Content-Version: head</TT></P>
</UL>

<P><B>or</B></P>

<P><B>Content-Label</B> specifies a label, previously associated with a specific version of the resource, to identify the version for checkout.</P> 

<UL>
<P><TT>Content-Label: label</TT></P>
</UL>
</UL>
</TD>
</TR>

<TR>
<TD>Response</TD>

<TD>If the checkout is successful, the server must return the following <I>Status-Code</I> in the <I>Status-Line</I> of its response: <UL>
<LI><B>200 OK</B>. The resource was checked out (and a lock was established).</LI> </UL>

<P>It must also return the following response headers, if they are available:</P> 

<UL>
<P><B>Content-Version</B> specifies the version tag of the resource that was checked out. (&quot;head&quot; in the request should be translated to a specific version tag in the response).</P> 

<UL>
<P><TT>Content-Version: head</TT></P>
</UL>

<P><B>and/or</B></P>

<P><B>Content-Label</B> specifies any label which was previously associated with this specific version of the resource.</P> 

<UL>
<P><TT>Content-Label: label</TT></P>
</UL>
</UL>

<P>If the checkout is not successful, the server must return one of the following <I>Status-Codes</I> in the <I>Status-Line</I> of its response:</P> 

<UL>
<LI><B>400 Bad Request</B>. A required header is missing or invalid, or the request is invalid.</LI>

<LI><B>401 Unauthorized</B>. The request is valid, but the proper credentials have not been provided by the client. The server and client are required to follow all rules pertaining to HTTP Basic Authorization in this case. The client may either send a new request with the required credentials, or abort the attempt.</LI>

<LI><B>403 Forbidden</B>. The client is forbidden to checkout the specified resource, possibly because revsision control is not enabled for it.</LI> 

<LI><B>404 Not Found</B>. The resource or version of the resource specified by <I>Request-URI</I> was not found by the server.</LI> 

<LI><FONT COLOR="#000000"><B>500 Server Error</B>. The server encountered an internal error which prevented it from carrying out the request, or the required functionality is not implemented and the server is unaware of its existence.</FONT></LI>

<LI><FONT COLOR="#000000"><B>501 Not Implemented</B>. The server does not implement functionality required by the given operation, and is aware that it cannot do so. </FONT></LI>
</UL>
</TD>
</TR>
</TABLE>

<P>.</P>

<TABLE BORDER=1 >
<TR>
<TD>Function</TD>

<TD><B><FONT COLOR="#0000FF">Checkin</FONT></B></TD> </TR>

<TR>
<TD>Functional Description</TD>

<TD>Uploads a specified version of the resource named by URL, and unlocks it.</TD>
</TR>

<TR>
<TD>Request</TD>

<TD>The <I>method</I> is <B>CHECKIN</B>. The <I>Protocol</I> is <B>HTTP/1.1</B>. The <I>Request-URI</I> must correspond to the resource to checkin. <P>The <I>Request Header Fields</I> must include the following header in addition to those usually supplied:</P>

<UL>
<P><B>Content-Version</B> specifies the version tag of the resource to checkin. The user may specify a certain version or may use &quot;head&quot;. The value &quot;head&quot; indicates the default-published version, as in the case:</P>
</UL>

<UL>
<UL>
<P><TT>Content-Version: head | version-number</TT></P> </UL>

<P><B>Content-Lock</B> specifies the status of lock. The user may define the if the checked-in resource should be locked, in which case the value of Content-Lock is ON, otherwise Off.</P> 

<UL>
<P><TT>Content-Lock: &quot;On&quot; | &quot;Off&quot; </TT></P> </UL>

<P><B>Content-Comment</B> specifies the comments provided by the user to be associated with this particular version.</P> 

<UL>
<P><TT>Content-Comments: comments</TT></P> </UL>
</UL>
</TD>
</TR>

<TR>
<TD>Response</TD>

<TD>If the checkin is successful, the server must return the following <I>Status-Code</I> in the <I>Status-Line</I> of its response: <UL>
<LI><B>200 OK</B>. The resource was checked in (and a lock was removed).</LI> </UL>

<P>If the request is successful, the server must also return the following response headers, if they are available:</P> 

<UL>
<P><B>Content-Version</B> specifies the (possibly new) version tag of the resource that was checked in. (&quot;head&quot; in the request should be translated to a specific version tag in the response).</P> 

<UL>
<P><TT>Content-Version: version</TT></P> </UL>

<P><B>and/or</B></P>

<P><B>Content-Label</B> specifies any label which was previously associated with this specific version of the resource.</P> 

<UL>
<P><TT>Content-Label: label</TT></P>
</UL>
</UL>

<P>If the checkin is not successful, the server must return one of the following <I>Status-Codes</I> in the <I>Status-Line</I> of its response:</P> 

<UL>
<LI><B>400 Bad Request</B>. A required header is missing or invalid, or the request is invalid.</LI>

<LI><B>401 Unauthorized</B>. The request is valid, but the proper credentials have not been provided by the client. The server and client are required to follow all rules pertaining to HTTP Basic Authorization in this case. The client may either send a new request with the required credentials, or abort the attempt.</LI>

<LI><B>403 Forbidden</B>. The client is forbidden to checkin the specified resource, possibly because revsision control is not enabled for it, or no lock was previously established.</LI> 

<LI><B>404 Not Found</B>. The resource or version of the resource specified by <I>Request-URI</I> was not found by the server.</LI> 

<LI><FONT COLOR="#000000"><B>500 Server Error</B>. The server encountered an internal error which prevented it from carrying out the request, or the required functionality is not implemented and the server is unaware of its existence.</FONT></LI>

<LI><FONT COLOR="#000000"><B>501 Not Implemented</B>. The server does not implement functionality required by the given operation, and is aware that it cannot do so. </FONT></LI>
</UL>
</TD>
</TR>
</TABLE>

<P>.</P>

<TABLE BORDER=1 >
<TR>
<TD>Function</TD>

<TD><B><FONT COLOR="#0000FF">Unlock</FONT></B></TD> </TR>

<TR>
<TD>Functional Definition</TD>

<TD>Removes a lock from the specified version of the resource named by URL.</TD>
</TR>

<TR>
<TD>Request</TD>

<TD>The <I>method</I> is <B>UNLOCK</B>. The <I>Protocol</I> is <B>HTTP/1.1</B>. The <I>Request-URI</I> must correspond to the resource to unlock. <P>The <I>Request Header Fields</I> must include only one of<B> </B>the following headers in addition to those usually supplied:</P> 

<UL>
<P><B>Content-Version</B> specifies the version number of the resource be locked. The value &quot;head&quot; indicates the default-published version:</P> </UL>

<UL>
<P><TT>Content-Version: version</TT></P> 

<P><B>or</B></P>

<P><B>Content-Label</B> specifies a label, previously associated with a specific version of the resource, to identify the version locking.</P> 

<P><TT>Content-Label: label</TT></P>
</UL>
</TD>
</TR>

<TR>
<TD>Response</TD>

<TD>If the unlock is successful, the server must return the following <I>Status-Code</I> in the <I>Status-Line</I> of its response: <UL>
<LI><B>200 OK</B>. The resource was unlocked, or no lock had been previously established on it.</LI>
</UL>

<P>If the unlock is not successful, the server must return one of the following <I>Status-Codes</I> in the <I>Status-Line</I> of its response:</P> 

<UL>
<LI><B>400 Bad Request</B>. A required header is missing or invalid, or the request is invalid.</LI>

<LI><B>401 Unauthorized</B>. The request is valid, but the proper credentials have not been provided by the client. The server and client are required to follow all rules pertaining to HTTP Basic Authorization in this case. The client may either send a new request with the required credentials, or abort the attempt.</LI>

<LI><B>403 Forbidden</B>. The client is forbidden to unlock the specified resource, possibly because revsision control is not enabled for it.</LI> 

<LI><B>404 Not Found</B>. The resource or version of the resource specified by <I>Request-URI</I> was not found by the server.</LI> 

<LI><FONT COLOR="#000000"><B>500 Server Error</B>. The server encountered an internal error which prevented it from carrying out the request, or the required functionality is not implemented and the server is unaware of its existence.</FONT></LI>

<LI><FONT COLOR="#000000"><B>501 Not Implemented</B>. The server does not implement functionality required by the given operation, and is aware that it cannot do so. </FONT></LI>
</UL>
</TD>
</TR>
</TABLE>

<P>.</P>

<TABLE BORDER=1 >
<TR>
<TD>Function</TD>

<TD><B><FONT COLOR="#0000FF">Lock</FONT></B></TD> </TR>

<TR>
<TD>Functional Definition</TD>

<TD>Set a lock to the specified version of the resource named by URL.</TD> </TR>

<TR>
<TD>Request</TD>

<TD>The <I>method</I> is <B>LOCK</B>. The <I>Protocol </I>is <B>HTTP/1.1</B>. The <I>Request-URI</I> must correspond to the resource to be locked. <P>The <I>Request Header Fields</I> must include only one of the following headers in addition to those usually supplied:</P> 

<UL>
<P><B>Content-Version</B> specifies the version number of the resource be locked. The value &quot;head&quot; indicates the default-published version:</P> </UL>

<UL>
<P><TT>Content-Version: version</TT></P> 

<P><B>or</B></P>

<P><B>Content-Label</B> specifies a label, previously associated with a specific version of the resource, to identify the version locking.</P> 

<P><TT>Content-Label: label</TT></P>
</UL>
</TD>
</TR>

<TR>
<TD>Response</TD>

<TD>If the lock is successful, the server must return the following <I>Status-Code</I> in the <I>Status-Line</I> of its response: <UL>
<LI><B>200 OK</B>. The resource was locked, or lock had been previously established on it.</LI>
</UL>

<P>If the lock is not successful, the server must return one of the following <I>Status-Codes</I> in the <I>Status-Line</I> of its response:</P> 

<UL>
<LI><B>400 Bad Request</B>. A required header is missing or invalid, or the request is invalid.</LI>

<LI><B>401 Unauthorized</B>. The request is valid, but the proper credentials have not been provided by the client. The server and client are required to follow all rules pertaining to HTTP Basic Authorization in this case. The client may either send a new request with the required credentials, or abort the attempt.</LI>

<LI><B>403 Forbidden</B>. The client is forbidden to lock the specified resource, possibly because revsision control is not enabled for it.</LI> 

<LI><B>404 Not Found</B>. The resource or version of the resource specified by <I>Request-URI</I> was not found by the server.</LI> 

<LI><FONT COLOR="#000000"><B>500 Server Error</B>. The server encountered an internal error which prevented it from carrying out the request, or the required functionality is not implemented and the server is unaware of its existence.</FONT></LI>

<LI><FONT COLOR="#000000"><B>501 Not Implemented</B>. The server does not implement functionality required by the given operation, and is aware that it cannot do so. </FONT></LI>
</UL>
</TD>
</TR>
</TABLE>

<P>.</P>

<TABLE BORDER=1 >
<TR>
<TD>Function</TD>

<TD><B><FONT COLOR="#0000FF">Default</FONT></B></TD> </TR>

<TR>
<TD>Functional Definition</TD>

<TD>Makes the specified version of the resource named by URL the default-published version of that resource when a version is not explicitly specified (such as in response to a normal GET).</TD>
</TR>

<TR>
<TD>Request</TD>

<TD>The <I>method</I> is <B>DEFAULT</B>. The <I>Protocol</I> is <B>HTTP/1.1</B>. The <I>Request-URI</I> must correspond to the resource to make the head. 

<P>The <I>Request Header Fields</I> must include only one of<B> </B>the following headers in addition to those usually supplied:</P> 

<UL>
<P><B>Content-Version</B> specifies the version number of the resource to become default-published.</P>
</UL>

<UL>
<UL>
<P><TT>Content-Version: version</TT></P> </UL>

<P><B>or</B></P>

<P><B>Content-Label</B> specifies a label, previously associated with a specific version of the resource, to identify the version to become default.</P> 

<UL>
<P><TT>Content-Label: label</TT></P>
</UL>
</UL>
</TD>
</TR>

<TR>
<TD>Response</TD>

<TD>If the default is successful, the server must return the following <I>Status-Code</I> in the <I>Status-Line</I> of its response: <UL>
<LI><B>200 OK</B>. The version specified of the resource was made the default version, or it already was the default version.</LI> </UL>

<P>If the default is not successful, the server must return one of the following <I>Status-Codes</I> in the <I>Status-Line</I> of its response:</P> 

<UL>
<LI><B>400 Bad Request</B>. A required header is missing or invalid, or the request is invalid.</LI>

<LI><B>401 Unauthorized</B>. The request is valid, but the proper credentials have not been provided by the client. The server and client are required to follow all rules pertaining to HTTP Basic Authorization in this case. The client may either send a new request with the required credentials, or abort the attempt. This may occur if another user has a lock on the resource, or on the current default version of the resource.</LI> 

<LI><B>403 Forbidden</B>. The client is forbidden to default the specified version of the resource, possibly because revsision control is not enabled for it.</LI>

<LI><B>404 Not Found</B>. The resource or version of the resource specified by <I>Request-URI</I> was not found by the server.</LI> 

<LI><FONT COLOR="#000000"><B>500 Server Error</B>. The server encountered an internal error which prevented it from carrying out the request, or the required functionality is not implemented and the server is unaware of its existence.</FONT></LI>

<LI><FONT COLOR="#000000"><B>501 Not Implemented</B>. The server does not implement functionality required by the given operation, and is aware that it cannot do so. </FONT></LI>
</UL>
</TD>
</TR>
</TABLE>

<P><FONT SIZE=+1>.</FONT></P>

<TABLE BORDER=1 >
<TR>
<TD>Function</TD>

<TD><B><FONT COLOR="#0000FF">Revision Log</FONT></B></TD> </TR>

<TR>
<TD>Functional Definition</TD>

<TD>Returns information summarizing the version history and checkin/out logs of the resource named by URL.</TD>
</TR>

<TR>
<TD>Request</TD>

<TD>The <I>method</I> is <B>REVLOG</B>. The <I>Protocol</I> is <B>HTTP/1.1</B>. The <I>Request-URI</I> must correspond to the resource of which the log is requested.
<P>The <I>Request Header Fields</I> must include the following header in addition to those usually supplied. </P> 

<UL>
<P><B>Content-Log </B>The user may specify a particular revision number or &quot;*&quot; for all revisions of this particular resource, or X.Y.* for all the versions of the branch Y of root X.</P> </UL>

<UL>
<P><TT>Content-Log: RevNum | * | X.Y.*</TT></P> </UL>
</TD>
</TR>

<TR>
<TD>Response</TD>

<TD>If the log is successful, the server must return the following <I>Status-Code</I> in the <I>Status-Line</I> of its response: <UL>
<LI><B>200 OK</B>. The log is successfully returned.</LI> </UL>

<P>Server also returns a space seperated list of all the versions of the requested resource.</P>

<P>If the log is not successful, the server must return one of the following
<I>Status-Codes</I> in the <I>Status-Line</I> of its response:</P> 

<UL>
<LI><B>400 Bad Request</B>. A required header is missing or invalid, or the request is invalid.</LI>

<LI><B>401 Unauthorized</B>. The request is valid, but the proper credentials have not been provided by the client. The server and client are required to follow all rules pertaining to HTTP Basic Authorization in this case. The client may either send a new request with the required credentials, or abort the attempt.</LI>

<LI><B>403 Forbidden</B>. The client is forbidden to provide log of the specified resource, possibly because revsision control is not enabled for it.</LI>

<LI><B>404 Not Found</B>. The resource or version of the resource specified by <I>Request-URI</I> was not found by the server.</LI> 

<LI><FONT COLOR="#000000"><B>500 Server Error</B>. The server encountered an internal error which prevented it from carrying out the request, or the required functionality is not implemented and the server is unaware of its existence.</FONT></LI>

<P><FONT COLOR="#000000"><B>501 Not Implemented</B>. The server does not implement functionality required by the given operation, and is aware that it cannot do so. </FONT></P>
</UL>
</TD>
</TR>

<TR>
<TD>Note</TD>

<TD>Logs are different from Property Sheet information. Log refers to information pertaining to revision control aspects of the documents only.</TD> </TR>
</TABLE>

<P>.</P>

<TABLE BORDER=1 >
<TR>
<TD>Function</TD>

<TD><B><FONT COLOR="#0000FF">Label</FONT></B></TD> </TR>

<TR>
<TD>Functional Description</TD>

<TD>Associates a text label with a given version of a resource.</TD> </TR>

<TR>
<TD>Request</TD>

<TD>The <I>method</I> is <B>LABEL</B>. The <I>Protocol</I> is <B>HTTP/1.1</B>. The <I>Request-URI</I> must correspond to the resource of which the log is requested.
<P>The <I>Request Header Fields</I> must include the following headers in addition to those usually supplied:</P> 

<UL>
<P><B>Content-Version</B> specifies the specific version of the resource to which the label is to be applied.</P> 

<P><TT>Content-Version: version</TT></P> 

<P><B><TT>and</TT></B></P>

<P><B>Content-Label</B> is the label to be applied.</P> 

<P><TT>Content-Label: label</TT></P>
</UL>
</TD>
</TR>

<TR>
<TD>Response</TD>

<TD>If the label is successful, the server must return the following <I>Status-Code</I> in the <I>Status-Line</I> of its response: <UL>
<P><B>200 OK</B>. The label is successfully associated.</P> </UL>

<P>If the log is not successful, the server must return one of the following <I>Status-Codes</I> in the <I>Status-Line</I> of its response:</P> 

<UL>
<LI><B>400 Bad Request</B>. A required header is missing or invalid, or the request is invalid.</LI>

<LI><B>401 Unauthorized</B>. The request is valid, but the proper credentials have not been provided by the client. The server and client are required to follow all rules pertaining to HTTP Basic Authorization in this case. The client may either send a new request with the required credentials, or abort the attempt.</LI>

<LI><B>403 Forbidden</B>. The client is forbidden to perform lable operation to the specified resource, possibly because revsision control is not enabled for it.</LI>

<LI><B>404 Not Found</B>. The resource or version of the resource specified by <I>Request-URI</I> was not found by the server.</LI> 

<LI><FONT COLOR="#000000"><B>500 Server Error</B>. The server encountered an internal error which prevented it from carrying out the request, or the required functionality is not implemented and the server is unaware of its existence.</FONT></LI>

<P><FONT COLOR="#000000"><B>501 Not Implemented</B>. The server does not implement functionality required by the given operation, and is aware that it cannot do so. </FONT></P>
</UL>
</TD>
</TR>

<TR>
<TD>Note</TD>

<TD>Labels is not part of the meta data and hence not accessable through GETPROPERTY. It is very specific to revision control</TD> </TR>
</TABLE>

<H3 ALIGN=CENTER>
<HR WIDTH="100%"></H3>

<H3 ALIGN=CENTER><B><FONT SIZE=+2>File Management</FONT></B></H3> 

<CENTER><P>
<HR WIDTH="100%"></P></CENTER>

<TABLE BORDER=1 >
<TR>
<TD>Function</TD>

<TD><B><FONT COLOR="#0000FF">Index Directory</FONT></B></TD> </TR>

<TR>
<TD>Functional Description</TD>

<TD><FONT COLOR="#000000">Obtains an index of resources and their corresponding properties which reside beneath a given URI in the server's content store. One example is to obtain a list of files which reside in a server directory (or URI which ends with a / separator).</FONT></TD> </TR>

<TR>
<TD>Request</TD>

<TD><FONT COLOR="#000000">The request's Method must be INDEX. The Protocol must be HTTP/1.0. The Request-URI must correspond to the location of the resource which is requested to be indexed. </FONT> <P>The Request Header Fields may include the following header:</P> 

<UL>
<P><B>Content-Index</B> specifies a template for the index to follow, in order to include additional properties in the index response. For instance, including the following header with an index request:</P> </UL>

<UL>
<P><TT>Content-Index: &quot;filename&quot; &quot;content-type&quot; &quot;checked-in&quot;</TT></P> </UL>

<P>Instructs the server to return an index of the resources in the specified directory, listed with the resource's filename, content type, and its checked-in status. The client may request a list of available properties (to be included in a subsequent index request) by including the Content-Index header without any property values.</P>
</TD>
</TR>

<TR>
<TD>Response</TD>

<TD>If the server is able to index the given resource, it must return the following <I>Status-Code</I> in the <I>Status-Line</I> of its response: 

<UL>
<LI><B>200 OK</B>. This indicates that the response which follows contains a listing of objects contained in the specified resource, as well as their properties.</LI>
</UL>

<P>A successful response must include the following <I>Entity Header Field</I>:</P> 

<UL>
<LI><B>Content-type</B> must be set to the constant <B>text/plain</B>.</LI> </UL>

<P>The <I>Entity-Body</I> must consist of a series of lines, in ASCII&nbsp;text. Each line corresponds to a resource within the resource being indexed.</P> 

<P>If the request header <B>Content-Index </B>is included in the request with property parameters, the BNF&nbsp;for this response is defined as follows:</P>

<UL>
<P><TT>Entity-body = *(resource)</TT></P> 

<P><TT>[template [&quot;]property name[&quot;] [SP&nbsp;[&quot;]property name[&quot;] ...] (&nbsp;LF |&nbsp;CRLF&nbsp;)]</TT></P> 

<P><TT>resource = [SP&nbsp;[&quot;]property[&quot;] ...]( LF | CRLF )</TT></P> </UL>

<P>The first line, <TT>template</TT>, indicates the template which the index will follow for returning properties along with the resource description. This template line should be identical to the requested template line, although it is not a strict requirement (for instance, if the client requests an invalid property). The client should use the response template line to determine property names. If the <TT>template</TT> line is omitted, the default attributes are assumed to be of the form:</P> 

<UL>
<P><TT>template &quot;filename&quot; SP &quot;content-type&quot; SP&nbsp;&quot;size&quot; SP &quot;last-modification&quot; CRLF</TT></P> </UL>

<P>Following the single optional <TT>template</TT> line are the series of <TT>resource</TT> lines, one for each resource.</P> 

<P>The defined properties include:</P>

<UL>
<P>filename = The name of the resource, encoded using the <I>URL&nbsp;encoding rules</I>. For more information, refer to <A HREF="http://www.ics.uci.edu/pub/ietf/http/rfc1945">RFC 1945.</A> </P>

<P>content-type = The <I>MIME&nbsp;type</I> of the specified resource. The special keyword <B>directory</B> is used to designate filesystem directories or their equivalents.</P>

<P>size = The size in octets of the resource. The server may choose to respond with a single hyphen character (<B>-</B>) if it does not know the size of the resource.</P>

<P>last-modification = The date of last modification of this resource, specified as the number of seconds since January 1, 1970 00:00:00 UTC. The server may choose to respond with a single hyphen character (<B>-</B>) if it does not know the size of the resource.</P> 

<P>property = Any additional properties which the server chooses to include which represent meta-information about the resource.</P> </UL>

<P>For each<TT> </TT>property of a given <TT>resource</TT> which does not have a value, the value <TT>&quot;&quot;</TT> is returned.</P> 

<P>If the request header <B>Content-Index</B> is included in the request without any property parameters, such as in the case:</P> 

<UL>
<P><TT>Content-Index:</TT></P>
</UL>

<P>Then the response consists of a file of type text/plain with a single line:</P>

<UL>
<P><TT>[template [SP&nbsp;[&quot;]property name[&quot;] ...] (&nbsp;LF |&nbsp;CRLF&nbsp;)]</TT></P>
</UL>

<P>Where the template includes the list of all property names available for indexing.</P>

<P>If the request header <B>Content-Index</B><I> </I>is <B>not </B>included in the request, the BNF for this response is defined as follows:</P> 

<UL>
<P><TT>Entity-body = *(resource)</TT></P> 

<P><TT>resource = filename SP content-type SP size SP last-modification ( LF | CRLF )</TT></P>
</UL>

<P>If the server is unsuccessful in indexing the given resource, it must respond with one of the following <I>Status-Codes</I> on the <I>Status-Line</I> of its response:</P>

<UL>
<LI><B>401 Unauthorized</B>. The request is valid, but the proper credentials have not been provided by the client. The server and client are required to follow all rules pertaining to <I>HTTP&nbsp;Basic Authorization</I> in this case. The client may either send a new request with the required credentials, or abort the attempt.</LI>

<LI><B>403 Forbidden</B>. The server is unable or unwilling to index the given resource for the requesting client.</LI> 

<LI><B>404 Not Found</B>. The server was unable to locate the specified resource.</LI>

<LI><B>500 Server Error</B>. The server encountered an internal error while processing the request, or does not implement indexing of the specified resource and is not aware of the missing functionality.</LI> 

<LI><B>501 Not Implemented</B>. The server does not have the functionality required to index the given resource, and is aware that it lacks it.</LI> </UL>
</TD>
</TR>
</TABLE>

<P>.</P>

<TABLE BORDER=1 WIDTH="100%" >
<TR>
<TD>Function</TD>

<TD><B><FONT COLOR="#0000FF">Create Directory</FONT></B></TD> </TR>

<TR>
<TD>Functional Description</TD>

<TD>The <B>MKDIR</B> method is used to create a new container object in the content store. For many servers, this will be a filesystem directory from the underlying operating system.</TD> </TR>

<TR>
<TD>Request</TD>

<TD>The request's <I>Method</I> must be <B>MKDIR</B>. The <I>Protocol</I> is <B>HTTP/1.1</B>. The <I>Request-URI</I> must be the URI&nbsp;of the new directory or container to create.
<P>It is recommended, but not required, that the server create all containers higher in the URI&nbsp;hierarchy to the specified URI&nbsp;before creating the new URI. For example, if the request asks for <TT>/foo/bar</TT> to be created, and <TT>/foo</TT> does not exist, the server must either create <TT>/foo</TT> before creating <TT>/foo/bar</TT> and return success as defined below, or it must return an error as defined below. The server is not required to implement container creation for all or even any of its URIs. For some content stores, it might not make sense or the concept of containers or directories might not directly apply.</P> </TD>
</TR>

<TR>
<TD>Response</TD>

<TD>If the container creation is successful, the server must return the following <I>Status-Code</I> in the <I>Status-Line</I> of the response: 

<UL>
<LI><B>201 Created</B>. The directory, and any of its parent directories, were created and are now ready for use. No deferred creation is allowed.</LI> </UL>

<P>If the container creation is not successful, the server must return one of the following <I>Status-Codes</I> in the <I>Status-Line</I> of the response:</P>

<UL>
<LI><B>401 Unauthorized</B>. The request is valid, but the proper credentials have not been provided by the client. The server and client are required to follow all rules pertaining to <I>HTTP&nbsp;Basic Authorization</I> in this case. The client may either send a new request with the required credentials, or abort the attempt.</LI>

<LI><B>403 Forbidden</B>. The server was unwilling or unable to create the directory. The directory could not be created, because it either already exists, or the creation of the directory and its parents failed.</LI> 

<LI><B>500 Server Error</B>. The server encountered an internal error which prevented it from carrying out the request, or the required functionality is not implemented and the server is unaware of its existence.</LI> 

<P><B>501 Not Implemented</B>. The server does not implement functionality required by the given operation, and is aware that it cannot do so.</P> </UL>
</TD>
</TR>
</TABLE>

<P>.</P>

<TABLE BORDER=1 WIDTH="100%" >
<TR>
<TD>Function</TD>

<TD><B><FONT COLOR="#0000FF">Destroy Resource</FONT></B></TD> </TR>

<TR>
<TD>Functional Description</TD>

<TD>The <B>DESTROY</B> method is used to schedule the parmenant removal of the resource, and delete revision archive.</TD> </TR>

<TR>
<TD>Request</TD>

<TD>The request's <I>Method</I> is <B>DESTROY</B>. The <I>Protocol</I> is <B>HTTP/1.1</B>. The <I>Request-URI</I> must correspond to the location of the archieve to be removed.</TD>
</TR>

<TR>
<TD>Response</TD>

<TD>If the destruction is successful, the server must return the following <I>Status-Code</I> in the <I>Status-Line</I> of its response: <UL>
<LI><B>200 OK</B>. The specified resource, and any resources beneath it, has been scheduled for removal at a later time. Servers are not required to remove the content immediately.</LI>
</UL>

<P>If the deletion is not successful, the server must return one of the following <I>Status-Codes</I> in the <I>Status-Line</I> of its response:</P> 

<UL>
<LI><B>401 Unauthorized</B>. The request is valid, but the proper credentials have not been provided by the client. The server and client are required to follow all rules pertaining to <I>HTTP&nbsp;Basic Authorization</I> in this case. The client may either send a new request with the required credentials, or abort the attempt.</LI>

<LI><B>403 Forbidden</B>. The requesting client is not allowed to remove the specified resource.</LI>

<LI><B>404 Not Found</B>. The server cannot find the requested resource.</LI> 

<LI><B>500 Server Error</B>. The server encountered an internal error which prevents it from removing the specified resource. Or, the server does not implement removal of the type of resource which was requested to be removed and is unaware that it does not know how to do so.</LI> 

<LI><B>501 Not Implemented</B>. The server is does not know how to remove the specified content, and is aware that it is unable to do so.</LI> </UL>
</TD>
</TR>
</TABLE>

<P>.</P>

<TABLE BORDER=1 WIDTH="100%" >
<TR>
<TD>Function</TD>

<TD><B><FONT COLOR="#0000FF">Move Resource</FONT></B></TD> </TR>

<TR>
<TD>Functional Description</TD>

<TD>The <B>MOVE</B> method schedules the movement of a given resource from its current URI location to a new URI location.</TD> </TR>

<TR>
<TD>Request</TD>

<TD>The request's <I>Request-Method</I> must be <B>MOVE</B>. The <I>Protocol</I> is <B>HTTP/1.1</B>. The <I>Request-URI</I> must correspond to the location of the resource which is requested to be moved. <P>The <I>Request Header Fields</I> must include the following header in addition to those usually supplied:</P>

<UL>
<LI><B>New-URI</B> specifies the new URI&nbsp;to which the resource specified by <I>Request-URI</I> should be moved.</LI> </UL>

<P>The server is not required to provide clients with automatic redirection from the old URI to the new one. The server is also allowed to selectively implement the relocation of resources and to refuse to move certain document types at its own discretion. For more information on request redirection, please refer to <A HREF="http://www.ics.uci.edu/pub/ietf/http/rfc1945">RFC 1945.</A> </P>
</TD>
</TR>

<TR>
<TD>Response</TD>

<TD>If the relocation is successful, the server must return the following <I>Status-Code</I> in the <I>Status-Line</I> of its response: <UL>
<LI><B>200 OK</B>. The resource was scheduled to be moved. The server may carry out the movement immediately or at some future time, but guarantees that the movement will occur.</LI>
</UL>

<P>If the relocation is not successful, the server must return one of the following <I>Status-Codes</I> in the <I>Status-Line</I> of its response:</P> 

<UL>
<LI><B>400 Bad Request</B>. A required header is missing or invalid, or the request is invalid.</LI>

<LI><B>401 Unauthorized</B>. The request is valid, but the proper credentials have not been provided by the client. The server and client are required to follow all rules pertaining to <I>HTTP&nbsp;Basic Authorization</I> in this case. The client may either send a new request with the required credentials, or abort the attempt.</LI>

<LI><B>403 Forbidden</B>. The client is forbidden to manipulate content in either the source or destination.</LI> 

<LI><B>404 Not Found</B>. The resource specified by <I>Request-URI</I> was not found by the server.</LI>

<LI><B>500 Server Error</B>. The server encountered an internal error while trying to service the request, or does not implement the required functionality and does not know that it cannot do so.</LI> 

<P><B>501 Not Implemented</B>. The server does not implement movement of the given resource, and is aware that it does not know how to do so.</P> </UL>
</TD>
</TR>
</TABLE>

<P>.</P>

<TABLE BORDER=1 WIDTH="100%" >
<TR>
<TD>Function</TD>

<TD><FONT COLOR="#0000FF">Remove Directory</FONT></TD> </TR>

<TR>
<TD>Functional Description</TD>

<TD>The <B>RMDIR</B> method is used to schedule the removal of empty container objects from the content store. For many servers, this will be a filesystem directory from the underlying operating system.</TD> </TR>

<TR>
<TD>Request</TD>

<TD>The request's <I>Method</I> must be <B>RMDIR</B>. The <I>Protocol</I> is <B>HTTP/1.1</B>. The <I>Request-URI</I> must be the URI&nbsp;of the directory or container to remove.
<P>Servers are not required to implement this method on all resources in the content store. Further, if the requested container is not empty, the server is free to reject the request to remove the container until the contents have been emptied using the <B>DELETE</B>&nbsp;command.</P> </TD>
</TR>

<TR>
<TD>Response</TD>

<TD>If the container removal is successful, the server must return the following <I>Status-Code</I> in the <I>Status-Line</I> of the response: 

<UL>
<LI><B>200 OK</B>. The specified container was either removed, or scheduled for removal at a later time. The removal is guaranteed to take place at some point in the future. </LI>
</UL>

<P>If the container removal is not successful, the server must return one of the following <I>Status-Codes</I> in the <I>Status-Line</I> of the response:</P> 

<UL>
<LI><B>401 Unauthorized</B>. The request is valid, but the proper credentials have not been provided by the client. The server and client are required to follow all rules pertaining to <I>HTTP&nbsp;Basic Authorization</I> in this case. The client may either send a new request with the required credentials, or abort the attempt.</LI>

<LI><B>403 Forbidden</B>. The server was unwilling or unable to remove the directory. The directory could not be removed, possibly because it's not empty.</LI>

<LI><B>404 Not Found</B>. The specified container could not be found in the content store.</LI>

<LI><B>500 Server Error</B>. The server encountered an internal error which prevented it from carrying out the request, or the required functionality is not implemented and the server is unaware of its existence.</LI> 

<P><B>501 Not Implemented</B>. The server does not implement functionality required by the given operation, and is aware that it cannot do so.</P> </UL>
</TD>
</TR>
</TABLE>

<P>.</P>

<TABLE BORDER=1 >
<TR>
<TD>Function</TD>

<TD><B><FONT COLOR="#0000FF">Copy Resource</FONT></B></TD> </TR>

<TR>
<TD>Functional Description</TD>

<TD>Schedules the copying of a given resource from its current URI location to a new URI location.</TD>
</TR>

<TR>
<TD>Request</TD>

<TD>The <I>method</I> is <B>COPY</B>. The <I>Protocol</I> is <B>HTTP/1.1</B>. The <I>Request-URI</I> must correspond to the location of the resource which is requested to be copied.
<P>The Request Header Fields must include the following header in addition to those usually supplied:</P>

<UL>
<LI><B>New-URI</B> specifies the new URI to which the resource specified by Request-URI should be copied. </LI>
</UL>

<P>The server is not required to provide clients with automatic redirection from the old URI to the new one. The server is also allowed to selectively implement the relocation of resources and to refuse to copy certain document types at its own discretion.</P>
</TD>
</TR>

<TR>
<TD>Response</TD>

<TD>If the copy is successful, the server must return the following <I>Status-Code</I> in the <I>Status-Line</I> of its response: <UL>
<LI><B>200 OK</B>. The resource was scheduled to be copied. The server may carry out the copy immediately or at some future time, but guarantees that the copy will occur. </LI>
</UL>

<P>If the copy is not successful, the server must return one of the following Status-Codes in the Status-Line of its response:</P> 

<UL>
<LI><B>400 Bad Request</B>. A required header is missing or invalid, or the request is invalid. </LI>

<LI><B>401 Unauthorized</B>. The request is valid, but the proper credentials have not been provided by the client. The server and client are required to follow all rules pertaining to HTTP Basic Authorization in this case. The client may either send a new request with the required credentials, or abort the attempt. </LI>

<LI><B>403 Forbidden</B>. The client is forbidden to manipulate content in either the source or destination. </LI> 

<LI><B>404 Not Found</B>. The resource specified by Request-URI was not found by the server. </LI>

<LI><B>500 Server Error</B>. The server encountered an internal error while trying to service the request, or does not implement the required functionality and does not know that it cannot do so. </LI> 

<LI><B>501 Not Implemented</B>. The server does not implement copy of the given resource, and is aware that it does not know how to do so</LI> </UL>
</TD>
</TR>
</TABLE>

<P>.</P>

<P>
<HR WIDTH="100%"></P>

</BODY>
</HTML>