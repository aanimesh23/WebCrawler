<?xml version="1.0" encoding="ascii"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
          "DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
  <title>CHEM.ML.features.ContactHistogramExtractor.ContactHistogramExtractor</title>
  <link rel="stylesheet" href="epydoc.css" type="text/css" />
  <script type="text/javascript" src="epydoc.js"></script>
</head>

<body bgcolor="white" text="black" link="blue" vlink="#204080"
      alink="#204080">
<!-- ==================== NAVIGATION BAR ==================== -->
<table class="navbar" border="0" width="100%" cellpadding="0"
       bgcolor="#a0c0ff" cellspacing="0">
  <tr valign="middle">
  <!-- Home link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="CHEM-module.html">Home</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Tree link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="module-tree.html">Trees</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Index link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="identifier-index.html">Indices</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Help link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="help.html">Help</a>&nbsp;&nbsp;&nbsp;</th>

      <th class="navbar" width="100%"></th>
  </tr>
</table>
<table width="100%" cellpadding="0" cellspacing="0">
  <tr valign="top">
    <td width="100%">
      <span class="breadcrumbs">
        <a href="CHEM-module.html">Package&nbsp;CHEM</a> ::
        <a href="CHEM.ML-module.html">Package&nbsp;ML</a> ::
        <a href="CHEM.ML.features-module.html">Package&nbsp;features</a> ::
        <a href="CHEM.ML.features.ContactHistogramExtractor-module.html">Module&nbsp;ContactHistogramExtractor</a> ::
        Class&nbsp;ContactHistogramExtractor
      </span>
    </td>
    <td>
      <table cellpadding="0" cellspacing="0">
        <!-- hide/show private -->
        <tr><td align="right"><span class="options">[<a href="javascript:void(0);" class="privatelink"
    onclick="toggle_private();">hide&nbsp;private</a>]</span></td></tr>
        <tr><td align="right"><span class="options"
            >[<a href="frames.html" target="_top">frames</a
            >]&nbsp;|&nbsp;<a href="CHEM.ML.features.ContactHistogramExtractor.ContactHistogramExtractor-class.html"
            target="_top">no&nbsp;frames</a>]</span></td></tr>
      </table>
    </td>
  </tr>
</table>
<!-- ==================== CLASS DESCRIPTION ==================== -->
<h1 class="epydoc">Class ContactHistogramExtractor</h1><br /><br />
<pre class="base-tree">
BaseFeatureExtractor.BaseFeatureExtractor --+
                                            |
                                           <strong class="uidshort">ContactHistogramExtractor</strong>
</pre>

<hr />
<p>Extract contact histogram features.</p>
  <p>The histogram is a count of all atom pairs with distance fitting in 
  the next &quot;binWidth.&quot;  For example, with a binWidth of 0.1, 
  counts up all pairs with distance in [0.0,0.1) then all those with length
  in [0.1,0.2) then [0.2,0.3), etc. until all pairs are accounted for.  
  This yields a vector / histogram of counts.  A dot product can then be 
  computed across these vectors from two molecules to essentially count up 
  the number of common pair distances in the two.</p>
  <p>Rather than a dot product, the similarity can instead be taken from 
  the vectors by calculating the similarity as e^(-d/T) where d is the 
  Euclidean distance (= RMSD from 0.0) between the two vectors to compare 
  and T is some temperature scaling factor. If T is not specified, then it 
  defaults to the largest d value found among the data set.</p>
  <p>Note that such a feature vector / histogram would be very sparse, 
  mostly counts of 0, so a dictionary is built of only the non-zero count 
  values instead.</p>
  <p>Only heavy (non-hydrogen) atoms will be considered.  Atom pairs will 
  be considered different by their atom types.  For example, a CO pair is 
  considered different than a CN bond (though the same as an OC pair).  
  Conceptually, you can think of a separate histogram being generated for 
  every different possible atom pair type.</p>
  An atom cannot pair with itself, otherwise the score will just be 
  dominated by a bunch of 0 distance pairs. Each pair should only be 
  counted once, the mirror case does not count.  For example, count pair 
  (a,b) once, but pair (b,a) should not count a second time.<br /><br />

<!-- ==================== INSTANCE METHODS ==================== -->
<a name="section-InstanceMethods"></a>
<table class="summary" border="1" cellpadding="3"
       cellspacing="0" width="100%" bgcolor="white">
<tr bgcolor="#70b0f0" class="table-header">
  <td colspan="2" class="table-header">
    <table border="0" cellpadding="0" cellspacing="0" width="100%">
      <tr valign="top">
        <td align="left"><span class="table-header">Instance Methods</span></td>
        <td align="right" valign="top"
         ><span class="options">[<a href="#section-InstanceMethods"
         class="privatelink" onclick="toggle_private();"
         >hide private</a>]</span></td>
      </tr>
    </table>
  </td>
</tr>
<tr>
    <td width="15%" align="right" valign="top" class="summary">
      <span class="summary-type">&nbsp;</span>
    </td><td class="summary">
      <table width="100%" cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td><span class="summary-sig"><a href="CHEM.ML.features.ContactHistogramExtractor.ContactHistogramExtractor-class.html#__init__" class="summary-sig-name">__init__</a>(<span class="summary-sig-arg">self</span>)</span><br />
      Constructor.</td>
          <td align="right" valign="top">
            
            
          </td>
        </tr>
      </table>
      
    </td>
  </tr>
<tr>
    <td width="15%" align="right" valign="top" class="summary">
      <span class="summary-type">&nbsp;</span>
    </td><td class="summary">
      <table width="100%" cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td><span class="summary-sig"><a href="CHEM.ML.features.ContactHistogramExtractor.ContactHistogramExtractor-class.html#loadOptions" class="summary-sig-name">loadOptions</a>(<span class="summary-sig-arg">self</span>,
        <span class="summary-sig-arg">options</span>)</span><br />
      Load relevant options derived from an optparse.OptionParser into 
      the state of this object.</td>
          <td align="right" valign="top">
            
            
          </td>
        </tr>
      </table>
      
    </td>
  </tr>
<tr>
    <td width="15%" align="right" valign="top" class="summary">
      <span class="summary-type">&nbsp;</span>
    </td><td class="summary">
      <table width="100%" cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td><span class="summary-sig"><a href="CHEM.ML.features.ContactHistogramExtractor.ContactHistogramExtractor-class.html#setScalingFactor" class="summary-sig-name">setScalingFactor</a>(<span class="summary-sig-arg">self</span>,
        <span class="summary-sig-arg">scalingFactor</span>)</span><br />
      Set the scaling factor used for Euclidean distance measures.</td>
          <td align="right" valign="top">
            
            
          </td>
        </tr>
      </table>
      
    </td>
  </tr>
<tr>
    <td width="15%" align="right" valign="top" class="summary">
      <span class="summary-type">&nbsp;</span>
    </td><td class="summary">
      <table width="100%" cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td><span class="summary-sig"><a href="CHEM.ML.features.ContactHistogramExtractor.ContactHistogramExtractor-class.html#getScalingFactor" class="summary-sig-name">getScalingFactor</a>(<span class="summary-sig-arg">self</span>)</span><br />
      If self.scalingFactor is defined (not null) then just return 
      it.</td>
          <td align="right" valign="top">
            
            
          </td>
        </tr>
      </table>
      
    </td>
  </tr>
<tr>
    <td width="15%" align="right" valign="top" class="summary">
      <span class="summary-type">&nbsp;</span>
    </td><td class="summary">
      <table width="100%" cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td><span class="summary-sig"><a href="CHEM.ML.features.ContactHistogramExtractor.ContactHistogramExtractor-class.html#setAtomTupleWeight" class="summary-sig-name">setAtomTupleWeight</a>(<span class="summary-sig-arg">self</span>,
        <span class="summary-sig-arg">atomSymbol_list</span>,
        <span class="summary-sig-arg">weight</span>)</span><br />
      When counting up the atom pair distances for the
histograms this method allows for different atom pair 
types to contribute different weights in the count.</td>
          <td align="right" valign="top">
            
            
          </td>
        </tr>
      </table>
      
    </td>
  </tr>
<tr>
    <td width="15%" align="right" valign="top" class="summary">
      <span class="summary-type">&nbsp;</span>
    </td><td class="summary">
      <table width="100%" cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td><span class="summary-sig"><a href="CHEM.ML.features.ContactHistogramExtractor.ContactHistogramExtractor-class.html#parseAtomTupleWeightSpecification" class="summary-sig-name">parseAtomTupleWeightSpecification</a>(<span class="summary-sig-arg">self</span>,
        <span class="summary-sig-arg">specString</span>)</span><br />
      Given a specification string for the atom tuple weightings, parse 
      out the actual values and set them to the object's 
      atomTupleWeightDict.</td>
          <td align="right" valign="top">
            
            
          </td>
        </tr>
      </table>
      
    </td>
  </tr>
<tr>
    <td width="15%" align="right" valign="top" class="summary">
      <span class="summary-type">&nbsp;</span>
    </td><td class="summary">
      <table width="100%" cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td><span class="summary-sig"><a name="createTuple"></a><span class="summary-sig-name">createTuple</span>(<span class="summary-sig-arg">self</span>,
        <span class="summary-sig-arg">mol</span>,
        <span class="summary-sig-arg">featureDict</span>,
        <span class="summary-sig-arg">index_list</span>,
        <span class="summary-sig-arg">atom_list</span>,
        <span class="summary-sig-arg">k</span>,
        <span class="summary-sig-arg">possibilities</span>)</span></td>
          <td align="right" valign="top">
            
            
          </td>
        </tr>
      </table>
      
    </td>
  </tr>
<tr>
    <td width="15%" align="right" valign="top" class="summary">
      <span class="summary-type">&nbsp;</span>
    </td><td class="summary">
      <table width="100%" cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td><span class="summary-sig"><a href="CHEM.ML.features.ContactHistogramExtractor.ContactHistogramExtractor-class.html#__call__" class="summary-sig-name">__call__</a>(<span class="summary-sig-arg">self</span>,
        <span class="summary-sig-arg">mol</span>)</span><br />
      Given an OEMolBase molecule object, calculate the (contact) 
      distance between every atom tuple.</td>
          <td align="right" valign="top">
            
            
          </td>
        </tr>
      </table>
      
    </td>
  </tr>
<tr>
    <td width="15%" align="right" valign="top" class="summary">
      <span class="summary-type">&nbsp;</span>
    </td><td class="summary">
      <table width="100%" cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td><span class="summary-sig"><a href="CHEM.ML.features.ContactHistogramExtractor.ContactHistogramExtractor-class.html#normalizeFeatureDictionary" class="summary-sig-name">normalizeFeatureDictionary</a>(<span class="summary-sig-arg">self</span>,
        <span class="summary-sig-arg">featureDict</span>)</span><br />
      Given a dictionary, interpret it as a feature vector, whose values
      are some numerical value.</td>
          <td align="right" valign="top">
            
            
          </td>
        </tr>
      </table>
      
    </td>
  </tr>
<tr>
    <td width="15%" align="right" valign="top" class="summary">
      <span class="summary-type">&nbsp;</span>
    </td><td class="summary">
      <table width="100%" cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td><span class="summary-sig"><a href="CHEM.ML.features.ContactHistogramExtractor.ContactHistogramExtractor-class.html#acceptedAtomPair" class="summary-sig-name">acceptedAtomPair</a>(<span class="summary-sig-arg">self</span>,
        <span class="summary-sig-arg">atom_list</span>)</span><br />
      Screen out atom pairs not desired for calculation.</td>
          <td align="right" valign="top">
            
            
          </td>
        </tr>
      </table>
      
    </td>
  </tr>
<tr>
    <td width="15%" align="right" valign="top" class="summary">
      <span class="summary-type">&nbsp;</span>
    </td><td class="summary">
      <table width="100%" cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td><span class="summary-sig"><a href="CHEM.ML.features.ContactHistogramExtractor.ContactHistogramExtractor-class.html#buildFeatureKey" class="summary-sig-name">buildFeatureKey</a>(<span class="summary-sig-arg">self</span>,
        <span class="summary-sig-arg">mol</span>,
        <span class="summary-sig-arg">atom_list</span>)</span><br />
      Create a unique key based on the atom types and the distance 
      between them.</td>
          <td align="right" valign="top">
            
            
          </td>
        </tr>
      </table>
      
    </td>
  </tr>
<tr>
    <td width="15%" align="right" valign="top" class="summary">
      <span class="summary-type">&nbsp;</span>
    </td><td class="summary">
      <table width="100%" cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td><span class="summary-sig"><a href="CHEM.ML.features.ContactHistogramExtractor.ContactHistogramExtractor-class.html#atomDistance" class="summary-sig-name">atomDistance</a>(<span class="summary-sig-arg">self</span>,
        <span class="summary-sig-arg">mol</span>,
        <span class="summary-sig-arg">atom_list</span>)</span><br />
      Returns the 'distance' between k_value atoms.</td>
          <td align="right" valign="top">
            
            
          </td>
        </tr>
      </table>
      
    </td>
  </tr>
<tr>
    <td width="15%" align="right" valign="top" class="summary">
      <span class="summary-type">&nbsp;</span>
    </td><td class="summary">
      <table width="100%" cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td><span class="summary-sig"><a href="CHEM.ML.features.ContactHistogramExtractor.ContactHistogramExtractor-class.html#objectDescription" class="summary-sig-name">objectDescription</a>(<span class="summary-sig-arg">self</span>,
        <span class="summary-sig-arg">obj</span>)</span><br />
      Returns a (SMILES) string description of the OEMolBase object</td>
          <td align="right" valign="top">
            
            
          </td>
        </tr>
      </table>
      
    </td>
  </tr>
<tr>
    <td width="15%" align="right" valign="top" class="summary">
      <span class="summary-type">&nbsp;</span>
    </td><td class="summary">
      <table width="100%" cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td><span class="summary-sig"><a href="CHEM.ML.features.ContactHistogramExtractor.ContactHistogramExtractor-class.html#inputFunction" class="summary-sig-name">inputFunction</a>(<span class="summary-sig-arg">self</span>,
        <span class="summary-sig-arg">obj</span>)</span></td>
          <td align="right" valign="top">
            
            
          </td>
        </tr>
      </table>
      
    </td>
  </tr>
  <tr>
    <td colspan="2" class="summary">
    <p class="indent-wrapped-lines"><b>Inherited from <code>BaseFeatureExtractor.BaseFeatureExtractor</code></b>:
      <code>getNameID</code>,
      <code>loadArgs</code>,
      <code>main</code>,
      <code>outputFeatures</code>
      </p>
    </td>
  </tr>
</table>
<!-- ==================== CLASS VARIABLES ==================== -->
<a name="section-ClassVariables"></a>
<table class="summary" border="1" cellpadding="3"
       cellspacing="0" width="100%" bgcolor="white">
<tr bgcolor="#70b0f0" class="table-header">
  <td colspan="2" class="table-header">
    <table border="0" cellpadding="0" cellspacing="0" width="100%">
      <tr valign="top">
        <td align="left"><span class="table-header">Class Variables</span></td>
        <td align="right" valign="top"
         ><span class="options">[<a href="#section-ClassVariables"
         class="privatelink" onclick="toggle_private();"
         >hide private</a>]</span></td>
      </tr>
    </table>
  </td>
</tr>
<tr>
    <td width="15%" align="right" valign="top" class="summary">
      <span class="summary-type">&nbsp;</span>
    </td><td class="summary">
        <a href="CHEM.ML.features.ContactHistogramExtractor.ContactHistogramExtractor-class.html#binWidth" class="summary-name">binWidth</a> = <code title="-1.0">-1.0</code><br />
      Size of the considered tuples of atoms.
    </td>
  </tr>
<tr>
    <td width="15%" align="right" valign="top" class="summary">
      <span class="summary-type">&nbsp;</span>
    </td><td class="summary">
        <a name="k_value"></a><span class="summary-name">k_value</span> = <code title="2">2</code><br />
      Whether to normalize the feature dictionaries
    </td>
  </tr>
<tr>
    <td width="15%" align="right" valign="top" class="summary">
      <span class="summary-type">&nbsp;</span>
    </td><td class="summary">
        <a href="CHEM.ML.features.ContactHistogramExtractor.ContactHistogramExtractor-class.html#normalize" class="summary-name">normalize</a> = <code title="False">False</code><br />
      Dictionary whose items are keyed by an object representing a pair 
      of atom types.
    </td>
  </tr>
<tr>
    <td width="15%" align="right" valign="top" class="summary">
      <span class="summary-type">&nbsp;</span>
    </td><td class="summary">
        <a href="CHEM.ML.features.ContactHistogramExtractor.ContactHistogramExtractor-class.html#atomTupleWeightDict" class="summary-name">atomTupleWeightDict</a> = <code title="None">&lt;CHEM.DB.rdb.search.NameRxnPatternMatchi<code class="variable-ellipsis">...</code></code>
    </td>
  </tr>
  <tr>
    <td colspan="2" class="summary">
    <p class="indent-wrapped-lines"><b>Inherited from <code>BaseFeatureExtractor.BaseFeatureExtractor</code></b>:
      <code>inputIter</code>,
      <code>outFile</code>,
      <code>parser</code>
      </p>
    </td>
  </tr>
</table>
<!-- ==================== METHOD DETAILS ==================== -->
<a name="section-MethodDetails"></a>
<table class="details" border="1" cellpadding="3"
       cellspacing="0" width="100%" bgcolor="white">
<tr bgcolor="#70b0f0" class="table-header">
  <td colspan="2" class="table-header">
    <table border="0" cellpadding="0" cellspacing="0" width="100%">
      <tr valign="top">
        <td align="left"><span class="table-header">Method Details</span></td>
        <td align="right" valign="top"
         ><span class="options">[<a href="#section-MethodDetails"
         class="privatelink" onclick="toggle_private();"
         >hide private</a>]</span></td>
      </tr>
    </table>
  </td>
</tr>
</table>
<a name="__init__"></a>
<div>
<table class="details" border="1" cellpadding="3"
       cellspacing="0" width="100%" bgcolor="white">
<tr><td>
  <table width="100%" cellpadding="0" cellspacing="0" border="0">
  <tr valign="top"><td>
  <h3 class="epydoc"><span class="sig"><span class="sig-name">__init__</span>(<span class="sig-arg">self</span>)</span>
    <br /><em class="fname">(Constructor)</em>
  </h3>
  </td><td align="right" valign="top"
    >&nbsp;
    </td>
  </table>
  
  Constructor.  Initializes expected command-line options.
  <dl class="fields">
    <dt>Overrides:
      <a href="CHEM.ML.features.BaseFeatureExtractor.BaseFeatureExtractor-class.html#__init__">BaseFeatureExtractor.BaseFeatureExtractor.__init__</a>
    </dt>
  </dl>
</td></tr></table>
</div>
<a name="loadOptions"></a>
<div>
<table class="details" border="1" cellpadding="3"
       cellspacing="0" width="100%" bgcolor="white">
<tr><td>
  <table width="100%" cellpadding="0" cellspacing="0" border="0">
  <tr valign="top"><td>
  <h3 class="epydoc"><span class="sig"><span class="sig-name">loadOptions</span>(<span class="sig-arg">self</span>,
        <span class="sig-arg">options</span>)</span>
  </h3>
  </td><td align="right" valign="top"
    >&nbsp;
    </td>
  </table>
  
  <p>Load relevant options derived from an optparse.OptionParser into the 
  state of this object.</p>
  Sub-classes should have this handle any of the options it added to the
  command-line parser via the constructor.
  <dl class="fields">
    <dt>Overrides:
      <a href="CHEM.ML.features.BaseFeatureExtractor.BaseFeatureExtractor-class.html#loadOptions">BaseFeatureExtractor.BaseFeatureExtractor.loadOptions</a>
        <dd><em class="note">(inherited documentation)</em></dd>
    </dt>
  </dl>
</td></tr></table>
</div>
<a name="setScalingFactor"></a>
<div>
<table class="details" border="1" cellpadding="3"
       cellspacing="0" width="100%" bgcolor="white">
<tr><td>
  <table width="100%" cellpadding="0" cellspacing="0" border="0">
  <tr valign="top"><td>
  <h3 class="epydoc"><span class="sig"><span class="sig-name">setScalingFactor</span>(<span class="sig-arg">self</span>,
        <span class="sig-arg">scalingFactor</span>)</span>
  </h3>
  </td><td align="right" valign="top"
    >&nbsp;
    </td>
  </table>
  
  Set the scaling factor used for Euclidean distance measures. If no 
  value is set, will default to a calculation of the largest distance value
  in the data set.
  <dl class="fields">
  </dl>
</td></tr></table>
</div>
<a name="getScalingFactor"></a>
<div>
<table class="details" border="1" cellpadding="3"
       cellspacing="0" width="100%" bgcolor="white">
<tr><td>
  <table width="100%" cellpadding="0" cellspacing="0" border="0">
  <tr valign="top"><td>
  <h3 class="epydoc"><span class="sig"><span class="sig-name">getScalingFactor</span>(<span class="sig-arg">self</span>)</span>
  </h3>
  </td><td align="right" valign="top"
    >&nbsp;
    </td>
  </table>
  
  If self.scalingFactor is defined (not null) then just return it. If 
  not, then calculate the Euclidean distance for every pair of feature 
  dictionaries in self.featureDictList and take the largest one. If the 
  self.featureDictList is None or has &lt; 2 items, then just use a value 
  of 1.0.
  <dl class="fields">
  </dl>
</td></tr></table>
</div>
<a name="setAtomTupleWeight"></a>
<div>
<table class="details" border="1" cellpadding="3"
       cellspacing="0" width="100%" bgcolor="white">
<tr><td>
  <table width="100%" cellpadding="0" cellspacing="0" border="0">
  <tr valign="top"><td>
  <h3 class="epydoc"><span class="sig"><span class="sig-name">setAtomTupleWeight</span>(<span class="sig-arg">self</span>,
        <span class="sig-arg">atomSymbol_list</span>,
        <span class="sig-arg">weight</span>)</span>
  </h3>
  </td><td align="right" valign="top"
    >&nbsp;
    </td>
  </table>
  
  <pre class="literalblock">
When counting up the atom pair distances for the
histograms this method allows for different atom pair 
types to contribute different weights in the count.

atomSymbol_list is the list of the string for the atomic symbol of the atoms 
            of the tuple (e.g. &quot;C&quot; for carbon, &quot;Cl&quot; for chlorine)
weight      Weight to multiply the histogram counts for any
            atom tuple encountered whose type match the specified tuple.

Any atom tuple encountered that is not specified with some
special weight via this method will be assumed
to be weighted by 1.0 (unweighted).

</pre>
  <dl class="fields">
  </dl>
</td></tr></table>
</div>
<a name="parseAtomTupleWeightSpecification"></a>
<div>
<table class="details" border="1" cellpadding="3"
       cellspacing="0" width="100%" bgcolor="white">
<tr><td>
  <table width="100%" cellpadding="0" cellspacing="0" border="0">
  <tr valign="top"><td>
  <h3 class="epydoc"><span class="sig"><span class="sig-name">parseAtomTupleWeightSpecification</span>(<span class="sig-arg">self</span>,
        <span class="sig-arg">specString</span>)</span>
  </h3>
  </td><td align="right" valign="top"
    >&nbsp;
    </td>
  </table>
  
  <p>Given a specification string for the atom tuple weightings, parse out 
  the actual values and set them to the object's atomTupleWeightDict.</p>
  Specification string is expected to be in the form 
  'atomSymbol1:atomSymbol2:...:atomSymboln:weight,'.  For example, to 
  specify carbon-carbon pairs as having half the default weight of 1.0 and 
  carbon-oxygen pairs as having twice the default weight, provide a 
  specification string of 'C:C:0.5,C:O:2.0'
  <dl class="fields">
  </dl>
</td></tr></table>
</div>
<a name="__call__"></a>
<div>
<table class="details" border="1" cellpadding="3"
       cellspacing="0" width="100%" bgcolor="white">
<tr><td>
  <table width="100%" cellpadding="0" cellspacing="0" border="0">
  <tr valign="top"><td>
  <h3 class="epydoc"><span class="sig"><span class="sig-name">__call__</span>(<span class="sig-arg">self</span>,
        <span class="sig-arg">mol</span>)</span>
    <br /><em class="fname">(Call operator)</em>
  </h3>
  </td><td align="right" valign="top"
    >&nbsp;
    </td>
  </table>
  
  <p>Given an OEMolBase molecule object, calculate the (contact) distance 
  between every atom tuple.</p>
  <p>Create a dictionary keyed by the atom tuple type (just based on the 
  combination of atoms) and the histogram bin index that the found tuple 
  should be placed in. The dictionary will have values equal to the number 
  of tuples with a distance that fits into that bin. The bin index is just 
  the number of times the binWidth can be wholly divided into the bond 
  length.</p>
  <p>For example, if binWidth = 0.1 then a CO atom pair at a distance of 
  1.32 will be placed under the CO bin index 13. Alternatively, you could 
  say that bin index 13 of the CO histogram contains a count for all CO 
  pairs with distance in [1.3,1.4).</p>
  Finally, normalize the feature dictionary as a vector to have a 
  &quot;length&quot; of 1.0, by dividing all elements by the magnitude of 
  the vector / dictionary.
  <dl class="fields">
    <dt>Overrides:
      <a href="CHEM.ML.features.BaseFeatureExtractor.BaseFeatureExtractor-class.html#__call__">BaseFeatureExtractor.BaseFeatureExtractor.__call__</a>
    </dt>
  </dl>
</td></tr></table>
</div>
<a name="normalizeFeatureDictionary"></a>
<div>
<table class="details" border="1" cellpadding="3"
       cellspacing="0" width="100%" bgcolor="white">
<tr><td>
  <table width="100%" cellpadding="0" cellspacing="0" border="0">
  <tr valign="top"><td>
  <h3 class="epydoc"><span class="sig"><span class="sig-name">normalizeFeatureDictionary</span>(<span class="sig-arg">self</span>,
        <span class="sig-arg">featureDict</span>)</span>
  </h3>
  </td><td align="right" valign="top"
    >&nbsp;
    </td>
  </table>
  
  Given a dictionary, interpret it as a feature vector, whose values are
  some numerical value.  In that case, the vector can be interpreted to 
  have a magnitude / length.  Divide all elements (values) by this 
  magnitude to normalize the vector to have a length of 1.0.
  <dl class="fields">
  </dl>
</td></tr></table>
</div>
<a name="acceptedAtomPair"></a>
<div>
<table class="details" border="1" cellpadding="3"
       cellspacing="0" width="100%" bgcolor="white">
<tr><td>
  <table width="100%" cellpadding="0" cellspacing="0" border="0">
  <tr valign="top"><td>
  <h3 class="epydoc"><span class="sig"><span class="sig-name">acceptedAtomPair</span>(<span class="sig-arg">self</span>,
        <span class="sig-arg">atom_list</span>)</span>
  </h3>
  </td><td align="right" valign="top"
    >&nbsp;
    </td>
  </table>
  
  Screen out atom pairs not desired for calculation. Presently just 
  exclude hydrogen (non-heavy) atoms.
  <dl class="fields">
  </dl>
</td></tr></table>
</div>
<a name="buildFeatureKey"></a>
<div>
<table class="details" border="1" cellpadding="3"
       cellspacing="0" width="100%" bgcolor="white">
<tr><td>
  <table width="100%" cellpadding="0" cellspacing="0" border="0">
  <tr valign="top"><td>
  <h3 class="epydoc"><span class="sig"><span class="sig-name">buildFeatureKey</span>(<span class="sig-arg">self</span>,
        <span class="sig-arg">mol</span>,
        <span class="sig-arg">atom_list</span>)</span>
  </h3>
  </td><td align="right" valign="top"
    >&nbsp;
    </td>
  </table>
  
  Create a unique key based on the atom types and the distance between 
  them.  Important that the order that the atoms appear in should not 
  matter.  For example, a CO pair should be the same as an OC pair.
  <dl class="fields">
  </dl>
</td></tr></table>
</div>
<a name="atomDistance"></a>
<div>
<table class="details" border="1" cellpadding="3"
       cellspacing="0" width="100%" bgcolor="white">
<tr><td>
  <table width="100%" cellpadding="0" cellspacing="0" border="0">
  <tr valign="top"><td>
  <h3 class="epydoc"><span class="sig"><span class="sig-name">atomDistance</span>(<span class="sig-arg">self</span>,
        <span class="sig-arg">mol</span>,
        <span class="sig-arg">atom_list</span>)</span>
  </h3>
  </td><td align="right" valign="top"
    >&nbsp;
    </td>
  </table>
  
  Returns the 'distance' between k_value atoms. Requires a reference to 
  the parent molecule to access coordinates.
  <dl class="fields">
  </dl>
</td></tr></table>
</div>
<a name="objectDescription"></a>
<div>
<table class="details" border="1" cellpadding="3"
       cellspacing="0" width="100%" bgcolor="white">
<tr><td>
  <table width="100%" cellpadding="0" cellspacing="0" border="0">
  <tr valign="top"><td>
  <h3 class="epydoc"><span class="sig"><span class="sig-name">objectDescription</span>(<span class="sig-arg">self</span>,
        <span class="sig-arg">obj</span>)</span>
  </h3>
  </td><td align="right" valign="top"
    >&nbsp;
    </td>
  </table>
  
  Returns a (SMILES) string description of the OEMolBase object
  <dl class="fields">
    <dt>Overrides:
      <a href="CHEM.ML.features.BaseFeatureExtractor.BaseFeatureExtractor-class.html#objectDescription">BaseFeatureExtractor.BaseFeatureExtractor.objectDescription</a>
    </dt>
  </dl>
</td></tr></table>
</div>
<a name="inputFunction"></a>
<div>
<table class="details" border="1" cellpadding="3"
       cellspacing="0" width="100%" bgcolor="white">
<tr><td>
  <table width="100%" cellpadding="0" cellspacing="0" border="0">
  <tr valign="top"><td>
  <h3 class="epydoc"><span class="sig"><span class="sig-name">inputFunction</span>(<span class="sig-arg">self</span>,
        <span class="sig-arg">obj</span>)</span>
  </h3>
  </td><td align="right" valign="top"
    >&nbsp;
    </td>
  </table>
  
  
  <dl class="fields">
    <dt>Overrides:
      None
    </dt>
  </dl>
</td></tr></table>
</div>
<br />
<!-- ==================== CLASS VARIABLE DETAILS ==================== -->
<a name="section-ClassVariableDetails"></a>
<table class="details" border="1" cellpadding="3"
       cellspacing="0" width="100%" bgcolor="white">
<tr bgcolor="#70b0f0" class="table-header">
  <td colspan="2" class="table-header">
    <table border="0" cellpadding="0" cellspacing="0" width="100%">
      <tr valign="top">
        <td align="left"><span class="table-header">Class Variable Details</span></td>
        <td align="right" valign="top"
         ><span class="options">[<a href="#section-ClassVariableDetails"
         class="privatelink" onclick="toggle_private();"
         >hide private</a>]</span></td>
      </tr>
    </table>
  </td>
</tr>
</table>
<a name="binWidth"></a>
<div>
<table class="details" border="1" cellpadding="3"
       cellspacing="0" width="100%" bgcolor="white">
<tr><td>
  <h3 class="epydoc">binWidth</h3>
  Size of the considered tuples of atoms. 2=pairs, 3=triplets, and so 
  on.
  <dl class="fields">
  </dl>
  <dl class="fields">
    <dt>Value:</dt>
      <dd><table><tr><td><pre class="variable">
-1.0
</pre></td></tr></table>
</dd>
  </dl>
</td></tr></table>
</div>
<a name="normalize"></a>
<div>
<table class="details" border="1" cellpadding="3"
       cellspacing="0" width="100%" bgcolor="white">
<tr><td>
  <h3 class="epydoc">normalize</h3>
  Dictionary whose items are keyed by an object representing a pair of 
  atom types.  (Tuple containing the atomic numbers of two atoms.  For 
  example, (6,17) to represent the atom pair of Carbon and Chlorine). See 
  setAtomPairWeight(...) for more information.
  <dl class="fields">
  </dl>
  <dl class="fields">
    <dt>Value:</dt>
      <dd><table><tr><td><pre class="variable">
False
</pre></td></tr></table>
</dd>
  </dl>
</td></tr></table>
</div>
<a name="atomTupleWeightDict"></a>
<div>
<table class="details" border="1" cellpadding="3"
       cellspacing="0" width="100%" bgcolor="white">
<tr><td>
  <h3 class="epydoc">atomTupleWeightDict</h3>
  
  <dl class="fields">
  </dl>
  <dl class="fields">
    <dt>Value:</dt>
      <dd><table><tr><td><pre class="variable">
None
</pre></td></tr></table>
</dd>
  </dl>
</td></tr></table>
</div>
<br />
<!-- ==================== NAVIGATION BAR ==================== -->
<table class="navbar" border="0" width="100%" cellpadding="0"
       bgcolor="#a0c0ff" cellspacing="0">
  <tr valign="middle">
  <!-- Home link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="CHEM-module.html">Home</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Tree link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="module-tree.html">Trees</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Index link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="identifier-index.html">Indices</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Help link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="help.html">Help</a>&nbsp;&nbsp;&nbsp;</th>

      <th class="navbar" width="100%"></th>
  </tr>
</table>
<table border="0" cellpadding="0" cellspacing="0" width="100%%">
  <tr>
    <td align="left" class="footer">
    Generated by Epydoc 3.0beta1 on Thu Nov  8 17:49:32 2007
    </td>
    <td align="right" class="footer">
      <a href="http://epydoc.sourceforge.net">http://epydoc.sourceforge.net</a>
    </td>
  </tr>
</table>

<script type="text/javascript">
  <!--
  // Private objects are initially displayed (because if
  // javascript is turned off then we want them to be
  // visible); but by default, we want to hide them.  So hide
  // them unless we have a cookie that says to show them.
  checkCookie()
  // -->
</script>
  
</body>
</html>
