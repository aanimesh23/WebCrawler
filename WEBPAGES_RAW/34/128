<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<!--NewPage-->
<html>
<head>
<!-- Generated by javadoc on Thu Aug 31 15:31:12 PDT 2000 -->
<title>
  Class Job
</title>
</head>
<body>
<a name="_top_"></a>
<h1>
  Class Job
</h1>
<pre>
java.lang.Object
   |
   +----Job
</pre>
<hr>
<dl>
  <dt> public class <b>Job</b>
  <dt> extends Object
</dl>
Implements a job. A unique number, called the <em>global job
 identifier</em>, is associated with each job.
<p>
<dl>
    <dt> <b>See Also:</b>
    <dd> <a href="JobManager.html#_top_">JobManager</a>, <a href="Task.html#_top_">Task</a>
</dl>
<hr>
<a name="index"></a>
<h2>
  <img src="images/constructor-index.gif" width=275 height=38 alt="Constructor Index">
</h2>
<dl>
  <dt> <img src="images/yellow-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#Job(JobManager, int, int, float, int, int, ProbabilityDistribution, ProbabilityDistribution, ProbabilityDistribution, ProbabilityDistribution, ProbabilityDistribution, ProbabilityDistribution, ProbabilityDistribution, float, float, java.lang.String)"><b>Job</b></a>(JobManager, int, int, float, int, int, ProbabilityDistribution, ProbabilityDistribution, ProbabilityDistribution, ProbabilityDistribution, ProbabilityDistribution, ProbabilityDistribution, ProbabilityDistribution, float, float, String)
  <dd>  Constructs a job.
</dl>
<h2>
  <img src="images/method-index.gif" width=207 height=38 alt="Method Index">
</h2>
<dl>
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#generateTask(float, int, float)"><b>generateTask</b></a>(float, int, float)
  <dd>  Generates a task and adds it to this job.
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#generateTasks(int, float, int, float)"><b>generateTasks</b></a>(int, float, int, float)
  <dd>  Generates the given number of tasks and adds them to this job.
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#getExecutionTime()"><b>getExecutionTime</b></a>()
  <dd>  Returns the total execution time of the job.
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#getId()"><b>getId</b></a>()
  <dd>  Returns the global job identifier for this object.
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#getJobType()"><b>getJobType</b></a>()
  <dd> 
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#getManager()"><b>getManager</b></a>()
  <dd>  Returns the manager of this job.
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#getSimulator()"><b>getSimulator</b></a>()
  <dd>  Returns the simulator that this object belongs to.
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#getTask(long)"><b>getTask</b></a>(long)
  <dd>  Returns the sought task.
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#hasEnded()"><b>hasEnded</b></a>()
  <dd>  Tests if the job has ended.
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#initiateGlobalSynchronization(Task)"><b>initiateGlobalSynchronization</b></a>(Task)
  <dd>  Initiates global synchronization.
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#initiateLocalSynchronization(Task)"><b>initiateLocalSynchronization</b></a>(Task)
  <dd>  Initiates local synchronization.
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#isContainedWithin(int, int)"><b>isContainedWithin</b></a>(int, int)
  <dd>  Specifies whether or not the execution of this job is
 completely contained within the given interval of time.
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#jobClass()"><b>jobClass</b></a>()
  <dd>  Returns the user-defined class of the job.
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#numberOfLivingTasks()"><b>numberOfLivingTasks</b></a>()
  <dd>  Returns the number of living tasks contained by this object.
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#numberOfTasks()"><b>numberOfTasks</b></a>()
  <dd>  Returns the number of tasks contained by this object.
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#numberOfTasks(int)"><b>numberOfTasks</b></a>(int)
  <dd>  Returns the number of tasks in the given state, contained by
 this object.
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#numberOfTasksOnPE(int)"><b>numberOfTasksOnPE</b></a>(int)
  <dd>  Returns the number of tasks on the given processing element,
 contained by this object.
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#numberOfTasksOnPE(int, int)"><b>numberOfTasksOnPE</b></a>(int, int)
  <dd>  Returns the number of tasks on the given processing element
 in the given state, contained by this object.
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#numberOfTasksSpinning()"><b>numberOfTasksSpinning</b></a>()
  <dd>  Returns the number of tasks spinning, contained by
 this object.
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#numberOfTasksSpinSync()"><b>numberOfTasksSpinSync</b></a>()
  <dd>  Returns the number of tasks spinning due to synchronization, contained by
 this object.
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#randomTask(Task)"><b>randomTask</b></a>(Task)
  <dd>  Returns a randomly chosen task.
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#randomTasks(float, Task)"><b>randomTasks</b></a>(float, Task)
  <dd>  Returns an array of randomly chosen tasks.
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#synchronizationRequested(Task)"><b>synchronizationRequested</b></a>(Task)
  <dd>  Tests if a synchronization has been requested for the given
 task.
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#synchronize(Task)"><b>synchronize</b></a>(Task)
  <dd>  Notifies this job that a tasks synchronizes.
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#taskEnded(Task, float)"><b>taskEnded</b></a>(Task, float)
  <dd>  Called by an ended task.
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#tasks()"><b>tasks</b></a>()
  <dd>  Returns an array with global task identifiers for all tasks
 contained by this object.
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#tasks(int)"><b>tasks</b></a>(int)
  <dd>  Returns an array with global task identifiers for all tasks
 in the given state, contained by this object.
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#tasksOnPE(int)"><b>tasksOnPE</b></a>(int)
  <dd>  Returns an array with global task identifiers for all tasks
 on the given processing element, contained by this object.
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#tasksOnPE(int, int)"><b>tasksOnPE</b></a>(int, int)
  <dd>  Returns an array with global task identifiers for all tasks
 on the given processing element in the given state, contained
 by this object.
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#toString()"><b>toString</b></a>()
  <dd>  Returns a string representation of this object.
</dl>
<a name="constructors"></a>
<h2>
  <img src="images/constructors.gif" width=231 height=38 alt="Constructors">
</h2>
<a name="Job"></a>
<a name="Job(JobManager, int, int, float, int, int, ProbabilityDistribution, ProbabilityDistribution, ProbabilityDistribution, ProbabilityDistribution, ProbabilityDistribution, ProbabilityDistribution, ProbabilityDistribution, float, float, java.lang.String)"><img src="images/yellow-ball.gif" width=12 height=12 alt=" o "></a>
<b>Job</b>
<pre>
 public Job(<a href="JobManager.html#_top_">JobManager</a> manager,
            int id,
            int numberOfTasks,
            float startTime,
            int peId,
            int jobTypeId,
            <a href="ProbabilityDistribution.html#_top_">ProbabilityDistribution</a> endDist,
            <a href="ProbabilityDistribution.html#_top_">ProbabilityDistribution</a> spawnDist,
            <a href="ProbabilityDistribution.html#_top_">ProbabilityDistribution</a> spawnSizeDist,
            <a href="ProbabilityDistribution.html#_top_">ProbabilityDistribution</a> ioDist,
            <a href="ProbabilityDistribution.html#_top_">ProbabilityDistribution</a> ioDurationDist,
            <a href="ProbabilityDistribution.html#_top_">ProbabilityDistribution</a> commDist,
            <a href="ProbabilityDistribution.html#_top_">ProbabilityDistribution</a> laxityDist,
            float syncProb,
            float globalSyncProb,
            String jClass)
</pre>
<dl>
  <dd> Constructs a job.
<p>
  <dd><dl>
    <dt> <b>Parameters:</b>
    <dd> manager - manager for this job.
    <dd> id - global job identifier.
    <dd> numberOfTasks - initial number of tasks.
    <dd> startTime - start time of job.
    <dd> peId - processing element identifier.
    <dd> endDist - end task distribution.
    <dd> spawnDist - task spawning distribution.
    <dd> spawnSizeDist - distribution for task spawning size.
    <dd> ioDist - task I/O distribution.
    <dd> ioDurationDist - task I/O duration distribution.
    <dd> commDist - task communication distribution.
    <dd> syncProb - probability for communication being
 synchronization.
    <dd> laxityDist - deadline laxity distribution
    <dd> globalSyncProb - probability for synchronization being
 global.
  </dl></dd>
</dl>
<a name="methods"></a>
<h2>
  <img src="images/methods.gif" width=151 height=38 alt="Methods">
</h2>
<a name="getManager()"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="getManager"><b>getManager</b></a>
<pre>
 protected <a href="JobManager.html#_top_">JobManager</a> getManager()
</pre>
<dl>
  <dd> Returns the manager of this job.
<p>
  <dd><dl>
    <dt> <b>Returns:</b>
    <dd> the manager of this job.
  </dl></dd>
</dl>
<a name="getSimulator()"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="getSimulator"><b>getSimulator</b></a>
<pre>
 protected <a href="TheSimulator.html#_top_">TheSimulator</a> getSimulator()
</pre>
<dl>
  <dd> Returns the simulator that this object belongs to.
<p>
  <dd><dl>
    <dt> <b>Returns:</b>
    <dd> the simulator that this object belongs to.
  </dl></dd>
</dl>
<a name="getId()"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="getId"><b>getId</b></a>
<pre>
 public int getId()
</pre>
<dl>
  <dd> Returns the global job identifier for this object.
<p>
  <dd><dl>
    <dt> <b>Returns:</b>
    <dd> the global job identifier for this object.
  </dl></dd>
</dl>
<a name="numberOfTasks()"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="numberOfTasks"><b>numberOfTasks</b></a>
<pre>
 public int numberOfTasks()
</pre>
<dl>
  <dd> Returns the number of tasks contained by this object.
<p>
  <dd><dl>
    <dt> <b>Returns:</b>
    <dd> the number of tasks contained by this object.
    <dt> <b>See Also:</b>
    <dd> <a href="Task.html#_top_">Task</a>
  </dl></dd>
</dl>
<a name="numberOfLivingTasks()"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="numberOfLivingTasks"><b>numberOfLivingTasks</b></a>
<pre>
 public int numberOfLivingTasks()
</pre>
<dl>
  <dd> Returns the number of living tasks contained by this object.
<p>
  <dd><dl>
    <dt> <b>Returns:</b>
    <dd> the number of living tasks contained by this object.
    <dt> <b>See Also:</b>
    <dd> <a href="Task.html#_top_">Task</a>
  </dl></dd>
</dl>
<a name="numberOfTasks(int)"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="numberOfTasks"><b>numberOfTasks</b></a>
<pre>
 public int numberOfTasks(int taskState)
</pre>
<dl>
  <dd> Returns the number of tasks in the given state, contained by
 this object.
<p>
  <dd><dl>
    <dt> <b>Parameters:</b>
    <dd> state - a task state.
    <dt> <b>Returns:</b>
    <dd> the number of tasks in the given state, contained by
 this object.
    <dt> <b>See Also:</b>
    <dd> <a href="Task.html#_top_">Task</a>
  </dl></dd>
</dl>
<a name="numberOfTasksSpinning()"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="numberOfTasksSpinning"><b>numberOfTasksSpinning</b></a>
<pre>
 public int numberOfTasksSpinning()
</pre>
<dl>
  <dd> Returns the number of tasks spinning, contained by
 this object.
<p>
  <dd><dl>
    <dt> <b>Returns:</b>
    <dd> the number of tasks spinning, contained by
 this object.
    <dt> <b>See Also:</b>
    <dd> <a href="Task.html#_top_">Task</a>
  </dl></dd>
</dl>
<a name="numberOfTasksSpinSync()"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="numberOfTasksSpinSync"><b>numberOfTasksSpinSync</b></a>
<pre>
 public int numberOfTasksSpinSync()
</pre>
<dl>
  <dd> Returns the number of tasks spinning due to synchronization, contained by
 this object.
<p>
  <dd><dl>
    <dt> <b>Returns:</b>
    <dd> the number of tasks spinning due to synchronization, contained by
 this object.
    <dt> <b>See Also:</b>
    <dd> <a href="Task.html#_top_">Task</a>
  </dl></dd>
</dl>
<a name="numberOfTasksOnPE(int)"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="numberOfTasksOnPE"><b>numberOfTasksOnPE</b></a>
<pre>
 public int numberOfTasksOnPE(int peId)
</pre>
<dl>
  <dd> Returns the number of tasks on the given processing element,
 contained by this object.
<p>
  <dd><dl>
    <dt> <b>Parameters:</b>
    <dd> peId - a processing element identifier.
    <dt> <b>Returns:</b>
    <dd> the number of tasks on the given proecssing element,
 contained by this object.
    <dt> <b>See Also:</b>
    <dd> <a href="Task.html#_top_">Task</a>
  </dl></dd>
</dl>
<a name="numberOfTasksOnPE(int, int)"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="numberOfTasksOnPE"><b>numberOfTasksOnPE</b></a>
<pre>
 public int numberOfTasksOnPE(int peId,
                              int taskState)
</pre>
<dl>
  <dd> Returns the number of tasks on the given processing element
 in the given state, contained by this object.
<p>
  <dd><dl>
    <dt> <b>Parameters:</b>
    <dd> peId - a processing element identifier.
    <dd> taskState - a task state.
    <dt> <b>Returns:</b>
    <dd> the number of tasks on the given proecssing element,
 contained by this object.
    <dt> <b>See Also:</b>
    <dd> <a href="Task.html#_top_">Task</a>
  </dl></dd>
</dl>
<a name="tasks()"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="tasks"><b>tasks</b></a>
<pre>
 public long[] tasks()
</pre>
<dl>
  <dd> Returns an array with global task identifiers for all tasks
 contained by this object.
<p>
  <dd><dl>
    <dt> <b>Returns:</b>
    <dd> an array with global task identifiers for all tasks
 contained by this object.
    <dt> <b>See Also:</b>
    <dd> <a href="Task.html#_top_">Task</a>
  </dl></dd>
</dl>
<a name="tasks(int)"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="tasks"><b>tasks</b></a>
<pre>
 public long[] tasks(int taskState)
</pre>
<dl>
  <dd> Returns an array with global task identifiers for all tasks
 in the given state, contained by this object.
<p>
  <dd><dl>
    <dt> <b>Parameters:</b>
    <dd> taskState - a task state.
    <dt> <b>Returns:</b>
    <dd> an array with global task identifiers for all tasks
 in the given state, contained by this object.
    <dt> <b>See Also:</b>
    <dd> <a href="Task.html#_top_">Task</a>
  </dl></dd>
</dl>
<a name="tasksOnPE(int)"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="tasksOnPE"><b>tasksOnPE</b></a>
<pre>
 public long[] tasksOnPE(int peId)
</pre>
<dl>
  <dd> Returns an array with global task identifiers for all tasks
 on the given processing element, contained by this object.
<p>
  <dd><dl>
    <dt> <b>Parameters:</b>
    <dd> peId - a processing element identifier.
    <dt> <b>Returns:</b>
    <dd> an array with global task identifiers for all tasks
 on the given processing element, contained by this object.
    <dt> <b>See Also:</b>
    <dd> <a href="Task.html#_top_">Task</a>
  </dl></dd>
</dl>
<a name="tasksOnPE(int, int)"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="tasksOnPE"><b>tasksOnPE</b></a>
<pre>
 public long[] tasksOnPE(int peId,
                         int taskState)
</pre>
<dl>
  <dd> Returns an array with global task identifiers for all tasks
 on the given processing element in the given state, contained
 by this object.
<p>
  <dd><dl>
    <dt> <b>Parameters:</b>
    <dd> peId - a processing element identifier.
    <dt> <b>Returns:</b>
    <dd> an array with global task identifiers for all tasks
 on the given processing element in the given state, contained
 by this object.
    <dt> <b>See Also:</b>
    <dd> <a href="Task.html#_top_">Task</a>
  </dl></dd>
</dl>
<a name="generateTask(float, int, float)"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="generateTask"><b>generateTask</b></a>
<pre>
 public void generateTask(float time,
                          int peId,
                          float endTimeJob)
</pre>
<dl>
  <dd> Generates a task and adds it to this job.
<p>
  <dd><dl>
    <dt> <b>Parameters:</b>
    <dd> time - global time.
    <dd> peId - identifier for processing element to put task in.
  </dl></dd>
</dl>
<a name="generateTasks(int, float, int, float)"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="generateTasks"><b>generateTasks</b></a>
<pre>
 public void generateTasks(int n,
                           float time,
                           int peId,
                           float endTimeJob)
</pre>
<dl>
  <dd> Generates the given number of tasks and adds them to this job.
<p>
  <dd><dl>
    <dt> <b>Parameters:</b>
    <dd> n - number of tasks.
    <dd> time - global time.
    <dd> peId - identifier for processing element to put tasks in.
  </dl></dd>
</dl>
<a name="getTask(long)"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="getTask"><b>getTask</b></a>
<pre>
 protected <a href="Task.html#_top_">Task</a> getTask(long taskId)
</pre>
<dl>
  <dd> Returns the sought task.
<p>
  <dd><dl>
    <dt> <b>Parameters:</b>
    <dd> taskId - global task identifier for sought task.
    <dt> <b>Returns:</b>
    <dd> the sought task.
  </dl></dd>
</dl>
<a name="randomTasks(float, Task)"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="randomTasks"><b>randomTasks</b></a>
<pre>
 protected <a href="Task.html#_top_">Task</a>[] randomTasks(float fract,
                              <a href="Task.html#_top_">Task</a> excluded)
</pre>
<dl>
  <dd> Returns an array of randomly chosen tasks.
<p>
  <dd><dl>
    <dt> <b>Parameters:</b>
    <dd> fract - fraction of living tasks to choose.
    <dd> excluded - task to exclude from selection.
    <dt> <b>Returns:</b>
    <dd> an array of randomly chosen tasks.
  </dl></dd>
</dl>
<a name="randomTask(Task)"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="randomTask"><b>randomTask</b></a>
<pre>
 protected <a href="Task.html#_top_">Task</a> randomTask(<a href="Task.html#_top_">Task</a> excluded)
</pre>
<dl>
  <dd> Returns a randomly chosen task.
<p>
  <dd><dl>
    <dt> <b>Parameters:</b>
    <dd> excluded - task to exclude from selection.
    <dt> <b>Returns:</b>
    <dd> a randomly chosen task.
  </dl></dd>
</dl>
<a name="taskEnded(Task, float)"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="taskEnded"><b>taskEnded</b></a>
<pre>
 protected void taskEnded(<a href="Task.html#_top_">Task</a> task,
                          float taskEndTime)
</pre>
<dl>
  <dd> Called by an ended task.
<p>
  <dd><dl>
    <dt> <b>Parameters:</b>
    <dd> task - ended task.
    <dd> taskEndTime - time when task ended.
  </dl></dd>
</dl>
<a name="hasEnded()"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="hasEnded"><b>hasEnded</b></a>
<pre>
 public boolean hasEnded()
</pre>
<dl>
  <dd> Tests if the job has ended.
<p>
  <dd><dl>
    <dt> <b>Returns:</b>
    <dd> <code>true</code> if there are no living tasks left in
 this job; <code>false</code> otherwise.
  </dl></dd>
</dl>
<a name="getExecutionTime()"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="getExecutionTime"><b>getExecutionTime</b></a>
<pre>
 public float getExecutionTime()
</pre>
<dl>
  <dd> Returns the total execution time of the job.
<p>
  <dd><dl>
    <dt> <b>Returns:</b>
    <dd> the total execution time of the job.
  </dl></dd>
</dl>
<a name="getJobType()"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="getJobType"><b>getJobType</b></a>
<pre>
 public int getJobType()
</pre>
<a name="jobClass()"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="jobClass"><b>jobClass</b></a>
<pre>
 public String jobClass()
</pre>
<dl>
  <dd> Returns the user-defined class of the job.
<p>
  <dd><dl>
    <dt> <b>Returns:</b>
    <dd> the user-defined class of the job.
  </dl></dd>
</dl>
<a name="isContainedWithin(int, int)"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="isContainedWithin"><b>isContainedWithin</b></a>
<pre>
 protected boolean isContainedWithin(int start,
                                     int end)
</pre>
<dl>
  <dd> Specifies whether or not the execution of this job is
 completely contained within the given interval of time.
<p>
  <dd><dl>
    <dt> <b>Parameters:</b>
    <dd> start - start of time interval.
    <dd> end - end of time interval.
    <dt> <b>Returns:</b>
    <dd> <code>true</code> if the execution of this job is
 completely contained within the given interval of time;
 <code>false</code> otherwise.
  </dl></dd>
</dl>
<a name="toString()"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="toString"><b>toString</b></a>
<pre>
 public String toString()
</pre>
<dl>
  <dd> Returns a string representation of this object.
<p>
  <dd><dl>
    <dt> <b>Returns:</b>
    <dd> a string representation of this object.
    <dt> <b>Overrides:</b>
    <dd> <a href="java.lang.Object.html#toString()">toString</a> in class Object
  </dl></dd>
</dl>
<a name="synchronizationRequested(Task)"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="synchronizationRequested"><b>synchronizationRequested</b></a>
<pre>
 protected boolean synchronizationRequested(<a href="Task.html#_top_">Task</a> task)
</pre>
<dl>
  <dd> Tests if a synchronization has been requested for the given
 task.
<p>
  <dd><dl>
    <dt> <b>Parameters:</b>
    <dd> task - a task.
    <dt> <b>Returns:</b>
    <dd> <code>true</code> if the given task is expected to
 synchronize; <code>false</code> otherwise.
  </dl></dd>
</dl>
<a name="synchronize(Task)"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="synchronize"><b>synchronize</b></a>
<pre>
 protected void synchronize(<a href="Task.html#_top_">Task</a> task)
</pre>
<dl>
  <dd> Notifies this job that a tasks synchronizes.
<p>
  <dd><dl>
    <dt> <b>Parameters:</b>
    <dd> task - synchronizing task.
  </dl></dd>
</dl>
<a name="initiateGlobalSynchronization(Task)"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="initiateGlobalSynchronization"><b>initiateGlobalSynchronization</b></a>
<pre>
 protected boolean initiateGlobalSynchronization(<a href="Task.html#_top_">Task</a> task)
</pre>
<dl>
  <dd> Initiates global synchronization.
<p>
  <dd><dl>
    <dt> <b>Parameters:</b>
    <dd> task - initiating task.
    <dt> <b>Returns:</b>
    <dd> <code>true</code> if synchronization could be
 initiated; <code>false</code> otherwise.
  </dl></dd>
</dl>
<a name="initiateLocalSynchronization(Task)"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="initiateLocalSynchronization"><b>initiateLocalSynchronization</b></a>
<pre>
 protected boolean initiateLocalSynchronization(<a href="Task.html#_top_">Task</a> task)
</pre>
<dl>
  <dd> Initiates local synchronization.
<p>
  <dd><dl>
    <dt> <b>Parameters:</b>
    <dd> task - initiating task.
    <dt> <b>Returns:</b>
    <dd> <code>true</code> if synchronization could be
 initiated; <code>false</code> otherwise.
  </dl></dd>
</dl>
</body>
</html>
