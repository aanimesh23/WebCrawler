<HTML xmlns:o>
	<HEAD>
		<TITLE>ICS 280: Introduction to the Theory of Cryptography</TITLE><LINK rev="Made" href="mailto:stasio@ics.uci.edu"></HEAD>
	<BODY>
		<H2 align="center"><FONT size="6">ICS 280: Introduction to the Theory of Cryptography</FONT></H2>
		<P align="center"><STRONG><FONT size="5">Winter Quarter, 2004</FONT></STRONG></P>
		<P>
			<HR>
		<P></P>
		<P><STRONG><A href="http://www.ics.uci.edu/~stasio/winter04/outline.html">tentative outline</A>&nbsp;</STRONG></P>
		<P><STRONG><A href="http://www.ics.uci.edu/~stasio/winter04/reading.html">list of reference 
					readings</A></STRONG></P>
		<STRONG>
			<P><STRONG><A href="http://www.ics.uci.edu/~stasio/winter04/handouts.html">handouts (and 
						homeworks)</A></STRONG></P>
		</STRONG>
		<P>
			<HR>
		<P></P>
		<P>
			&nbsp;Instructor:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <A href="http://www.ics.uci.edu/~stasio/">
				Stanislaw Jarecki</A>
		</P>
		<UL>
			<LI>
			Class times:&nbsp;&nbsp;&nbsp;&nbsp; Tu-Th, 11-12:20
			<LI>
			Room:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
			CS building, room 243
			<LI>
			Class number:&nbsp; ICS 280, Section C
			<LI>
			Class code:&nbsp;&nbsp;&nbsp;&nbsp; 36783
			<LI>
			Office hours:&nbsp;&nbsp;&nbsp;Mon 3-5, and otherwise by appointment or just by 
			stopping by
			<LI>
				Textbook:&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; None, but lots of material is 
				available on-line (see more below)
			</LI>
		</UL>
		<P>&nbsp;</P>
		<H3>Course Description:</H3>
		<P>This course is an introduction to modern cryptography for graduate and advanced 
			undergraduate students.&nbsp;&nbsp; At the end of the course, the&nbsp;students 
			will be able to understand current research in cryptography and, if 
			interested,&nbsp;pursue such research themselves.&nbsp; The cryptographic 
			toolkit we will cover will be also useful&nbsp;for students interested 
			in&nbsp;algorithms or in security.
			<o:p></o:p></P>
		<P>
			Modern cryptography&nbsp;provides tools&nbsp;for the design of&nbsp;<EM>provably 
				secure&nbsp;</EM>protocols.&nbsp;&nbsp;It shows that complex security 
			requirements of modern computer systems can be satisfied by algorithms that are 
			provably secure against adversarial attacks, assuming some 
			well-defined&nbsp;computational complexity assumptions.&nbsp; Existence of such 
			proofs allows&nbsp;practitioners to build&nbsp;computer systems whose security 
			rests on firm foundations.&nbsp; However, the resulting computer <EM>systems</EM>
			are secure only to the degree that&nbsp;they are implemented correctly (an 
			issue we will not cover in this class), and that the security 
			requirements&nbsp;imposed on&nbsp;the cryptographic algorithm correctly 
			represent the operation of the system, and hence the types of&nbsp;attacks 
			that&nbsp;can be launched&nbsp;against it.&nbsp;&nbsp;We will touch on this 
			last point&nbsp;quite often in our class, whenever we&nbsp;discuss the security 
			requirement of&nbsp;any cryptographic tool.</P>
		<P>This winter&nbsp;quarter course&nbsp;is intended as an introductory class, and 
			so we will start&nbsp;with <EM>the fundamentals</EM> of modern cryptography and 
			gradually move up to more complex cryptographic tools, which can then be 
			applied&nbsp;to building secure protocols.&nbsp;&nbsp;The&nbsp;primary focus of 
			the class will be on:</P>
		<UL>
			<LI>
				<STRONG>Definitions:</STRONG>&nbsp; We will see how to 
			conceptualize&nbsp;the&nbsp;goals of security (e.g. "secure 
			communication"),&nbsp;and by doing so we will define&nbsp;cryptographic objects 
			(i.e. algorithms or protocols) of increasing complexity, like one-way 
			functions, collision-resistant functions, pseudorandom functions, signature 
			schemes, encryption schemes, and others.&nbsp; We will&nbsp;define the 
			needed&nbsp;properties of these objects&nbsp;by&nbsp;drawing examples from 
			their practical applications.
			<LI>
				<STRONG>Constructions, protocol design,&nbsp;composing systems from cryptographic 
					objects, rigorous proofs of security</STRONG>:&nbsp; We will see how to 
				achieve various security goals and construct&nbsp;the 
				corresponding&nbsp;cryptographic&nbsp;objects which <EM>provably</EM> meet the 
				required properties under&nbsp;well-defined <EM>computational difficulty 
					assumptions</EM>, e.g. the assumption that factoring is difficult.&nbsp; In 
				general, we will see how to construct more complex cryptographic objects from 
				simpler ones, and how the resulting tools can be used to satisfy requirements 
				of actual applications.</LI></UL>
		<P>The most important lesson of this course should be not any particular 
			cryptographic construction, but the <EM>approach</EM> of modern 
			cryptography:&nbsp; (1) the &nbsp;importance of defining&nbsp;the security 
			requirements of&nbsp;the&nbsp;application&nbsp;at hand, and (2)&nbsp;knowing 
			how to go about arguing if (and on what grounds)&nbsp;a proposed&nbsp;algorithm 
			satisfies these requirements.</P>
		<H3>Tentative Outline:</H3>
		<P>See the <A href="http://www.ics.uci.edu/~stasio/winter04/outline.html">tentative 
				outline</A> for the list of topics we will cover.</P>
		<H3>Background Reading List:</H3>
		<P>See the <A href="http://www.ics.uci.edu/~stasio/winter04/reading.html">list of 
				reference texts</A> for the course</P>
		<H3>Grading:</H3>
		<P>There will be&nbsp;about 4-6 homework sets (counting 70%) and a take-home final 
			(20%).&nbsp; You will be expected to actively participate&nbsp;in the 
			class.&nbsp; Depending on the attendance level, 10% of the grade will be 
			either&nbsp;for class participation or for scribing the lecture notes.
		</P>
		<h3>Prerequisites:</h3>
		<P>There are no formal prerequsites for this class.&nbsp; However:</P>
		<UL>
			<LI>
			You should be comfortable with proofs, with elementary probability, and have 
			the basic&nbsp;knowledge of discrete math used in computer science 
			(e.g.&nbsp;ICS.6A).
			<LI>
			It's recommended that you have some algorithms class (like ICS.161) and 
			you&nbsp;are familiar with assymptotic analysis of algorithm running time.
			<LI>
			It'd be also good if you took a computability/complexity class like ICS.162, so 
			you are familiar with P/NP and the notion of&nbsp;a reduction between 
			computational problems.
			<LI>
				It will help to be familiar with basic algebraic concepts (groups, fields), and 
				number theory concepts (e.g. primality), but you don't have to have a class in 
				it.</LI></UL>
		<P>The last three topics listed above will be&nbsp;briefly reviewed in class. In 
			fact, if you are missing some of this background, see the reading 
			list&nbsp;link above for&nbsp;review material which&nbsp;is available 
			on-line.&nbsp;&nbsp;Even if you do not have all the background listed above, 
			you&nbsp;will be able to pick it up from the class review, and then consult 
			the&nbsp;listed textbooks when needed.</P>
		<H3>This class is complementary to&nbsp;other UCI classes on security/cryptography:</H3>
		<P>No previous experience in cryptography or security is necessary for this class 
			(see the prerequisites above), but for those students who have taken or are 
			thinking of taking other UCI classes on security/cryptography, here is a word 
			of explanation why this class differs from and complements the&nbsp;related UCI 
			classes:</P>
		<UL>
			<LI>
				ICS 168/268:&nbsp;&nbsp; Students who took ICS 168/268 are very much encouraged 
				to take this class.&nbsp; The two classes&nbsp;cover different material and can 
				be taken in any order.&nbsp; The reason the&nbsp;two classes complement each 
				other&nbsp;well is that&nbsp;ICS 168/268 focuses on <EM>breadth</EM> of 
				cryptographic algorithms and&nbsp;secure applications, while this class focuses 
				on <EM>depth,</EM>&nbsp;by laying&nbsp;out&nbsp;a systematic approach to the 
				study of&nbsp;<EM>any</EM>
			secure algorithms and protocols.
			<LI>
				Math 173A:&nbsp;&nbsp; Similarly, students who took and liked&nbsp;"Intro to 
				Cryptology", Math&nbsp;173A, are encouraged to&nbsp;take this&nbsp;class 
				too.&nbsp; The material differs, but Math 173A is a very good introduction and 
				background for this class.&nbsp; Math 173A teaches number theoretical 
				foundations of the two most famous public key&nbsp;algorithms, i.e.&nbsp;the 
				RSA encryption/signature schemes based on the factoring assupmtion, and the 
				encryption/signature schemes based on the discrete logarithm 
				assumption.&nbsp;&nbsp; This is a very useful and fun material, but&nbsp;from 
				the point of view of&nbsp;crypto theory as taught in this class, what Math 
				173A&nbsp;shows is&nbsp;that a specific&nbsp;cryptographic object called a <EM>one 
					way function</EM>&nbsp;can be efficiently built from 
				particular&nbsp;number-theoretic assumptions (discrete log or factoring).&nbsp; 
				In this class we will take&nbsp;the assumption that one-way functions can 
				be&nbsp;constructed as more or less&nbsp;our starting point (!), and we will 
				see how to build more complex cryptographic objects on&nbsp;this and other 
				assumptions (see further info in the tentative course outline below).
			</LI>
		</UL>
		<P>
			<HR id="HR1">
		<P></P>
		<P></P>
		<ADDRESS>Last modified:&nbsp;07&nbsp;Jan 2004
		</ADDRESS>
	</BODY>
</HTML>
