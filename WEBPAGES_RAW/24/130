<!DOCTYPE html>
<html>
<title>Applications and
Demos, CS 175</title></title>
<meta name="viewport" content="width=device-width, initial-scale=1">



<!--MATERIAL BELOW TO BE INCLUDED ON ALL SITE PAGES--> 
<link rel="stylesheet" href="http://www.ics.uci.edu/~smyth/test/localw3.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.3/css/font-awesome.min.css"> <!--mini icons--> 
<link rel="stylesheet" href="http://www.w3schools.com/lib/w3-theme-blue.css">  <!-- color theme -->
<link rel="stylesheet" type="text/css" href="localstyle.css">  <!-- my own style -->
<link rel="stylesheet" type="text/css" href="http://www.ics.uci.edu/~smyth/courses/class_style.css">  <!-- my own style --->  
<link rel="icon" type="image/png" href="https://news.uci.edu/wp-content/uploads/2014/12/favicon.png"/> <!-- favicon -->

<body class="w3-animate-opacity">
  
<div style="margin-left:10%;  margin-right:10%;  margin-top:30px"> 



<!-- -------------------------------------------------------------------------------------------- -->

<h4> <b> Examples of Software and Demos for
Text Analysis</b> </h4>

CS 175, Winter 2017 <br>
 
The links below are
just a small example of the many Web pages you can find discussing
research demos, applications, sample code, for text analysis using AI
and machine learning techniques. These are intended to be a starting
point to help you in terms of thinking about ideas for projects. <br> 


<br><big><b>Sentiment Analysis</b></big><br> 

<a href="http://help.sentiment140.com/other-resources"> Sentiment140</a>: a very
comprehensive list of resources related to sentiment analysis, particularly for
Twitter. Also includes 
<a href="http://help.sentiment140.com/for-students"> labeled Twitter data</a> 

<a href="http://nlp.stanford.edu/sentiment/">Stanford deep learning demo
for sentiment analysis</a> (Web page with code, data, papers)
 <br>
 
 <a href="https://www.jair.org/media/4272/live-4272-8102-jair.pdf">
Sentiment analysis of short informal texts</a> (research
paper) <br />

Example of
using Python to build a <a
href="http://streamhacker.com/2010/05/10/text-classification-
sentiment-analysis-naive-bayes-classifier/">Naive Bayes text
classifier for sentiment analysis</a>. <br />


Blog tutorial on
building a classifier in <a
href="http://www.laurentluce.com/posts/twitter-sentiment-analysis-
using-python-and-nltk/">NLTK to classify tweets as positive or
negative sentiment</a>.  <br>



<br><big><b>Information Extraction </b></big><br>  

<a
href="https://gate.ac.uk/ie/">GATE demos and software</a> on
information extraction<br />

<a
href="http://reverb.cs.washington.edu/">Reverb software </a> for information extraction from the Web,
 from the University of Washington  <br />



<br><big><b> Question Answering </b></big><br>  

<a href="http://allenai.org/aristo/"> The Aristo Project </a> from
the Allen Institute for AI, for acquiring knowledge and question-answering.
Includes links to several research papers. <br>

<a href="https://github.com/machinalis/quepy"> The Quepy System </a> (in python)
for converting natural language questions into queries in a database query language. <br>


<a
href="http://nlp.stanford.edu/software/sempre/">Semantic parsing for
question answering</a> (from Stanford NLP group)<br />




<br><big><b>Embedding Text in Vector Spaces </b></big><br>  

<a href="https://code.google.com/p/word2vec/">word2vec from
Google</a> (with code)<br />


<a
href="http://deeplearning.net/tutorial/rnnslu.html">Recurrent neural
networks for word embeddings</a> (with Python code)<br /> 



<br><big><b> Other Applications </b></big><br>

 BookNLP, extracting information from books: <a
href="https://github.com/dbamman/book-nlp">Github repository</a>
(Java code) by David Bamman. <br />

<a
href="http://www.frbsf.org/economic-research/files/Varian-part_1.pdf"
>Making predictions from search query data</a>, slide presentation
from Choi and Varian<br />

<a
href="http://www.ncbi.nlm.nih.gov/pmc/articles/PMC2217579/">Text
mining for analyzing the biomedical literature</a>, introduction by
Cohen and Hunter, 2008<br />

Implementing a spelling corrector. <a
href="http://norvig.com/spell-correct.html">Blog post and Python
code</a> by Peter Norvig, Director of Research at Google.<br />


<br><big><b> Software Packages for NLP and Text Analysis </b></big><br>
(general-purpose toolkits with multiple components and algorithms -
see also NLTK 3.0 and scikit-learn as discussed in class)<br />

<a
href="https://pypi.python.org/pypi/gensim">Gensim</a>: Python library
for topic modeling, document indexing, and similarity retrieval<br
/>

<a
href="http://textblob.readthedocs.org/en/dev/index.html">Textblob</a>
: &nbsp;General Python library for analyzing text data (built on top
of NLTK and pattern).<br />

<a
href="http://www.clips.ua.ac.be/pattern">Pattern</a>: A Web mining
module in Python (doesn't support Python 3)<br
/>

<a href="http://mallet.cs.umass.edu/">MALLET</a>: useful toolkit
(in Java) from the University of Massachusetts, Amherst
(particularly&nbsp;for classification and topic modeling)<br
/>
&nbsp;&nbsp;&nbsp; (also: a tutorial article on <a
href="http://programminghistorian.org/lessons/topic-modeling-and-
mallet">how to use MALLET for topic modeling</a>)<br />

<a
href="http://nlp.stanford.edu/software/">Stanford NLP Software</a><br
/>

<a href="http://cogcomp.cs.illinois.edu/page/software/">Software
packages for NLP</a> from the University of Illinois (UIUC)<br />

<a
href="http://dirtdirectory.org/categories/text-mining">List of text
mining tools</a> from the Digital Research Tools Website<br/> 

</body></html>