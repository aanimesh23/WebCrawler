<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 3.2//EN">
<html>
<head>
<title>Exponential Algorithms: Homework 4</title>
</head>
<body bgcolor="#ffffff" text="#000000">

<h1><a href="./">ICS 280, Fall 2000:
Exponential Algorithms</a><br>
Homework Assignment 4
</h1>


<p>
Projects like <a href="http://www.distributed.net/">distributed.net</a>,
<a href="http://setiathome.ssl.berkeley.edu/">SETI@Home</a>,
<a href="http://entropia.com/">Entropia</a>,
and <a href="http://www.mersenne.org/default.htm">others</a>,
have attempted to apply the large number of computers available via the 
internet to perform massive computational tasks.  The model of computation 
is that a problem is broken up into tasks, and each computer in the project 
requests a task from a central coordinator.  When it finishes computing the 
task, it returns the results to the coordinator and requests a new task 
until the project is completed.  In order to keep network bandwidth to a 
minimum, the description and results of a task should be short, and each 
task should take a moderate amount of time (say an hour or a day).</p>

<p>Which of the exponential-algorithm paradigms we've seen in this course 
(e.g. generate-and-test, backtracking, dynamic programming, random-walk, 
and quantum computing) would be suitable for application in such a 
distributed system?  For each paradigm, explain how it could be partitioned 
into tasks or why it might be difficult to partition it into tasks.</p>

<h3>Due <a href="mailto:eppstein@ics.uci.edu">by email</a>
Friday, Dec. 8, 10:30AM.</h3>

Please <b>do not send MS Word</b> or other proprietary formats.
Plain text, TeX, HTML, or PDF are all acceptable.
</body>
</html>

