<html>
	<head>
		<title>Dynamo Middleware: FnQ</title>
		<style type="text/css" media="screen">
			/*<![CDATA[*/
				@import url(../css/dynamo.css);
				@import url(doxygen.css);
			/*]]>*/
		</style>
	</head>
	<body>
		<div id="container">
			<div id="top">
				<h1>Dynamo Middleware</h1>
			</div>
			<div id="rightnav">
				<ul>
					<li class="header">Navigation
						<ul>
							<li><a href="../index.html">Home</a></li>
							<li><a href="../docs.html">Documentation</a></li> 
							<li><a href="../people.html">People</a></li>
							<li><a href="../publication.html">Publications</a></li>
							<li><a href="../related.html">Related Links</a></li>
							<li><a href="../faq.html">FAQ</a></li>
						</ul>
					</li>
					<li class="header">Downloads
						<ul>
							<li><b>For Internal Use Only</b></li>
							<li><a href="files/dynamo_mw_0.1.tgz">Dynamo Middleware v0.1</a></li>
							<li><a href="files/zImage_paapi">DVS Kernel</a></li>
							<li><a href="files/libDynamoMiddleware.tgz">Dynamo Libraries</a></li>
							<li><a href="changelog.txt">Change log</a></li>
						</ul>
					</li>
				</ul>
			</div>
			<div id="content">
<!-- Generated by Doxygen 1.3.8 -->
<div class="qindex"><a class="qindex" href="index.html">Main&nbsp;Page</a> | <a class="qindex" href="annotated.html">Data&nbsp;Structures</a> | <a class="qindex" href="files.html">File&nbsp;List</a> | <a class="qindex" href="functions.html">Data&nbsp;Fields</a> | <a class="qindex" href="globals.html">Globals</a></div>
<h1>libDynamoMiddlewareARM.h File Reference</h1>ARM Middleware Libraries. <a href="#_details">More...</a>
<p>
<table border=0 cellpadding=0 cellspacing=0>
<tr><td></td></tr>
<tr><td colspan=2><br><h2>Data Structures</h2></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>struct &nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="structdynamo__backlight.html">dynamo_backlight</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Contains Backlight information.  <a href="structdynamo__backlight.html#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>struct &nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="structdynamo__battery.html">dynamo_battery</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Contains Battery information.  <a href="structdynamo__battery.html#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>struct &nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="structdynamo__cpu.html">dynamo_cpu</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Contains CPU Information.  <a href="structdynamo__cpu.html#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>struct &nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="structdynamo__memory.html">dynamo_memory</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Contains Memory Information.  <a href="structdynamo__memory.html#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>struct &nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="structdynamo__network.html">dynamo_network</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Contains Network Information.  <a href="structdynamo__network.html#_details">More...</a><br></td></tr>
<tr><td colspan=2><br><h2>Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>int&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="lib_dynamo_middleware_a_r_m_8h.html#a0">get_backlight_level</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Gets the backlight level.  <a href="#a0"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>int&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="lib_dynamo_middleware_a_r_m_8h.html#a1">set_backlight_level</a> (int lvl)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets the backlight to level Allows the caller to set the backlight intensity.  <a href="#a1"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>int&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="lib_dynamo_middleware_a_r_m_8h.html#a2">get_backlight_status</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Gets the backlights status [on|off].  <a href="#a2"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>int&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="lib_dynamo_middleware_a_r_m_8h.html#a3">set_backlight_status</a> (int status)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets the backlight [on 1|off 0] Allows the caller to set the status of the backlight 1 for on 0 for off.  <a href="#a3"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>int&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="lib_dynamo_middleware_a_r_m_8h.html#a4">get_battery_ac_status</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Checks if the Device is plugged in.  <a href="#a4"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>int&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="lib_dynamo_middleware_a_r_m_8h.html#a5">get_battery_power_level</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Gets devices battery level.  <a href="#a5"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>int&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="lib_dynamo_middleware_a_r_m_8h.html#a6">get_battery_min_remaining</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Gets the amount of power in minutes remaining.  <a href="#a6"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>char *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="lib_dynamo_middleware_a_r_m_8h.html#a7">get_cpu_model</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Gets the CPU model string.  <a href="#a7"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>float&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="lib_dynamo_middleware_a_r_m_8h.html#a8">get_cpu_load</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">returns the average load of the device  <a href="#a8"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>int&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="lib_dynamo_middleware_a_r_m_8h.html#a9">get_cpu_total_process</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Gets the amount of total processes on the device.  <a href="#a9"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>int&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="lib_dynamo_middleware_a_r_m_8h.html#a10">get_cpu_running_process</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Gets the current number of active processes on the device.  <a href="#a10"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>int&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="lib_dynamo_middleware_a_r_m_8h.html#a11">get_mem_total</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Gets the total amount of memory.  <a href="#a11"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>int&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="lib_dynamo_middleware_a_r_m_8h.html#a12">get_mem_free</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Gets the amount of free memory.  <a href="#a12"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>int&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="lib_dynamo_middleware_a_r_m_8h.html#a13">get_mem_total_swap</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Gets the total amount of swap.  <a href="#a13"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>int&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="lib_dynamo_middleware_a_r_m_8h.html#a14">get_mem_free_swap</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Gets the amount of free swap.  <a href="#a14"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>int&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="lib_dynamo_middleware_a_r_m_8h.html#a15">get_net_is_connected</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Gets the current network connection status.  <a href="#a15"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>int&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="lib_dynamo_middleware_a_r_m_8h.html#a16">get_net_is_wireless</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Gets the current wireless network connection status.  <a href="#a16"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>int&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="lib_dynamo_middleware_a_r_m_8h.html#a17">get_net_link_quality</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Gets the link quality of the wireless network.  <a href="#a17"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>int&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="lib_dynamo_middleware_a_r_m_8h.html#a18">get_net_sig_strength</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Gets the signal strength of the wireless network.  <a href="#a18"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>int&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="lib_dynamo_middleware_a_r_m_8h.html#a19">get_backlight_info</a> (struct <a class="el" href="structdynamo__backlight.html">dynamo_backlight</a> *backlight)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Collects the devices backlight information.  <a href="#a19"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>int&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="lib_dynamo_middleware_a_r_m_8h.html#a20">get_battery_info</a> (struct <a class="el" href="structdynamo__battery.html">dynamo_battery</a> *battery)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Collects the devices battery information.  <a href="#a20"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>int&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="lib_dynamo_middleware_a_r_m_8h.html#a21">get_cpu_info</a> (struct <a class="el" href="structdynamo__cpu.html">dynamo_cpu</a> *cpu)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Collects the devices cpu information.  <a href="#a21"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>int&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="lib_dynamo_middleware_a_r_m_8h.html#a22">get_memory_info</a> (struct <a class="el" href="structdynamo__memory.html">dynamo_memory</a> *memory)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Collects the devices memory information.  <a href="#a22"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>int&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="lib_dynamo_middleware_a_r_m_8h.html#a23">get_network_info</a> (struct <a class="el" href="structdynamo__network.html">dynamo_network</a> *network)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Collects the devices network information.  <a href="#a23"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>int&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="lib_dynamo_middleware_a_r_m_8h.html#a24">createSharedMemory</a> (int key, int size)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">creates a chunk of shared memory  <a href="#a24"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>int&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="lib_dynamo_middleware_a_r_m_8h.html#a25">readSharedMemory</a> (int shmid, void *data, int size)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">reads from the shared memory into a structuer  <a href="#a25"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>int&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="lib_dynamo_middleware_a_r_m_8h.html#a26">writeSharedMemory</a> (int shmid, void *data, int size)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">writes data to the shared memory  <a href="#a26"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>int&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="lib_dynamo_middleware_a_r_m_8h.html#a27">freeSharedMemory</a> (int shmid)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">releases the memory with id of shmid  <a href="#a27"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>int&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="lib_dynamo_middleware_a_r_m_8h.html#a28">createSemaphore</a> (int key)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">translate semaphore key to an ID  <a href="#a28"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>int&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="lib_dynamo_middleware_a_r_m_8h.html#a29">freeSemaphore</a> (int sem_id)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">free specified Semaphore  <a href="#a29"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="lib_dynamo_middleware_a_r_m_8h.html#a30">P</a> (int sid)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">acquire semaphore  <a href="#a30"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="lib_dynamo_middleware_a_r_m_8h.html#a31">V</a> (int sid)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">release semaphore  <a href="#a31"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>int&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="lib_dynamo_middleware_a_r_m_8h.html#a32">SendDatagram</a> (char *targetIP, int targetPort, int localPort, void *buf, int bufsiz)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sends a Datagram to a remote computer.  <a href="#a32"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>int&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="lib_dynamo_middleware_a_r_m_8h.html#a33">CreateUDPSocket</a> (char *localIP, int localPort)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">creates a UPD socket  <a href="#a33"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>int&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="lib_dynamo_middleware_a_r_m_8h.html#a34">UDP_Recv</a> (int sockfd, void *buf, int size)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Recives a datagram a remote computer.  <a href="#a34"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>int&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="lib_dynamo_middleware_a_r_m_8h.html#a35">UDP_Send</a> (int sockfd, char *targetIP, int targetPort, int localPort, void *buf, int bufsiz)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sends a Datagram to a remote computer.  <a href="#a35"></a><br></td></tr>
</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
ARM Middleware Libraries. 
<p>
Dynamo Middleware libraries, provide a easy to use interface for querying system information, utilizing shared memory, and communication framework<p>
Copyright (C) 2004 Dynamo Middleware Group<p>
version 0.5<p>
Authors: Michael Philpott, Shivajit Mohapatra<hr><h2>Function Documentation</h2>
<a class="anchor" name="a28" doxytag="libDynamoMiddlewareARM.h::createSemaphore" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> int createSemaphore           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>key</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
translate semaphore key to an ID 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td></td><td valign=top><em>key</em>&nbsp;</td><td>the Key that the semaphore should be created with </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>the ID to the shared memory </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="a24" doxytag="libDynamoMiddlewareARM.h::createSharedMemory" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> int createSharedMemory           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int&nbsp;</td>
          <td class="mdname" nowrap> <em>key</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>int&nbsp;</td>
          <td class="mdname" nowrap> <em>size</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
creates a chunk of shared memory 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td></td><td valign=top><em>key</em>&nbsp;</td><td>the Key to the shared memory </td></tr>
    <tr><td></td><td valign=top><em>size</em>&nbsp;</td><td>the size that the shaed memory should be </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>The ID to the shared memory </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="a33" doxytag="libDynamoMiddlewareARM.h::CreateUDPSocket" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> int CreateUDPSocket           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">char *&nbsp;</td>
          <td class="mdname" nowrap> <em>localIP</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>int&nbsp;</td>
          <td class="mdname" nowrap> <em>localPort</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
creates a UPD socket 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td></td><td valign=top><em>*localIP</em>&nbsp;</td><td>character array of the local IP address </td></tr>
    <tr><td></td><td valign=top><em>localPort</em>&nbsp;</td><td>a port number </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a class="anchor" name="a29" doxytag="libDynamoMiddlewareARM.h::freeSemaphore" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> int freeSemaphore           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>sem_id</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
free specified Semaphore 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td></td><td valign=top><em>sem_id</em>&nbsp;</td><td>the ID of the semaphore to free </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a class="anchor" name="a27" doxytag="libDynamoMiddlewareARM.h::freeSharedMemory" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> int freeSharedMemory           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>shmid</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
releases the memory with id of shmid 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td></td><td valign=top><em>shmid</em>&nbsp;</td><td>the id of the shared memory that is being freed </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a class="anchor" name="a19" doxytag="libDynamoMiddlewareARM.h::get_backlight_info" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> int get_backlight_info           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">struct <a class="el" href="structdynamo__backlight.html">dynamo_backlight</a> *&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>backlight</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Collects the devices backlight information. 
<p>
<dl compact><dt><b>See also:</b></dt><dd><a class="el" href="lib_dynamo_middleware_a_r_m_8h.html#a0">get_backlight_level()</a> <p>
<a class="el" href="lib_dynamo_middleware_a_r_m_8h.html#a2">get_backlight_status()</a> </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="a0" doxytag="libDynamoMiddlewareARM.h::get_backlight_level" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> int get_backlight_level           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Gets the backlight level. 
<p>
<dl compact><dt><b>Returns:</b></dt><dd>the backlight level 0 - 255 or -1 if an error </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="a2" doxytag="libDynamoMiddlewareARM.h::get_backlight_status" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> int get_backlight_status           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Gets the backlights status [on|off]. 
<p>
<dl compact><dt><b>Returns:</b></dt><dd>0 (off) 1 (on) or -1 (error reading backlight) </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="a4" doxytag="libDynamoMiddlewareARM.h::get_battery_ac_status" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> int get_battery_ac_status           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Checks if the Device is plugged in. 
<p>
<dl compact><dt><b>Returns:</b></dt><dd>0 or 1 </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="a20" doxytag="libDynamoMiddlewareARM.h::get_battery_info" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> int get_battery_info           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">struct <a class="el" href="structdynamo__battery.html">dynamo_battery</a> *&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>battery</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Collects the devices battery information. 
<p>
<dl compact><dt><b>See also:</b></dt><dd><a class="el" href="lib_dynamo_middleware_a_r_m_8h.html#a4">get_battery_ac_status()</a> <p>
<a class="el" href="lib_dynamo_middleware_a_r_m_8h.html#a5">get_battery_power_level()</a> <p>
<a class="el" href="lib_dynamo_middleware_a_r_m_8h.html#a6">get_battery_min_remaining()</a> </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="a6" doxytag="libDynamoMiddlewareARM.h::get_battery_min_remaining" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> int get_battery_min_remaining           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Gets the amount of power in minutes remaining. 
<p>
<dl compact><dt><b>Returns:</b></dt><dd>the amount of minutes that the system will have power for Note: need to implament to return -1 if its pluged in </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="a5" doxytag="libDynamoMiddlewareARM.h::get_battery_power_level" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> int get_battery_power_level           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Gets devices battery level. 
<p>
<dl compact><dt><b>Returns:</b></dt><dd>the systems power level in percentage 0(empty) - 100(full) </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="a21" doxytag="libDynamoMiddlewareARM.h::get_cpu_info" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> int get_cpu_info           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">struct <a class="el" href="structdynamo__cpu.html">dynamo_cpu</a> *&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>cpu</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Collects the devices cpu information. 
<p>
<dl compact><dt><b>See also:</b></dt><dd><a class="el" href="lib_dynamo_middleware_a_r_m_8h.html#a7">get_cpu_model()</a> <p>
<a class="el" href="lib_dynamo_middleware_a_r_m_8h.html#a8">get_cpu_load()</a> <p>
<a class="el" href="lib_dynamo_middleware_a_r_m_8h.html#a9">get_cpu_total_process()</a> <p>
<a class="el" href="lib_dynamo_middleware_a_r_m_8h.html#a10">get_cpu_running_process()</a> </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="a8" doxytag="libDynamoMiddlewareARM.h::get_cpu_load" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> float get_cpu_load           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
returns the average load of the device 
<p>
<dl compact><dt><b>Returns:</b></dt><dd>the average load of the cpu over the past minute </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="a7" doxytag="libDynamoMiddlewareARM.h::get_cpu_model" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> char* get_cpu_model           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Gets the CPU model string. 
<p>
<dl compact><dt><b>Returns:</b></dt><dd>a char* of the processors model information this will have to be freed by the caller </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="a10" doxytag="libDynamoMiddlewareARM.h::get_cpu_running_process" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> int get_cpu_running_process           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Gets the current number of active processes on the device. 
<p>
<dl compact><dt><b>Returns:</b></dt><dd>the amount of active tasks on the device </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="a9" doxytag="libDynamoMiddlewareARM.h::get_cpu_total_process" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> int get_cpu_total_process           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Gets the amount of total processes on the device. 
<p>
<dl compact><dt><b>Returns:</b></dt><dd>the amount of processes that have been started (active or passive) </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="a12" doxytag="libDynamoMiddlewareARM.h::get_mem_free" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> int get_mem_free           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Gets the amount of free memory. 
<p>
<dl compact><dt><b>Returns:</b></dt><dd>the amount of free memory available on your system </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="a14" doxytag="libDynamoMiddlewareARM.h::get_mem_free_swap" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> int get_mem_free_swap           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Gets the amount of free swap. 
<p>
<dl compact><dt><b>Returns:</b></dt><dd>the free swap amount of the system </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="a11" doxytag="libDynamoMiddlewareARM.h::get_mem_total" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> int get_mem_total           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Gets the total amount of memory. 
<p>
<dl compact><dt><b>Returns:</b></dt><dd>the full amount of memory (ie your system has 512 megs of ram) </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="a13" doxytag="libDynamoMiddlewareARM.h::get_mem_total_swap" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> int get_mem_total_swap           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Gets the total amount of swap. 
<p>
<dl compact><dt><b>Returns:</b></dt><dd>the total swap amount avaiable to your system </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="a22" doxytag="libDynamoMiddlewareARM.h::get_memory_info" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> int get_memory_info           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">struct <a class="el" href="structdynamo__memory.html">dynamo_memory</a> *&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>memory</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Collects the devices memory information. 
<p>
<dl compact><dt><b>See also:</b></dt><dd><a class="el" href="lib_dynamo_middleware_a_r_m_8h.html#a11">get_mem_total()</a> <p>
<a class="el" href="lib_dynamo_middleware_a_r_m_8h.html#a12">get_mem_free()</a> <p>
<a class="el" href="lib_dynamo_middleware_a_r_m_8h.html#a13">get_mem_total_swap()</a> <p>
<a class="el" href="lib_dynamo_middleware_a_r_m_8h.html#a14">get_mem_free_swap()</a> </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="a15" doxytag="libDynamoMiddlewareARM.h::get_net_is_connected" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> int get_net_is_connected           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Gets the current network connection status. 
<p>
<dl compact><dt><b>Returns:</b></dt><dd>1 if the device is connected or 0 if no network is present </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="a16" doxytag="libDynamoMiddlewareARM.h::get_net_is_wireless" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> int get_net_is_wireless           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Gets the current wireless network connection status. 
<p>
<dl compact><dt><b>Returns:</b></dt><dd>1 if the device has a wireless connection or 0 if no wireless connection</dd></dl>
need to test when the card is in but not connected     </td>
  </tr>
</table>
<a class="anchor" name="a17" doxytag="libDynamoMiddlewareARM.h::get_net_link_quality" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> int get_net_link_quality           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Gets the link quality of the wireless network. 
<p>
<dl compact><dt><b>Returns:</b></dt><dd>the link quality of the wireless network or -1 if nothing is present </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="a18" doxytag="libDynamoMiddlewareARM.h::get_net_sig_strength" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> int get_net_sig_strength           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Gets the signal strength of the wireless network. 
<p>
<dl compact><dt><b>Returns:</b></dt><dd>the signal quality of the wireless network or -1 nothing is present </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="a23" doxytag="libDynamoMiddlewareARM.h::get_network_info" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> int get_network_info           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">struct <a class="el" href="structdynamo__network.html">dynamo_network</a> *&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>network</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Collects the devices network information. 
<p>
<dl compact><dt><b>See also:</b></dt><dd><a class="el" href="lib_dynamo_middleware_a_r_m_8h.html#a15">get_net_is_connected()</a> <p>
<a class="el" href="lib_dynamo_middleware_a_r_m_8h.html#a16">get_net_is_wireless()</a> <p>
<a class="el" href="lib_dynamo_middleware_a_r_m_8h.html#a17">get_net_link_quality()</a> <p>
<a class="el" href="lib_dynamo_middleware_a_r_m_8h.html#a18">get_net_sig_strength()</a> </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="a30" doxytag="libDynamoMiddlewareARM.h::P" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void P           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>sid</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
acquire semaphore 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td></td><td valign=top><em>sid</em>&nbsp;</td><td>the ID of the semaphore to obtain </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a class="anchor" name="a25" doxytag="libDynamoMiddlewareARM.h::readSharedMemory" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> int readSharedMemory           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int&nbsp;</td>
          <td class="mdname" nowrap> <em>shmid</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>void *&nbsp;</td>
          <td class="mdname" nowrap> <em>data</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>int&nbsp;</td>
          <td class="mdname" nowrap> <em>size</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
reads from the shared memory into a structuer 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td></td><td valign=top><em>shmid</em>&nbsp;</td><td>the ID of the shared memory </td></tr>
    <tr><td></td><td valign=top><em>*data</em>&nbsp;</td><td>the structure that will be read </td></tr>
    <tr><td></td><td valign=top><em>size</em>&nbsp;</td><td>the size of the item that will be read </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a class="anchor" name="a32" doxytag="libDynamoMiddlewareARM.h::SendDatagram" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> int SendDatagram           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">char *&nbsp;</td>
          <td class="mdname" nowrap> <em>targetIP</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>int&nbsp;</td>
          <td class="mdname" nowrap> <em>targetPort</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>int&nbsp;</td>
          <td class="mdname" nowrap> <em>localPort</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>void *&nbsp;</td>
          <td class="mdname" nowrap> <em>buf</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>int&nbsp;</td>
          <td class="mdname" nowrap> <em>bufsiz</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sends a Datagram to a remote computer. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td></td><td valign=top><em>*targetIP</em>&nbsp;</td><td>character array of target computers IP Address </td></tr>
    <tr><td></td><td valign=top><em>localPort</em>&nbsp;</td><td>local port of the UPD socket </td></tr>
    <tr><td></td><td valign=top><em>targetPort</em>&nbsp;</td><td>the remote hosts port </td></tr>
    <tr><td></td><td valign=top><em>*buf</em>&nbsp;</td><td>the information to be sent </td></tr>
    <tr><td></td><td valign=top><em>bufsiz</em>&nbsp;</td><td>the size of the item to be sent </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a class="anchor" name="a1" doxytag="libDynamoMiddlewareARM.h::set_backlight_level" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> int set_backlight_level           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>lvl</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets the backlight to level Allows the caller to set the backlight intensity. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td></td><td valign=top><em>lvl</em>&nbsp;</td><td>integer 0-255 with 255 being the highest level </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a class="anchor" name="a3" doxytag="libDynamoMiddlewareARM.h::set_backlight_status" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> int set_backlight_status           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>status</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets the backlight [on 1|off 0] Allows the caller to set the status of the backlight 1 for on 0 for off. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td></td><td valign=top><em>status</em>&nbsp;</td><td>0 or 1 </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a class="anchor" name="a34" doxytag="libDynamoMiddlewareARM.h::UDP_Recv" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> int UDP_Recv           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int&nbsp;</td>
          <td class="mdname" nowrap> <em>sockfd</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>void *&nbsp;</td>
          <td class="mdname" nowrap> <em>buf</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>int&nbsp;</td>
          <td class="mdname" nowrap> <em>size</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Recives a datagram a remote computer. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td></td><td valign=top><em>sockfd</em>&nbsp;</td><td>pointer to the UDP socket </td></tr>
    <tr><td></td><td valign=top><em>*buf</em>&nbsp;</td><td>address of the structure to fill </td></tr>
    <tr><td></td><td valign=top><em>size</em>&nbsp;</td><td>size of the structure to fill </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a class="anchor" name="a35" doxytag="libDynamoMiddlewareARM.h::UDP_Send" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> int UDP_Send           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int&nbsp;</td>
          <td class="mdname" nowrap> <em>sockfd</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>char *&nbsp;</td>
          <td class="mdname" nowrap> <em>targetIP</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>int&nbsp;</td>
          <td class="mdname" nowrap> <em>targetPort</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>int&nbsp;</td>
          <td class="mdname" nowrap> <em>localPort</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>void *&nbsp;</td>
          <td class="mdname" nowrap> <em>buf</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>int&nbsp;</td>
          <td class="mdname" nowrap> <em>bufsiz</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sends a Datagram to a remote computer. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td></td><td valign=top><em>sockfd</em>&nbsp;</td><td>pointer to the upd socket </td></tr>
    <tr><td></td><td valign=top><em>*targetIP</em>&nbsp;</td><td>character array of target computers IP Address </td></tr>
    <tr><td></td><td valign=top><em>targetPort</em>&nbsp;</td><td>the remote hosts port </td></tr>
    <tr><td></td><td valign=top><em>localPort</em>&nbsp;</td><td>local port of the UPD socket </td></tr>
    <tr><td></td><td valign=top><em>*buf</em>&nbsp;</td><td>the information to be sent </td></tr>
    <tr><td></td><td valign=top><em>bufsiz</em>&nbsp;</td><td>the size of the item to be sent </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a class="anchor" name="a31" doxytag="libDynamoMiddlewareARM.h::V" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void V           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>sid</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
release semaphore 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td></td><td valign=top><em>sid</em>&nbsp;</td><td>the ID of the semaphore to release </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a class="anchor" name="a26" doxytag="libDynamoMiddlewareARM.h::writeSharedMemory" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> int writeSharedMemory           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int&nbsp;</td>
          <td class="mdname" nowrap> <em>shmid</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>void *&nbsp;</td>
          <td class="mdname" nowrap> <em>data</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>int&nbsp;</td>
          <td class="mdname" nowrap> <em>size</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
writes data to the shared memory 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td></td><td valign=top><em>shmid</em>&nbsp;</td><td>the ID of the shared memory to write to </td></tr>
    <tr><td></td><td valign=top><em>*data</em>&nbsp;</td><td>the information to write inot the shared memory </td></tr>
    <tr><td></td><td valign=top><em>size</em>&nbsp;</td><td>the size of the item that will be written </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
			</div>
			<div id="footer">
				<!-- &copy; Copyright 2004 Michael Philpott. -->
			</div>
		</div>
	</body>
</html>
