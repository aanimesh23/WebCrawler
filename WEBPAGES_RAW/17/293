<HTML><HEAD>
<TITLE>Rotating Caliper Graph</TITLE>
<META name="Owner" value="eppstein">
<META name="Reply-To" value="eppstein@ics.uci.edu">
</HEAD><BODY BGCOLOR="#FFFFFF" FGCOLOR="#000000">
<!--#config timefmt="%d %h %Y, %T %Z" -->
<H1>
<A HREF="http://www.ics.uci.edu/~eppstein/junkyard/"><IMG src="junkyard.gif" ALIGN=center WIDTH="545" HEIGHT="45" ALT="The Geometry Junkyard" BORDER=0></A>
</H1>
<HR>
<H1>
The Rotating Caliper Graph
</H1>

The well-known rotating caliper algorithm for computing the width or
diameter of a convex polygon considers pairs of parallel lines tangent
to the polygon.  If we continuously sweep the slope of the parallel
lines through 360 degrees, maintaining tangency, they will alternately
be tangent at a pair of vertices or supported by an edge; in this manner
the two tangent points each make a single circuit of the polygon's
boundary.  The width and diameter of the polygon are then simply the
minimum and maximum separation attained by the parallel lines during
this sweep process.

<P><CENTER><IMG src="rcg.gif"></CENTER>

<P>The rotating caliper graph (shown above) has as its edges the
tangent pairs considered by the rotating caliper
algorithm.  Equivalently an edge <I>xy</I> is in the rotating caliper graph
exactly when all input points lie between the two parallel lines through
<I>x</I> and <I>y</I> and perpendicular to <I>xy</I>.
This definition applies to arbitrary point sets, but
like the farthest point Delaunay
triangulation the rotating caliper graph only connects convex hull
vertices.

<P>The rotating caliper graph has some interesting properties.
First, in a natural expected-case model of dynamic geometric
optimization algorithms, the expected number of RCG edges that change
per point insertion or deletion is only a small constant
(and these edges can be found quickly using some data structures
to keep track of the convex hull).
As a consequence, we can maintain the RCG itself, and the width
and diameter of the point set, in logarithmic expected time
per operation.
Second, the RCG is a <I>thrackle</I>.
This class of graph drawings, defined by John Conway,
consists of graphs in which each pair of edges has a single
intersection point (which may either be a vertex or interior
to the two edges).  Conway asked whether every <I>n</I>-vertex
thrackle has at most <I>n</I> edges, and the question still
remains open if curved edges are allowed.  Straight-line-segment
thrackles such as the RCG are quite well understood.

<P>
[From <A HREF="/~eppstein/pubs/p-avgdynopt.html">
"Average Case Analysis of Dynamic Geometric Optimization"</A>.]
<P>

<HR><P>
From the <A HREF="/~eppstein/junkyard/">Geometry Junkyard</A>,
computational
and recreational geometry.<BR>
<A HREF="http://www.ics.uci.edu/~eppstein/">David Eppstein</A>,
<A HREF="http://www.ics.uci.edu/~theory/">Theory Group</A>,
<A HREF="http://www.ics.uci.edu/">ICS</A>,
<A HREF="http://www.uci.edu/">UC Irvine</A>.<P>
<SMALL>Last update: <!--#flastmod file="rcg.html" -->.</SMALL>
</BODY></HTML>
