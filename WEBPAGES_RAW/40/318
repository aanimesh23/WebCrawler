<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>Asterix Ecosystem</title>
<link rel="stylesheet" href="css/styles.css" type="text/css" />
<script src="js/jquery.min.js"></script>
<script>
$(document).ready(function(){
    $("#ecosystem").addClass("selected");
});
</script>
</head>

<body>
<div id="container">
    <script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-50915345-1', 'uci.edu');
  ga('send', 'pageview');

</script>

<!-- Facebook Like button script -->
<div id="fb-root"></div>
<script>(function(d, s, id) {
  var js, fjs = d.getElementsByTagName(s)[0];
  if (d.getElementById(id)) return;
  js = d.createElement(s); js.id = id;
  js.src = "//connect.facebook.net/en_US/all.js#xfbml=1";
  fjs.parentNode.insertBefore(js, fjs);
}(document, 'script', 'facebook-jssdk'));</script>

<div id="header">
    <table>
        <tr>
            <td align="left">
                <a href=""><img src="logo.svg" width="300"></img></a>
            </td>
	    <td align="left">
                <a href=""><img src="images/lead.png" width="300"></img></a>
            </td>
            <td align="right" valign="bottom">
				<table style="text-align:right;">
				<tr>
					<td style="padding-bottom:5px;">
						<div style="float: right">
							<g:plusone size="medium" align="right" href="http://pregelix.ics.uci.edu/"></g:plusone>
						</div>
					</td>
				</tr>
				<!--<tr>
					<td>
						<div class="fb-like" data-href="http://pregelix.ics.uci.edu" data-send="false" data-layout="button_count" data-width="450" data-show-faces="false" data-font="arial"></div>
					</td>
				</tr>
				<tr style="float:right;">
					<td>
						<a target="_blank" href="https://twitter.com/ASTERIXUCI"><img src="images/twitter.png" title="AsterixDB Twitter"></img></a>
					</td>
					<td>
						<a target="_blank" href="https://www.facebook.com/AsterixDB"><img src="images/facebook.png" title="AsterixDB Facebook"></img></a>
					</td>
				</tr>
				-->
				</table>
            </td>
	<td>
	</td>
        </tr>   
    </table>
</div>  

<!-- Google+ +1 button script -->
<script type="text/javascript">
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
</script>

<div id="navigation">
    <ul>
        <li id="index"><a href="index.html">Overview</a></li>
        <!--<li id="ecosystem"><a href="ecosystem.html">Ecosystem</a></li> -->
        <li id="download"><a href="download.html">Download</a></li>
	<li id="pubs"><a href="performance.html">Performance</a></li>
        <!--<li><a href="./documentation/index.html" target="_blank">Documentation</a></li>-->
        <li id="news"><a href="news.html">News</a></li>
        <li id="pubs"><a href="publications.html">Publications</a></li>
	<li id="talks"><a href="talks.html">Talks</a></li>     
        <li id="team"><a href="team.html">Team</a></li>
        <li id="sponsors"><a href="sponsors.html">Sponsors</a></li>
        <li id="contact"><a href="contact.html">Contact</a></li>
    </ul>
</div>

    <div id="body">
    	
        
        <div id="content">
			<h1>Asterix Ecosystem</h1>
			
            <ul>
			<li><h3><a href="http://code.google.com/p/asterixdb">ASTERIX Big Data Management System</a></h3></li>	
			<p>The growing popularity of Hive and Pig for parallel data analysis shows the importance of high-level data langugages: they can greatly reduce development time and make data analysts' lives much easier. We are developing the ASTERIX query processor on top of the Hyracks runtime. This includes the AQL (ASTERIX Query Language) compiler, algebra, and optimizer. AQL queries are compiled to cost-efficient Hyracks jobs. If you want to analyze large scale semi-structured data in parallel, plan to try AQL when it becomes available.</p>
			
			<li><h3><a href="http://code.google.com/p/hyracks">Hyracks Data-Parallel Platform</a></h3></li>
			<p>Hyracks is a generalized alternative to infrastructures such as MapReduce (Hadoop) and Dryad for solving data-parallel problems. It balances the need for expressiveness beyond MapReduce while providing out-of-the-box support for commonly occurring communication patterns and operators for data-oriented tasks. If you have use cases involving massive amounts of data and thus requiring parallelism, be sure to check out the Hyracks project.</p>

            <li><h3><a href="http://hyracks.org/projects/pregelix/">Pregelix</a></h3></li>
            <p>Pregelix is an open-source implementation of the bulk-synchronous vertex-oriented programming model (<a href="http://googleresearch.blogspot.com/2009/06/large-scale-graph-computing-at-google.html">Pregel API</a>) for large-scale graph analytics, which scales to very large clusters and very large graphs. Internally, we use the Hyracks data-parallel execution engine to execute Pregelix. Pregelix benefits from Hyracks operators which have been designed to make efficient use of available main memory to produce results quickly. At the same time, the operators gracefully spill data to disk when running in memory-constrained situations. This property allows Pregelix to perform computations on very large amounts of graph data regardless of the size of the cluster being used.</p>

			<li><h3><a href="https://code.google.com/p/hyracks/wiki/HivesterixUserManual023">HiveQL Relational Query Processor Plug-in</a></h3></li>	
			<p>Given the data-model-agnostic ASTERIX algebra layer, we are able to easily layer a relational query processor such as Hive on top of the Hyracks runtime. In this project, Hive runtime plans are translated to ASTERIX algebra plans, but all functions, expression evaluators, metadata, intermediate data formats, and input/output formats in Hive are reused. If you are a Hive user, please check-out this project as a way to get better performance without any changes in your HiveQL queries.</p>

			<li><h3><a href="http://code.google.com/p/hyracks">Hyracks-to-Hadoop Compatibility Layer</a></h3></li>
            <p>Given that many data analysts are adopting the Hadoop platform, we believe that ASTERIX must provide an easy migration path for existing Hadoop projects in order to attract new users and support clusters running a mix of old and new use cases. In that spirit, we have built a Hadoop compatibility layer on top of Hyracks so that existing Hadoop programs can be executed using Hyracks. If you are a Hadoop user, please check out this aspect of the Hyracks project if you would like speed up your job execution in a low-cost and seamless fashion.</p>

			</ul>
        </div>
        
    
    	<div class="clear"></div>
    </div>
    <div id="footer">
    <table>
    <tr>
    <td align="left" width="220">
        <a href="http://www.isg.ics.uci.edu" target="_blank"><img src="images/isg.png" height="75" width="75" align="left" style="background-color : #fff;"></img></a>
    </td>
    <td align="center">
        <p>&copy; pregelix.ics.uci.edu 2014.</br><font style="font-size:xx-small;">Design by <a href="http://www.spyka.net">Free CSS Templates</a></font></p>
    </td>
    <td align="right" width="220">
        <a href="http://www.uci.edu" target="_blank"><img src="images/uci_white.png" height="75" width="75"></img></a>
        <a href="http://www.ucla.edu" target="_blank"><img src="images/ucla_black.gif" height="75" width="75"></img></a>
    </td>
    </tr>
    </table>
</div>


</div>
</body>
</html>
