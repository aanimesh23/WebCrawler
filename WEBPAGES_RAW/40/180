<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE html PUBLIC
 "-//W3C//DTD XHTML 1.1//EN"
 "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">

<head>
<meta http-equiv="content-type" content="text/html; charset=iso-8859-1" />
<link rel="stylesheet" href="../course2.css" type="text/css" />

<title>ICS 23 / CSE 23 - Lab Manual and Work Schedule</title>
</head>
<body>

<div class="header">

<p>ICS 23  / CSE 23 - Lab Manual and Work Schedule 
<br>
Fall 2008

</div>

<div class="section">

<hr />

<p class="title">Work Schedule</p>

<ul>
  <li> Day 1 (Sep. 26): Read Chapters 1-2 in 
  <a href="http://java4.datastructures.net">Goodrich-Tamassia</a>.
  <li> Week 1 (Sep. 29-Oct. 3): Read Chapters 3-5 in 
  <a href="http://java4.datastructures.net">Goodrich-Tamassia</a>.
  <li> Week 2 (Oct. 6-10): Read Chapter 6 in 
  <a href="http://java4.datastructures.net">Goodrich-Tamassia</a>.
  <li><b><a href="Dark">Project #1: <i>Dark at the End of the Tunnel</i></a></b>,
  due Friday, Oct. 10, 2008, 6:59pm.
  <li> Week 3 (Oct. 13-17): Read Chapter 7 in 
  <a href="http://java4.datastructures.net">Goodrich-Tamassia</a>.
  <li> <b>Midterm 1: Wednesday, October 15, in class</b>.
  There is a set of <a href="midterm1.html">Study Questions</a> 
  and an <a href="midterm1.pdf">Old Midterm</a> available for studying from.
  <li> Week 4 (Oct. 20-Oct. 24): Read Chapter 8 in 
  <a href="http://java4.datastructures.net">Goodrich-Tamassia</a>.
  <li><b><a href="EndOfTheGame">Project #2: <i>End of the Game</i></a></b>,
  due Friday, October 24, 2008, 6:59pm.
  <li> Week 5 (Oct. 27-31): Read Chapter 9 
  and Sections 10.1, 10.2, and 10.4 in 
  <a href="http://java4.datastructures.net">Goodrich-Tamassia</a>.
  <li> Week 6 (Nov. 3-7): Read Chapter 11 in 
  <a href="http://java4.datastructures.net">Goodrich-Tamassia</a>.
  <li><b><a href="LostForWords">Project #3: <i>Lost for Words</i></a></b>,
  due Friday, November 7, 2008, 6:59pm.
  <li> Week 7 (Nov. 10-14): Read Section 13.1 in 
  <a href="http://java4.datastructures.net">Goodrich-Tamassia</a>.
  <li> <b>Midterm 2: Friday, November 12, in class</b>.
  There is a set of <a href="midterm2.html">Study Questions</a>
  and an <a href="midterm2.pdf">Old Midterm</a> available for studying from.
  <li> Week 8 (Nov. 17-21): Read Sections 13.2-13.3 in 
  <a href="http://java4.datastructures.net">Goodrich-Tamassia</a>.
  <li><b><a href="LordOfTheRingbinders">Project #4: <i>Lord of the Ringbinders</i></a></b>,
  due Friday, November 21, 2008, 6:59pm.
  <li> Week 9 (Nov. 24-28): Read Sections 13.4-13.6 in 
  <a href="http://java4.datastructures.net">Goodrich-Tamassia</a>.
  <li> Week 10 (Dec. 1-5): Read Sections 13.7 and 14.1 in 
  <a href="http://java4.datastructures.net">Goodrich-Tamassia</a>.
  <li><b><a href="RockAndRoll">Project #5: <i>Rock and Roll Stops Traffic</i></a></b>,
  due Friday, December 5, 2008, 6:59pm.
  <li> <b>Final Exam: Wednesday, December 10, 8:00am-10:00am, in our
  usual classroom</b>.
  There is a set of <a href="final.html">Study Questions</a> 
  and an <a href="final05.pdf">old final</a> available.
</ul>

</div>

<div class="section">

<hr />

<p class="title">Evaluation of Projects</p>

<p>Each of your projects will be graded using a 20-point scale.  As you work on your projects, it is naturally your primary goal to write a program that works correctly.  However, writing a correctly-working program is not your sole objective.  Each of your projects will be evaluated for several different qualities, which are defined (along with their relative values) in the table below.</p>

<table class="normal">
  <tr class="top">
    <td>Quality</td>
    <td>Value</td>
    <td>Description</td>
  </tr>
  <tr>
    <td>Correctness and robustness</td>
    <td>10&nbsp;points</td>
    <td>When the program is given valid input, does it generate the correct output?  Is the output spacing correct, if this is an issue?  In short, does the program do what it's supposed to do for any input that meets the project specifications?  When the program is given unusual or erroneous input, is it handled gracefully?  Programs should not crash in these situations; they should print informative messages to the user and continue executing (if possible).</td>
  </tr>
  <tr>
    <td>Quality of solution, documentation, and style</td>
    <td>10&nbsp;points</td>
    <td>Points will be deducted for particularly awkward, cumbersome, or inappropriate ways of approaching a problem.  Your program should be divided into logical parts using classes where appropriate, each encapsulating a single idea or task.  There should be enough comments to make the program clear to the reader (though it should be noted that good modularity and well-named identifiers make the commenting burden lighter).  Identifier names should be chosen to reflect their function; the names should be meaningful to the reader.</td>
  </tr>
  <tr>
    <td><b>Total</b></td>
    <td><b>20&nbsp;points</b></td>
    <td></td>
  </tr>
</table>

<p>If you submit a program that does not compile, we will not be able to execute it and, thus, will not be able to evaluate its correctness.  It is your responsibility to turn in code that compiles.  Any program that does not compile will automatically receive zero points on the <b>Correctness and Robustness</b> portions of the project score, regardless of how much code there is or how close it is to working.</p>

<p>This course moves forward at a rapid pace, as there is a project due roughly every other week.  Therefore, late submissions of projects will not be accepted.  Bear in mind that you will receive partial credit for a project which is partially completed, so I encourage you to submit what you have when the project is due.</p>

</div>

<div class="section">

<hr />

<p class="title">Style standards</p>

<p>Wondering what constitutes an acceptable coding style?  Check out the course <a href="CodingStandards.html">style standards</a>, which explain how your code should look.</p>

</div>

<div class="section">

<hr />

<p class="title">Submitting your projects</p>

<p>When you complete each project, you must submit it to us electronically.  Follow <a href="SubmittingProjects.html">this link</a> for a detailed description of how to submit your projects.  Understand that we will only accept projects submitted using the procedure described there; we <i>do not</i> accept printed copies of your projects, nor do we accept them via email.</p>

</div>

<div class="section">

<hr />

<p class="title">Development environment</p>

<p>The officially-supported development environment for ICS 23 is a text editor, such as TextPad, the command-line compiler <b>javac</b>, and the command-line virtual machine <b>java</b>.  Your TA's will use <b>javac</b> and <b>java</b> when compiling and testing your programs.  The machines in the ICS lab, by default, use the compiler that comes with Sun Java 2 Standard Edition SDK.</p>

<p>While I encourage you to work on your projects in the labs as much as you can, so that help will be available for you when you need it, I also understand the reality that many of you will want to work from home at least part of the time.  <i>You're responsible for obtaining and installing this software on your machines; we realistically cannot and will not support each of your home installations.</i>  You'll need the following software, all of which can be obtained free of charge.</p>

<ul>
  <li><b>A text editor.</b>  There are many options here, as text
  editors are plentiful (and can be cheap or even free).  TextPad is
  available for your use on the machines in the ICS labs, and can be
  purchased for home use from <a
  href="http://www.textpad.com/">www.textpad.com</a> for $27.  There
  are other viable text editors for home use, including free
  editors such as jEdit (available at <a
  href="http://www.jedit.org/">www.jedit.org</a>) and 
  XEmacs (available at
  <a href="http://www.xemacs.org/">www.xemacs.org</a>).
  </li>

  <li><b>Sun Java 2 Standard Edition SDK.</b>  This package is
  available free of charge from <a
  href="http://java.sun.com/">java.sun.com</a>.  It contains the
  compiler <b>javac</b>, the virtual machine <b>java</b>, and all of
  the necessary libraries and tools that you'll need for Java
  development for this course (and beyond).  There are several versions
  available.  For this course, you will need to use a release 
  that is at least as recent as 1.5 (which is also called 5.0).  
  The package comes
  with installation instructions, which you'll need to read and follow;
  simply running the installation program is not enough.  There is also
  a <a href="SettingUpJava.html">document that explains how to
  set up Java on your home system</a>.</li> </ul>

<p>You might also want to obtain a full-fledged integrated development
environment (IDE).  IDE's generally provide an editor, a compiler, and
a virtual machine, as well as other integrated tools, such as a
debugger.  This flexibility generally comes at the cost of complexity.
Also, IDE's are generally much more expensive than the free
alternatives listed above.  
I do all of my development using a text
editor and a command-line compiler and virtual machine.  
</p>

<p>Java is a cross-platform language, so the code you write should execute correctly, regardless of your operating system or what compiler you're using.  Still, subtle bugs and differences do exist.  If you feel that you've been graded unfairly on account of such a bug, let us know, and we'll make sure that your grade is not adversely affected by incompatibilities between virtual machines.</p>

</div>

<div class="section">

<hr />

<p class="title">How do I set up Java at home?</p>

<p><a href="SettingUpJava.html">Here</a> is a document that describes how to set up J2SE on your Windows-based machine.</p>

</div>

<div class="section">

<hr />

<p class="title">Java Links</p>

<p>Wondering how a particular class in the Java library works?  
<a href="http://java.sun.com/javase/6/docs/api/">Sun's Java 2 documentation</a> is exactly what you need!  When I'm writing Java code, I spend a lot of time there.  After all, who can remember all the parameters to all of the methods in the Java library?  Besides, learning how to look things up in documentation is an invaluable skill, so it's best if you start developing it now.</p>

<p>Looking for a good on-line Java tutorial?  Start at <a href="http://java.sun.com/">Sun's Java Web site (java.sun.com)</a>, and click the "Java Tutorial" link somewhere on the page.  (They rearrange their pages fairly often, so I didn't provide a direct link.)  The tutorial is organized into "trails" that lead you through various topics, from simple to advanced.</p>

</div>

<div class="section">

<hr />

<p class="title">Academic honesty</p>

<p>As ICS 23 students, you are expected to know and follow the
academic dishonesty policies of both the ICS School and the
University as a whole.  Please take a few minutes to read the
policies, which can be found at 
<a href="http://www.ics.uci.edu/ugrad/policies/index.php">this link</a>.</p>

<p>All of your lab work is expected to be completed <i>solely by you</i>.  Group work and/or sharing of code between students is not permitted.  Note that "high-level discussion of course material for better understanding" is permitted and encouraged, but when it comes time to sit down and write code, that is expected to be done by you and you alone.  All submissions are compared to one another using an automated plagiarism detection system.  This system is extraordinarily good at finding similarities between submissions, even when there are superficial differences.  (Note that we also compare your submissions to those submitted during previous quarters whenever one of these assignments was given during a previous quarter, so it is an exceedingly bad idea to turn in, or even refer to, code written by a friend of yours who took the course already.)</p>

<p>Since all of your work is expected to be completed solely by you, you will be held responsible even if you plagiarize only a small portion of someone else's project.</p>

<p>Academic dishonesty is a two-way street.  Providing your code to other students for them to turn in as their own is not permitted anymore than turning in someone else's code.  Resist the temptation to give code to your friends "for reference."  Based on my experience, I can say that your "friends" may very well betray you and turn it in, anyway.</p>

<p>Violators of academic dishonesty policies are subject to the
penalties described in the ICS School's policy.  They are also subject to an immediate course grade of F, and you will not be allowed to drop the course to avoid the grade.  Also be aware that a single documented case of academic dishonesty may preclude you from switching into the ICS major, registering for the ICS minor, joining the ICS Honors Program, and graduating from ICS with honors.</p>

</div>

<div class="history">

<hr />

<ul class="nomarker">
  <li>Adapted from the ICS 22 Spring 2003 Lab Manual, with quite a bit of text from the previous ICS 23 Lab Manual merged in.</li>
</ul>

</div>

</body>
</html>
