<?xml version='1.1'?>
<!DOCTYPE html
     PUBLIC '-//W3C//DTD XHTML 1.0 Strict//EN'
     'http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd'>
<html xmlns='http://www.w3.org/1999/xhtml' xml:lang='en' lang='en'>
<head>
  <title>Types, Interfaces, Classes</title>
  <meta name='Author' content='Thomas A. Alspaugh'/>
  <meta name='Description' content=""/>
  <meta http-equiv='content-type' content='text/html; charset=ISO-8859-1'/>
  <meta http-equiv='Content-Style-Type' content='text/css'/>
  <link href='../../alspaugh-uci.css' rel='stylesheet' type='text/css'/>
  <!-- <link href='../alspaugh-uci-cls.css' rel='stylesheet' type='text/css'/> -->
  <style type='text/css'>
    @media screen {
      body     {  background: url("img/bg-java-type.png") repeat-y;  }
      #TMain   {  margin-left: 10.00em;  }
    }
  </style>
</head>
<body>

<div id='TBg'>

<div id='THeader'>
Types, Interfaces, Classes
</div>

<div id='TLinks1' class='Links'> <!-- - - - - - - - - - - - - - - - - - - - -->
<p>  <a class='sc' href='../../index.html'>Home</a>
</p>
<div class='hr'> </div>
<p>  <a href='index.html'>Foundations home</a>
</p>
<div class='hr'> </div>
<p>
<a href='set.html'>Sets</a><br/>
<a href='relation.html'>Relations</a><br/>
<a href='correspondence.html'>Correspondences</a><br/>
<a href='orderedSet.html'>Ordered Sets</a><br/>
<a href='lattice.html'>Lattices</a><br/>
<a href='graph.html'>Graphs</a><br/>
<a href='powerset.html'>Powersets</a><br/>
<a href='binaryString.html'>Binary Strings</a><br/>
<a href='logicConcepts.html'>Logic</a><br/>
<a href='allen.html'>AIA</a><br/><!-- -spell AIA -->
<a href='greek.html'>Greek</a><br/>
</p>
<div class='hr'> </div>
<p>
<a href='glossaryExternal.html'>Glossary</a><br/>
<a href='goodAbstract.html'>Abstracts</a><br/>
<a href='argument.html'>Argument</a><br/>
<a href='ontology.html'>Glossaries</a><br/>
<a href='inquiryCycle.html'>Inquiry Cycle</a><br/>
<a href='hohfeld.html'>Legal Relations</a><br/>
<a href='goodPresentation.html'>Presentations</a><br/>
</p>
<div class='hr'> </div>
<p>
<a href='quickStart.html'>Elicitation</a><br/>
<a href='ontology.html'>Glossaries</a><br/>
<a href='goal.html'>Goals</a><br/>
<a href='istar.html'>i*</a><br/>
<a href='SCR.html'>SCR</a><br/>
<a href='tracing.html'>Tracing</a><br/>
</p>
<div class='hr2'> </div>
<p>
<a href='alloy.html'>Alloy</a><br/>
<a href='msc.html'>MSCs</a><br/>
<a href='regularExpression.html'>Regular Exprs.</a><br/>
</p><!-- -spell MSCs Exprs -->
<div class='hr2'> </div>
<p>
<a href='java-designPattern.html'>Design Patterns</a><br/>
<a href='javadoc.html'>Javadoc</a><br/>
<a href='java-package.html'>Java Packages</a><br/>
<a href='java-type.html'>Java Types</a><br/>
</p>
<div class='hr2'> </div>
<p>
<a href='html.html'>(X)HTML</a><br/>
<a href='xmlSchema.html'>XML Schemas</a><br/>
<a href='xslt.html'>XSLT</a><br/>
</p><!-- -spell XSLT -->
</div>


<!-- No right column -->
<div id='TMain'><!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
<!--xhtml -y -->


<h1>Interfaces are types</h1>

<p>
An interface is a type in Java.&nbsp;
It specifies which objects can be used
as values of which variables or parameters.&nbsp;
</p>

<p>
An interface lists the methods that objects implementing the interface have,
giving each method's <dfn id='signature' title='signature'>signature</dfn>
(name, parameter types, and return type).&nbsp;
</p>


<h1>Classes are types plus implementations</h1>

<p>
A (non-abstract) class is a type plus an implementation:&nbsp;
it lists the method signatures,
but also gives implementations
for each method,
one or more constructors for objects of the class,
fields,
and static methods and fields.&nbsp;
A class name can be used as the type for a variable or parameter,
but implies not only what methods are present
but what implementations are used for them.&nbsp;
</p>

<p>
A class may be defined to implement one or more interfaces,
so that objects of the class
are also of the types defined by all those interfaces.&nbsp;
</p>

<p>
A class may also be defined to <code>extend</code> exactly one other class
(its superclass).&nbsp;
It inherits the members (fields and methods)
and implementations of its superclass.&nbsp;
Each class may have at most one superclass,
but may implement any number of interfaces.&nbsp;
</p>



<h1>Abstract classes are sort of in between</h1>

<p>
Intermediate between an interface (a type)
and a class (a type plus an implementation)
is an <code>abstract</code> class,
which lists all the method signatures
but does not necessarily provide an implementation
for every method.&nbsp;
The methods for which no implementation is given
are <code>abstract</code> methods.&nbsp;
</p>


<h1>Comparisons and contrasts</h1>

<p>
Syntactically,
an interface begins with the keyword <code>interface</code>,
a class with <code>class</code>,
and an abstract class with <code>abstract class</code>.&nbsp;
Abstract method signatures of an abstract class
have the keyword <code>abstract</code> before the return type.&nbsp;
</p>

<p>
Each of these three (interface, abstract class, class)
has certain restrictions.&nbsp;
</p>

<p>
An interface must be <code>public</code>
and not <code>static</code>
(except in certain restricted situations)
and all its methods must be <code>public</code>.&nbsp;
If no access modifier is given,
<code>public</code> is assumed.&nbsp;
A class or abstract class need not be <code>public</code>,
nor need its methods be <code>public</code>.&nbsp;
</p>

<p>
A class (abstract or not) may <code>implement</code> one or more interfaces.&nbsp;
An interface may <code>extend</code> one or more interfaces.&nbsp;
A class (abstract or not) may <code>extend</code>
at most one other class.&nbsp;
</p>

<p>
An interface may contain no fields, except for fields that are
<code>static</code>, <code>public</code>, and <code>final</code>.&nbsp;
</p>


<table summary="Summary of interface and class">
<tbody>
  <tr><th>Characteristic</th><th>interface</th><th>abstract class</th><th>class</th>
  </tr>
  <tr><th class="lf">Can <code>extend</code> one or more interfaces</th>
      <td rowspan="1" class="bf ce">yes</td>
      <td rowspan="1" class="it ce">no</td>
      <td rowspan="1" class="it ce">no</td>
  </tr>
  <tr><th class="lf">Can <code>extend</code> a single class</th>
      <td rowspan="2" class="it ce">no</td>
      <td rowspan="2" class="bf ce">yes</td>
      <td rowspan="2" class="bf ce">yes</td>
  </tr>
  <tr><th class="lf">Can <code>implement</code> one or more interfaces</th>
  </tr>
  <tr><th class="lf">Can have method signatures without bodies</th>
      <td rowspan="1" class="bf ce">yes</td>
      <td rowspan="1" class="bf ce">yes</td>
      <td rowspan="1" class="it ce">no</td>
  </tr>
  <tr><th class="lf">Can have method implementations with bodies</th>
      <td rowspan="6" class="it ce">no</td>
      <td rowspan="6" class="bf ce">yes</td>
      <td rowspan="6" class="bf ce">yes</td>
  </tr>
  <tr><th class="lf">Can be <code>protected</code> or <code>private</code></th>
  </tr>
  <tr><th class="lf">Can have <code>protected</code> or
          <code>private</code> members</th>
  </tr>
  <tr><th class="lf">Can have constructors</th>
  </tr>
  <tr><th class="lf">Can have <code>sta</code>tic methods</th>
  </tr>
  <tr><th class="lf">Can have <code>static</code> fields
          (other than <code>public final</code> ones)</th>
  </tr>
  <tr><th class="lf">Can have <code>public static final</code> fields</th>
      <td class="bf ce">yes</td>
      <td class="bf ce">yes</td>
      <td class="bf ce">yes</td>
  </tr>
</tbody>
</table>


<!--xhtml -n -->
</div>

</div><!-- #TBg -->

<div id='TFooter'>
<div class='W3C'>
  <a href='http://validator.w3.org/check?uri=referer'><img class='W3C'
    src='../../img/valid-xhtml10-blue.png'
    alt='Valid XHTML 1.0 Strict'/></a>
  <br/>
  <a href='http://jigsaw.w3.org/css-validator/check/referer'><img class='W3C'
    src='../../img/vcss-blue.png'
    alt='Valid CSS!'/></a>
</div>
<div class='timestamp'>2009Sep23We10:12</div>
<div style='padding-top:1px;'>
<a class='plain' href='./index.html' style='font-variant:small-caps;'
>Thomas A. Alspaugh</a>
<span style='padding-left:1em;'><span class='email ss sm'>alspaugh&nbsp;
    <span class='ss sc sm'>at</span> &middot; ics &middot; uci &middot; edu</span>
    <!-- -spell alspaugh uci edu --> </span>
</div>
</div>

<!-- Google Analytics code -->
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol)
  ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost +
  "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript">
try {
var pageTracker = _gat._getTracker("UA-15281497-1");
pageTracker._trackPageview();
} catch(err) {}
</script>

</body>
</html>

