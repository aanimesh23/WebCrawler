<HTML><HEAD>
<TITLE>Vita: Nenad Medvidovic</TITLE>
</HEAD><BODY>
<h1><i>Curriculum Vitae</i></h1>
<H1>Nenad Medvidovic</H1>

<ADDRESS>
Department of Information and Computer Science<BR>
University of California, Irvine<BR>
Irvine, CA  92697-3425<BR>
U.S.A.
</ADDRESS>
<DL COMPACT>
<DT>tel:<DD> +1(714)824-3100
<DT>fax:<DD> +1(714)824-1715
<DT>em:<DD> <A HREF="mailto:neno@ics.uci.edu">neno@ics.uci.edu</A> 
<DT>uri:<DD> <A HREF="http://www.ics.uci.edu/~neno/">
             http://www.ics.uci.edu/~neno/</A>
</DL>
<HR>

<H2>EDUCATION</H2>

<DL>
<DT> <STRONG>Doctor of Philosophy</STRONG> (12/98)
<DD> <A HREF="http://www.uci.edu/">
     University of California, Irvine</A><BR>
     <A HREF="http://www.ics.uci.edu/">
     Department of Information and Computer Science</A><BR>
     <A HREF="http://www.ics.uci.edu/~taylor/software/soft.html">
     Software Research Group</A><BR>
     Advisor: <A HREF="http://www.ics.uci.edu/~taylor/">
     Dr. Richard N. Taylor</A><BR>
     Dissertation: 
     <A HREF = "http://www.ics.uci.edu/~neno/dissertation/versions.html">
     Architecture-Based Specification-Time Software Evolution</A>
     <P>

<DT> <STRONG>Master of Science</STRONG> (6/95, Cumulative GPA: 4.00)
<DD> <A HREF="http://www.uci.edu/">
     University of California, Irvine</A><BR>
     <A HREF="http://www.ics.uci.edu/">
     Department of Information and Computer Science</A><BR>
     Major Emphasis: 
     <A HREF="http://www.ics.uci.edu/~taylor/software/soft.html">
     Software</A> <P>

<DT> <STRONG>Bachelor of Science</STRONG>, <i>Summa Cum Laude</i> 
                                           (8/92, Cumulative GPA: 4.00)
<DD> <A HREF="http://www.asu.edu">
     Arizona State University</A><BR>
     Major: <A HREF="http://www.eas.asu.edu:80/~csedept/">
     Computer Science</A><BR>
</DL>

<HR>
<H2>PROFESSIONAL EXPERIENCE</H2>

<DL>
<DT> 9/94 - present
<DD> <STRONG>Graduate Student Researcher</STRONG>,
     <A HREF="http://www.ics.uci.edu/pub/arch/">Software Architecture
     Group</A><BR>
     University of California, Irvine<BR>
<P>
<DT> 9/93 - 8/94
<DD> <STRONG>Teaching Assistant</STRONG><BR>
     <DL>
     <DT><DD><A HREF="http://www.editor.uci.edu/~editor/97-98/ics/ics.3.html">
     ICS 52</a> - Systematic Software Construction<BR> 
     <DT><DD><A HREF="http://www.editor.uci.edu/~editor/97-98/ics/ics.3.html">
     ICS 121</a> - Introduction to Software Engineering<BR>
     <DT><DD><A HREF="http://www.editor.uci.edu/~editor/97-98/ics/ics.3.html">
     ICS 141</a> - Programming Languages<BR>
     </DL>
     University of California, Irvine<BR>
<P>
<DT> 6/93 - 8/93
<DD> <STRONG>Research Assistant</STRONG>, Software Engineering Group<BR> 
     Arizona State University<BR>
<P>
<DT> 8/92 - 8/93
<DD> <STRONG>Teaching Assistant</STRONG><BR>
     <DL>
     <DT><DD><a href="http://www.eas.asu.edu:80/~csedept/academic/syllabi/syl460.html">CSE 460/598</a> - Software Project Management and Development I
     </DL>
     Arizona State University<BR>
</DL>

<HR>
<H2>PUBLICATIONS</H2>

<H3>Refereed Journal Articles</H3>
<DL COMPACT>
<DT> [1]
<DD>  Richard N. Taylor, Nenad Medvidovic, Kenneth M. Anderson, E. James
      Whitehead, Jr., Jason E. Robbins, Kari A. Nies, Peyman Oreizy, and
      Deborah L. Dubrow. 
      <A HREF="http://www.ics.uci.edu/pub/arch/papers/copyright-IEEE.html"> 
      "<b>A Component- and Message-Based Architectural Style for GUI 
      Software.</b>"</A> 
      <i>IEEE Transactions on Software Engineering</i>, vol. 22, no.
      6, pages 390-406 (June 1996). (A significant revision and 
      extension of the ICSE17 paper below.)
<P>
<DT> [2]
<DD>  Nenad Medvidovic and Richard N. Taylor.  
      <A HREF="ftp://www.ics.uci.edu/pub/arch/papers/C2-IEE97.ps">
      "<b>Exploiting Architectural Style to Develop a Family of 
      Applications.</b>"</a>  
      <a href="http://www.iee.org.uk/publish/journals/profjrnl/ieeproc.html">
      <i>IEE Proceedings Software Engineering</i></a>, 
      vol. 144, no. 5-6, pages 237-248 (October-December 1997). 
</DL>

<BR>
<H3>Refereed Conference Publications</H3>

<DL COMPACT>
<DT> [1]
<DD> J. Blevins, D. Dubrow, N. Eickelmann, R. Grinter, N. Medvidovic, 
     R. Reimer, J. Shaw, C. Turner, and G. Wong. 
     "<b>Report on the Software Project Management Technical Research 
     Review.</b>" 
     In <i>Proceedings of the California Software Symposium (CSS'95)</i>, 
     pages 127-145, Irvine, CA, March 30, 1995.
<P>
<DT> [2]
<DD> Richard N. Taylor, Nenad Medvidovic, Kenneth M. Anderson, E. James 
     Whitehead Jr. and Jason E. Robbins.
     <A HREF="ftp://www.ics.uci.edu/pub/arch/papers/C2-ICSE17.fm.ps">
     "<b>A Component- and Message-Based Architectural Style for GUI
     Software.</b>"</A> 
     In <i>Proceedings of the Seventeenth International Conference on 
     Software Engineering (ICSE17)</i>, pages 295-304, Seattle, WA, 
     April 23-30, 1995.
<P>
<DT> [3]
<DD>Nenad Medvidovic, Richard N. Taylor, and E. James Whitehead, Jr. 
    <A HREF="ftp://www.ics.uci.edu/pub/arch/papers/ADL-CSS96-MTW.ps">
    "<b>Formal Modeling of Software Architectures at Multiple Levels of 
    Abstraction.</b>"</A>   
    In <i>Proceedings of the California Software Symposium (CSS'96)</I>, 
    pages 28-40, Los Angeles, CA, April 17, 1996.
<P>
<DT> [4]
<DD> Nenad Medvidovic, Peyman Oreizy, Jason E. Robbins, and Richard N.
     Taylor.  
     <A HREF="ftp://www.ics.uci.edu/pub/arch/papers/ADL-FSE96.ps">
     "<b>Using Object-Oriented Typing to Support Architectural Design 
     in the C2 Style.</b>"</A>  
     In <i>Proceedings of the Fourth ACM SIGSOFT Symposium on the 
     Foundations of Software Engineering (FSE4)</i>, pages 24-32, 
     San Francisco, CA, October 16-18, 1996.  Also available as 
     Technical Report UCI-ICS-96-6.
<P>
<DT> [5]
<DD> Nenad Medvidovic, Peyman Oreizy, and Richard N. Taylor. 
     <a href="ftp://www.ics.uci.edu/pub/arch/papers/C2-SSR97.ps">
     "<b>Reuse of Off-the-Shelf Components in C2-Style Architectures.</b>"</a>
     In <i>Proceedings of the 1997 Symposium on Software Reusability 
     (SSR'97)</i>, pages 190-198, Boston, MA, May 17-19, 1997.  
     Also in <i>Proceedings of the 1997 International Conference on 
     Software Engineering (ICSE'97)</i>, pages 692-700, Boston, MA, 
     May 17-23, 1997. 
<P>
<DT> [6]
<DD> Nenad Medvidovic and Richard N. Taylor. 
     <A HREF="ftp://www.ics.uci.edu/pub/arch/papers/ADL-FSE97.ps">
     "<b>A Framework for Classifying and Comparing Architecture Description
     Languages.</b>"</a>  
     In <i>Proceedings of the 
     Sixth European Software Engineering Conference together with 
     the Fifth ACM SIGSOFT Symposium on the Foundations of Software 
     Engineering</i>, pages 60-76, Zurich, Switzerland, September 
     22-25, 1997.    
<P>
<DT> [7]
<DD> Nenad Medvidovic and David S. Rosenblum. 
     <A HREF="http://www.ics.uci.edu/~neno/dsl/versions.html"> 
     "<b>Domains of Concern in Software Architectures and Architecture 
     Description Languages.</b>"</a>
     In <i>Proceedings of the USENIX Conference on Domain-Specific 
     Languages</i>, pages 199-212,
     Santa Barbara, CA, October 15-17, 1997. 
<P>

<DT> [8]
<DD> Jason E. Robbins, Nenad Medvidovic, David F. Redmiles, and 
     David S. Rosenblum. 
     <a href="http://www.ics.uci.edu/~neno/papers/ICSE98-UML.ps">
     "<b>Integrating Architecture Description Languages with a 
     Standard Design Method.</b>"</a> 
     In <i>Proceedings of the
     20th International Conference on Software Engineering 
     (ICSE'98)</i></a>,  pages 209-218,
     Kyoto, Japan, April 19-25, 1998.
     Also available as Technical Report, UCI-ICS-97-35.
<P>
<DT> [9]
<DD> Peyman Oreizy, Nenad Medvidovic, and Richard N. Taylor.
     <a href="http://www.ics.uci.edu/~peymano/papers/ICSE98.ps">
     "<B>Architecture-Based Runtime Software Evolution.</b>"</a>
     In <i>Proceedings of the
     20th International Conference on Software Engineering 
     (ICSE'98)</i></a>, pages 177-186, 
     Kyoto, Japan, April 19-25, 1998.
     Also available as Technical Report, UCI-ICS-97-39.
<P>
<DT> [10]
<DD> Nenad Medvidovic, Eric M. Dashofy, and Richard N. Taylor.
     <a href="http://www.ics.uci.edu/~neno/papers/CSS98.ps">
     "<b>Employing Off-the-Shelf Connector Technologies in C2-Style
      Architectures.</b>"</a>
     In <i>Proceedings of the California Software Symposium 
     (CSS'98)</i>, pages 21-30, Irvine, CA, October 23, 1998.
<P>
<DT> [11]
<DD> Nenad Medvidovic and David S. Rosenblum. 
     <a href="http://www.ics.uci.edu/~neno/papers/WICSA99.ps">
     "<b>Assessing the Suitability of a Standard Design Method for 
      Modeling Software Architectures.</b>"</a> 
     To appear in <i>Proceedings of the First Working IFIP
     Conference on Software Architecture (WICSA1)</i>, San Antonio,
     TX, February 22-24, 1999.
     Also available as Technical Report, UCI-ICS-98-02.
<P>
<DT> [12]
<DD> Nenad Medvidovic, David S. Rosenblum, and Richard N. Taylor. 
     <a href = "http://www.ics.uci.edu/~neno/papers/ICSE99.ps">
     "<b>A Language and Environment for Architecture-Based Software
      Development and Evolution.</b>"</a>
     To appear in <i>Proceedings of the 21st International Conference
     on Software Engineering (ICSE'99)</i>, Los Angeles, CA, May
     16-22, 1999. 
<P>
<DT> [13]
<DD> Eric M. Dashofy, Nenad Medvidovic, and Richard N. Taylor.
     "<b>Using Off-the-Shelf Middleware to Implement Connectors in 
      Distributed Software Architectures.</b>"
     To appear in <i>Proceedings of the 21st International Conference
     on Software Engineering (ICSE'99)</i>, Los Angeles, CA, May
     16-22, 1999. 
</DL>
<BR>
<H3>Refereed Workshop Publications</H3>
<DL COMPACT>
<DT> [1]
<DD> E. James Whitehead, Jr., Jason E. Robbins, Nenad Medvidovic, and 
     Richard N. Taylor. 
     <A HREF="ftp://www.ics.uci.edu/pub/arch/papers/C2-ICSE17-SAWS.ps">
     "<b>Software Architecture: Foundation of a Software Component
     Marketplace.</b>"</A>  
     In David Garlan, ed., <i>Proceedings of the First International 
     Workshop on Architectures for Software Systems</i>, pages 276-282, 
     Seattle, WA, April 24-25, 1995.
<P>
<DT> [2]
<DD> Nenad Medvidovic. 
     <a href="ftp://www.ics.uci.edu/pub/arch/papers/ADL-ISAW96.ps">
     "<b>ADLs and Dynamic Architecture Changes.</b>"</A>  
     In Alexander L. Wolf, ed., <i>Proceedings of the Second 
     International Software Architecture Workshop (ISAW-2)</i>, 
     pages 24-27, San Francisco, CA, October 14-15, 1996.
<P>
<DT> [3]
<DD> Nenad Medvidovic and Richard N. Taylor. 
    <a href="ftp://www.ics.uci.edu/pub/arch/papers/C2-ARES96.ps">
    "<b>Reusing Off-the-Shelf Components to Develop a Family of 
    Applications in the C2 Architectural Style.</b>"</a>  
    In <i>Proceedings of the
    <a href="http://www.dit.upm.es/~ares/workshop/proceedi.htm">
    International Workshop on Development and 
    Evolution of Software Architectures for Product Families</a></i>, 
    Las Navas del Marqu�s, �vila, Spain, November 18-19, 1996.
<P>
<DT> [4]
<DD> Peyman Oreizy, Nenad Medvidovic, Richard N. Taylor, and David S.
     Rosenblum.  
     <a href="http://www.ics.uci.edu/~neno/papers/CORBA-OMG.ps">
     "<b>Software Architecture and Component Technologies: Bridging 
      the Gap.</b>"</a>
     In <i>Proceedings of the 
     <a href="http://www.objs.com/workshops/ws9801/index.html">
     Workshop on Compositional Software Architectures</i></a>,
     Monterey, CA, January 6-8, 1998.
<P>
<DT> [5]
<DD> Richard N. Taylor, Nenad Medvidovic, and Peyman Oreizy.
     "<b>Architectural Implications of Common Operator Interfaces.</b>"
     In <i>Proceedings of the 
     <a href="http://sunset.usc.edu/GSAW/GSAW98.html">
     Ground Systems Architectures Workshop (GSAW 98)</a></i>, 
     El Segundo, CA, February 25-27, 1998.
<P>
<DT> [6]
<DD> Nenad Medvidovic, Richard N. Taylor, and David S. Rosenblum. 
     <a href="http://www.ics.uci.edu/~neno/papers/IWPSE.ps">
     "<b>An Architecture-Based Approach to Software Evolution.</b>"</a>
     In <i>Proceedings of the International Workshop on the Principles of
     Software Evolution</i>, pages 11-15, Kyoto, Japan, April 20-21, 1998.

<P>
<DT> [7]
<DD> Nenad Medvidovic and Richard N. Taylor. 
     <a href="http://www.ics.uci.edu/~neno/papers/ISAW3.ps">
     "<b>Separating Fact from Fiction in Software Architecture.</b>"</a>
     In <i>Proceedings of the Third International Software
     Architecture Workshop (ISAW-3)</i>, pages 105-108, Orlando, FL,
     November 1-2, 1998.
</DL>
<BR>
<H3>Non-Refereed Publications</H3>

<DL COMPACT>
<DT> [1]
<DD> Jason E. Robbins, E. James Whitehead Jr., Nenad Medvidovic, and 
     Richard N. Taylor. 
     "<b>A Software Architecture Design Environment for Chiron-2 Style 
     Architectures.</b>" 
     Arcadia Technical Report UCI-95-01, University of California, 
     Irvine, January 1995.
<P>
<DT> [2]
<DD> Nenad Medvidovic. 
    <A HREF="ftp://www.ics.uci.edu/pub/arch/papers/TR-UCI-ICS-95-24.ps">
    "<b>Formal Definition of the Chiron-2 Software Architectural 
    Style.</b>"</A> 
    Technical Report UCI-ICS-95-24, Department of Information and 
    Computer Science, University of California, Irvine, August 1995. 
<P>
<DT> [3]
<DD> Nenad Medvidovic and Richard N. Taylor. 
    <A HREF="ftp://www.ics.uci.edu/pub/arch/papers/TR-UCI-ICS-96-28.fm.ps">
    "<b>Reuse of Off-the-Shelf Constraint Solvers in C2-Style 
    Architectures.</b>"</A>  
    Technical Report UCI-ICS-96-28, Department of Information and 
    Computer Science, University of California, Irvine, July 1996.
<P>
<DT> [4]
<DD> Nenad Medvidovic.
     <A HREF="ftp://www.ics.uci.edu/pub/arch/papers/TR-UCI-ICS-97-02.ps.gz">
     "<B>A Classification and Comparison Framework for Software
     Architecture Description Languages.</B>"</A>  
     Technical Report UCI-ICS-97-02, Department of Information and 
     Computer Science, University of California, Irvine, February 1997.
<P>
<DT> [5]
<DD> Nenad Medvidovic, David S. Rosenblum, and Richard N. Taylor. 
     <a href="http://www.ics.uci.edu/~neno/papers/TR-98-14.ps">
     "<B>A Type Theory for Software Architectures.</b>"</a>
     Technical Report, UCI-ICS-98-14, Department of Information and
     Computer Science, University of California, Irvine, April 1998.
<P>
<DT> [6]
<DD> Peyman Oreizy, Michael M. Gorlick, Richard N. Taylor, Dennis
     Heimbigner, Gregory Johnson, Nenad Medvidovic, Alex Quilici,
     David S. Rosenblum, and Alexander L. Wolf.
     "<B>Self-Adaptive Software.</b>"
     Technical Report, UCI-ICS-98-27, Department of Information and
     Computer Science, University of California, Irvine, August 1998.
     
</DL>

<HR>
<H2>FORMAL PRESENTATIONS</H2>
<DL COMPACT>
<DT> [1] 
<DD> "<b>A Component- and Message-Based Architectural Style for GUI
     Software.</b>" 
     Technology Presentation Track, 17th International Conference on
     Software Engineering (ICSE17), Seattle, WA, April 1995.
<P>
<DT> [2]
<DD> "<b>Chiron-2: A Component- and Message-Based Architectural Style
     for GUI Software.</b>"
     Bay Area Roundtable (BART), Palo Alto, CA, June 1995.  <P>
<DT> [3]
<DD> "<b>Chiron-2: A Component- and Message-Based Architectural Style
     for GUI Software.</b>"
     Sun Microsystems Laboratories, Palo Alto, CA, June 1995.
<P>
<DT> [4]
<DD> "<b>Formal Modeling of Software Architectures at Multiple Levels 
     of Abstraction.</b>" 
     California Software Symposium, Los Angeles, CA, April 1996.
<P>
<DT> [5]
<DD> "<b>What's New with C2?</b>"
     Arcadia Research Meeting, Portland, OR, August 1996.
<P>
<DT> [6]
<DD> "<b>ADLs and Dynamic Architecture Changes.</b>"
     Second International Software Architecture Workshop (ISAW-2),
     San Francisco, CA, October 1996.
<P>
<DT> [7]
<DD> "<b>Using Object-Oriented Typing to Support Architectural Design 
     in the C2 Style.</b>" 
     Fourth ACM SIGSOFT Symposium on the Foundations of Software
     Engineering (FSE4), San Francisco, CA, October 1996.
<P>
<DT> [8]
<DD> "<b>Reusing Off-the-Shelf Components to Develop a Family of 
     Applications in the C2 Architectural Style.</b>"
     International Workshop on Development and Evolution of Software 
     Architectures for Product Families, Las Navas del Marqu�s,
     �vila, Spain, November 1996.
<P>
<DT> [9]
<DD> "<b>A Classification and Comparison Framework for Software
     Architecture Description Languages.</b>"
     Second EDCS Architecture/Generation Workshop, Santa Fe, NM, April
     1997.
<P>
<DT> [10]
<DD> "<b>Reuse of Off-the-Shelf Components in C2-Style 
     Architectures.</b>"
     1997 Symposium on Software Reusability (SSR'97) and 1997 
     International Conference on Software Engineering (ICSE'97), 
     joint session on <i>Software Reuse</i>, Boston, MA, May 1997.
<P>
<DT> [11]
<DD> "<b>A Framework for Classifying and Comparing Architecture 
     Description Languages.</b>"
     Sixth European Software Engineering Conference together with 
     the Fifth ACM SIGSOFT Symposium on the Foundations of Software
     Engineering, Zurich, Switzerland, September 1997.
<P>
<DT> [12]
<DD> "<b>Domains of Concern in Software Architectures and Architecture 
     Description Languages.</b>"
     USENIX Conference on Domain-Specific Languages, Santa Barbara,
     CA, October 1997.
<P>
<DT> [13]
<DD> "<b>A Style-Based Approach to the Design and Evolution of 
     Adaptable Software.</b>"
     University of Texas, Austin, TX, November 1997.
<P>
<DT> [14]     
<DD> "<b>An Architecture-Based Approach to Software Evolution.</b>"
     International Workshop on the Principles of
     Software Evolution, Kyoto, Japan, April 1998.
<P>
<DT> [15]     
<DD> "<b>Employing Off-the-Shelf Connector Technologies in C2-Style 
      Architectures.</b>"
     California Software Symposium (CSS'98), Irvine, CA, October 23, 
     1998.
</DL>

<HR>
<H2>PROFESSIONAL ACTIVITIES</H2>
<h3>Reviewer</h3>
<UL>
<LI> 1996 Conference on User Interface Software and Technology
     (UIST'96)
<LI> 1997 International Conference on Software Engineering (ICSE'97)
<LI> IEEE Transactions on Software Engineering, 1997, 1998
<LI> IEE Proceedings Software Engineering, 1998
<LI> ACM Transactions on Software Engineering and Methodology, 1998
</UL>

<HR>
<H2>PROFESSIONAL ASSOCIATIONS</H2>
<UL>
<LI> Association for Computing Machinery (ACM)
<LI> ACM Special Interest Group on Software Engineering (SIGSOFT)
</UL>

<HR>
<H2>HONORS, AWARDS, FELLOWSHIPS</H2>

<DL COMPACT>
<DT>1989-92 <DD> Dean's Honor List
<DT>1990-92 <DD> Arizona Regents International Student Scholarship
<DT>1990-93 <DD> Golden Key National Honor Society
<DT>1991-93 <DD> UPE National Honor Society for the computing sciences
<DT>1992 <DD>   <DD> Moeur Award, Arizona State University (top student in the graduating class)
<DT>1993-94 <DD> ICS Departmental Fellowship
</DL>

<HR>
<H2>RESEARCH INTERESTS</H2>

My research interests are in the field of software engineering. A
common theme, and long-term goal, of my research is 
<i>development and evolution of adaptable, large-scale software 
systems</i>. Practitioners have traditionally faced many problems with
achieving support for reuse, 
interchange, reconfiguration, extension, and scaling of software
modules and/or systems when 
using existing development approaches. These problems are often the
result of poor 
understanding of a system's overall architecture, unintended
dependencies among its modules, 
decisions that are made too early in the development process, and so
forth. Existing techniques 
that are intended to remedy these problems (e.g., separation of
concerns or isolation of change) 
are only partially adequate in the case of development with
pre-existing, large, multi-lingual 
components that originate from multiple sources. 
<P>

The main hypothesis of my research is that an explicit architectural
focus can remedy many of 
these difficulties and enable flexible construction and evolution of
large systems. I have therefore 
centered on software architectures as a key to developing techniques,
tools, and methodologies 
for engineering flexible, large-scale software. Architectures present
a high-level view of a system, 
enabling developers to abstract away the unnecessary details and focus
on the "big picture." 
Another key is their explicit treatment of software connectors, which
separate communication 
issues from computation in a system. However, existing architecture
research has thus far largely 
failed to take advantage of this potential for adaptability for two
reasons: 
<UL>
<LI>Connectors are often not treated explicitly or, when they are, they
are too rigid and do not 
accommodate modification of their attached components easily; and 
<LI>The architecture community has to date chosen to focus on issues other
than flexible design 
and evolution: formalism, analysis, and system generation. 
</UL>
<P>

My research presents an architecture-based approach to achieving
software adaptability. It 
expands the traditional notions of evolution (e.g., modularity,
typing) for use in architectures, and 
introduces explicit, flexible connectors. I have designed an
architecture description language 
(ADL) that encompasses these concepts; I am currently implementing its
supporting toolset. 
While I have thus far exploited the benefits of a particular
architectural style, C2, I intend to 
demonstrate that many of the results are style- and
domain-independent. 
<P>

This research is also closely related to two other areas:
<i>component-based software development</i> and <i>software reuse</i>. 
Engineering large-scale software
systems is fundamentally 
different from programming in the small. A programming language
statement becomes 
inadequate as the unit of development. Instead, <i>components</i> must become
software building 
blocks. Component-based development of software has become an area of
intense research, 
resulting in several component interoperability models, e.g., CORBA
and ActiveX, and wide 
adoption of certain software design methodologies, such as
object-oriented (OO) design. 
Software architecture researchers have by and large also adopted a
component-centered view of 
software development and evolution. 
<P>

In the context of the C2 project, I have participated in the
development of an OO class 
framework used for prototyping and implementing C2 components and
connectors, as well as a 
number of example applications that used the framework. This
experience has sensitized me to the 
fact that adopting a component-based approach is, by itself, not
enough. Repeatedly engineering 
components from scratch is likely to become prohibitively expensive;
it also fails to exploit the 
greatest potential benefit of component-based development: reuse.
Architectural styles have the 
potential for controlling the scope of OTS reuse and providing
structure for it. Styles typically 
reflect and leverage key properties of an application domain and
recurring patterns of application 
design within that domain. To adequately support reuse, a style must
also provide a balance, 
where its rules are strong enough to make reuse tractable but broad
enough to enable integration 
of legacy components. I have thus far conducted or participated in a
series of exercises intended to 
investigate reuse issues in the context of the C2 style. Drawing from
this experience, I intend to 
further study what properties are likely to make a given style well
suited for supporting OTS 
reuse. 
<P>

As part of my longer-term research plans, I also intend to continue
investigating several other 
questions that remain unanswered. A subset of these is given below. 
<UL>
<LI>What techniques can be employed effectively for refining an
architecture across levels of 
abstraction and for mapping that architecture to an implementation? 
<LI>What is the role of ADLs in architecture-based runtime software
evolution? What ADL 
primitives are needed to support such evolution? 
<LI>What are the issues in runtime insertion, removal, and replacement of
connectors? This 
problem is further compounded by the potentially complex mappings of
an architecture to its 
implementation. A single connector at the architectural level may be
distributed across several 
implemented modules. Extracting such a connector in the implementation
and removing or 
replacing it is a difficult and still open research problem. 
<LI>What is the role of architectures and ADLs in the construction of
application families? 
<LI>How can explicit architectural models aid component discovery and
extraction, and the 
construction of component adaptors and wrappers? 
</UL>
<P>

Finally, I intend to further pursue the work I have begun on
understanding the nature of 
software architectures and ADLs and clarifying their roles in the
software engineering lifecycle. 
Despite much ongoing research in architectures and ADLs, consensus is
lacking on several 
fundamental issues, including: 
<UL>
<LI>What problems can software architectures adequately address?
<LI>How can those problems be resolved most effectively?
<LI>What role should ADLs play in addressing those problems? and
<LI>What is the relationship between requirements, which are in the
problem domain, and 
architecture, which is in the solution domain? A related question is,
what is the exact 
relationship between architecture and design?
</UL>
<P>

</DL>
<HR>
<ADDRESS>
<A HREF="http://www.ics.uci.edu/~neno/">Nenad Medvidovic</A>
<A HREF="mailto:neno@ics.uci.edu">&lt;neno@ics.uci.edu&gt;</A> 
</ADDRESS> 
Last modified: 01 Dec 1997 
</BODY>
</HTML>
