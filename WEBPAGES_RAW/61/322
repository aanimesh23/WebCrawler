<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<!-- Page automatically generated from latex_to_html converter. -->
<!-- by cc_extract_html, $Revision: 3.19 $ -->
<!-- LaTeX source file: './TDS_2_ref/TriangulationDSFace_2.tex' -->
<html> <head>  
<title>TriangulationDataStructure_2::Face</title>
</head>  
<link href="../latex_to_html.css" rel="STYLESHEET">
<body bgcolor="white">
<!-- ------------------------------------------------------------------- -->


<!-- Top Navigation ---------------------------------------------------- -->
<div class="NavTop">
<hr>
  <strong>Navigation:</strong>
<a href="Chapter_intro.html">Up</a>, 
  <a href="../contents.html">Table of Contents</A>,
  <a href="../biblio.html">Bibliography</a>,
  <a href="../manual_index.html">Index</a>,
  <a href="../title.html">Title Page</a>
<hr><!-- End of Top Navigation ----------------------------------------- -->
</div>


<A NAME="Cross_link_anchor_962"></A>

      
     
     
     
<A NAME="Index_anchor_909"></A> 

   
<TABLE ALIGN=RIGHT><TR><TD><IMG ALIGN=TOP SRC="cc_Concept.gif"></TD></TR></TABLE>


    <A NAME="ccRef_TriangulationDataStructure_2::Face"></A>
<h2><I>TriangulationDataStructure_2::Face</I></h2>
<P>

<H3>Definition</H3>
<P>

The concept <I><A HREF="Concept_TriangulationDataStructure_2--Face.html#Cross_link_anchor_962">TriangulationDataStructure_2::Face</A></I>  describes the types used to store the faces
face class of a 
<I><A HREF="Concept_TriangulationDataStructure_2.html#Cross_link_anchor_960">TriangulationDataStructure_2</A></I>.
A <I><A HREF="Concept_TriangulationDataStructure_2--Face.html#Cross_link_anchor_962">TriangulationDataStructure_2::Face</A></I> stores three pointers to its three vertices
and three pointers to its three neighbors.
The vertices are indexed 0,1, and 2 in counterclockwise order.
The  neighbor indexed <MATH><I>i</I></MATH> lies
<A HREF="../Kernel_23_ref/Function_opposite.html#Cross_link_anchor_243">opposite</A> to vertex i.
<P>

In degenerate cases,
when the triangulation data structure  stores a
simplicial complex of dimension <MATH><I>0</I></MATH> and <MATH><I>1</I></MATH>,
the type <I><A HREF="Concept_TriangulationDataStructure_2--Face.html#Cross_link_anchor_962">TriangulationDataStructure_2::Face</A></I>  is used to store the faces 
of maximal dimension of the complex 
: i.e. a vertex in dimension <MATH><I>0</I></MATH>, an edge in dimension <MATH><I>1</I></MATH>.
Only vertices and neighbors with index <MATH><I>0</I></MATH> are set in the first case,
only vertices and neighbors with index <MATH><I>0</I></MATH> or <MATH><I>1</I></MATH> are set in the second case.
<P>

<H3>Types</H3>The class <I><A HREF="Concept_TriangulationDataStructure_2--Face.html#Cross_link_anchor_962">TriangulationDataStructure_2::Face</A></I> defines the same types as 
the triangulation data structure 
except the iterators and the circulators.
<P>

<H3>Creation</H3>
<P>

The methods <I>create_face</I> and
<I>delete_face()</I>
have to be used to 
define new faces and  to delete non longer used faces.
<P>

<H3>Vertex Access Functions</H3>
<P>

<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_Vertex_handle_vertex6int_i9_const;"></A>
Vertex_handle
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    f.vertex ( int i)
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    returns  the vertex <I>i</I> of <I>f</I>.<BR>

<EM>Precondition: </EM><MATH><I>0 <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC="cc_leq.gif"> i  <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC="cc_leq.gif"> 2</I></MATH>.
        </TD></TR>
        
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_int_index6Vertex_handle_v9_const;"></A>
int
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    f.index ( Vertex_handle v)
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    returns the index of vertex <I>v</I> in <I>f</I>.<BR>

<EM>Precondition: </EM><I>v</I> is
a vertex of <I>f</I>
        </TD></TR>
        
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_bool_has_vertex6Vertex_handle_v9_const;"></A>
bool
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    f.has_vertex ( Vertex_handle v)
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    returns <I>true</I> if  <I>v</I> is a vertex of <I>f</I>.
        </TD></TR>
        
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_bool_has_vertex6Vertex_handle_v+_int__i9_const;"></A>
bool
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    f.has_vertex ( Vertex_handle v,  int&amp; i)
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    returns <I>true</I> if  <I>v</I> is a vertex of <I>f</I>, and
 computes the index <I>i</I> of <I>v</I> in <I>f</I>.
        </TD></TR>
        </TABLE>
<P>

<H3>Neighbor Access Functions</H3>
<P>

The neighbor with index <I>i</I> is the neighbor which is <A HREF="../Kernel_23_ref/Function_opposite.html#Cross_link_anchor_243">opposite</A>
to the vertex with index <I>i</I>.
<P>

<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_Face_handle_neighbor6int_i9_const;"></A>
Face_handle
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    f.neighbor ( int i)
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    returns  the neighbor <I>i</I> of <I>f</I>.<BR>

<EM>Precondition: </EM><MATH><I>0 <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC="cc_leq.gif"> i  <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC="cc_leq.gif"> 2</I></MATH>.
        </TD></TR>
        
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_int_index6Face_handle_n9_const;"></A>
int
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    f.index ( Face_handle n)
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    returns the index of face <I>n</I>.<BR>

<EM>Precondition: </EM><I>n</I> is a neighbor of <I>f</I>.
        </TD></TR>
        
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_bool_has_neighbor6Face_handle_n9_const;"></A>
bool
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    f.has_neighbor ( Face_handle n)
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    returns <I>true</I> if <I>n</I> is a neighbor of <I>f</I>.
        </TD></TR>
        
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_bool_has_neighbor6Face_handle_n+_int__i9_const;"></A>
bool
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    f.has_neighbor ( Face_handle n,  int&amp; i)
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    returns <I>true</I> if <I>n</I> is a neighbor of <I>f</I>,  and
compute the index <I>i</I> of <I>n</I>.
        </TD></TR>
        </TABLE>
<P>

<H3>Other Access Functions</H3>

        <TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_int_mirror_index6int_i9_const;"></A>
int
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    f.mirror_index ( int i)
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    index of <I>f</I> as a neighbor of <I>f</I>.<I>neighbor(i)</I>
        </TD></TR>
        
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_Vertex_handle_mirror_vertex6int_i9_const;"></A>
Vertex_handle
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    f.mirror_vertex ( int i)
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    vertex of <I>f</I>.<I>neighbor(i)</I>
        </TD></TR>
        </TABLE>
 <A HREF="../Kernel_23_ref/Function_opposite.html#Cross_link_anchor_243">opposite</A> to  <I>f</I>.
<P>

<BR>

<div class="AdvancedBlock">
  <table><tr><td valign="top">
  <img border="0" src="cc_advanced_begin1.gif" alt="begin of advanced section">
  </td><td valign="top">
  <em class="AdvancedBlockLabel">&nbsp;advanced&nbsp;</em>
  </td><td valign="top">
  <img border="0" src="cc_advanced_begin2.gif" alt="begin of advanced section">
  </td></tr></table>

<H3>Setting</H3>
<P>

<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_void_set_vertex6int_i+_Vertex_handle_v9;"></A>
void
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    f.set_vertex ( int i,  Vertex_handle v)
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    sets vertex <I>i</I> to be <I>v</I>.<BR>

<EM>Precondition: </EM><MATH><I>0 <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC="cc_leq.gif"> i  <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC="cc_leq.gif"> 2</I></MATH>.
        </TD></TR>
        
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_void_set_neighbor6int_i+_Face_handle_n9;"></A>
void
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    f.set_neighbor ( int i,  Face_handle n)
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    sets neighbor <I>i</I> to be <I>n</I>.<BR>

<EM>Precondition: </EM><MATH><I>0 <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC="cc_leq.gif"> i  <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC="cc_leq.gif"> 2</I></MATH>.
        </TD></TR>
        
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_void_set_vertices69;"></A>
void
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    f.set_vertices ()
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    sets the vertices pointers to <I>NULL</I>.
        </TD></TR>
        
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_void_set_vertices6Vertex_handle_v0+_Vertex_handle_v1+_Vertex_handle_v29;"></A>
void
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>
    f.set_vertices ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>
    Vertex_handle v0,<BR>

Vertex_handle v1,<BR>

Vertex_handle v2)</I></TD></TR></TABLE>
    
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    sets the vertices pointers.
        </TD></TR>
        
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_void_set_neighbors69;"></A>
void
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    f.set_neighbors ()
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    sets the neighbors pointers to <I>NULL</I>.
        </TD></TR>
        
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_void_set_neighbors6Face_handle_n0+_Face_handle_n1+_Face_handle_n29;"></A>
void
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>
    f.set_neighbors ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>
    Face_handle n0,<BR>

Face_handle n1,<BR>

Face_handle n2)</I></TD></TR></TABLE>
    
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    sets the neighbors pointers.
        </TD></TR>
        </TABLE>
<P>

<H3>Checking</H3>
<P>

<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_bool_is_valid69_const;"></A>
bool
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    f.is_valid ()
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    returns <I>true</I> if  the function 
<I>is_valid()</I> of the base class
returns <I>true</I> and if, for each index <MATH><I>i</I></MATH>, <MATH><I>0  <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC="cc_leq.gif"> i &lt; 3</I></MATH>,
face <MATH><I>f</I></MATH> is a neighbor of its neighboring face <I>neighbor(i)</I>
and shares with this neighbor the  vertices <I>cw(i)</I> and <I>ccw(i)</I>
in correct reverse order.
        </TD></TR>
        </TABLE>
<P>

<table><tr><td valign="bottom">
  <img border="0" src="cc_advanced_end1.gif" alt="end of advanced section">
  </td><td valign="bottom">
  <em class="AdvancedBlockLabel">&nbsp;advanced&nbsp;</em>
  </td><td valign="bottom">
  <img border="0" src="cc_advanced_end2.gif" alt="end of advanced section">
  </td></tr></table></div>
<P>

<H3>Miscellaneous</H3>
<P>

<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_int_ccw6int_i9_const;"></A>
int
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    f.ccw ( int i)
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    Returns <MATH><I>i+1</I></MATH> modulo 3.<BR>

<EM>Precondition: </EM><MATH><I>0 <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC="cc_leq.gif"> i  <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC="cc_leq.gif"> 2</I></MATH>.
        </TD></TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_int_cw6int_i9_const;"></A>
int
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    f.cw ( int i)
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    Returns <MATH><I>i+2</I></MATH> modulo 3.<BR>

<EM>Precondition: </EM><MATH><I>0 <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC="cc_leq.gif"> i  <IMG BORDER=0 WIDTH=11 HEIGHT=25 ALIGN=MIDDLE SRC="cc_leq.gif"> 2</I></MATH>.
        </TD></TR>
        </TABLE>
<P>

<H3>See Also</H3><I><A HREF="Concept_TriangulationDataStructure_2.html#Cross_link_anchor_960">TriangulationDataStructure_2</A></I>,<BR>

<I><A HREF="Concept_TriangulationDataStructure_2--Vertex.html#Cross_link_anchor_964">TriangulationDataStructure_2::Vertex</A></I>,<BR>

<I><A HREF="../Triangulation_2_ref/Concept_TriangulationFaceBase_2.html#Cross_link_anchor_934">TriangulationFaceBase_2</A></I>.
<P>

<div class="NavNext"><hr> <b>Next:</b> <a href="Concept_TriangulationDSVertexBase_2.html"><I>TriangulationDSVertexBase_2</I></a> 


    
<div class="NavBottom">
<hr><!-- Bottom Navigation --------------------------------------------- -->
  <strong>Navigation:</strong>
<!Up_chapter_link_34!>
  <a href="../contents.html">Table of Contents</A>,
  <a href="../biblio.html">Bibliography</a>,
  <a href="../manual_index.html">Index</a>,
  <a href="../title.html">Title Page</a>
<!-- End of Bottom Navigation ------------------------------------------ -->


<hr><!-- --------------------------------------------------------------- -->
<div class="NavAddress">

The <A HREF=http://www.cgal.org>CGAL Project</A> .

Tue, December 21, 2004 .
<hr></div>
</body>  </html>  
