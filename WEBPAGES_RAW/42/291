<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML>
<HEAD>
   <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
   <META NAME="GENERATOR" CONTENT="Mozilla/4.07 (Macintosh; I; PPC) [Netscape]">
   <TITLE>Deliverable 2: Requirements</TITLE>
</HEAD>
<BODY BGCOLOR="#FFFFF0">

<CENTER>
<H2>
ICS 125:<BR>
Project in Software System Design</H2></CENTER>

<CENTER>
<H3>
Fall Quarter 1999</H3></CENTER>

<CENTER>
<H1>
Requirements</H1></CENTER>

<H3>
Due Date</H3>

As described  on the course syllabus.

<P><B>This document must be signed by your customer.&nbsp; </B>This will
help ensure that he has agreed that you have met all his needs.&nbsp;
This is, after all, a contract with your customer.
<P>
<HR>
<h3> Overview </h3>

<P>After completing your prospectus, your team must develop a software
requirements document that satisfies the needs of your customer.  This
document will consist of two primary components: a requirements
specification and a system test plan.  Your design must also include a
glossary, or data dictionary, which defines all terms used that are
specific to the application you are developing.  Other accompanying
documentation may be included as well.

<P>In conjunction with this requirements specification, your team must
develop an acceptance statement and an initial system test plan covering the
requirements. The system test plan must cover all basic software capabilities
to be provided by the system by applying functional test heuristics (black
box) to each capability described in the requirements specification and
developing a test case for each interaction between capabilities.

<P>As has been discussed in class, you have substantial flexibility in
choosing the specific form for the various sections of your deliverables. You've
done these before, in ICS 52 and ICS 121, so you have plenty of "model
documents" to draw from, to help you determine how to structure this statement.

<P>A list of the standard items that must be turned in with <em> each </em>
ICS 125 assignment and posted on the team's web site are in the course syllabus.
Required sections of this document are described below.

<HR>
<H3>
Deliverable Objectives/Requirements Qualities</H3>
Keep in mind that key objectives of a requirements document are to:
<UL>
<LI> Document the customer's needs</LI>
<LI> Identify functional capabilities to be provided</LI>
<LI> Identify non-functional and environmental constraints that must be 
satisfied</LI>
<LI> Provide a definitive basis for testing and verification</LI>
<LI> Identify lifecycle considerations such as incremental sub-system 
development</LI>
<LI> Provide a reference tool readable by customer, developer, and 
maintainer</LI>
<LI> Serve as a contract between customer and developer</LI>
</UL>

In addition, keep in mind that a requirements document should possess the
following qualities:
<UL>
<LI> Complete: everything that is essential is described</LI>
<LI> Understandable:  the "customer" can read it and be convinced that all his
objectives and needs are adequately and accurately described</LI>
<LI> Utility: the information in the document can be used effectively to help
in the design phase (e.g., an OO requirements analysis can aid in development
of an OO design)</LI>
<LI> Unambiguous: every reader will come away with the same understanding</LI>
<LI> Consistent: no contradictions</LI>
<LI> Abstract: one model, many realizations, and no implementation details</LI>
<LI> Feasible: the requirements can be satisfied within resource constraints</LI>
<LI> Even: the entire document is at same level of detail</LI>
<LI> Effectively modifiable: this is a living document</LI>
<LI> Concise and appropriate: no extraneous details and not more than required</LI>
<LI> Verifiable and testable: you can tell when you've met the requirements</LI>
</UL>

<HR>
<H3> Required Document Contents</H3>

<H4> Introduction</H4>
Provide an introduction that discusses the scope and purpose of this document
as well as your specific approaches related to the requirements of the
system. This introduction should also discuss the organization of
this document and guide the reader.

<H4> Understanding</H4>
Expand the understanding section of your original document
(prospectus).  Make sure to add descriptions of what steps or actions
you took to understand each technology or software during this phase.
If you make changes to this section, add text describing why the change
was necessary, and why it more accurately reflects your new
understanding. This section need not be different if your understanding
hasn't changed.

<H4> Project Plan</H4>
This will be an iterative expansion of your previous submission. Expand
your project plan to represent how you have accomplished the work so far.
Reassess the project risks. Expand your task network or work breakdown
structure to include the effort expended to complete this task. Based on
the work you have done, revise your estimates on how much your team can
accomplish and deliver.

<P>If you make changes, add text describing why the change was necessary
or why it will improve the ability of your team to accomplish the work
you have proposed.

<H4> Requirements Specification</H4>
You must, of course, provide a requirements specification. 
Use diagrams to help give appropriate overviews and understanding.
Note that pictures may well be an <I>essential </I> element of the
complete description of any graphical interface.
Some suggested contents follow.

<UL>
<LI> Overview of System Requirements</LI>
<BR>Provides a brief discussion of basic needs and proposed usage. 

<LI> Environment Characteristics</LI>
<BR>Describes hardware, software, and users of the system.

<LI> Fixed Interfaces</LI>
<BR>Documents any interfaces to the environment that are fixed and hence
not part of the design of the system (e.g. an external database).

<LI> Software Capabilities</LI>
<BR>Specifies functionality in groups of related capabilities.
A diagram is helpful to show the relationship between capability groups.
<BR>For each capability, at least the following should be
specified:  Description (functionality of the capability group), Input, Output, 
Persistent Data (that lasts from one invocation of the system to the
next). Considerations specific to the application domain and other relevant
fields may be provided too.

<LI> Sample I/O or Scenario</LI>
<BR>Provides a sample input/output stream describing user interaction with
the system, or similar usage scenario.
<BR>NOTE: if useful, the streams can be grouped with the capability group
to which they apply.

<LI> Constraints</LI>
<BR>Non-functional constraints, including safety and security
constraints.
<BR>Quantifiable constraints (e.g., timing and precision).

<LI> Goals</LI>
<BR>Documents any guidance for evaluating alternatives.

</UL>

<h4> Lifecycle Considerations</h4>

Discusses capability subsets and/or product families for the purposes of
incremental development and potential changes.

<h4> Acceptance Requirements</h4>

Describes minimal requirements for system acceptance by the client, such
as the minimum capabilities that must be provided in the delivered system.

<h4> System Test Plan</h4>
<P>Include a test plan capable of demonstrating minimal functionality
of all system elements:
test cases should be specified for each software capability specified.

<P>NOTE: if desired, the test cases can be grouped with the capability
group to which they apply, otherwise a cross reference listing of some
sort should be provided.

<UL>
<LI> For each test case</LI>
   <UL>
   <LI> Test Case ID</LI>
   <LI> Purpose of test case</LI>
   <LI> Item(s) being tested</LI>
   <LI> Input specification</LI>
   <LI> Output specification</LI>
      <UL>
      <LI> Expected Results or Test Oracle Mechanism</LI>
      </UL>
   <LI> Test environmental needs or special test procedures</LI>
   </UL>
</UL>

<h4> Glossary</h4>
Defines all non-obvious terms used in the specifications above.
May include a detailed data dictionary.

<h4> Documentation</h4>

This section is reserved for any documentation you may have developed during
this phase of the project. Specifically, if during the course of developing
the your understanding of the various technologies involved in the project,
you discovered items that were not documented, but which were important,
then you should include that here.

<P>Additionally you should list here the major background sources of information
that you used during this phase or any that you plan to use during the
remainder of the project. This would include references to similar systems
and/or procedures.

<hr>
<h3>Requirements Presentations/Reviews.</h3>
See the syllabus for dates.

<P>Each team should prepare a 15 minute presentation, after which we will
allow up to 5 minutes of questions. Your customer should be present.&nbsp;

<p>
Prepare your presentation appropriately. Your presentation should include
the following:
<UL>
<LI> Overview of your system;</LI>
<LI> Current state of your project plan;</LI>
<LI> Environment and interfaces;</LI>
<LI> Highlights of your requirements specification including</LI>
   <UL>
   <LI> Summary of required capabilities, with a diagram if available;</LI>
      <BR>one or more detailed requirements for the most important capabilities
      <BR>(pick the key issues to discuss in detail);
   </UL>
<LI> Lifecycle considerations</LI>
<BR>(how you intend to develop the system throughout the lifecycle);
<LI> System test plan</LI>
<BR>how you intend to both demonstrate that the system should be accepted
as well as how you intend to convince yourselves that it is more than acceptable!).
</UL>

<p>  Be <em> sure </em> to focus your presentation on the key issues.  Don't
spend time with the obvious things.  If there's something in your presentation
that you find boring, so will your audience.  Don't gloss over problems. Your
customer wants you to succeed, your instructors want you to succeed.   They can't
help you unless you tell them where you think the problems are, or are likely to
be.

<p>
You should also ask your customer what he would like to see presented.


</BODY>
</HTML>
