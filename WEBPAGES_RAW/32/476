<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 3.2//EN">
<html><head>
<title>David Eppstein - Publications</title>
<meta name="viewport" content="width=device-width, initial-scale=1">
</head>
<body bgcolor="#ffffff" text="#000000">
<h1>David Eppstein - Publications</h1>
<hr><p>
<h2>
2000
</h2>
Note that a paper may appear in listings for multiple years
due to multiple publication (of tech. report, conference, and journal versions).
<p>
<ul>
<li><b>Clustering for faster network simplex pivots</b>.<br>
D. Eppstein.<br>
<a href="Epp-TR-93-19.pdf">Tech. Rep. 93-19</a>, ICS, UCI, 1993.<br>
<a href="//portal.acm.org/citation.cfm?id=314490">
<i>5th ACM-SIAM Symp. Discrete Algorithms,</i>
Arlington, 1994, pp. 160&ndash;166</a>.<br>
<i>Networks</i> 35 (3): 173&ndash;180, 2000.
<p>
Speeds up the worst case time per pivot for various versions of
the network simplex algorithm for minimum cost flow problems.
Uses techniques from dynamic graph algorithms as well as some simple
geometric data structures.
<p>(<a href="/~eppstein/bibs/eppstein.html#Clustering for faster network simplex pivots">BibTeX</a> --
<a href="//citeseer.ist.psu.edu/eppstein93clustering.html">CiteSeer</a>)
<p>
<li><b>Quadrilateral meshing by circle packing</b>.<br>
<a href="//www.parc.xerox.com/csl/members/bern/">M. Bern</a>
and D. Eppstein.<br>
<a href="//www.cs.duke.edu/CGC/workshop97.html"><i>2nd CGC
Worksh. Computational Geometry</i></a>, Durham, North Carolina, 1997.<br>
<a href="BerEpp-MRT-97.pdf"><i>6th Int. Meshing Roundtable,</i> Park
City, Utah, 1997, pp. 7&ndash;19</a>.<br>
<a href="//arXiv.org/abs/cs.CG/9908016">arXiv:cs.CG/9908016</a>.<br>
<i>Int. J. Comp. Geom. &amp; Appl.</i> 10 (4): 347&ndash;360, 2000.
<p>
We use <a href="p-cpack.html">circle-packing methods</a> to generate
quadrilateral meshes for
polygonal domains, with guaranteed bounds both on the quality and the
number of elements.  We show that these methods can generate meshes of
several types:
<ol>
<li>The elements form the cells of a Voronoi diagram,
<li>The elements each have two opposite 90 degree angles,
<li>All elements are kites, or
<li>All angles are at most 120 degrees.
</ol>
In each case the total number of elements is O(<i>n</i>).
The 120-degree bound is optimal; if a simply-connected region has all
angles at least 120 degrees, any mesh of that region has a 120 degree
angle.
<p>(<a href="/~eppstein/bibs/eppstein.html#Quadrilateral meshing by circle packing">BibTeX</a> --
<a href="//fano.ics.uci.edu/cites/Document/Quadrilateral-meshing-by-circle-packing.html">Citations</a> --
<a href="//citeseer.ist.psu.edu/bern97quadrilateral.html">CiteSeer</a>)
<p>
<li><b>Fast hierarchical
clustering and other applications of dynamic closest pairs</b>.<br>
D. Eppstein.<br>
<a href="//portal.acm.org/citation.cfm?id=315030">
<i>9th ACM-SIAM Symp. Discrete Algorithms,</i>
San Francisco, 1998, pp. 619&ndash;628</a>.<br>
<a href="//arXiv.org/abs/cs.DS/9912014">arXiv:cs.DS/9912014</a>.<br>
<a href="//doi.org/10.1145/351827.351829"><i>J. Experimental
Algorithmics</i> 5 (1): 1&ndash;23, 2000</a>.
<p>
This paper shows how to use my dynamic closest pair data structure
from "<a href="p-dynmst.html">Dynamic Euclidean minimum
spanning trees</a>" for some non-geometric problems including
hierarchical clustering,
<a href="graph-match.html">greedy matching</a>,
and <a href="tsp.html">TSP heuristics</a>.
Experiments show variants of my data structures to be faster than
previously used heuristics.
<p>(<a href="../projects/pairs/">Source code and experimental data</a> -- 
<a href="/~eppstein/bibs/eppstein.html#Fast hierarchical clustering and other applications of dynamic closest pairs">BibTeX</a> --
<a href="/~eppstein/projects/pairs/Papers/Epp-SODA-98.pdf">SODA paper</a> --
<a href="//fano.ics.uci.edu/cites/Document/Fast-hierarchical-clustering-and-other-applications-of-dynamic-closest-pairs.html">Citations</a> --
<a href="//citeseer.ist.psu.edu/eppstein98fast.html">CiteSeer</a> --
<a href="//portal.acm.org/citation.cfm?id=351829">ACM DL</a> --
<a href="//www.jea.acm.org/2000/EppsteinDynamic/">JEA home page</a>)
<p>
<li><b>Geometric thickness of complete graphs</b>.<br>
<a href="/~dillenco/">M. Dillencourt</a>,
D. Eppstein, and 
<a href="//www.ics.uci.edu/~dan/">
D. S. Hirschberg</a>.<br>
<a href="/~dan/pubs/thick.ps.gz"><i>6th Int. Symp. Graph Drawing,</i>
Montreal, August 1998</a>.<br>
Springer, <i>Lecture Notes in
Comp. Sci.</i> 1547, 1998, pp. 102&ndash;110.<br>
<a href="//arXiv.org/abs/math.CO/9910185">arXiv:math.CO/9910185</a>.<br>
<a href="//doi.org/10.7155/jgaa.00023"><i>J. Graph
Algorithms and Applications</i> 4 (3): 5&ndash;17, 2000</a>
(special issue for GD98).
<p>
We define a notion of geometric thickness, intermediate between the
previously studied concepts of graph thickness and book thickness: a
graph has geometric thickness T if its vertices can be embedded in the
plane, and its edges partitioned into T subsets, so that each subset
forms a planar straight line graph.  We then give upper and lower bounds
on the geometric thickness of complete graphs.
<p>(<a href="//link.springer.de/link/service/series/0558/bibs/1547/15470102.htm">Springer abstract</a> --
<a href="/~eppstein/bibs/eppstein.html#Geometric thickness of complete graphs">BibTeX</a> --
<a href="//citeseer.ist.psu.edu/dillencourt99geometric.html">CiteSeer</a> --
<a href="//fano.ics.uci.edu/cites/Document/Geometric-thickness-of-complete-graphs.html">Citations</a> --
<a href="//portal.acm.org/citation.cfm?id=729087">ACM DL</a> --
<a href="//gdea.informatik.uni-koeln.de/archive/00000287/">GDEA</a>)
<p>
<li><b>Diameter and treewidth in minor-closed graph families</b>.<br>
D. Eppstein.<br>
<a href="//arXiv.org/abs/math.CO/9907126">arXiv:math.CO/9907126</a>.<br>
<i>Algorithmica</i> 27: 275&ndash;291, 2000
(special issue on treewidth, graph minors, and algorithms).
<p>
This paper introduces the <i>diameter-treewidth
property</i> (later known as <i>bounded local treewidth</i>): a
functional relationship between the diameter of its graph and its treewidth.
Previously known results imply that planar graphs have
bounded local treewidth; we characterize the
other minor-closed families with this property. Specifically,
minor-closed family F has bounded local treewidth if and only if there
exists an <i>apex graph</i> G that is not in F; an apex graph is a graph
that can be made planar by removing a single vertex.
The minor-free families that exclude an apex graph (and therefore have
bounded local treewidth) include the bounded-genus
graphs (for which, as with planar graphs, we show a linear bound for the
treewidth as a function of the diameter) and K<sub>3,a</sub>-free graphs.  As
a consequence, subgraph isomorphism for subgraphs of bounded size and
approximations to several NP-hard optimization problems can be computed
efficiently on these graphs, extending previous results for planar
graphs.
<p>Some of these results
were announced in the conference version of
"<a href="p-psgi.html">subgraph isomorphism for planar graphs and related
problems</a>" but not included in the journal version. Since its
publication, there have been many more works on local treewidth. The class of
problems that could be solved quickly on graphs of bounded local
treewidth was extended and classified by Frick and Grohe, "<a
href="//doi.org/10.1145/504794.504798">Deciding first-order
properties of locally tree-decomposable structures</a>", <i>J. ACM</i>
48: 1184&ndash;1206, 2001;
the proof that bounded local treewidth is equivalent to having an
excluded apex minor was simplified, and the dependence of the treewidth
on diameter
improved, by a subsequent paper of Demaine and Hajiaghayi, "<a href="//erikdemaine.org/papers/DiameterTreewidth_Algorithmica/">Diameter and
treewidth in minor-closed graph families, revisited</a>", <i>Algorithmica</i>
40: 211&ndash;215, 2004. The concept of local treewidth is the basis for the
theory of <i>bidimensionality</i>, a general framework for
fixed-parameter-tractable algorithms and approximation algorithms in
minor-closed graph families; for a survey, see Demaine and Hajiaghayi,
"<a href="//erikdemaine.org/papers/BidimensionalSurvey_CJ/">The
bidimensionality theory and its algorithmic applications</a>", <i>The
Computer J.</i> 51: 292&ndash;302, 2008.
<p>(<a href="/~eppstein/bibs/eppstein.html#Diameter and treewidth in minor-closed graph families">BibTeX</a> --
<a href="//fano.ics.uci.edu/cites/Document/Diameter-and-treewidth-in-minor-closed-graph-families.html">Citations</a>)
<p>
<li><b>Incremental and decremental maintenance of planar width</b>.<br>
D. Eppstein.<br>
<a href="//arXiv.org/abs/cs.CG/9809038">arXiv:cs.CG/9809038</a>.<br>
<a href="//portal.acm.org/citation.cfm?id=315077">
<i>10th ACM-SIAM Symp. Discrete Algorithms,</i>
Baltimore, 1999, pp. S899-S900</a>.<br>
<a href="//doi.org/10.1006/jagm.2000.1107"><i>J.
Algorithms</i> 37 (2): 570&ndash;577, 2000</a>.
<p>
We show how to maintain the width of a planar point set, subject to
insertions or deletions (but not both) in time
O(<i>n</i><sup><i>c</i></sup>) per update for any <i>c</i>&nbsp;&gt;&nbsp;0.
The idea is to apply our <a href="p-dynmst.html">dynamic closest pair
data structure</a> to an appropriate measure of distance between
pairs of convex hull features.
<p>(<a href="/~eppstein/bibs/eppstein.html#Incremental and decremental maintenance of planar width">BibTeX</a> --
<a href="//fano.ics.uci.edu/cites/Document/Incremental-and-decremental-maintenance-of-planar-width.html">Citations</a> --
<a href="Epp-SODA-99-slides.pdf">SODA talk slides</a> --
<a href="//portal.acm.org/citation.cfm?id=363331">ACM DL</a>)
<p>
<li><b>Regression depth and center points</b>.<br>
<a href="//www.cs.utexas.edu/users/amenta/">N. Amenta</a>,
<a href="//www.parc.xerox.com/csl/members/bern/">M. Bern</a>,
D. Eppstein, and
<a href="//www-sal.cs.uiuc.edu/~steng/">S.-H. Teng</a>.<br>
<a href="//arXiv.org/abs/cs.CG/9809037">arXiv:cs.CG/9809037</a>.<br>
<a href="//www.cs.brown.edu/cgc/cgc98/"><i>3rd CGC
Worksh. Computational Geometry</i></a>, Brown Univ., 1998.<br>
<a href="//link.springer-ny.com/link/service/journals/00454/bibs/0023003/00230305.html"><i>Disc. Comp. Geom.</i> 23 (3): 305&ndash;323, 2000</a>.
<p>
We show that, for any set of n points in d dimensions, there exists a
hyperplane with
<a href="geom-deep.html">regression depth</a> at least ceiling(n/(d+1)). as had
been conjectured by Rousseeuw and Hubert. Dually, for any
arrangement of n hyperplanes in d dimensions there exists a point
that cannot escape to infinity without crossing at least
ceiling(n/(d+1)) hyperplanes. We also apply our approach to
related questions on the existence of partitions of the data into
subsets such that a common plane has nonzero regression depth in
each subset, and to the computational complexity of regression
depth problems.
<p>(<a href="/~eppstein/bibs/eppstein.html#Regression depth and center points">BibTeX</a> --
<a href="//fano.ics.uci.edu/cites/Document/Regression-depth-and-center-points.html">Citations</a> --
<a href="//citeseer.ist.psu.edu/amenta98regression.html">CiteSeer</a>)
<p>
<li><b>The distribution of cycle lengths in graphical models for iterative decoding</b>.<br>
<a href="//www.ics.uci.edu/~xge/">X. Ge</a>,
D. Eppstein, and
<a href="//www.ics.uci.edu/~smyth/">P. Smyth</a>.<br>
<a href="//arXiv.org/abs/cs.DM/9907002">arXiv:cs.DM/9907002</a>.<br>
<a href="ftp://ftp.ics.uci.edu/pub/smyth/papers/cycle.ps.gz">Tech.
Rep. 99-10</a>, ICS, UCI, 1999.<br>
<a href="//www.dia.unisa.it/isit2000/">IEEE Int. Symp. Information
Theory</a>, Sorrento, Italy, 2000.<br>
<i>IEEE Trans. Information Theory</i> 47 (6): 2549&ndash;2553, 2001.
<p>
We compute the expected numbers of short cycles of each length in certain
classes of random graphs used for turbocodes, estimate the probability
that there are no such short cycles involving a given vertex, and
experimentally verify our estimates.  The scarcity of short cycles may
help explain the empirically observed accuracy of belief-propagation
based error-correction algorithms.
Note, the TR, conference, and journal versions of this paper have
slightly different titles.
<p>(<a href="/~eppstein/bibs/eppstein.html#The distribution of cycle lengths in graphical models for iterative decoding">BibTeX</a> --
Citations: <a href="//fano.ics.uci.edu/cites/Document/The-distribution-of-cycle-lengths-in-graphical-models-for-iterative-decoding.html">TR/ISIT</a> --
<a href="//citeseer.ist.psu.edu/ge99distribution.html">CiteSeer</a>)
<p>
<li><b>Multivariate regression depth</b>.<br>
<a href="//www.parc.xerox.com/csl/members/bern/">M. Bern</a>
and D. Eppstein.<br>
<a href="//arXiv.org/abs/cs.CG/9912013">arXiv:cs.CG/9912013</a>.<br>
<a href="//portal.acm.org/citation.cfm?id=336218">
<i>16th ACM Symp. Comp. Geom.,</i> Hong Kong, 2000, pp. 315&ndash;321</a>.<br>
<i>Disc. Comp. Geom.</i> 28 (1): 1&ndash;17, 2002.
<p>
We generalize <a href="geom-deep.html">regression depth</a>
to k-flats. The k=0 case gives the
classical notion of center points. We prove that
for any set of n points in R<sup>d</sup> there always
exists a k-flat with depth at least a constant fraction of n. As a
consequence, we derive a linear-time (1+epsilon)-approximation
algorithm for the deepest flat.
The full version of this paper also includes results from
"<a href="p-compflat.html">Computing the Depth of a Flat</a>".
<p>
(<a href="/~eppstein/bibs/eppstein.html#Multivariate regression depth">BibTeX</a> --
<a href="BerEpp-SCG-00.pdf">SCG paper</a> --
<a href="//fano.ics.uci.edu/cites/Document/Multivariate-regression-depth.html">Citations</a> --
<a href="//citeseer.ist.psu.edu/bern00multivariate.html">CiteSeer</a>)
<p>
<li><b>Searching for spaceships</b>.<br>
D. Eppstein.<br>
<a href="//arXiv.org/abs/cs.AI/0004003">arXiv:cs.AI/0004003</a>.<br>
MSRI Combinatorial Game Theory Research Worksh., July 2000.<br>
<a href="//www.msri.org/publications/books/Book42/files/eppstein.pdf">
<em>More Games of No Chance</em>,
R. J. Nowakowski, ed., MSRI Publications 42, pp. 433&ndash;453</a>.
<p>
We describe software that searches for
<a href="/~eppstein/ca/">spaceships in Conway's Game of
Life and related two-dimensional cellular automata</a>.
Our program searches through a state space
related to the de Bruijn graph of the automaton,
using a method that combines features of breadth first and
iterative deepening search, and includes fast
bit-parallel <a href="graph-path.html">graph reachability</a>
and <a href="kbest.html">path enumeration</a> algorithms
for finding the successors of each state.
Successful results include a
<a href="//fano.ics.uci.edu/ca/rules/b3s23/g9.html">new 2c/7
spaceship in Life</a>, found by searching a space with 2^126 states. 
<p>
(<a href="/~eppstein/bibs/eppstein.html#Searching for spaceships">BibTeX</a> --
<a href="//www.msri.org/publications/ln/msri/2000/gametheory/eppstein/1/">MSRI
talk on streaming video</a> and
<a href="Epp-MSRI-00.pdf">Slides</a> --
<a href="//fano.ics.uci.edu/cites/Document/Searching-for-spaceships.html">Citations</a> --
<a href="//citeseer.ist.psu.edu/eppstein02searching.html">CiteSeer</a>)
<p>
<li><b>Graphs for dynamic geometry</b>.<br>
D. Eppstein.<br>
<a href="Epp-UVic-00.pdf">Invited talk</a>,
Worksh. Dynamic Graph Algorithms, Victoria, Canada, 2000.
<p>
This talk surveys work on computational geometry algorithms that use
<a href="graph-dyn.html">dynamic graph</a> data structures, and the
different kinds of geometric graph arising in
this work.
<p>
<li><b>3-coloring in time O(1.3289^n)</b>.<br>
<a href="//www.cis.temple.edu/~beigel/">R. Beigel</a>
and D. Eppstein.<br>
<a href="//arXiv.org/abs/cs.DS/0006046">arXiv:cs.DS/0006046</a>.<br>
<a href="//doi.org/10.1016/j.jalgor.2004.06.008"><i>J. Algorithms</i>
54:2 (2005) 168-204.</a>
<p>
Journal paper combining <a href="graph-color.html">3-coloring algorithms</a>
from our
<a href="p-3color.html">FOCS '95 paper</a> with improved bounds from our
<a href="p-3color3.html">SODA '01 paper</a>.
<p>
(<a href="/~eppstein/bibs/eppstein.html#3-coloring in time $O(1.3289^n)$">BibTeX</a> --
<a href="//fano.ics.uci.edu/cites/Document/3-coloring-in-time-O(1.3289^n).html">Citations</a>)
<p>
<li><b>One-dimensional peg solitaire, and duotaire</b>.<br>
<a href="//www.santafe.edu/~moore/">C. Moore</a>
and D. Eppstein.<br>
<a href="//arXiv.org/abs/math.CO/0006067">arXiv:math.CO/0006067</a> and
<a href="//arXiv.org/abs/math.CO/0008172">math.CO/0008172</a>.<br>
MSRI Combinatorial Game Theory Research Worksh., July 2000.<br>
<a href="//www.santafe.edu/media/workingpapers/00-09-050.pdf">Santa Fe Inst. working paper 00-09-050</a>, September 2000.<br>
<a href="//www.msri.org/publications/books/Book42/files/moore.pdf">
<em>More Games of No Chance</em>,
R. J. Nowakowski, ed., MSRI Publications 42, pp. 341&ndash;350</a>.
<p>
We describe by a regular expression the one-dimensional peg-solitaire
positions reducible to a single peg, and provide a linear-time algorithm
(based on finding <a href="graph-path.html">shortest paths</a> in an
associated DAG) for
reducing any such position to the minimum number of pegs.
We then investigate impartial games in which players alternate peg
solitaire moves in an attempt to be the one to move last.
<p>
(<a href="/~eppstein/bibs/eppstein.html#One-dimensional peg solitaire, and duotaire">BibTeX</a> --
<a href="//fano.ics.uci.edu/cites/Document/One-dimensional-peg-solitaire-and-duotaire.html">Citations</a> --
<a href="//www.msri.org/publications/ln/msri/2000/gametheory/moore/2/">Cris' MSRI
talk on streaming video</a> --
<a href="//www.santafe.edu/~moore/pubs/peg.html">Cris' publications page</a> --
<a href="//citeseer.ist.psu.edu/moore02onedimensional.html">CiteSeer</a>)
<p>
<li><b>Phutball endgames are hard</b>.<br>
<a href="//erikdemaine.org/">E. Demaine</a>,
<a href="//martindemaine.org/">M. Demaine</a>,
and D. Eppstein.<br>
<a href="//arXiv.org/abs/cs.CC/0008025">arXiv:cs.CC/0008025</a>.<br>
<a href="//www.msri.org/publications/books/Book42/files/dephut.pdf">
<em>More Games of No Chance</em>,
R. J. Nowakowski, ed., MSRI Publications 42, pp. 351&ndash;360</a>.
<p>
We show that, in John Conway's board game Phutball (or Philosopher's
Football), it is NP-complete to determine whether the
current player has a move that immediately wins the game. In
contrast, the similar problems of determining whether there is an
immediately winning move in checkers, or a move that kings a man,
are both solvable in polynomial time. 
<p>
(<a href="/~eppstein/bibs/eppstein.html#Phutball endgames are hard">BibTeX</a> --
<a href="//fano.ics.uci.edu/cites/Document/Phutball-endgames-are-hard.html">Citations</a> --
<a href="//erikdemaine.org/papers/Phutball/">Erik's
publications page</a> --
<a href="//citeseer.ist.psu.edu/demaine02phutball.html">CiteSeer</a>)
<p>
<li><b>Fast approximation of centrality</b>.<br>
D. Eppstein and
<a href="//www.ics.uci.edu/~josephw/">J. Wang</a>.<br>
<a href="//arXiv.org/abs/cs.DS/0009005">arXiv:cs.DS/0009005</a>.<br>
<a href="//portal.acm.org/citation.cfm?id=365449">
<i>12th ACM-SIAM Symp. Discrete Algorithms,</i>
Washington, 2001, pp. 228&ndash;229</a>.<br>
<a href="//doi.org/10.7155/jgaa.00081"><i>J. Graph Algorithms &amp; Applications</i> 8 (1): 39&ndash;45, 2004</a>.
<p>
We use random sampling to quickly estimate, for each vertex in a graph,
the average <a href="graph-path.html">distance</a> to all other vertices.
<p>
(<a href="/~eppstein/bibs/eppstein.html#Fast approximation of centrality">BibTeX</a> --
<a href="EppWan-SODA-01.pdf">SODA paper</a> --
<a href="//fano.ics.uci.edu/cites/Document/Fast-approximation-of-centrality.html">Citations</a> --
<a href="//citeseer.ist.psu.edu/eppstein01fast.html">CiteSeer</a>)
<p>
<li><b>Improved algorithms for 3-coloring, 3-edge-coloring, and constraint
satisfaction</b>.<br>
D. Eppstein.<br>
<a href="//arXiv.org/abs/cs.DS/0009006">arXiv:cs.DS/0009006</a>.<br>
<a href="//portal.acm.org/citation.cfm?id=365471"><i>12th ACM-SIAM Symp. Discrete Algorithms,</i>
Washington, 2001, pp. 329&ndash;337</a>.
<p>
Summarizes recent improvements to
"<a href="p-3color.html">3-Coloring in time
O(1.3446<sup><i>n</i></sup>): a no-MIS algorithm</a>".
Merged with that paper for the
<a href="p-3color2.html">journal version</a>.
<p>
(<a href="Epp-SODA-01-slides.pdf">SODA talk slides</a> --
<a href="/~eppstein/bibs/eppstein.html#Improved algorithms for 3-coloring, 3-edge-coloring, and constraint satisfaction">BibTeX</a> --
<a href="Epp-SODA-01.pdf">SODA paper</a> --
<a href="//citeseer.ist.psu.edu/eppstein01improved.html">CiteSeer</a>)
<p>
<li><b>Computing the depth of a flat</b>.<br>
<a href="//www.parc.xerox.com/csl/members/bern/">M. Bern</a>
and D. Eppstein.<br>
<a href="//arXiv.org/abs/cs.CG/0009024">arXiv:cs.CG/0009024</a>.<br>
<a href="//portal.acm.org/citation.cfm?id=374603">
<i>12th ACM-SIAM Symp. Discrete Algorithms,</i>
Washington, 2001, pp. 700&ndash;701</a>.
<p>
We compute the <a href="geom-deep.html">regression depth</a> of a k-flat
in a set of n d-dimensional
points, in time O(n<sup>d-2</sup>), an order of magnitude faster than
the best known algorithms for computing the depth of a point or of a
hyperplane.
The results from this conference paper have been merged into the full
version of
"<a href="p-multivariate.html">Multivariate Regression Depth</a>".
<p>
(<a href="BerEpp-SODA-01-slides.pdf">SODA talk slides</a> --
<a href="BerEpp-SODA-01.pdf">SODA paper</a> --
<a href="/~eppstein/bibs/eppstein.html#Computing the depth of a flat">BibTeX</a> --
<a href="//fano.ics.uci.edu/cites/Document/Computing-the-depth-of-a-flat.html">Citations</a> --
<a href="//citeseer.ist.psu.edu/bern01computing.html">CiteSeer</a>)
<p>
<li><b>Internet packet filter management and rectangle geometry</b>.<br>
D. Eppstein and S. Muthukrishnan.<br>
<a href="//arXiv.org/abs/cs.CG/0010018">arXiv:cs.CG/0010018</a>.<br>
<a href="//portal.acm.org/citation.cfm?id=365791">
<i>12th ACM-SIAM Symp. Discrete Algorithms,</i>
Washington, 2001, pp. 827&ndash;835</a>.
<p>
Rule sets for internet routers and firewalls can be represented as sets
of prioritized rectangles; the rule to use for a packet is the maximum
priority rectangle containing its (source,destination) address pair.
We develop efficient data structures for performing these queries,
and find an O(n<sup>3/2</sup>) time algorithm for testing whether
a rule set contains any ambiguities.
<p>
(<a href="/~eppstein/bibs/eppstein.html#Internet packet filter management and rectangle geometry">BibTeX</a> --
<a href="//fano.ics.uci.edu/cites/Document/Internet-packet-filter-management-and-rectangle-geometry.html">Citations</a> --
<a href="EppMut-SODA-01.pdf">SODA paper</a> --
<a href="//citeseer.ist.psu.edu/eppstein01internet.html">CiteSeer</a>)
<p>
<li><b>Small maximal independent sets and faster exact graph coloring</b>.<br>
D. Eppstein.<br>
<a href="//arXiv.org/abs/cs.DS/0011009">arXiv:cs.DS/0011009</a>.<br>
<a href="Epp-WADS-01.pdf"><i>7th Worksh. Algorithms and Data
Structures,</i> Providence, Rhode
Island, 2001</a>.<br>
Springer, <i>Lecture Notes in
Comp. Sci.</i> 2125, 2001, pp. 462&ndash;470.<br>
<a href="//doi.org/10.7155/jgaa.00064"><i>J. Graph
Algorithms and Applications</i>
(special issue for WADS'01) 7 (2): 131&ndash;140, 2003</a>.
<p>
We show that any graph can be
<a href="graph-color.html">colored</a> in time O(2.415<sup>n</sup>),
by a dynamic programming procedure in which we extend partial colorings
on subsets of the vertices by adding one more color for
a maximal independent set.  The time bound follows from limiting
our attention to maximal independent subsets that are small relative to
the previously colored subset, and from bounding the number of small
maximal independent subsets that can occur in any graph.
<p>
(<a href="/~eppstein/bibs/eppstein.html#Small maximal independent sets and faster exact graph coloring">BibTeX</a> --
<a href="//fano.ics.uci.edu/cites/Document/Small-maximal-independent-sets-and-faster-exact-graph-coloring.html">Citations</a> --
<a href="//citeseer.ist.psu.edu/eppstein01small.html">CiteSeer</a> --
<a href="Epp-WADS-01-slides.pdf">WADS talk slides</a> --
<a href="//portal.acm.org/citation.cfm?id=673363">ACM DL</a>)
<p>
</ul>

<hr><p>
<a href="year.html">Years</a> --
<a href="/~eppstein/pubs/">Publications</a> --
<a href="/~eppstein/">David Eppstein</a> --
<a href="/~theory/">Theory Group</a> --
<a href="/">Inf. &amp; Comp. Sci.</a> --
<a href="//www.uci.edu/">UC Irvine</a>
<p>
<small>Semi-automatically <a href="filter.html">filtered</a>
from a common source file.</small>
</body></html>
