<html><head><meta http-equiv="Content-Type"content="text/html; charset=iso-8859-1"><meta name="GENERATOR" content="Microsoft FrontPage 6.0"><title>Mechanism:</title></head><body bgcolor="#FFFFFF"><h2>Mechanism: Binary Transformations</h2><h3>Intent</h3><blockquote>    <p>Binary transformations rewrite portions of an application    to introduce new functionality.</p></blockquote><h3>Also Known As</h3><blockquote>    <p>Binary Patch files.</p></blockquote><h3>Motivation</h3><blockquote>    <p><em>A scenario that illustrates a problem and how the    different elements of the mechanism solve the problem. The    scenario will help you understand the more abstract    description of the mechanism below. </em></p></blockquote><h3>Applicability</h3><blockquote>    <p><em>What are the situations in which the mechanism can be    applied? What are examples of poor designs that the mechansim    can address? How can you recognize these situations? </em></p>    <ul>        <li><em>An applicable situation </em></li>    </ul></blockquote><h3>Participants</h3><blockquote>    <p>The elements participating in the mechanism and their    responsibilities. </p>    <ul>        <li>Participant Name: Responsibility for what </li>    </ul></blockquote><h3>Collaborations</h3><blockquote>    <p>How the participants collaborate to carry out their    responsibilities. </p>    <ul>        <li>[Collaboration] </li>    </ul></blockquote><h3>Consequences</h3><blockquote>    <p>Binary transformations have the following benefits:</p>    <ol>        <li><em>They don't require source code</em>. Since the            transformation is performed on object or executable            code, the source code of the application is not            required for adaptation.</li>        <li><em>They can be used for fault isolation</em>.            Applications can be modified to prevent certain            undesireable behavior during execution. This is            commonly refered to as sandboxing (executing the code            in an a restricted environment).</li>    </ol>    <p>Binary transformations have the following limitations:</p>    <ol>        <li>They are low-level.</li>        <li>They are difficult to compose.</li>    </ol></blockquote><h3>Implementation</h3><blockquote>    <p><em>What pitfalls, hints, or techniques should you be    aware of when implementing the mechanism? Are there    language-specific issues? </em></p>    <ol>        <li><em>Description of Bullet </em></li>    </ol></blockquote><h3>Known Uses</h3><blockquote>    <p>EEL from University of Wisconsin, Pure Atria's <a    href="http://www.rational.com/products/purify/">Purify</a>    and <a href="http://www.rational.com/products/quantify/">Quantify</a>    are examples of binary transformations.</p></blockquote><h3>Related Mechanisms</h3><blockquote>    <p><em>What mechanisms are closely related to this one? What    are the important differences? With which other mechanisms    should this one be used?</em> </p></blockquote><hr><p><a href="http://www.ics.uci.edu/~peymano/adaptation/"><em>Backto the Adaptation home page</em></a><em>. This page maintained byPeyman Oreizy </em>(<a href="mailto:peymano at ics.uci.edu">peymano at ics.uci.edu</a>).Last updated on <!--#flastmod virtual = "template.html" -->.</p></body></html>ï¿½