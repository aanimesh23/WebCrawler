<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<!-- Page automatically generated from latex_to_html converter. -->
<!-- by cc_extract_html, $Revision: 3.19 $ -->
<!-- LaTeX source file: './Colors_and_windows_ref/Window_stream.tex' -->
<html> <head>  
<title>Window_stream</title>
</head>  
<link href="../latex_to_html.css" rel="STYLESHEET">
<body bgcolor="white">
<!-- ------------------------------------------------------------------- -->


<!-- Top Navigation ---------------------------------------------------- -->
<div class="NavTop">
<hr>
  <strong>Navigation:</strong>
<a href="Chapter_intro.html">Up</a>, 
  <a href="../contents.html">Table of Contents</A>,
  <a href="../biblio.html">Bibliography</a>,
  <a href="../manual_index.html">Index</a>,
  <a href="../title.html">Title Page</a>
<hr><!-- End of Top Navigation ----------------------------------------- -->
</div>


<A NAME="Cross_link_anchor_1757"></A>

<A NAME="Cross_link_anchor_1758"></A>

      
     
     
     
<A NAME="Index_anchor_1589"></A> 

   
<TABLE ALIGN=RIGHT><TR><TD><IMG ALIGN=TOP SRC="cc_Class.gif"></TD></TR></TABLE>


    <A NAME="ccRef_CGAL::Window_stream"></A>
<h2><I>CGAL::Window_stream</I></h2>
<P>

<I>#include &lt;<A HREF="../../../include/CGAL/IO/Window_stream.h">CGAL/IO/Window_stream.h</A>&gt;</I>
<P>

<H3>Definition</H3>
<P>

The functionality described in this section is provided through L<SMALL>EDA</SMALL> or
the C<SMALL>GAL</SMALL> port of the L<SMALL>EDA</SMALL> window lib. The C<SMALL>GAL</SMALL> port has an interface
close to the L<SMALL>EDA</SMALL> window, but operations using L<SMALL>EDA</SMALL> geometry classes
were removed and the names of the used types and enums were changed from
<I>leda_name</I> to <I>CGAL::name</I>, <I>leda_string</I>
was replaced by <I>std::string</I> and <I>leda_list</I> was replaced
by <I>std::list</I>.
If the window port is used, the macro <I>CGAL_USE_CGAL_WINDOW</I> is 
defined. The header file <I>&lt;CGAL/IO/cgal_window_redefine.h&gt;</I> offers
redefinitions of the L<SMALL>EDA</SMALL> names. If you use this file you should include
it after the inclusion of your other C<SMALL>GAL</SMALL> headers.
The C<SMALL>GAL</SMALL> port of the L<SMALL>EDA</SMALL> window lib can be downloaded for various platforms
from the C<SMALL>GAL</SMALL> web page. Note that Algorithmic Solutions Software GmbH 
has offered us the possibility to provide the ported version of the L<SMALL>EDA</SMALL> 
window.<BR>


<P>

An instance of type <I><A HREF="Class_Window_stream.html#Cross_link_anchor_1758">Window_stream</A></I> is a two-dimensional window for
graphical IO. The input and output operations perform a mapping from
object coordinates to window coordinates.
Actually, <I><A HREF="Class_Window_stream.html#Cross_link_anchor_1758">Window_stream</A></I> is identical to the L<SMALL>EDA</SMALL> class <I>leda_window</I>,
if L<SMALL>EDA</SMALL> is used and to the ported version of the L<SMALL>EDA</SMALL> window class, if
L<SMALL>EDA</SMALL> is not used.
Therefore, the rich functionality of <I>leda_window</I> is available on
<I><A HREF="Class_Window_stream.html#Cross_link_anchor_1758">Window_stream</A></I> as well, for example panels.
In addition, the class <I><A HREF="Class_Window_stream.html#Cross_link_anchor_1758">Window_stream</A></I> provides input and output 
operators for the classes which are defined in the C<SMALL>GAL</SMALL> kernel.
Instances of <I><A HREF="Class_Window_stream.html#Cross_link_anchor_1758">Window_stream</A></I> should be initialized with a coordinate frame 
(by calling member function
<I>init</I>) and must be displayed (by calling member function <I>display</I>) before
drawing.
<P>

For further information on <i>leda_window</i>, we refer to the 
<A HREF="http://www.mpi-sb.mpg.de/LEDA/MANUAL/MANUAL.html">LEDA manual</A>.
<P>

<H3>Creation</H3>
<P>

<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>
        <I><NOBR>
    <A HREF="Class_Window_stream.html#Cross_link_anchor_1758">Window_stream</A> W;
        </I></NOBR>
        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>
    creates a squared window with maximal possible edge length
(minimum of width and height of the display).
<P>

</TD></TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>
        <I><NOBR>
    <A HREF="Class_Window_stream.html#Cross_link_anchor_1758">Window_stream</A> W ( const char* label);
        </I></NOBR>
        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>
    creates a maximal squared window with frame label <MATH><I>label</I></MATH>.
<P>

</TD></TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>
        <I><NOBR>
    <A HREF="Class_Window_stream.html#Cross_link_anchor_1758">Window_stream</A> W ( float width,  float height);
        </I></NOBR>
        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>
    creates a window <I>W</I> of physical size <I>width</I> <MATH><I> &times; </I></MATH> <I>height</I> pixels.
<P>

</TD></TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=100% NOWRAP COLSPAN=2>
        <I><NOBR>
    <A HREF="Class_Window_stream.html#Cross_link_anchor_1758">Window_stream</A> W ( float width,  float height,  const char* label);
        </I></NOBR>
        </TD></TR><TR><TD WIDTH=30% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=70%>
    creates a window <I>W</I> of physical size <I>width</I> <MATH><I> &times; </I></MATH> <I>height</I> pixels 
and frame label <I>label</I>.
<P>

</TD></TR>
        </TABLE>
<P>

In addition, instances of type <I><A HREF="Class_Window_stream.html#Cross_link_anchor_1758">Window_stream</A></I> can be created by the functions
<P>

<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_Window_stream*_create_demo_window69;"></A>
<A HREF="Class_Window_stream.html#Cross_link_anchor_1758">Window_stream</A>*
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    create_demo_window ()
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    creates a window of 512 <MATH><I> &times; </I></MATH> 512 pixels, sets the window label to
CGAL, and  initializes the object space that is mapped to the physical window to
[-1.0, 1.0] <MATH><I> &times; </I></MATH> [-1.0, 1.0]. 
Returns a pointer to the window created.
        </TD></TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_Window_stream*_create_and_display_demo_window69;"></A>
<A HREF="Class_Window_stream.html#Cross_link_anchor_1758">Window_stream</A>*
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    create_and_display_demo_window ()
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    creates a window of 512 <MATH><I> &times; </I></MATH> 512 pixels, sets the window label to
CGAL, initializes the object space that is mapped to the physical window to 
[-1.0, 1.0] <MATH><I> &times; </I></MATH> [-1.0, 1.0] and 
displays it at default position on the display. Returns a pointer to the window created.
        </TD></TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_Window_stream*_create_demo_window6_float_width+_float_height+_const_char*_str+_double_x_extension9;"></A>
<A HREF="Class_Window_stream.html#Cross_link_anchor_1758">Window_stream</A>*
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>
    create_demo_window ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>
    float width,<BR>

float height,<BR>

const char* str,<BR>

double x_extension)</I></TD></TR></TABLE>
    
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    creates a window of <I>width</I> <MATH><I> &times; </I></MATH> <I>height</I> pixels, sets the window label to
<I>str</I>, and  initializes the <MATH><I>x</I></MATH>-range in object space that is mapped to the physical window by
[-<I>x_extension</I>, <I>x_extension</I>]. The <MATH><I>y</I></MATH>-range is initialized such that the origin is at
the center of the window. 
Returns a pointer to the window created.
        </TD></TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_Window_stream*_create_and_display_demo_window6_float_width+_float_height+_const_char*_str+_double_x_extension9;"></A>
<A HREF="Class_Window_stream.html#Cross_link_anchor_1758">Window_stream</A>*
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0><TR><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>
    create_and_display_demo_window ( </I></TD><TD ALIGN=LEFT VALIGN=TOP NOWRAP><I>
    float width,<BR>

float height,<BR>

const char* str,<BR>

double x_extension)</I></TD></TR></TABLE>
    
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    creates a window of <I>width</I> <MATH><I> &times; </I></MATH> <I>height</I> pixels, sets the window label to
<I>str</I>, and initializes the <MATH><I>x</I></MATH>-range in object space that is mapped to the physical window by
[-<I>x_extension</I>, <I>x_extension</I>]. The <MATH><I>y</I></MATH>-range is initialized such that the origin is at
the center of the window. The window is displayed at default position on the display. 
Returns a pointer to the window created.
        </TD></TR>
        </TABLE>
<P>

<H3>Operations</H3>A window is initialized by a part of the object space by
<P>

<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_void_init6double_x0+_double_x1+_double_y09;"></A>
void
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    W.init ( double x0,  double x1,  double y0)
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    initializes the  part of the object space that is mapped to the physical
window to [<I>x0</I>,<I>x1</I>] <MATH><I> &times; </I></MATH> 
[<I>y0</I>,<I>y0</I> + <I>height</I><MATH><I>*</I></MATH>(<I>x1</I>-<I>x0</I>)/<I>width</I>],
where <I>width</I> and <I>height</I> are the width and the height of the window in pixels.
        </TD></TR>
        </TABLE>
<P>

To display a window, the following functions can be used. Note that <I>W.display()</I> 
has to be called before all drawing operations on <I>W</I> and that all operations adding 
panel items to <I>W</I> have to be called before the first call of <I>W.display()</I>.
<P>

<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_void_display69;"></A>
void
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    W.display ()
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    opens <I>W</I> and displays it at the default position, i.e. 
with its right upper corner in the upper right corner of the screen.
        </TD></TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_void_display6int_x+_int_y9;"></A>
void
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    W.display ( int x,  int y)
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    opens <I>W</I> and displays it with its left upper corner at position
(<I>x</I>,<I>y</I>).
        </TD></TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_void_display6Window_stream__W0+_int_x+_int_y9;"></A>
void
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    W.display ( <A HREF="Class_Window_stream.html#Cross_link_anchor_1758">Window_stream</A>&amp; W0,  int x,  int y)
        </I></NOBR>
        
    
        </TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_void_display6int_x+_int_y+_Window_stream__W09;"></A>
void
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    W.display ( int x,  int y,  <A HREF="Class_Window_stream.html#Cross_link_anchor_1758">Window_stream</A>&amp; W0)
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    opens <I>W</I> and displays it with its left upper corner at position 
(<I>x</I>,<I>y</I>) relative to the upper left corner of  window <I>W0</I>.
        </TD></TR>
        </TABLE>
<P>

See the <A HREF="http://www.mpi-sb.mpg.de/LEDA/MANUAL/MANUAL.html" TARGET="_top">LEDA Manual</A>
[<A HREF="../biblio.html#Biblio_cgal:mnsu-lum">MNSU</A>] for further operations on <I>leda_window</I>.
<P>

<H3>Output Operators</H3>
<P>

The output operator is defined for all geometric classes in the C<SMALL>GAL</SMALL> kernel.
<P>

<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A HREF="Class_Window_stream.html#Cross_link_anchor_1758">Window_stream</A>&amp;
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
     <A HREF="Class_Window_stream.html#Cross_link_anchor_1758">Window_stream</A> &amp;W &lt;&lt;  Class c<A NAME="Function_Window_stream__operator666Window_stream__W+_const_Class__c9;"></A>

        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    inserts object <I>c</I> into the stream <I>W</I>.
        </TD></TR>
        <TR><TD><BR></TD></TR>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A HREF="Class_Window_stream.html#Cross_link_anchor_1758">Window_stream</A>&amp;
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
     <A HREF="Class_Window_stream.html#Cross_link_anchor_1758">Window_stream</A> &amp;W &lt;&lt;  <A HREF="Class_Color.html#Cross_link_anchor_1754">Color</A> c<A NAME="Function_Window_stream__operator666Window_stream__W+_const_Color__c9;"></A>

        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    changes the foreground color for the next objects that
        will be inserted into <I>W</I>.
        </TD></TR>
        </TABLE>
<P>

Note that CGAL points are drawn using L<SMALL>EDA</SMALL> functions for drawing nodes of a graph.
Before drawing points, the size for drawing nodes should be adjusted, either by calling
member function <I>set_node_width(int)</I> or by
<P>

<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A NAME="Function_void_cgalize6Window_stream__w9;"></A>
void
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
    cgalize ( <A HREF="Class_Window_stream.html#Cross_link_anchor_1758">Window_stream</A>&amp; w)
        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    sets a few default values for drawing in window <I>w</I>. In particular, node width is
set to 3 and line width to 2.
        </TD></TR>
        </TABLE>
<P>

<H3>Input Operators</H3>
<P>

The input operator is defined for all geometric classes in the C<SMALL>GAL</SMALL> kernel.
The coordinates of the geometric objects are in object space. Data are
entered with the left mouse button.
<P>

<TABLE BORDER=0 CELLSPACING=2 CELLPADDING=0 WIDTH=650>
        <TR><TD ALIGN=LEFT VALIGN=TOP WIDTH=25% NOWRAP>
        <I><NOBR>
    <A HREF="Class_Window_stream.html#Cross_link_anchor_1758">Window_stream</A>&amp;
        </I></NOBR>
        </TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=75% NOWRAP COLSPAN=2>
        <I><NOBR>
     <A HREF="Class_Window_stream.html#Cross_link_anchor_1758">Window_stream</A> &amp;W &gt;&gt;  Class &amp;c<A NAME="Function_Window_stream__operator996Window_stream__W+_Class__c9;"></A>

        </I></NOBR>
        </TR><TR><TD WIDTH=25% NOWRAP></TD><TD WIDTH=25% NOWRAP></TD><TD ALIGN=LEFT VALIGN=TOP WIDTH=50%>
    extracts object <I>c</I> from the stream <I>W</I>.
        </TD></TR>
        </TABLE>
<P>

<H3>3D Objects with Window Stream</H3>
<P>

3D objects can be used with <I><A HREF="Class_Window_stream.html#Cross_link_anchor_1758">Window_stream</A></I>. The stream output
operator <I>&lt;&lt;</I> projects them to the <MATH><I>xy</I></MATH>-plane. The stream input
operator <I>&gt;&gt;</I> sets the <MATH><I>z</I></MATH> coordinate to zero.
<P>

<I>#include &lt;<A HREF="../../../include/CGAL/IO/window_stream_xy_3.h">CGAL/IO/window_stream_xy_3.h</A>&gt;</I>
<P>

<!Next_reference_link_10_13_4!>

    
<div class="NavBottom">
<hr><!-- Bottom Navigation --------------------------------------------- -->
  <strong>Navigation:</strong>
<!Up_chapter_link_13!>
  <a href="../contents.html">Table of Contents</A>,
  <a href="../biblio.html">Bibliography</a>,
  <a href="../manual_index.html">Index</a>,
  <a href="../title.html">Title Page</a>
<!-- End of Bottom Navigation ------------------------------------------ -->


<hr><!-- --------------------------------------------------------------- -->
<div class="NavAddress">

The <A HREF=http://www.cgal.org>CGAL Project</A> .

Tue, December 21, 2004 .
<hr></div>
</body>  </html>  
