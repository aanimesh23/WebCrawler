<html>
<head>
	<title>Ucigame - Java Game Library</title>
<link href="stylesheet.css" rel="stylesheet" type="text/css">
</head>
<body>

<center><h2>Ucigame - Java Game Library</h2></center>

<h4>
<a href="index.html">Home</a> |
<a href="getting-started.html">Getting Started</a> |
<a href="reference.html">Reference</a> |
<a href="java.html">Introduction to Java</a> |
<a href="gallery.html">Gallery</a>
</h4>

<p>
Welcome to Ucigame (pronounced oo-see-<i>ga'</i>-mee).
</p>

<p>
Ucigame is a Java package (library, API) that makes simple computer games easy to write.
Ucigame games are 2D and sprite based.
Follow the links above to learn about Ucigame.
</p>

<p>
The latest version of Ucigame is date-stamped 2010.12.16a.
You can <a href="ucigame.jar">download ucigame.jar</a> which
includes everything you need to write your own Ucigame games.
</p>

<p>
If you are curious about the source code, you can
<a href="ucigame-source.zip">download ucigame-source.zip</a></i>
(the zip contains slightly out of date source code).
</p>

<h4>Contact</h4>

<p>
You can email the creator of Ucigame, Dan Frost,
at <i>danfrost</i>&thinsp;&part&thinsp;<i>ucigame.org</i>.
</p>


<h4>Change log</h4>

<p>
Changes since 2010.12.16 version:
</p>
<ul>
<li>Fixed a problem with startScene<i>xxx</i> not always running before the
first loop of draw<i>xxx</i>.
</ul>


<p>
Changes since 2009.10.15 version:
</p>
<ul>
<li>Several improvements to the web site, including a section in Getting
	Started about Eclipse.
</ul>

<p>
Changes since 2008.05.30a version:
</p>
<ul>
<li>Added new method Ucigame.setIconImage().
<li>Fixed a bug with Sprite.checkIfCollidesWith() and Sprite.collided().
<li>Better reporting of Exceptions thrown by user code in Ucigame.draw()
	and Ucigame.drawSceneName().
<li>Improved handling of Exceptions thrown during initialization
	(usually out-of-memory issues).
<li>Prevented Sprite.getImage() and Sound.getSound() from being run
    in field initialization, before the beginning of setup().
</ul>

<p>
Changes since 2008.05.30 version:
</p>
<ul>
<li>A bug in Sprite.setToFrame() was fixed.
<li>Method Sprite.reset() renamed to Sprite.restart().
</ul>

<p>
Changes since 2008.02.16b version:
</p>
<ul>
<li>Add the following methods to Sprite for support of animation
	sequences: defineSequence(), currSequence(), play().
	Removed playAnimationOnce(); its functionality is now part of play().
<li>Modified keyboard.typematicOn() and keyboard.typematicOff() to
    accept key indicators (e.g. keyboard.UP) as parameters.
<li>Added new method keyboard.lastCharacter() which returns a String
    holding the last printable character typed on the keyboard.
</ul>


<p>
Bug fixes since 2008.02.16a version:
</p>

<ul>
<li>Fixed bug which prevented a tiled Sprite from operating correctly.
<li>Corrected documentation to list the Sprite constructor for tiled Sprites.
<li>Created a Sprite constructor with parameters (Image, width, height).
</ul>

<p>
Bug fix since 2008.02.16 version:
</p>

<ul>
<li>Fixed bug which prevented startScene from working when running as an applet.
</ul>


<p>
Changes since 2007.11.13 version:
</p>
<ul>
<li>Many collision detection bug fixes, especially for PIXELPERFECT.
<li>Added onKeyRelease() callback method.
<li>Sprite.x() and Sprite.y() now return the exact double values, and
    new methods xPixel() and yPixel() return ints reflecting the pixel
    location of the Sprite.
</ul>

<p>
Changes since 2007.09.12 version:
</p>
<ul>
<li>Numerous small improvements to web pages.
<li>Several bug fixes, particularly to the "edge" sprites TOPEDGE,
	BOTTOMEDGE, LEFTEDGE, and RIGHTEDGE.
<li>Made Ucigame fully compatible with Jave 1.5.
<li>Added three public constructors for Sprite.
<li>Added six parameter versions of Sprite.font() and canvas.font(),
	which set the font color.
<li>Added improved mouse support: mouse.isAltDown(), mouse.isControlDown(),
	mouse.isMetaDown(), mouse.isShiftDown(), mouse.wheelClicks(),
	mouse.button(), and codable method onMouseWheelMoved().
<li>Added better control over animation with
	Sprite.reset(), Sprite.setToFrame(), and Sprite.playAnimationOnce().
</ul>

</body>
</html>
