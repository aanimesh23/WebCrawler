<HTML>
<!-- $Id: TOCHI_abstract.html,v 1.1 1995/04/11 23:48:02 kari Exp $ -->
<HEAD>
<TITLE>Arcadia Collected Papers: ABSTRACT</TITLE>
<META http-equiv="Owner" content="Arcadia">
<META http-equiv="Reply-To" content="arcadia-www@ics.uci.edu">
<LINK rev="made" href="mailto:arcadia-www@ics.uci.edu">
</HEAD><BODY>
<H1><img align=middle src="http://www.ics.uci.edu/~arcadia/Icons/arcadia-logo.gif">
Arcadia Papers: ABSTRACT</H1>
<HR>

<A HREF="ftp://liege.ics.uci.edu/pub/arcadia/chiron//UCI_Tech_Report_94-12.ps.Z">
"<b>Supporting Separations of Concerns and Concurrency in the Chiron-1
 User Interface System</b>"</A>,
 by Richard N. Taylor, Kari A. Nies, Gregory Alan Bolcer, Craig A. MacFarlane,
 Gregory F. Johnson, and Kenneth M. Anderson in
 <i> To appear in ACM Transactions on Computer-Human Interaction.</i>

<H2> Abstract </H2>

The Chiron-1 user interface system demonstrates key techniques which
enable a strict separation of an application from its user interface.
These techniques include separating the control flow aspects of
the application and user interface: they are concurrent and may contain
many threads.  Chiron also separates windowing and look-and-feel
issues from dialog and abstract presentation decisions via
mechanisms employing a client-server architecture.

<P>
To separate application code from user interface code, user interface
agents called <i>artists</i> are attached to instances of application
abstract data types (ADTs).  Operations on ADTs within the application
implicitly trigger user interface activities within the artists.
Multiple artists can be attached ADTs, providing multiple
views and alternative forms of access and manipulation by either a single
user or by multiple users.
Each artist and the application run in separate threads of control.

<P>
Artists maintain the user interface by making remote
calls to an abstract depiction hierarchy in the Chiron server,
insulating the UI code from the specifics of particular windowing systems
and toolkits.  The Chiron server and clients execute in separate processes.
The client-server architecture also supports multi-lingual systems:
mechanisms are demonstrated which support clients written in languages
other than that of the server, while nevertheless supporting
object-oriented server concepts.
The system has been used in several universities and research and
development projects.  It is available by anonymous ftp.

<HR>
<ADDRESS>
<A HREF="http://www.ics.uci.edu/Arcadia/">The Arcadia Project
&lt;arcadia-www@ics.uci.edu&gt;</A><BR>
Last modified: Fri Nov 11 14:45:56 1994
</ADDRESS>
</BODY></HTML>

